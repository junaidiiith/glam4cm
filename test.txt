Label: simple-pl, Text: Instruction() Primitive() Instruction() Back() Primitive() Back() steps Expression() Forward() Primitive() Forward() steps Expression() Left() Primitive() Left() angle Expression() Right() Primitive() Right() angle Expression() Pen Down() Primitive() Pen Up() Primitive() Clear() Primitive() Expression() Instruction() Binary Exp() rhs Expression() Constant(integer Value) Expression() Proc Call() actual Args Expression() Proc Call() declaration Proc Declaration(name) Proc Declaration(name) instructions Instruction() Proc Declaration(name) args Parameter(name) Block() instructions Instruction() If() Control Structure() If() else Part Block() Control Structure() Instruction() Control Structure() condition Expression() Repeat() Control Structure() Repeat() block Block() While() Control Structure() While() block Block() Parameter(name) Parameter Call() Expression() Parameter Call() parameter Parameter(name) Plus() Binary Exp() Minus() Binary Exp() Mult() Binary Exp() Div() Binary Exp() Equals() Binary Exp() Greater() Binary Exp() Lower() Binary Exp() Logo Program() instructions Instruction()
Label: services, Text: Interface Repository() contents Packageable() Packageable() Package(name) contents Packageable() Interface(q Name, description) Packageable() Injector Acceptor Interface L1() Interface(q Name, description) Injector Acceptor Interface L1() injector Provides Transformation Library(name, language) Transformation Library(name, language) ACCELEO() Slot Plug Interface L1() Interface(q Name, description) Slot Plug Interface L1() pointcuts Pointcut(type) Pointcut(type) Class Pointcut() Pointcut(type) Method Poincut() Pointcut(type) Import Element Pointcut() Pointcut(type) Statement Poincut() Pointcut(type) AFTER BODY() Injector Acceptor Interface L0(mode) Interface(q Name, description) Injector Acceptor Interface L0(mode) injector Implements Java Type Declaration(qualified Name) Java Type Declaration(qualified Name) Java Interface() Java Type Declaration(qualified Name) Java Interface() operations Operation(name) Java Class() Java Type Declaration(qualified Name) Java Class() operations Operation(name) Operation(name) PLAIN JAVA() Slot Plug Interface L0() Interface(q Name, description) Slot Plug Interface L0() slot Extension Point(id) Extension Point(id)
Label: timed-automata, Text: Commentable(comment) Identifyable(id) Nameable(name) Identifier(name) Synchronisation() expression Expression() Send Synchronisation() Synchronisation() Receive Synchronisation() Synchronisation() MOD ASSIGN() IMPLY() NOT() False() Expression() Commentable(comment) Constant Expression(value) Expression() Variable Expression() Expression() Variable Expression() identifier Identifier(name) Array Variable Expression() position Expression() Inc Dec Expression(before Expression, increment) expression Expression() Grouping Expression() expression Expression() Binary Expression(operator) right Expression() Assignment Expression(operator) right Side Expression() Unary Expression(operator) expression Expression() Simple If Expression() else Expression() Identifier Expression() Expression() Identifier Expression() identifier Identifier(name) With Arguments Expression() arguments Expression() Point Expression() expression Expression() Point Expression() identifier Identifier(name) Forall Expression() expression Expression() Forall Expression() identifier Identifier(name) Forall Expression() type Type(prefix) Exists Expression() expression Expression() Exists Expression() type Type(prefix) Fixed Expression(type) Expression() Selection() identifier Identifier(name) Declaration() Commentable(comment) Variable Declaration() Declaration() Variable Declaration() type Type(prefix) Variable Declaration() variable Identifiers Variable Identifier() Variable Identifier() identifier Identifier(name) Variable Identifier() array Declaration Types Array Declaration Type() Variable Identifier() initialiser Initialiser() Type Declaration() Declaration() Type Declaration() type Type(prefix) Type Declaration() array Declarations Array Declaration() Function Declaration() Declaration() Function Declaration() type Type(prefix) Function Declaration() identifier Identifier(name) Function Declaration() parameters TA Parameter() Function Declaration() block Block() Channel Priority Declaration() Declaration() Channel Priority Declaration() channel Priority Channel Priority() Field Declaration() type Type(prefix) Field Declaration() array Declarations Array Declaration() Array Declaration() identifier Identifier(name) Array Declaration() types Array Declaration Type() Array Declaration Type() Array Expression Type() Array Declaration Type() Array Expression Type() expression Expression() Array Type Type() Array Declaration Type() Array Type Type() type Type(prefix) Initialiser() Expression Initialiser() Initialiser() Expression Initialiser() expression Expression() Array Initialiser() initialisers Initialiser() TA Parameter() type Type(prefix) TA Parameter() array Declaration Array Declaration() Call By Value Parameter() TA Parameter() Call By Reference Parameter() TA Parameter() Block() declarations Declaration() Block() statements Statement() Statement() Block Statement() Statement() Block Statement() Block() Expression Statement() Statement() Expression Statement() expression Expression() For Loop Statement() statement Statement() For Loop Statement() terminal Expression Expression() Iteration Statement() statement Statement() Iteration Statement() identifier Identifier(name) Iteration Statement() type Type(prefix) While Loop Statement() statement Statement() While Loop Statement() condition Expression() Do While Loop Statement() statement Statement() Do While Loop Statement() condition Expression() If Statement() else Statement() If Statement() condition Expression() Return Statement() Statement() Return Statement() expression Expression() Channel Priority() Default Channel Priority() Channel Priority() Simple Channel Priority() Channel Priority() Simple Channel Priority() channel Expression Channel Expression() Complex Channel Priority(channel Operator) right Side Channel Expression Channel Priority() Complex Channel Priority(channel Operator) left Side Channel Expression Channel Expression() Less Than() Channel Expression() Identifier Channel Expression() Channel Expression() Identifier Channel Expression() identifier Identifier(name) Expression Channel Expression() channel Expression Channel Expression() Expression Channel Expression() expression Expression() Type(prefix) Identifier Type() Type(prefix) Identifier Type() identifier Identifier(name) Simple Type(type) Type(prefix) Integer Range() Type(prefix) Integer Range() second Index Expression() Scalar() Type(prefix) Scalar() scalar Expression() Struct() Type(prefix) Struct() field Declarations Field Declaration() Void() CONSTANT() Project(id) TA Element() Project(id) global Declarations Declaration() Project(id) templates Template() Project(id) system Declaration System Definition() Template() TA Element() Template() Nameable(name) Template() Identifyable(id) Template() declarations Declaration() Template() locations Location(urgent, committed) Template() edges Edge() Edge() TA Element() Edge() target Location(urgent, committed) Edge() guards Guards() Edge() synchronisation Synchronisation() Edge() selections Selections() Edge() updates Updates() TA Element() Commentable(comment) TA Element() Nameable(name) Location(urgent, committed) TA Element() Location(urgent, committed) invariant Expression() System Definition() template Instantiations Template Instantiation() System Definition() systems System() System() Simple System() System() Simple System() Identifier Identifier(name) Complex System(operator) right Side System System() Template Instantiation() template Identifier Identifier(name) Template Instantiation() process Parameters TA Parameter() Template Instantiation() template Arguments Expression() Selections() selections Selection() Updates() expressions Expression() Guards() conditions Expression()
Label: iot, Text: Sensor() Device() LIGHT() Device() Named Element(name) Device() consumes Resource(url, measurement) Digital Artifact() Named Element(name) Digital Artifact() resources Resource(url, measurement) Digital Artifact() rules Rule() Actuator() Device() Resource(url, measurement) Rule() Named Element(name) Rule() actions Action(action) Rule() condition Condition(expected Value, relational Operator) Action(action) parameters Parameter(name, value) Physical Entity() Named Element(name) Physical Entity() devices Device() EMAIL() Iot System() Named Element(name) Iot System() physical Entities Physical Entity() Iot System() digital Artifacts Digital Artifact() MAJOREQUAL() Named Element(name) Condition(expected Value, relational Operator) variable Sensor() Parameter(name, value)
Label: statemachine, Text: EFSM(name) transitions Transition(name, output, guard, action) EFSM(name) initialstate Initial State() EFSM(name) states State() EFSM(name) context Variables Context Variable(name, type) Transition(name, output, guard, action) target Abstract State(name) Transition(name, output, guard, action) input Input(name) Transition(name, output, guard, action) event Event(name, return, class) Initial State() Abstract State(name) Abstract State(name) State() Abstract State(name) Context Variable(name, type) Input(name) variables Variable(name, type, class) Event(name, return, class) args Param(arg Name, arg Type) Param(arg Name, arg Type) Variable(name, type, class)
Label: trace, Text: Trace() trace Records Trace Record() Trace() trace Record Map Mapping Operation To Trace Record Map Entry() Trace() target To Trace Record Map Object To Trace Record Map Entry(key) Trace Record() mapping Operation E Mapping Operation(name, package, module) Trace Record() context E Mapping Context() Trace Record() parameters E Mapping Parameters() Trace Record() result E Mapping Results() Var Parameter Value(kind, name, type) value E Value(primitive Value, ocl Object, collection Type) Mapping Operation To Trace Record Map Entry() value Trace Record() E Mapping Operation(name, package, module) OUT() E Value(primitive Value, ocl Object, collection Type) E Tuple Part Value(name) value E Value(primitive Value, ocl Object, collection Type) E Mapping Context() context Var Parameter Value(kind, name, type) E Mapping Parameters() parameters Var Parameter Value(kind, name, type) E Mapping Results() result Var Parameter Value(kind, name, type) Object To Trace Record Map Entry(key) value Trace Record()
Label: html, Text: HTML() head HEAD() HTML() body BODY(background, bgcolor, text, link, alink, vlink) HTML Element(value) HEAD() HTML Element(value) HEAD() head Elements HEAD Element() HEAD() html HTML() HEAD Element() HTML Element(value) HEAD Element() head HEAD() LINK(rel, title, ahref, type) HEAD Element() TITLE() HEAD Element() BODY(background, bgcolor, text, link, alink, vlink) HTML Element(value) BODY(background, bgcolor, text, link, alink, vlink) body Elements BODY Element() BODY(background, bgcolor, text, link, alink, vlink) html HTML() BODY Element() HTML Element(value) H1() BODY Element() H2() BODY Element() H3() BODY Element() H4() BODY Element() EM() BODY Element() STRONG() BODY Element() B() BODY Element() I() BODY Element() TT() BODY Element() PRE() BODY Element() BIG() BODY Element() SMALL() BODY Element() SUB() BODY Element() SUP() BODY Element() STRIKE() BODY Element() FONT(color, face, size) BODY Element() IMG(src, width, height, alt, align, vspace, hspace, ismap, usemap, border) BODY Element() BR(clear) BODY Element() MAP() BODY Element() AREA(shape, coords, ahref) BODY Element() STYLE() BODY Element() EMBED(src, width, height, align, vspace, hspace, border) BODY Element() NOEMBED() BODY Element() SPAN(style) BODY Element() A(ahref, name, id) BODY Element() DIV(align) BODY Element() P() BODY Element() TABLE Element(bgcolor, background) BODY Element() TABLE(border, width, cellspacing, cellpadding) TABLE Element(bgcolor, background) TABLE(border, width, cellspacing, cellpadding) trs TR(valign, align) TR(valign, align) TABLE Element(bgcolor, background) TR(valign, align) table TABLE(border, width, cellspacing, cellpadding) TR(valign, align) tds TD(colspan, rowspan, valign, align, width) TD(colspan, rowspan, valign, align, width) TABLE Element(bgcolor, background) TD(colspan, rowspan, valign, align, width) tr TR(valign, align) TH() TD(colspan, rowspan, valign, align, width) FORM(action, method) INPUT(align, maxlength, size, checked, src, input Value, name, type) TEXTAREA(name, rows, cols) SELECT(multiple, size, name) OPTION(selected, option Value) List Element(type) OL(start) List Element(type) UL() List Element(type) LI(li Value) List Element(type) DL() DT() DD() APPLET(applet, class, src, align, width, height) PARAM(name, param Value) OBJECT(classid, id, data, type, standby) FRAMESET(rows, cols, framespacing, frameborder, border) FRAME(src, name, marginwidth, marginheight, scrolling, noresize) NOFRAME() IFRAME() FRAME(src, name, marginwidth, marginheight, scrolling, noresize)
Label: statemachine, Text: FSM() state State(name) FSM() intial State Initial State() State(name) Super State() State(name) entry Action(entry Label) State(name) exit e Action(exit Label) Steady State() State(name) Transient State() State(name) Transition(guard, action) target State(name) Transition(guard, action) src Super State() String() Initial State() Super State() Super State() out Trans Transition(guard, action) Action(entry Label) e Action(exit Label)
Label: statemachine, Text: Module(name) machines Statemachine(initial, name, value) Statemachine(initial, name, value) events Event(name) Statemachine(initial, name, value) states State(initial, name) Event(name) State(initial, name) transitions Transition() State(initial, name) statemachine Statemachine(initial, name, value) Simple State(value) State(initial, name) Compound State() State(initial, name) Compound State() machine Statemachine(initial, name, value) Transition() event Event(name) Transition() state State(initial, name)
Label: robots, Text: Robot(Name) nodes Node() Robot(Name) action Child Action Child() Robot(Name) child Child() Robot(Name) next Next() Node() Child() target Behavior(Name) Next() target Node() Action Child() source Behavior(Name) Action Child() target Action(name) Behavior(Name) Node() Prior() Behavior(Name) Paralell() Behavior(Name) Sequential() Behavior(Name) State Override(succ policy, fail policy, runn policy) Behavior(Name) Action(name) Node() Condition() Action(name) I Rdist(distancia, how sucess) Condition() Right Bumper() Condition() Left Bumper() Condition() Wait(time) Condition() Actuate() Action(name) Motors(Motor Left, Motor Right) Actuate() Servo Range(min, max, inc) Actuate() LED(on off) Actuate()
Label: robots, Text: Basic Package(name) imports Import(imported Namespace) RC Package() Basic Package(name) RC Package() interfaces Interface() RC Package() robots Robotic Platform Def() RC Package() types Type Decl() RC Package() machines State Machine Def() RC Package() controllers Controller Def() RC Package() modules RC Module() RC Package() operations Operation Def() RC Package() functions Function() Import(imported Namespace) Named Element(name) Type Decl() Named Element(name) Primitive Type() Type Decl() Record Type() Type Decl() Record Type() fields Field() Field() Member() Field() Named Expression() Typed Named Element() Named Element(name) Typed Named Element() type Type() Member() Typed Named Element() Enumeration() Type Decl() Enumeration() literals Literal() Literal() Type Decl() Literal() Named Expression() Literal() types Type() Name Type() Type Decl() Name Type() type Type() Type() Product Type() types Type() Relation Type() range Type() Function Type() Relation Type() Set Type() domain Type() Seq Type() Set Type() Type Ref() Type() Type Ref() ref Type Decl() Any Type(identifier) Type() Variable List(modifier) vars Variable(modifier) CONST() Variable(modifier) Typed Named Element() Variable(modifier) Named Expression() Variable(modifier) Member() Variable(modifier) initial Expression() Event(broadcast) Named Element(name) Event(broadcast) type Type() Function() Typed Named Element() Function() Named Expression() Function() parameters Parameter() Function() postconditions Expression() Parameter() Variable(modifier) Operation Sig(terminates) Named Element(name) Operation Sig(terminates) parameters Parameter() Operation Sig(terminates) postconditions Expression() Operation() Named Element(name) Operation() Connection Node() Operation Def() Operation() Operation Def() Operation Sig(terminates) Operation Def() State Machine Body() Reference() Operation Ref() Operation() Operation Ref() Reference() Operation Ref() ref Operation Def() Interface() Named Element(name) Interface() Basic Context() Basic Context() variable List Variable List(modifier) Basic Context() operations Operation Sig(terminates) Basic Context() events Event(broadcast) Basic Context() clocks Clock() Robotic Platform() Named Element(name) Robotic Platform() Connection Node() Robotic Platform Def() Context() Robotic Platform Def() Robotic Platform() Context() Basic Context() Context() interfaces Interface() Robotic Platform Ref() Robotic Platform() Robotic Platform Ref() Reference() Robotic Platform Ref() ref Robotic Platform Def() State Machine() Named Element(name) State Machine() Connection Node() State Machine Def() State Machine Body() State Machine Def() State Machine() State Machine Ref() State Machine() State Machine Ref() Reference() State Machine Ref() ref State Machine Def() State Machine Body() Context() State Machine Body() Node Container() Clock() Named Element(name) Node Container() nodes Node() Node Container() transitions Transition() Node() Named Element(name) Junction() Node() Initial() Junction() State() Node() State() Node Container() State() actions Action() Final() State() Probabilistic Junction() Junction() Transition() Named Element(name) Transition() target Node() Transition() probability Expression() Transition() trigger Trigger( type) Transition() action Statement() Trigger( type) event Event(broadcast) Trigger( type) time Variable(modifier) Trigger( type) value Expression() Trigger( type) reset Clock Reset() EMPTY() Action() action Statement() Entry Action() Action() During Action() Action() Exit Action() Action() Controller() Named Element(name) Controller() Connection Node() Controller Def() Context() Controller Def() Controller() Controller Def() machines State Machine() Controller Def() l Operations Operation() Controller Def() connections Connection(async, bidirec) Connection(async, bidirec) to Connection Node() Connection(async, bidirec) eto Event(broadcast) Controller Ref() Controller() Controller Ref() ref Controller Def() RC Module() Named Element(name) RC Module() connections Connection(async, bidirec) RC Module() nodes Connection Node() Statement() Timed Statement() stmt Statement() Timed Statement() end Expression() Wait() Statement() Wait() duration Expression() Skip() Statement() If Stmt() else Statement() If Stmt() expression Expression() Assignment() Statement() Assignment() left Assignable() Assignment() right Expression() Send Event() Statement() Send Event() trigger Trigger( type) Seq Statement() statements Statement() Par Stmt() stmt Statement() Call() Statement() Call() operation Operation Sig(terminates) Call() args Expression() Clock Reset() Statement() Clock Reset() clock Clock() Expression() Result Exp() Expression() Array Exp() parameters Expression() Clock Exp() Expression() Clock Exp() clock Clock() State Clock Exp() Expression() State Clock Exp() state State() Binary Expression() right Expression() Iff() Binary Expression() Implies() Binary Expression() Or() Binary Expression() Quantifier Expression() predicate Expression() Quantifier Expression() variables Variable(modifier) Forall() Quantifier Expression() Exists(unique) Quantifier Expression() Lambda Exp() expression Expression() Lambda Exp() variables Variable(modifier) Definite Description() Lambda Exp() If Expression() elseexp Expression() Declaration() Named Element(name) Declaration() Named Expression() Declaration() value Expression() Let Expression() expression Expression() Let Expression() declarations Declaration() And() Binary Expression() Not() exp Expression() In Exp() set Expression() Type Exp() Expression() Type Exp() type Type() Equals() Binary Expression() Different() Binary Expression() Greater Than() Binary Expression() Greater Or Equal() Binary Expression() Less Than() Binary Expression() Less Or Equal() Binary Expression() Plus() Binary Expression() Minus() Binary Expression() Modulus() Binary Expression() Mult() Binary Expression() Div() Binary Expression() Cat() Binary Expression() Neg() exp Expression() Selection() receiver Expression() Selection() member Member() Integer Exp(value) Expression() Float Exp(value) Expression() String Exp(value) Expression() Boolean Exp(value) Expression() Var Exp() Expression() Var Exp() value Variable(modifier) Ref Exp() Expression() Ref Exp() ref Named Expression() To Exp() Expression() From Exp() Expression() Id Exp() Expression() As Exp() exp Expression() As Exp() type Type() Is Exp() exp Expression() Is Exp() type Type() Enum Exp() Expression() Enum Exp() type Enumeration() Enum Exp() literal Literal() Par Exp() exp Expression() Seq Exp() values Expression() Set Exp() values Expression() Set Comp() expression Expression() Set Comp() variables Variable(modifier) Set Range() end Expression() Tuple Exp() values Expression() Range Exp(linterval, rinterval) rrange Expression() Call Exp() args Expression() Else Exp() Expression() Assignable() Var Selection() receiver Assignable() Var Selection() member Member() Array Assignable() value Assignable() Array Assignable() parameters Expression() Var Ref() Assignable() Var Ref() name Variable(modifier) Connection Node() Named Expression() Waiting Condition() Named Element(name) Waiting Condition() expression Expression() Waiting Condition() transitions Transition() Waiting Condition Ref() Expression() Waiting Condition Ref() ref Waiting Condition() Vector Type(size) base Type() Matrix Type(rows, columns) base Type()
Label: education, Text: Course(subject, weight) school School(name, address, number Of Teachers, current Year) Course(subject, weight) teacher Teacher(name) Course(subject, weight) school Class School Class(code) School(name, address, number Of Teachers, current Year) last Year Year(starting Date) School(name, address, number Of Teachers, current Year) teachers With Most Courses Teacher(name) School(name, address, number Of Teachers, current Year) courses Course(subject, weight) School Class(code) year Year(starting Date) School Class(code) students Student(name) School Class(code) courses Course(subject, weight) School Class(code) homeroom Teacher Teacher(name) Specialisation Course(specialisation) Course(subject, weight) Student(name) school Class School Class(code) Teacher(name) school School(name, address, number Of Teachers, current Year) Teacher(name) courses Course(subject, weight) Teacher(name) homeroomed Class School Class(code) Year(starting Date) school School(name, address, number Of Teachers, current Year) Year(starting Date) school Classes School Class(code)
Label: entities, Text: Document Root() types Type(name) Type(name) annotations Type Annotation(source) Type(name) documentation TD Documentation(doc) CSI Datatype(code, nillable) Type(name) Entity(versionuid) Type(name) Entity(versionuid) features Feature(name) Feature(name) type Type(name) Feature(name) documentation TD Documentation(doc) CSI Long() Typed Array() component Type Type(name) Exception(exception Type) Type(name) UNRECOVERABLE() Type Annotation(source) details TD Annotation Detail(key, value) TD Annotation Detail(key, value) Primitive Type(typeset Name, nillable) Type(name) Primitive Type(typeset Name, nillable) language Bindings Type Language Binding(lang, lang Specific Type, lang Specific NS, default Init Value, null Value Literal) Type Language Binding(lang, lang Specific Type, lang Specific NS, default Init Value, null Value Literal) Enum Val() value Type Type(name) Enum Val() literals Enum Literal(name, value) Enum Literal(name, value) documentation TD Documentation(doc) TD Documentation(doc)
Label: visualization, Text: Diagram() elements Graphic Element(color, palette Name, palette Icon Path) Edge Element() Graphic Element(color, palette Name, palette Icon Path) Edge Element() target Node Element(label) Node Element(label) Graphic Element(color, palette Name, palette Icon Path) Icon Element(filepath) Node Element(label) Circle(radius) Container Element() Rectangle(width, height) Container Element() Graphic Element(color, palette Name, palette Icon Path) Container Element() contains Node Element(label) Rhombus(width, height) Container Element()
Label: graphicaleditor, Text: View(label, id) Node(all Outgoing Lines, all Incoming Lines) View(label, id) Node(all Outgoing Lines, all Incoming Lines) comment Links Comment Link() Node(all Outgoing Lines, all Incoming Lines) incoming Lines Connector() Container(all Lines, all Shapes) View(label, id) Container(all Lines, all Shapes) children Shape(background, foreground, bounds) Container(all Lines, all Shapes) lines Line(color, width, source Anchor, target Anchor, source Node, target Node, style, line Dash) Diagram(rulers, snap To Grid, snap To Geometry) Container(all Lines, all Shapes) Diagram(rulers, snap To Grid, snap To Geometry) comments Comment() Diagram(rulers, snap To Grid, snap To Geometry) comment Links Comment Link() Diagram(rulers, snap To Grid, snap To Geometry) vertical Ruler Ruler(unit) Diagram(rulers, snap To Grid, snap To Geometry) grid Grid(color, spacing, style) Shape(background, foreground, bounds) Container(all Lines, all Shapes) Shape(background, foreground, bounds) Node(all Outgoing Lines, all Incoming Lines) Shape(background, foreground, bounds) bounds Rectangle() Gradient Shape(using Gradient, gradient Color, vertical Gradient) Shape(background, foreground, bounds) Line(color, width, source Anchor, target Anchor, source Node, target Node, style, line Dash) Node(all Outgoing Lines, all Incoming Lines) Connector() Line(color, width, source Anchor, target Anchor, source Node, target Node, style, line Dash) Connector() source Node(all Outgoing Lines, all Incoming Lines) LINE CUSTOM() Comment() Shape(background, foreground, bounds) Comment() inputs Comment Link() Comment Link() Line(color, width, source Anchor, target Anchor, source Node, target Node, style, line Dash) Comment Link() source Node(all Outgoing Lines, all Incoming Lines) Comment Link() target Comment() Grid(color, spacing, style) Ruler(unit) guides Guide(position) PIXELS() Guide(position) ruler Ruler(unit) Guide(position) element Map Element Entry(value) Element Entry(value) key View(label, id) BOTTOM() Rectangle()
Label: class-diagram, Text: Class() Classifier() Class() attributes Attribute() Class() navigable Association Targets Association() Attribute() Named Element(name) Attribute() type Classifier() Classifier() Named Element(name) Data Type() Classifier() Named Element(name) Package() Classifier() Association() Classifier() Association() target Class()
Label: metamodelling, Text: Located Element(location) Model Element(name) Located Element(location) Model Element(name) package Package() Classifier() Model Element(name) Data Type() Classifier() Enumeration() Classifier() Enumeration() literals Enum Literal() Enum Literal() Model Element(name) Class(is Abstract) Classifier() Class(is Abstract) structural Features Structural Feature(lower, upper, is Ordered, is Unique) Structural Feature(lower, upper, is Ordered, is Unique) Model Element(name) Structural Feature(lower, upper, is Ordered, is Unique) owner Class(is Abstract) Structural Feature(lower, upper, is Ordered, is Unique) type Classifier() Attribute() Structural Feature(lower, upper, is Ordered, is Unique) Reference(is Container) Structural Feature(lower, upper, is Ordered, is Unique) Package() contents Model Element(name) Package() metamodel Metamodel() Metamodel() Located Element(location) Metamodel() contents Package() Boolean() Integer() String()
Label: webapp, Text: Database(extras DB) user DB Guest(wrok Around) Database(extras DB) userhandler User Handler(Users) Database(extras DB) employee DB Employee(ID, Password) Database(extras DB) booking DB Booking(booking ID, guest, nr Of Guests, start Date, end Date, extras, parkings, checked In, checked Out, payment, payment Complete) Database(extras DB) room DB Room(room Type) Room(room Type) Booking(booking ID, guest, nr Of Guests, start Date, end Date, extras, parkings, checked In, checked Out, payment, payment Complete) Rooms Room(room Type) Booking Handler() Bookings Booking(booking ID, guest, nr Of Guests, start Date, end Date, extras, parkings, checked In, checked Out, payment, payment Complete) Booking Handler() User User(Name, Email) Booking Handler() database Database(extras DB) Booking Handler() userhandler User Handler(Users) User(Name, Email) logincontroller Login Controller() User(Name, Email) userhandler User Handler(Users) User(Name, Email) address Address(street, postal Number, city, country) User(Name, Email) bookinghandler Booking Handler() User Handler(Users) database Database(extras DB) User Handler(Users) logincontroller Login Controller() Employee(ID, Password) User(Name, Email) Address(street, postal Number, city, country) Guest(wrok Around) User(Name, Email) GUI() guicontroller GUI Controller() GUI Controller() display GUI() GUI Controller() logincontroller Login Controller() GUI Controller() bookinghandler Booking Handler() Login Controller() guicontroller GUI Controller() Login Controller() current User User(Name, Email) Login Controller() paymenthandler Payment Handler() Login Controller() userhandler User Handler(Users) Login Controller Data Type1() Payment Info(Payment Complete, Credit Card, CVV, Expiry Date) paymenthandler Payment Handler() Payment Handler()
Label: transformation, Text: Located Element(location, comments Before, comments After) comments After String() ACG(metamodel, starts With) Located Element(location, comments Before, comments After) ACG(metamodel, starts With) starts With String() ACG(metamodel, starts With) elements ACG Element() ACG Element() Located Element(location, comments Before, comments After) ACG Element() acg ACG(metamodel, starts With) Function(context, name) ACG Element() Function(context, name) name String() Function(context, name) parameters Parameter() Function(context, name) body Expression() Attribute(context, name) ACG Element() Attribute(context, name) name String() Attribute(context, name) body Expression() Parameter() Variable Decl(name) Node(element, mode) ACG Element() Node(element, mode) Statement Block() Node(element, mode) mode String() Node(element, mode) guard Expression() ASM Node() Node(element, mode) ASM Node() name Expression() Code Node() Node(element, mode) Simple Node() Node(element, mode) Statement Block() Located Element(location, comments Before, comments After) Statement Block() statements Statement() Statement() Located Element(location, comments Before, comments After) Compound Stat() Statement() Compound Stat() Statement Block() For Each Stat() Compound Stat() For Each Stat() iterator Variable Decl(name) For Each Stat() collection Expression() Once Stat() Compound Stat() Variable Stat() Compound Stat() Variable Stat() name Expression() Operation Stat() Compound Stat() Operation Stat() name Expression() Conditional Stat() Compound Stat() Conditional Stat() condition Expression() Conditional Stat() else Statements Statement() Let Stat() Compound Stat() Let Stat() variable Variable Decl(name) Let Stat() value Expression() Analyze Stat(mode) Compound Stat() Analyze Stat(mode) target Expression() Analyze Stat(mode) mode String() Report Stat(severity) Statement() Report Stat(severity) message Expression() warning() Field Stat() Statement() Field Stat() type Expression() Param Stat() Statement() Param Stat() type Expression() Emit Stat() Statement() Label Stat(name) Emit Stat() Label Stat(name) name String() Label Stat(name) id Expression() New Stat() Emit Stat() Newin Stat() Emit Stat() Delete Stat() Emit Stat() Dup Stat() Emit Stat() Dup X1Stat() Emit Stat() Pop Stat() Emit Stat() Swap Stat() Emit Stat() Iterate Stat() Emit Stat() End Iterate Stat() Emit Stat() Get Asm Stat() Emit Stat() Find ME Stat() Emit Stat() Push T Stat() Emit Stat() Push F Stat() Emit Stat() Emit With Operand Stat() Emit Stat() Emit With Operand Stat() operand Expression() Push Stat() Emit With Operand Stat() Push I Stat() Emit With Operand Stat() Push D Stat() Emit With Operand Stat() Load Stat() Emit With Operand Stat() Store Stat() Emit With Operand Stat() Call Stat() Emit With Operand Stat() P Call Stat() Emit With Operand Stat() Super Call Stat() Emit With Operand Stat() Get Stat() Emit With Operand Stat() Set Stat() Emit With Operand Stat() Emit With Label Ref Stat() Emit Stat() Emit With Label Ref Stat() label Label Stat(name) If Stat() Emit With Label Ref Stat() Goto Stat() Emit With Label Ref Stat() Variable Decl(name) Located Element(location, comments Before, comments After) Variable Decl(name) name String() Expression() Located Element(location, comments Before, comments After) Variable Exp() Expression() Variable Exp() variable Variable Decl(name) Self Exp() Expression() Last Exp() Expression() If Exp() else Exp Expression() Is A Exp(type) source Expression() Is A Exp(type) type String() Let Exp() in Expression() Let Exp() variable Variable Decl(name) Property Call Exp(name) source Expression() Property Call Exp(name) name String() Navigation Exp() Property Call Exp(name) Iterator Exp() Property Call Exp(name) Iterator Exp() iterator Variable Decl(name) Iterator Exp() body Expression() Operation Call Exp() Property Call Exp(name) Operation Call Exp() arguments Expression() Operator Call Exp() Operation Call Exp() Literal Exp() Expression() Ocl Undefined Exp() Literal Exp() Collection Exp() Literal Exp() Collection Exp() elements Expression() Sequence Exp() Collection Exp() Boolean Exp(value) Literal Exp() Boolean Exp(value) value Boolean() Integer Exp(value) Literal Exp() Integer Exp(value) value Integer() String Exp(value) Literal Exp() String Exp(value) value String() Boolean() Integer() String()
Label: types, Text: Type(name) Primitive Type() Type(name) User Type() Type(name) Class Type() User Type() Class Type() properties Property(name) Property(name) type Type Reference() Array Type(size) Type Reference() Type Reference() type Type(name) Service Type() User Type() Service Type() configurations Property(name) Service Type() operations Operation(name) Operation(name) type Type Reference() Operation(name) parameters Property(name)
Label: publication, Text: Researcher(name, for Name) res papers Paper(name) Researcher(name, for Name) skills Skill(description) Researcher(name, for Name) res position Position(name, description) Researcher(name, for Name) collaborations Collaboration(ratio) Paper(name) paragraphs Paragraph(name, id, content) Paper(name) authors Researcher(name, for Name) Paragraph(name, id, content) Publication Structure() researchers Researcher(name, for Name) Publication Structure() papers Paper(name) Publication Structure() positions Position(name, description) Skill(description) Position(name, description) Collaboration(ratio) col paper Paper(name)
Label: hotels, Text: Company(name) owns Company Hotel(name) Company(name) records Of Company Guest Record(name, adress, phone Number, ssn, payment Information) Company Hotel(name) list Of Rooms Hotel Room(room Number, cleaning Status, maintence Status) Company Hotel(name) employees Hotel Staff(ssn, first Name, last Name, has Work Titel) Company Hotel(name) list Of Bookings Hotel Booking(start Date, end Date, price, checked In, booking ID) Company Hotel(name) list Of Room Types Room Room Type(price, max Number Of Guests, area, name) Hotel Room(room Number, cleaning Status, maintence Status) accessed By Room Room Key(expiration Date) Hotel Room(room Number, cleaning Status, maintence Status) room Type Room Room Type(price, max Number Of Guests, area, name) Room Room Key(expiration Date) Room Room Type(price, max Number Of Guests, area, name) appliance Type Room Appliance Appliance Type(name) Room Appliance Appliance Type(name) Appliance Type Appliance Service(name, price) Room Room Appliance(name) appliance Type Room Appliance Appliance Type(name) Hotel Staff(ssn, first Name, last Name, has Work Titel) House Keeper() Hotel Booking(start Date, end Date, price, checked In, booking ID) includes Booking Booked Service(date) Hotel Booking(start Date, end Date, price, checked In, booking ID) rooms Hotel Room(room Number, cleaning Status, maintence Status) Hotel Booking(start Date, end Date, price, checked In, booking ID) responsible Guest Company Guest Record(name, adress, phone Number, ssn, payment Information) Hotel Booking(start Date, end Date, price, checked In, booking ID) bill Booking Bill(paid Amount) Booking Booked Service(date) facility Service Facility Facility Service(name, price) Facility Facility Service(name, price) Company Guest Record(name, adress, phone Number, ssn, payment Information) Booking Bill(paid Amount) contains Booking Purchased Service(name, price) Booking Purchased Service(name, price) Hotel Facility(name) facility Type Facility Facility Type(name) Facility Facility Type(name) I Service Booking() Booking Manager() hotel Company Hotel(name) Booking Manager() room Manager Room Manager() Booking Manager() guest Manager Guest Manager() Booking Manager() bill Manager Bill Manager() Room Manager() hotel Company Hotel(name) Guest Manager() company Company(name) Bill Manager() hotel Company Hotel(name) Staff Administration() hotel Company Hotel(name) Room Administration() hotel Company Hotel(name) Appliance Administration() hotel Company Hotel(name) Facility Administration() hotel Company Hotel(name) Hotel Administration() company Company(name) Facility Manager() hotel Company Hotel(name)
Label: statemachine, Text: State Machine() Named Element(name) State Machine() regions Region() Region() Named Element(name) Region() subvertex Abstract State() Region() transitions Transition() Region() owner State Machine State Machine() Abstract State() Named Element(name) Abstract State() outgoing Transition() Abstract State() owner Region Region() State() Abstract State() State() exit Action Block() Transition() Named Element(name) Transition() trigger Trigger(expression) Transition() source Abstract State() Trigger(expression) Pseudostate() Abstract State() Initial State() Pseudostate() Final State() State() Named Element(name) Block()
Label: gpl, Text: Jvm Identifiable Element() Jvm Module(simple Name) Jvm Identifiable Element() Jvm Module(simple Name) import Section X Import Section1() Jvm Module(simple Name) export Section X Export Section() Jvm No Module() import Section X Import Section1() Jvm Type() Jvm Identifiable Element() Jvm Void() Jvm Type() Jvm Component Type() Jvm Type() Jvm Component Type() array Type Jvm Array Type() Jvm Primitive Type(simple Name) Jvm Component Type() Jvm Array Type() component Type Jvm Component Type() Jvm Declared Type(abstract, static, final, package Name, exported) members Jvm Member(visibility, simple Name, identifier, modifiers) Jvm Declared Type(abstract, static, final, package Name, exported) Jvm Component Type() Jvm Declared Type(abstract, static, final, package Name, exported) super Types Jvm Type Reference() Jvm Type Parameter(name) Jvm Component Type() Jvm Type Parameter(name) Jvm Constraint Owner() Jvm Type Parameter(name) declarator Jvm Type Parameter Declarator() Jvm Type Parameter Declarator() type Parameters Jvm Type Parameter(name) Jvm Constraint Owner() constraints Jvm Type Constraint() Jvm Type Constraint() type Reference Jvm Type Reference() Jvm Type Constraint() owner Jvm Constraint Owner() Jvm Upper Bound() Jvm Type Constraint() Jvm Lower Bound() Jvm Type Constraint() Jvm Annotation Type() Jvm Declared Type(abstract, static, final, package Name, exported) Jvm Enumeration Type() Jvm Declared Type(abstract, static, final, package Name, exported) Jvm Enumeration Type() literals Jvm Enumeration Literal() Jvm Enumeration Literal() Jvm Field(static, final, volatile, transient) Jvm Generic Type(interface, strict Floating Point) Jvm Declared Type(abstract, static, final, package Name, exported) Jvm Generic Type(interface, strict Floating Point) Jvm Type Parameter Declarator() Jvm Generic Type(interface, strict Floating Point) implements Jvm Parameterized Type Reference() Jvm Type Reference() Jvm Parameterized Type Reference() arguments Jvm Type Reference() Jvm Parameterized Type Reference() type Jvm Type() Jvm Generic Array Type Reference() component Type Jvm Type Reference() Jvm Wildcard Type Reference() Jvm Type Reference() Jvm Wildcard Type Reference() Jvm Constraint Owner() Jvm Any Type Reference() Jvm Type Reference() Jvm Any Type Reference() type Jvm Type() Jvm Multi Type Reference() Jvm Compound Type Reference() Jvm Member(visibility, simple Name, identifier, modifiers) annotation Info Jvm Annotation Target() Jvm Member(visibility, simple Name, identifier, modifiers) declaring Type Jvm Declared Type(abstract, static, final, package Name, exported) Jvm Feature() Jvm Member(visibility, simple Name, identifier, modifiers) PUBLIC() Jvm Field(static, final, volatile, transient) Jvm Feature() Jvm Field(static, final, volatile, transient) type Jvm Type Reference() Jvm Field(static, final, volatile, transient) get X Expression() Jvm Executable(var Args) Jvm Feature() Jvm Executable(var Args) Jvm Type Parameter Declarator() Jvm Executable(var Args) parameters Jvm Formal Parameter(name, var Arg) Jvm Executable(var Args) exceptions Jvm Type Reference() Jvm Constructor() Jvm Executable(var Args) Jvm Constructor() expression X Expression() Jvm Operation(static, final, abstract, synchronized, default, native, strict Floating Point) Jvm Executable(var Args) Jvm Operation(static, final, abstract, synchronized, default, native, strict Floating Point) return Type Jvm Type Reference() Jvm Operation(static, final, abstract, synchronized, default, native, strict Floating Point) default Value Jvm Annotation Value() Jvm Operation(static, final, abstract, synchronized, default, native, strict Floating Point) function X Expression() Jvm Formal Parameter(name, var Arg) Jvm Annotation Target() Jvm Formal Parameter(name, var Arg) parameter Type Jvm Type Reference() Jvm Formal Parameter(name, var Arg) default Value X Expression() Jvm Annotation Target() Jvm Identifiable Element() Jvm Annotation Target() annotations Jvm Annotation Reference() Jvm Annotation Reference() annotation Jvm Annotation Type() Jvm Annotation Reference() values Jvm Annotation Value() Jvm Annotation Reference() value X Expression() Jvm Annotation Value() operation Jvm Operation(static, final, abstract, synchronized, default, native, strict Floating Point) Jvm Annotation Value() value X Expression() Jvm Int Annotation Value(values) Jvm Annotation Value() Jvm Boolean Annotation Value(values) Jvm Annotation Value() Jvm Byte Annotation Value(values) Jvm Annotation Value() Jvm Short Annotation Value(values) Jvm Annotation Value() Jvm Long Annotation Value(values) Jvm Annotation Value() Jvm Double Annotation Value(values) Jvm Annotation Value() Jvm Float Annotation Value(values) Jvm Annotation Value() Jvm Char Annotation Value(values) Jvm Annotation Value() Jvm String Annotation Value(values) Jvm Annotation Value() Jvm Type Annotation Value() Jvm Annotation Value() Jvm Type Annotation Value() values Jvm Type Reference() Jvm Annotation Annotation Value() Jvm Annotation Value() Jvm Annotation Annotation Value() values Jvm Annotation Reference() Jvm Enum Annotation Value() Jvm Annotation Value() Jvm Enum Annotation Value() values Jvm Enumeration Literal() Iterable() Jvm Delegate Type Reference() delegate Jvm Type Reference() Jvm Specialized Type Reference() equivalent Jvm Type Reference() Jvm Synonym Type Reference() Jvm Compound Type Reference() Jvm Unknown Type Reference(qualified Name) Jvm Type Reference() I Type Reference Visitor() I Type Reference Visitor With Parameter() Jvm Compound Type Reference() references Jvm Type Reference() Jvm Compound Type Reference() type Jvm Type() Jvm Custom Annotation Value(values) Jvm Annotation Value() X Expression() X If Expression() else X Expression() X Switch Expression(local Var Name) default X Expression() X Switch Expression(local Var Name) Jvm Identifiable Element() X Switch Expression(local Var Name) cases X Case Part() X Case Part() then X Expression() X Case Part() type Guard Jvm Type Reference() X Block Expression() expressions X Expression() X Variable Declaration(name, writeable, exported) right X Expression() X Variable Declaration(name, writeable, exported) Jvm Identifiable Element() X Variable Declaration(name, writeable, exported) type Jvm Type Reference() X Variable Declaration List(writeable, exported) declarations X Expression() X Abstract Feature Call(invalid Feature Issue Code, valid Feature) implicit First Argument X Expression() X Abstract Feature Call(invalid Feature Issue Code, valid Feature) feature Jvm Identifiable Element() X Abstract Feature Call(invalid Feature Issue Code, valid Feature) type Arguments Jvm Type Reference() X Member Feature Call(explicit Operation Call, explicit Static, null Safe, type Literal, static With Declaring Type, package Fragment, indexed Operation) X Abstract Feature Call(invalid Feature Issue Code, valid Feature) X Member Feature Call(explicit Operation Call, explicit Static, null Safe, type Literal, static With Declaring Type, package Fragment, indexed Operation) member Call Arguments X Expression() X Member Feature Call1(explicit Operation Call, explicit Static, null Safe, type Literal, static With Declaring Type, package Fragment, indexed Operation) X Abstract Feature Call(invalid Feature Issue Code, valid Feature) X Member Feature Call1(explicit Operation Call, explicit Static, null Safe, type Literal, static With Declaring Type, package Fragment, indexed Operation) member Call Arguments X Expression() X Feature Call(explicit Operation Call, type Literal, package Fragment, indexed Operation) X Abstract Feature Call(invalid Feature Issue Code, valid Feature) X Feature Call(explicit Operation Call, type Literal, package Fragment, indexed Operation) value X Expression() X Constructor Call(invalid Feature Issue Code, valid Feature) arguments X Expression() X Constructor Call(invalid Feature Issue Code, valid Feature) constructor Jvm Constructor() X Constructor Call(invalid Feature Issue Code, valid Feature) type Arguments Jvm Type Reference() X Boolean Literal(is True) X Expression() X Null Literal() X Expression() X Number Literal(value) X Expression() X String Literal(value) X Expression() X Collection Literal() elements X Expression() X List Literal() X Collection Literal() X Key Value Pair(key1) key X Expression() X Set Literal() X Collection Literal() X Closure(explicit Syntax, name, operator, exported) expression X Expression() X Closure(explicit Syntax, name, operator, exported) Jvm Identifiable Element() X Closure(explicit Syntax, name, operator, exported) implicit Parameter Jvm Formal Parameter(name, var Arg) X Closure(explicit Syntax, name, operator, exported) return Type Jvm Type Reference() X Closure(explicit Syntax, name, operator, exported) type Parameters Jvm Type Parameter(name) X Casted Expression() target X Expression() X Casted Expression() type Jvm Type Reference() X Binary Operation() X Abstract Feature Call(invalid Feature Issue Code, valid Feature) X Binary Operation() right Operand X Expression() X Unary Operation() X Abstract Feature Call(invalid Feature Issue Code, valid Feature) X Unary Operation() operand X Expression() X For Loop Expression() each Expression X Expression() X For Each Expression() each Expression X Expression() X For Each Expression() declared Param Jvm Formal Parameter(name, var Arg) X Abstract While Expression() body X Expression() X Do While Expression() X Abstract While Expression() X While Expression() X Abstract While Expression() X Type Literal(array Dimensions) X Expression() X Type Literal(array Dimensions) type Jvm Type() X Instance Of Expression() expression X Expression() X Instance Of Expression() type Jvm Type Reference() X Throw Expression() expression X Expression() X Try Catch Finally Expression() finally Expression X Expression() X Try Catch Finally Expression() catch Clauses X Catch Clause() X Catch Clause() expression X Expression() X Catch Clause() declared Param Jvm Formal Parameter(name, var Arg) X Assignment(explicit Static) X Abstract Feature Call(invalid Feature Issue Code, valid Feature) X Assignment(explicit Static) value X Expression() X Return Expression() expression X Expression() X Break Expression() X Expression() X Continue Expression() X Expression() X Prefix Operation() X Abstract Feature Call(invalid Feature Issue Code, valid Feature) X Prefix Operation() operand X Expression() X Postfix Operation() X Abstract Feature Call(invalid Feature Issue Code, valid Feature) X Postfix Operation() operand X Expression() X Ternary Operation() condition X Expression() X Index Operation() X Abstract Feature Call(invalid Feature Issue Code, valid Feature) X Index Operation() index X Expression() X Function Declaration(name) body X Expression() X Function Declaration(name) return Type Jvm Type Reference() X Function Declaration(name) parameters Jvm Formal Parameter(name, var Arg) X Object Literal() X Expression() X Object Literal() properties X Object Literal Part(name) X Object Literal() type Jvm Type() X Object Literal Part(name) value X Expression() X Array Literal() elements X Expression() Xtend File(package) import Section X Import Section1() Xtend File(package) xtend Types Xtend Type Declaration(name) Xtend File(package) export Section X Export Section() Xtend Class() Xtend Type Declaration(name) Xtend Class() implements Jvm Type Reference() Xtend Class() type Parameters Jvm Type Parameter(name) Xtend Annotation Target() annotations X Annotation() Xtend Member(modifiers) annotation Info Xtend Annotation Target() Xtend Member(modifiers) declaring Type Xtend Type Declaration(name) Xtend Function(name) Xtend Member(modifiers) Xtend Function(name) expression X Expression() Xtend Function(name) exceptions Jvm Type Reference() Xtend Function(name) parameters Xtend Parameter(name, var Arg, extension) Xtend Function(name) create Extension Info Create Extension Info(name) Xtend Function(name) type Parameters Jvm Type Parameter(name) Xtend Field(name) Xtend Member(modifiers) Xtend Field(name) type Jvm Type Reference() Xtend Field(name) initial Value X Expression() Xtend Parameter(name, var Arg, extension) Xtend Annotation Target() Xtend Parameter(name, var Arg, extension) parameter Type Jvm Type Reference() Rich String() X Block Expression() Rich String Literal() X String Literal(value) Rich String For Loop() X For Each Expression() Rich String For Loop() after X Expression() Rich String If() else X Expression() Rich String If() else Ifs Rich String Else If() Rich String Else If() then X Expression() Create Extension Info(name) create Expression X Expression() Xtend Constructor() Xtend Member(modifiers) Xtend Constructor() expression X Expression() Xtend Constructor() parameters Xtend Parameter(name, var Arg, extension) Xtend Constructor() type Parameters Jvm Type Parameter(name) Xtend Constructor() exceptions Jvm Type Reference() Xtend Type Declaration(name) members Xtend Member(modifiers) Xtend Annotation Type() Xtend Type Declaration(name) Xtend Interface() Xtend Type Declaration(name) Xtend Interface() extends Jvm Type Reference() Xtend Interface() type Parameters Jvm Type Parameter(name) Xtend Enum() Xtend Type Declaration(name) Xtend Enum Literal(name) Xtend Member(modifiers) Xtend Variable Declaration(extension) X Variable Declaration(name, writeable, exported) Xtend Formal Parameter(extension) Jvm Formal Parameter(name, var Arg) Xtend Delegate() Xtend Type Declaration(name) Xtend Delegate() exceptions Jvm Type Reference() Xtend Delegate() parameters Xtend Parameter(name, var Arg, extension) Xtend Delegate() type Parameters Jvm Type Parameter(name) Xtend Event(name) Xtend Member(modifiers) Xtend Event(name) type Jvm Type Reference() Xtend Event(name) initial Value X Expression() X Annotation() value X Expression() X Annotation() element Value Pairs X Annotation Element Value Pair() X Annotation() annotation Type Jvm Type() X Annotation Element Value Pair() value X Expression() X Annotation Element Value Pair() element Jvm Operation(static, final, abstract, synchronized, default, native, strict Floating Point) X Function Type Ref(instance Context) Jvm Specialized Type Reference() X Function Type Ref(instance Context) return Type Jvm Type Reference() X Function Type Ref(instance Context) type Jvm Type() X Computed Type Reference(type Provider) Jvm Specialized Type Reference() X Computed Type Reference(type Provider) type Provider I Jvm Type Reference Provider() I Jvm Type Reference Provider() X Import Section() import Declarations X Import Declaration(extension, static, imported Namespace, wildcard) X Import Declaration(extension, static, imported Namespace, wildcard) imported Type Jvm Declared Type(abstract, static, final, package Name, exported) X Import Section1() import Declarations X Import Declaration1(alias, import URI) X Import Declaration1(alias, import URI) import Items X Import Item(alias) X Import Item(alias) imported Id Jvm Identifiable Element() X Export Section() export Declarations X Export Declaration(alias, wildcard, import URI) X Export Declaration(alias, wildcard, import URI) export Items X Export Item(alias) X Export Item(alias) exported Id Jvm Identifiable Element() Processed Rich String() rich String Rich String() Processed Rich String() lines Line() Line() parts Line Part() Line() rich String Processed Rich String() Line Part() line Line() Literal(offset, length) Line Part() Literal(offset, length) literal Rich String Literal() Line Break() Literal(offset, length) For Loop Start() Line Part() For Loop Start() loop Rich String For Loop() For Loop Start() end For Loop End() For Loop End() Line Part() For Loop End() start For Loop Start() Printed Expression() Line Part() Printed Expression() expression X Expression() If Condition Start() Line Part() If Condition Start() rich String If Rich String If() If Condition Start() else Start Else Start() If Condition Start() else If Conditions Else If Condition() If Condition Start() end If End If() Else If Condition() Line Part() Else If Condition() rich String Else If Rich String Else If() Else If Condition() if Condition Start If Condition Start() Else Start() Line Part() Else Start() if Condition Start If Condition Start() End If() Line Part() End If() if Condition Start If Condition Start()
Label: fault-tree, Text: Hazard() Event(description, name) Hazard() in Event Intermediate Event() Gate() output Event Event(description, name) Gate() root Fault Tree() Event(description, name) output Gate Gate() Event(description, name) root Fault Tree() Intermediate Event() out Event Event(description, name) Intermediate Event() instance Failure Instance(name) Failure Type(name) instance Failure Instance(name) Failure Type(name) root Fault Tree() Failure Instance(name) type Failure Type(name) Failure Instance(name) root Fault Tree() Failure Instance(name) previous Error Error Instance(name) Failure Instance(name) event Intermediate Event() Basic Event(probability) Event(description, name) Basic Event(probability) instance Error Instance(name) Basic Event(probability) out Event Intermediate Event() Undeveloped Event() Event(description, name) Error Type(name) error Error Instance(name) Error Type(name) root Fault Tree() Error Instance(name) error Basic Event(probability) Error Instance(name) type Error Type(name) Error Instance(name) root Fault Tree() OR() Gate() AND() Gate() XOR() Gate() Prior AND() Gate() Inhibit() Gate() Fault Tree() hazard Hazard() Fault Tree() gate Gate() Fault Tree() event Event(description, name) Fault Tree() failure instance Failure Instance(name) Fault Tree() failure type Failure Type(name) Fault Tree() error instance Error Instance(name) Fault Tree() error type Error Type(name)
Label: constraints, Text: Located Element(location, comments Before, comments After) comments After String() Ocl Expression() Located Element(location, comments Before, comments After) Ocl Expression() type Ocl Type(name) Ocl Expression() if Exp1 If Exp() Ocl Expression() applied Property Property Call Exp() Ocl Expression() collection Collection Exp() Ocl Expression() let Exp Let Exp() Ocl Expression() loop Exp Loop Exp() Ocl Expression() parent Operation Operation Call Exp(operation Name) Ocl Expression() initialized Variable Variable Declaration(id, var Name) Ocl Expression() owning Operation Operation(name) Ocl Expression() owning Attribute Attribute(name) Variable Exp() Ocl Expression() Variable Exp() referred Variable Variable Declaration(id, var Name) Super Exp() Ocl Expression() Primitive Exp() Ocl Expression() String Exp(string Symbol) Primitive Exp() String Exp(string Symbol) string Symbol String() Boolean Exp(boolean Symbol) Primitive Exp() Boolean Exp(boolean Symbol) boolean Symbol Boolean() Numeric Exp() Primitive Exp() Real Exp(real Symbol) Numeric Exp() Real Exp(real Symbol) real Symbol Double() Integer Exp(integer Symbol) Numeric Exp() Integer Exp(integer Symbol) integer Symbol Integer() Collection Exp() elements Ocl Expression() Bag Exp() Collection Exp() Ordered Set Exp() Collection Exp() Sequence Exp() Collection Exp() Set Exp() Collection Exp() Tuple Exp() Ocl Expression() Tuple Exp() tuple Part Tuple Part() Tuple Part() Variable Declaration(id, var Name) Tuple Part() tuple Tuple Exp() Map Exp() Ocl Expression() Map Exp() elements Map Element() Map Element() Located Element(location, comments Before, comments After) Map Element() map Map Exp() Map Element() value Ocl Expression() Enum Literal Exp(name) Ocl Expression() Enum Literal Exp(name) name String() Ocl Undefined Exp() Ocl Expression() Property Call Exp() source Ocl Expression() Navigation Or Attribute Call Exp(name) Property Call Exp() Navigation Or Attribute Call Exp(name) name String() Operation Call Exp(operation Name) Property Call Exp() Operation Call Exp(operation Name) arguments Ocl Expression() Operation Call Exp(operation Name) operation Name String() Operator Call Exp() Operation Call Exp(operation Name) Collection Operation Call Exp() Operation Call Exp(operation Name) Loop Exp() Property Call Exp() Loop Exp() body Ocl Expression() Loop Exp() iterators Iterator() Iterate Exp() Loop Exp() Iterate Exp() result Variable Declaration(id, var Name) Iterator Exp(name) Loop Exp() Iterator Exp(name) name String() Let Exp() in Ocl Expression() Let Exp() variable Variable Declaration(id, var Name) If Exp() else Expression Ocl Expression() Variable Declaration(id, var Name) Located Element(location, comments Before, comments After) Variable Declaration(id, var Name) var Name String() Variable Declaration(id, var Name) type Ocl Type(name) Variable Declaration(id, var Name) init Expression Ocl Expression() Variable Declaration(id, var Name) let Exp Let Exp() Variable Declaration(id, var Name) base Exp Iterate Exp() Variable Declaration(id, var Name) variable Exp Variable Exp() Iterator() Variable Declaration(id, var Name) Iterator() loop Expr Loop Exp() Parameter() Variable Declaration(id, var Name) Parameter() operation Operation(name) Collection Type() element Type Ocl Type(name) Ocl Type(name) ocl Expression Ocl Expression() Ocl Type(name) name String() Ocl Type(name) definitions Ocl Context Definition() Ocl Type(name) operation Operation(name) Ocl Type(name) map Type Map Type() Ocl Type(name) attribute Attribute(name) Ocl Type(name) collection Types Collection Type() Ocl Type(name) tuple Type Attribute Tuple Type Attribute(name) Ocl Type(name) variable Declaration Variable Declaration(id, var Name) Primitive() Ocl Type(name) String Type() Primitive() Boolean Type() Primitive() Numeric Type() Primitive() Integer Type() Numeric Type() Real Type() Numeric Type() Bag Type() Collection Type() Ordered Set Type() Collection Type() Sequence Type() Collection Type() Set Type() Collection Type() Ocl Any Type() Ocl Type(name) Tuple Type() Ocl Type(name) Tuple Type() attributes Tuple Type Attribute(name) Tuple Type Attribute(name) Located Element(location, comments Before, comments After) Tuple Type Attribute(name) type Ocl Type(name) Tuple Type Attribute(name) tuple Type Tuple Type() Tuple Type Attribute(name) name String() Ocl Model Element() Ocl Type(name) Ocl Model Element() model Ocl Model(name) Map Type() key Type Ocl Type(name) Ocl Feature Definition() Located Element(location, comments Before, comments After) Ocl Feature Definition() feature Ocl Feature() Ocl Feature Definition() context Ocl Context Definition() Ocl Context Definition() Located Element(location, comments Before, comments After) Ocl Context Definition() definition Ocl Feature Definition() Ocl Context Definition() context Ocl Type(name) Ocl Feature() Located Element(location, comments Before, comments After) Ocl Feature() definition Ocl Feature Definition() Attribute(name) Ocl Feature() Attribute(name) name String() Attribute(name) init Expression Ocl Expression() Attribute(name) type Ocl Type(name) Operation(name) Ocl Feature() Operation(name) name String() Operation(name) parameters Parameter() Operation(name) return Type Ocl Type(name) Operation(name) body Ocl Expression() Ocl Model(name) Located Element(location, comments Before, comments After) Ocl Model(name) name String() Ocl Model(name) elements Ocl Model Element() Boolean() Double() Integer() String()
Label: railway, Text: Railway Domain Model() trains Train(heading Speed, max Speed) Railway Domain Model() sections Section() Railway Domain Model() turnouts Turnout(current Direction, switching Direction) Railway Domain Model() editor CP Connection Point(direction) Railway Domain Model() editor Signal Signal(allowed Speed) Railway Domain Model() editor TDD Turnout Desired Direction(desired Direction) Railway Domain Model() editor Route Route() Railway Domain Model() editor Route Element Route Element() Train(heading Speed, max Speed) RDM Element(name, length) Train(heading Speed, max Speed) departures From Station() Train(heading Speed, max Speed) follows Route() Train(heading Speed, max Speed) stands On Track Element() Signal(allowed Speed) RDM Element(name, length) Signal(allowed Speed) stands On Connection Point(direction) Signal(allowed Speed) observes Track Element() Track Element() RDM Element(name, length) Track Element() connects To Connection Point(direction) Track Element() occupied By Train(heading Speed, max Speed) Route() RDM Element(name, length) Route() first Element Route Element() RDM Element(name, length) Section() Track Element() Turnout(current Direction, switching Direction) Track Element() Turnout Desired Direction(desired Direction) RDM Element(name, length) Turnout Desired Direction(desired Direction) referred Turnout Turnout(current Direction, switching Direction) Turnout Desired Direction(desired Direction) route Element Route Element() Station() Section() Station() controls Signal(allowed Speed) SIXTY() STRAIGHT() TOP() Connection Point(direction) RDM Element(name, length) Connection Point(direction) holds Signal(allowed Speed) Connection Point(direction) next Element Track Element() Route Element() RDM Element(name, length) Route Element() referred Element Track Element() Route Element() desired Direction Turnout Desired Direction(desired Direction) Route Element() belongs To Route() Turnout Signal() Signal(allowed Speed) Turnout Signal() turnout Turnout(current Direction, switching Direction)
Label: relationships, Text: Base(id) Named Element(name) Base(id) relations Boz(since) Base(id) foos Foo(id) Base(id) ouputs Output(id) Base(id) baze Baz(zig) Named Element(name) aliases Alias(id) Named Element(name) bars Bar(id) Named Element(name) rels Rel(id) Boz(since) to Element Named Element(name) Boz(since) from Thing Base(id) Alias(id) Foo(id) Bar(id) output Output(id) Output(id) Rel(id) src Named Element(name) Rel(id) trg Boz(since) Baz(zig) Named Element(name) Baz(zig) azing Zing() Bouz(bil) Baz(zig) Bouz(bil) zings Zing() Boul(hi) Baz(zig) Zing() Named Element(name)
Label: modelling, Text: Opaque Behavior(body, language) Behavior(reentrant) Behavior(reentrant) Class(active) Behavior(reentrant) specification Behavioral Feature(abstract, concurrency) Behavior(reentrant) owned Parameter Parameter(direction) Behavior(reentrant) context Behaviored Classifier() sequential() Behaviored Classifier() Classifier(abstract, final Specialization) Behaviored Classifier() classifier Behavior Behavior(reentrant) Function Behavior() Opaque Behavior(body, language) Trigger() Named Element(name, visibility, qualified Name) Trigger() event Event() Event() Packageable Element() Signal() Classifier(abstract, final Specialization) Signal() owned Attribute Property(derived, derived Union, aggregation, composite) Signal Event() Message Event() Signal Event() signal Signal() Message Event() Event() Reception() Behavioral Feature(abstract, concurrency) Reception() signal Signal() Value Specification() Typed Element() Typed Element() Named Element(name, visibility, qualified Name) Typed Element() type Type() Named Element(name, visibility, qualified Name) Element() Named Element(name, visibility, qualified Name) namespace Namespace() Element() owned Comment Comment(body) Comment(body) annotated Element Element() package() Namespace() owned Member Named Element(name, visibility, qualified Name) Namespace() element Import Element Import(visibility, alias) Namespace() package Import Package Import(visibility) Namespace() imported Member Packageable Element() Element Import(visibility, alias) Element() Element Import(visibility, alias) imported Element Packageable Element() Element Import(visibility, alias) importing Namespace Namespace() Packageable Element() Named Element(name, visibility, qualified Name) Package Import(visibility) Element() Package Import(visibility) imported Package Package() Package Import(visibility) importing Namespace Namespace() Package() Namespace() Package() packaged Element Packageable Element() Package() owned Type Type() Type() Packageable Element() Type() package Package() Structural Feature(read Only) Feature(static) Structural Feature(read Only) Multiplicity Element(ordered, unique, upper, lower) Structural Feature(read Only) Typed Element() Feature(static) Redefinable Element(leaf) Feature(static) featuring Classifier Classifier(abstract, final Specialization) Redefinable Element(leaf) Named Element(name, visibility, qualified Name) Redefinable Element(leaf) redefinition Context Classifier(abstract, final Specialization) Classifier(abstract, final Specialization) Namespace() Classifier(abstract, final Specialization) Type() Classifier(abstract, final Specialization) generalization Generalization(substitutable) Classifier(abstract, final Specialization) feature Feature(static) Classifier(abstract, final Specialization) inherited Member Named Element(name, visibility, qualified Name) Classifier(abstract, final Specialization) attribute Property(derived, derived Union, aggregation, composite) Generalization(substitutable) Element() Generalization(substitutable) specific Classifier(abstract, final Specialization) Property(derived, derived Union, aggregation, composite) Structural Feature(read Only) Property(derived, derived Union, aggregation, composite) association Association(derived) Property(derived, derived Union, aggregation, composite) datatype Data Type() Property(derived, derived Union, aggregation, composite) class Class(active) composite() Association(derived) Classifier(abstract, final Specialization) Association(derived) end Type Type() Association(derived) owned End Property(derived, derived Union, aggregation, composite) Data Type() Classifier(abstract, final Specialization) Data Type() owned Attribute Property(derived, derived Union, aggregation, composite) Multiplicity Element(ordered, unique, upper, lower) Element() Multiplicity Element(ordered, unique, upper, lower) lower Value Value Specification() Behavioral Feature(abstract, concurrency) Feature(static) Behavioral Feature(abstract, concurrency) owned Parameter Parameter(direction) Behavioral Feature(abstract, concurrency) method Behavior(reentrant) Parameter(direction) Multiplicity Element(ordered, unique, upper, lower) Parameter(direction) Typed Element() return() Operation(query, ordered, unique, lower, upper) Behavioral Feature(abstract, concurrency) Operation(query, ordered, unique, lower, upper) class Class(active) Operation(query, ordered, unique, lower, upper) type Type() Instance Specification() Named Element(name, visibility, qualified Name) Instance Specification() classifier Classifier(abstract, final Specialization) Instance Specification() slot Slot() Slot() Element() Slot() defining Feature Structural Feature(read Only) Slot() value Value Specification() Slot() owning Instance Instance Specification() Instance Value() Value Specification() Instance Value() instance Instance Specification() Literal Boolean(value) Literal Specification() Literal Specification() Value Specification() Literal Integer(value) Literal Specification() Literal Null() Literal Specification() Literal String(value) Literal Specification() Literal Unlimited Natural(value) Literal Specification() Primitive Type() Data Type() Enumeration() Data Type() Enumeration() owned Literal Enumeration Literal() Enumeration Literal() Instance Specification() Enumeration Literal() enumeration Enumeration() Class(active) Behaviored Classifier() Class(active) owned Attribute Property(derived, derived Union, aggregation, composite) Class(active) owned Operation Operation(query, ordered, unique, lower, upper) Class(active) owned Reception Reception() Class(active) nested Classifier Classifier(abstract, final Specialization) Object Flow() Activity Edge() Activity Edge() Redefinable Element(leaf) Activity Edge() activity Activity(read Only) Activity Edge() target Activity Node() Activity Edge() in Structured Node Structured Activity Node(must Isolate) Activity Edge() guard Value Specification() Activity(read Only) Behavior(reentrant) Activity(read Only) node Activity Node() Activity(read Only) edge Activity Edge() Activity Node() Redefinable Element(leaf) Activity Node() in Structured Node Structured Activity Node(must Isolate) Activity Node() activity Activity(read Only) Activity Node() incoming Activity Edge() Object Node() Activity Node() Object Node() Typed Element() Merge Node() Control Node() Control Node() Activity Node() Join Node() Control Node() Initial Node() Control Node() Final Node() Control Node() Fork Node() Control Node() Control Flow() Activity Edge() Decision Node() Control Node() Decision Node() decision Input Behavior(reentrant) Decision Node() decision Input Flow Object Flow() Activity Final Node() Final Node() Activity Parameter Node() Object Node() Activity Parameter Node() parameter Parameter(direction) Loop Node(tested First) Structured Activity Node(must Isolate) Loop Node(tested First) loop Variable Output Pin() Loop Node(tested First) setup Part Executable Node() Loop Node(tested First) loop Variable Input Input Pin() Executable Node() Activity Node() Clause() Element() Clause() body Executable Node() Clause() body Output Output Pin() Conditional Node(determinate, assured) Structured Activity Node(must Isolate) Conditional Node(determinate, assured) clause Clause() Conditional Node(determinate, assured) result Output Pin() Structured Activity Node(must Isolate) Action(locally Reentrant) Structured Activity Node(must Isolate) node Activity Node() Structured Activity Node(must Isolate) edge Activity Edge() Structured Activity Node(must Isolate) structured Node Output Output Pin() Structured Activity Node(must Isolate) structured Node Input Input Pin() stream() Expansion Node() Object Node() Expansion Node() region As Input Expansion Region(mode) Expansion Region(mode) Structured Activity Node(must Isolate) Expansion Region(mode) output Element Expansion Node() Structural Feature Action() Action(locally Reentrant) Structural Feature Action() structural Feature Structural Feature(read Only) Structural Feature Action() object Input Pin() Test Identity Action() Action(locally Reentrant) Test Identity Action() first Input Pin() Test Identity Action() result Output Pin() Value Specification Action() Action(locally Reentrant) Value Specification Action() value Value Specification() Value Specification Action() result Output Pin() Write Link Action() Link Action() Link Action() Action(locally Reentrant) Link Action() end Data Link End Data() Link Action() input Value Input Pin() Link End Data() Element() Link End Data() value Input Pin() Link End Data() end Property(derived, derived Union, aggregation, composite) Write Structural Feature Action() Structural Feature Action() Write Structural Feature Action() value Input Pin() Write Structural Feature Action() result Output Pin() Remove Structural Feature Value Action(remove Duplicates) Write Structural Feature Action() Remove Structural Feature Value Action(remove Duplicates) remove At Input Pin() Read Link Action() Link Action() Read Link Action() result Output Pin() Read Self Action() Action(locally Reentrant) Read Self Action() result Output Pin() Read Structural Feature Action() Structural Feature Action() Read Structural Feature Action() result Output Pin() Link End Creation Data(replace All) Link End Data() Link End Creation Data(replace All) insert At Input Pin() Link End Destruction Data(destroy Duplicates) Link End Data() Link End Destruction Data(destroy Duplicates) destroy At Input Pin() Clear Association Action() Action(locally Reentrant) Clear Association Action() association Association(derived) Clear Association Action() object Input Pin() Clear Structural Feature Action() Structural Feature Action() Clear Structural Feature Action() result Output Pin() Create Link Action() Write Link Action() Create Object Action() Action(locally Reentrant) Create Object Action() result Output Pin() Create Object Action() classifier Classifier(abstract, final Specialization) Destroy Link Action() Write Link Action() Destroy Object Action(destroy Links, destroy Owned Objects) Action(locally Reentrant) Destroy Object Action(destroy Links, destroy Owned Objects) target Input Pin() Add Structural Feature Value Action(replace All) Write Structural Feature Action() Add Structural Feature Value Action(replace All) insert At Input Pin() Start Classifier Behavior Action() Action(locally Reentrant) Start Classifier Behavior Action() object Input Pin() Start Object Behavior Action() Call Action(synchronous) Start Object Behavior Action() object Input Pin() Reduce Action(ordered) Action(locally Reentrant) Reduce Action(ordered) reducer Behavior(reentrant) Reduce Action(ordered) result Output Pin() Reduce Action(ordered) collection Input Pin() Read Extent Action() Action(locally Reentrant) Read Extent Action() result Output Pin() Read Extent Action() classifier Classifier(abstract, final Specialization) Read Is Classified Object Action(direct) Action(locally Reentrant) Read Is Classified Object Action(direct) classifier Classifier(abstract, final Specialization) Read Is Classified Object Action(direct) result Output Pin() Read Is Classified Object Action(direct) object Input Pin() Reclassify Object Action(replace All) Action(locally Reentrant) Reclassify Object Action(replace All) new Classifier Classifier(abstract, final Specialization) Reclassify Object Action(replace All) object Input Pin() Accept Event Action(unmarshall) Action(locally Reentrant) Accept Event Action(unmarshall) result Output Pin() Accept Event Action(unmarshall) trigger Trigger() Action(locally Reentrant) Executable Node() Action(locally Reentrant) output Output Pin() Action(locally Reentrant) context Classifier(abstract, final Specialization) Action(locally Reentrant) input Input Pin() Input Pin() Pin() Pin() Object Node() Pin() Multiplicity Element(ordered, unique, upper, lower) Call Action(synchronous) Invocation Action() Call Action(synchronous) result Output Pin() Invocation Action() Action(locally Reentrant) Invocation Action() argument Input Pin() Send Signal Action() Invocation Action() Send Signal Action() target Input Pin() Send Signal Action() signal Signal() Call Behavior Action() Call Action(synchronous) Call Behavior Action() behavior Behavior(reentrant) Call Operation Action() Call Action(synchronous) Call Operation Action() operation Operation(query, ordered, unique, lower, upper) Call Operation Action() target Input Pin() Output Pin() Pin() Structured Value() Value() Feature Value(position) feature Structural Feature(read Only) Feature Value(position) values Value() Unlimited Natural Value(value) Primitive Value() Primitive Value() Value() Primitive Value() type Primitive Type() String Value(value) Primitive Value() Reference() Structured Value() Reference() referent Object() Object() Extensional Value() Object() types Class(active) Extensional Value() Compound Value() Compound Value() Structured Value() Compound Value() feature Values Feature Value(position) Link() Extensional Value() Link() type Association(derived) Integer Value(value) Primitive Value() Enumeration Value() Value() Enumeration Value() literal Enumeration Literal() Enumeration Value() type Enumeration() Data Value() Compound Value() Data Value() type Data Type() Boolean Value(value) Primitive Value() Value() Semantic Visitor() Semantic Visitor()
Label: iot, Text: Board() Named Element(name) Board() project Project() Module() Named Element(name) Digital Pin() Pin() Digital Pin() module Arduino Digital Module() Pin() Named Element(name) Analog Pin() Pin() Analog Pin() module Arduino Analog Module() Sketch() Named Element(name) Sketch() project Project() Sketch() block Block() Sketch() board Board() Project() boards Board() Project() sketches Sketch() Instruction() Module Assignment() Module Instruction() Module Assignment() Assignment() Module Instruction() Instruction() Module Instruction() module Module() Control() Instruction() Control() block Block() Utilities() Instruction() Delay(unit, value) Utilities() Micro Second() Named Element(name) Repeat(iteration) Control() Module Get() Expression() Module Get() Module Instruction() While() Control() While() condition Boolean Expression() Binary Expression() right Expression() pourcent() Variable() Named Element(name) Variable Assignment() Instruction() Variable Assignment() Assignment() Variable Assignment() variable Variable() Binary Integer Expression(operator) Binary Expression() Binary Integer Expression(operator) Integer Expression() Binary Boolean Expression(operator) Binary Expression() Binary Boolean Expression(operator) Boolean Expression() Expression() Constant() Expression() If() Control() If() condition Boolean Expression() If() else Block Block() Integer Constant(value) Constant() Integer Constant(value) Integer Expression() Boolean Constant(value) Constant() Boolean Constant(value) Boolean Expression() Boolean Expression() Expression() Integer Expression() Expression() Assignment() Instruction() Assignment() operand Expression() Integer Variable(initial Value) Variable() Boolean Variable(initial Value) Variable() Boolean Module Get() Module Get() Boolean Module Get() Boolean Expression() Integer Module Get() Module Get() Integer Module Get() Integer Expression() Different() square Root() not() Unary Expression() operand Expression() Unary Boolean Expression(operator) Unary Expression() Unary Boolean Expression(operator) Boolean Expression() Unary Integer Expression(operator) Unary Expression() Unary Integer Expression(operator) Integer Expression() Variable Declaration() Instruction() Variable Declaration() variable Variable() Variable Ref() Expression() Integer Variable Ref() Variable Ref() Integer Variable Ref() Integer Expression() Integer Variable Ref() variable Integer Variable(initial Value) LED(color) Arduino Digital Module() Push Button() Arduino Digital Module() Buzzer() Arduino Digital Module() Rotation Sensor() Arduino Analog Module() Micro Servo() Arduino Digital Module() Infra Red Sensor() Arduino Digital Module() Ambient Light Sensor() Arduino Analog Module() Sound Sensor() Arduino Analog Module() Fan() Arduino Digital Module() Music Player() Arduino Analog Module() Arduino Module() Module() Block() instructions Instruction() Arduino Board() Board() Arduino Board() digital Pins Digital Pin() Arduino Board() analog Pins Analog Pin() Arduino Digital Module() Arduino Module() Arduino Analog Module() Arduino Module() Boolean Variable Ref() Variable Ref() Boolean Variable Ref() Boolean Expression() Boolean Variable Ref() variable Boolean Variable(initial Value) white() Object() Arduino Communication Module() Arduino Analog Module() Bluetooth Transceiver() Arduino Communication Module()
Label: gpl, Text: EJ Base() EJ Element(start Line, end Line, start Column, end Column, start Offset, end Offset) EJ Base() documentation Documentation Line(text) EJ Base() attribute Sets Attribute Set() Attribute Set() EJ Element(start Line, end Line, start Column, end Column, start Offset, end Offset) Attribute Set() attributes Expression() Parameter() Named Element() Parameter() final Modifier Modifier(value) Parameter() classifier Expression() Variable() Named Element() Variable() initial Value Expression() Template Parameter() Named Element() Template Parameter() super To Types Expression() Modifier(value) EJ Element(start Line, end Line, start Column, end Column, start Offset, end Offset) Modifier(value) value String() Documentation Line(text) EJ Element(start Line, end Line, start Column, end Column, start Offset, end Offset) Documentation Line(text) text String() EJ Element(start Line, end Line, start Column, end Column, start Offset, end Offset) Integer() Boolean() String() Behavior Feature() Feature() Behavior Feature() exceptions Expression() Behavior Feature() name Identifier(value, escaped Value, quoted Value) Behavior Feature() parameters Parameter() Behavior Feature() template Parameters Template Parameter() Class Block() EJ Base() Class Block() content Classifier Member Statement() Classifier Member Statement() EJ Base() Constructor Statement() Behavior Feature() Constructor Statement() body Method Block() Enum Literal() Classifier Member Statement() Enum Literal() args Expression() Enum Literal() name Identifier(value, escaped Value, quoted Value) Enum Literal() body Class Block() Feature() Classifier Member Statement() Feature() final Modifier Modifier(value) Field Statement() Feature() Field Statement() volatile Modifier Modifier(value) Field Statement() classifier Expression() Field Statement() variables Variable() Init Statement() Classifier Member Statement() Init Statement() body Method Block() Inner Classifier() Classifier Member Statement() Inner Classifier() classifier Classifier Statement() Instance Init Statement() Init Statement() Method Statement() Behavior Feature() Method Statement() body Method Block() Method Statement() return Type Expression() Method Statement() strictfp Modifier Modifier(value) Static Init Statement() Init Statement() Classifier Statement() EJ Base() Classifier Statement() name Identifier(value, escaped Value, quoted Value) Classifier Statement() visibility Modifier Modifier(value) Classifier Statement() template Parameters Template Parameter() Classifier Statement() contents Classifier Member Statement() Class Statement() Implemenation Classifier Statement() Class Statement() static Modifier Modifier(value) Class Statement() implemented Types Expression() Enum Statement() Implemenation Classifier Statement() Implemenation Classifier Statement() Classifier Statement() Implemenation Classifier Statement() final Modifier Modifier(value) Interface Statement() Classifier Statement() Interface Statement() extended Types Expression() Import Statement() Top Level Statement() Import Statement() all Modifier Modifier(value) Import Statement() imported Package Expression() Package Statement() Top Level Statement() Package Statement() name Expression() Top Level Classifier() Top Level Statement() Top Level Classifier() classifier Classifier Statement() Top Level Statement() EJ Base() Break Statement() Jump Statement() Catch Part() EJ Base() Catch Part() specification Parameter() Catch Part() body Method Block() Conditional Loop() Loop Statement() Conditional Loop() condition Expression() Continue Statement() Jump Statement() Continue Statement() default Label Switch Default Part Ref() Continue Statement() case Value Expression() Do While Statement() Conditional Loop() Expression Statement() Method Content Statement() Expression Statement() expression Expression() Foreach Statement() Loop Statement() Foreach Statement() parameter Parameter() Foreach Statement() limit Expression() For Statement() Conditional Loop() For Statement() init Variable Declaration Local Var Statement() For Statement() update Expressions Expression() If Statement() Method Content Statement() If Statement() if Then Part If Then Part() If Statement() else Part Method Block() If Then Part() EJ Base() If Then Part() condition Expression() If Then Part() body Method Block() Jump Statement() Method Content Statement() Jump Statement() label Label(name) Label(name) EJ Element(start Line, end Line, start Column, end Column, start Offset, end Offset) Label(name) name String() Labeled Statement() Method Content Statement() Labeled Statement() label Label(name) Local Var Statement() Method Content Statement() Local Var Statement() final Modifier Modifier(value) Local Var Statement() variables Variable() Local Var Statement() classifier Expression() Loop Statement() Labeled Statement() Loop Statement() body Method Block() Method Block() content Method Content Statement() Method Classifier() Method Content Statement() Method Classifier() classifier Classifier Statement() Method Content Statement() EJ Base() Scope Statement() Method Content Statement() Scope Statement() body Method Block() Switch Case Part() Switch Part() Switch Case Part() values Expression() Switch Default Part() Switch Part() Switch Part() EJ Base() Switch Part() body Method Block() Switch Statement() Labeled Statement() Switch Statement() value Expression() Switch Statement() parts Switch Part() Synchronized Statement() Scope Statement() Synchronized Statement() value Expression() Throw Statement() Method Content Statement() Throw Statement() exception Expression() Try Statement() Scope Statement() Try Statement() finally Part Method Block() Try Statement() catch Part Catch Part() While Statement() Conditional Loop() Access Op() feature Expression() Apply Round Op() args Expression() Apply Square Op() args Expression() Array Constructor() values Expression() Assignment Op() Assignment Operation() Assignment Operation() value Expression() Binary Op() value2 Expression() Bitwise And Assignment Op() Assignment Operation() Bitwise And Op() Binary Op() Bitwise Complement Op() Unary Op() Bitwise Or Assignment Op() Assignment Operation() Bitwise Or Op() Binary Op() Bitwise Xor Assignment Op() Assignment Operation() Bitwise Xor Op() Binary Op() Boolean Literal() Literal(value) Cast Op() Classifier Op() Character Literal() Literal(value) Classifier Op() classifier Expression() Conditional And Op() Binary Op() Conditional Op() else Part Expression() Conditional Or Op() Binary Op() Divide Assignment Op() Assignment Operation() Divide Op() Division Op() Division Op() divisor Expression() Double Literal() Literal(value) Equal Op() Binary Op() Float Literal() Literal(value) Greater Or Equal Op() Binary Op() Greater Then Op() Binary Op() Identifier(value, escaped Value, quoted Value) Expression() Identifier(value, escaped Value, quoted Value) quoted Value String() Identity Op() value Expression() Integer Literal() Literal(value) Instance Of Op() Classifier Op() Left Shift Assignment Op() Assignment Operation() Left Shift Op() Shift Op() Less Or Equal Op() Binary Op() Less Then Op() Binary Op() Literal(value) Expression() Literal(value) value String() Logical Complement Op() Unary Op() Long Integer Literal() Literal(value) Minus Assignment Op() Assignment Operation() Minus Op() subtrahend Expression() Multiply Op() multipliers Expression() Multiply Assignment Op() Assignment Operation() New Op() args Expression() New Op() class Body Class Block() New Op() array Constructor Array Constructor() Not Equal Op() Binary Op() Null Reference() Literal(value) Plus Assignment Op() Assignment Operation() Plus Op() summands Expression() Postfix Decrement Op() Unary Op() Postfix Increment Op() Unary Op() Prefix Decrement Op() Unary Op() Prefix Increment Op() Unary Op() Primitive Type(name) Expression() Primitive Type(name) name String() Remainder Assignment Op() Assignment Operation() Remainder Op() Division Op() Return Statement() Method Content Statement() Return Statement() value Expression() Right Shift Assignment Op() Assignment Operation() Right Shift Op() Shift Op() Shift Op() distance Expression() String Literal() Literal(value) Super Reference(name) Expression() Super Reference(name) name String() This Reference(name) Expression() This Reference(name) name String() Unary Minus Op() Unary Op() Unary Op() value Expression() Unary Plus Op() Unary Op() Zero Extension Right Shift Assignment Op() Assignment Operation() Expression() EJ Base() Zero Extension Right Shift Op() Shift Op() Named Element() EJ Base() Named Element() name Identifier(value, escaped Value, quoted Value) Assert Statement() Method Content Statement() Assert Statement() message Expression() Range Expression() limit Expression() Switch Default Part Ref() EJ Element(start Line, end Line, start Column, end Column, start Offset, end Offset) Wildcard Type() extended Types Expression() Empty Statement() Method Content Statement() Attribute Definition() Classifier Statement()
Label: gpl, Text: Compilation Unit() Procedure(schema Name) Compilation Unit() Procedure(schema Name) Name Declaration(name) Procedure(schema Name) parameters Parameter Sequence() Procedure(schema Name) invoker Rights Procedure Invoker Rights Clause(right) Procedure(schema Name) content Procedure Content() Package(schema Name, end Name) Compilation Unit() Package(schema Name, end Name) Name Declaration(name) Package(schema Name, end Name) invoker Rights Procedure Invoker Rights Clause(right) Package(schema Name, end Name) items Item() Procedure Declaration(name) Item() Procedure Declaration(name) parameters Parameter Sequence() Procedure Definition() Item() Procedure Definition() Name Declaration(name) Procedure Definition() parameters Parameter Sequence() Procedure Definition() implementation Procedure Implementation() Function(schema Name, return Type) Compilation Unit() Function(schema Name, return Type) Name Declaration(name) Function(schema Name, return Type) parameters Parameter Sequence() Function(schema Name, return Type) function Clauses Function Clause() Function(schema Name, return Type) content Function Content() Parameter Sequence() parameters Parameter Declaration(behavior, data Type) Parameter Declaration(behavior, data Type) Name Declaration(name) Parameter Declaration(behavior, data Type) value Parameter Value() Parameter Value() expression Expression() Procedure Invoker Rights Clause(right) Function Invoker Rights Clause(right) Function Clause() DEFINER() Pragma() Item() Pragma Restrict References(restrictions) Pragma() Pragma Timestamp(timestamp) Pragma() Procedure Content() Procedure Implementation() Procedure Content() Procedure Implementation() declare Section Declare Section() Procedure Implementation() body Statement Body(end Name) Function Content() Function Implementation() Function Content() Function Implementation() declare Section Declare Section() Function Implementation() body Statement Body(end Name) Function Clause() Deterministic Clause() Function Clause() Result Cache Clause(data Sources) Function Clause() Pipelined Clause() Function Clause() Statement Body(end Name) statements Statement() Declare Section() items Item() Item() Item Declaration() Item() External Procedure Declaration() Procedure Content() Variable Declaration(is Constant, data Type, is Not Null) Item Declaration() Variable Declaration(is Constant, data Type, is Not Null) Name Declaration(name) Variable Declaration(is Constant, data Type, is Not Null) value Variable Value() Variable Value() expression Expression() Expression() Int Literal Expression(value) Expression() String Literal Expression(value) Expression() Boolean Literal Expression(value) Expression() Null Literal Expression() Expression() Variable Ref Expression() Expression() Variable Ref Expression() variable Variable Ref(is Host Ref) Statement() labels Label(name) Label(name) Assignment Statement() Statement() Assignment Statement() target Assignment Target() Assignment Statement() expression Expression() Assignment Target() Variable Assignment Target() Assignment Target() Variable Assignment Target() variable Variable Ref(is Host Ref) Block Statement() Statement() Block Statement() declare Section Declare Section() Block Statement() body Statement Body(end Name) Case Statement(end Label) Statement() Case Statement(end Label) expression Expression() Case Statement(end Label) when Branches Case Statement When Branch() Case Statement(end Label) else Branch Case Statement Else Branch() Case Statement When Branch() expression Expression() Case Statement When Branch() statements Statement() Case Statement Else Branch() statements Statement() Close Statement() Statement() Close Statement() cursor Variable Ref(is Host Ref) Continue Statement(label Name) Statement() Continue Statement(label Name) when Expression Expression() Exit Statement(label Name) Statement() Exit Statement(label Name) when Expression Expression() Fetch Statement() Statement() Fetch Statement() cursor Variable Ref(is Host Ref) Fetch Statement() into Clause Fetch Statement Into Clause() Fetch Statement Into Clause() target Variables Variable Ref(is Host Ref) Fetch Statement Single Into Clause() Fetch Statement Into Clause() Fetch Statement Bulk Into Clause() Fetch Statement Into Clause() Fetch Statement Bulk Into Clause() limit Expression Expression() Goto Statement() Statement() Goto Statement() label Name Label(name) If Statement() statements Statement() If Statement() expression Expression() If Statement() elsif Branches If Statement Elsif Branch() If Statement() else Branch If Statement Else Branch() If Statement Elsif Branch() expression Expression() If Statement Elsif Branch() statements Statement() If Statement Else Branch() statements Statement() Loop Statement(end Label) statements Statement() Basic Loop Statement() Loop Statement(end Label) While Loop Statement() Loop Statement(end Label) While Loop Statement() expression Expression() For Loop Statement() Loop Statement(end Label) For Loop Statement() index Variable Loop Variable Declaration() For Loop Statement() upper Bound Expression() Return Statement() Statement() Return Statement() expression Expression() Null Statement() Statement() Raise Statement(exception Name) Statement() Variable Ref(is Host Ref) name Qualified Name() Qualified Name() names Name() Name() declaration Name Declaration(name) Loop Variable Declaration() Name Declaration(name) Name Declaration(name)
Label: graph, Text: Node(label) Element() Node(label) outgoing Edge() Node(label) type Node Type() Edge() Element() Edge() source Node(label) Edge() type Edge Type() Element() graph Graph(name) Element Type(name) graph Graph(name) Graph(name) element Element() Graph(name) element Type Element Type(name) Edge Type() Element Type(name) Node Type() Element Type(name)
Label: enterprisearchitecture, Text: File() Adapter() Identifier(id) Property(key, value) Properties() properties Property(key, value) Nameable(name) Text Content(content) Documentable(documentation) Cloneable() implementation migration() Folder Container() folders Folder(type) Archimate Model(purpose, file, version) Folder Container() Archimate Model(purpose, file, version) Nameable(name) Archimate Model(purpose, file, version) Identifier(id) Archimate Model(purpose, file, version) Archimate Model Element() Archimate Model(purpose, file, version) Properties() Archimate Model(purpose, file, version) file File() Archimate Model Element() Adapter() Archimate Model Element() archimate Model Archimate Model(purpose, file, version) Folder(type) Archimate Model Element() Folder(type) Folder Container() Folder(type) Nameable(name) Folder(type) Identifier(id) Folder(type) Documentable(documentation) Folder(type) Properties() Archimate Element() Archimate Model Element() Archimate Element() Identifier(id) Archimate Element() Cloneable() Archimate Element() Nameable(name) Archimate Element() Documentable(documentation) Archimate Element() Properties() Junction Element() Archimate Element() Interface Element(interface Type) Archimate Element() Junction() Junction Element() And Junction() Junction Element() Or Junction() Junction Element() Relationship() target Archimate Element() Access Relationship(access Type) Relationship() Aggregation Relationship() Relationship() Assignment Relationship() Relationship() Association Relationship() Relationship() Composition Relationship() Relationship() Flow Relationship() Relationship() Realisation Relationship() Relationship() Specialisation Relationship() Relationship() Triggering Relationship() Relationship() Used By Relationship() Relationship() Influence Relationship() Relationship() Business Layer Element() Archimate Element() Business Activity() Business Layer Element() Business Actor() Business Layer Element() Business Collaboration() Business Layer Element() Contract() Business Layer Element() Business Event() Business Layer Element() Business Function() Business Layer Element() Business Interaction() Business Layer Element() Business Interface() Business Layer Element() Business Interface() Interface Element(interface Type) Meaning() Business Layer Element() Business Object() Business Layer Element() Business Process() Business Layer Element() Product() Business Layer Element() Representation() Business Layer Element() Business Role() Business Layer Element() Business Service() Business Layer Element() Value() Business Layer Element() Location() Business Layer Element() Application Layer Element() Archimate Element() Application Collaboration() Application Layer Element() Application Component() Application Layer Element() Application Function() Application Layer Element() Application Interaction() Application Layer Element() Application Interface() Application Layer Element() Application Interface() Interface Element(interface Type) Data Object() Application Layer Element() Application Service() Application Layer Element() Technology Layer Element() Archimate Element() Artifact() Technology Layer Element() Communication Path() Technology Layer Element() Network() Technology Layer Element() Infrastructure Interface() Technology Layer Element() Infrastructure Interface() Interface Element(interface Type) Infrastructure Service() Technology Layer Element() Infrastructure Function() Technology Layer Element() Node() Technology Layer Element() System Software() Technology Layer Element() Device() Technology Layer Element() Motivation Element() Archimate Element() Stakeholder() Motivation Element() Driver() Motivation Element() Assessment() Motivation Element() Goal() Motivation Element() Requirement() Motivation Element() Constraint() Motivation Element() Principle() Motivation Element() Implementation Migration Element() Archimate Element() Work Package() Implementation Migration Element() Deliverable() Implementation Migration Element() Plateau() Implementation Migration Element() Gap() Implementation Migration Element() Diagram Model Component() Identifier(id) Diagram Model Component() Cloneable() Diagram Model Component() Adapter() Diagram Model Component() Nameable(name) Diagram Model Component() diagram Model Diagram Model(connection Router Type) Diagram Model Container() Diagram Model Component() Diagram Model Container() children Diagram Model Object(fill Color) Diagram Model(connection Router Type) Archimate Model Element() Diagram Model(connection Router Type) Diagram Model Container() Diagram Model(connection Router Type) Documentable(documentation) Diagram Model(connection Router Type) Properties() Diagram Model Reference() Diagram Model Object(fill Color) Diagram Model Reference() referenced Model Diagram Model(connection Router Type) Diagram Model Object(fill Color) Diagram Model Component() Diagram Model Object(fill Color) Font Attribute(font, font Color, text Alignment, text Position) Diagram Model Object(fill Color) bounds Bounds(x, y, width, height) Diagram Model Object(fill Color) target Connections Diagram Model Connection(text, line Width, line Color, type) Diagram Model Group() Diagram Model Object(fill Color) Diagram Model Group() Diagram Model Container() Diagram Model Group() Documentable(documentation) Diagram Model Group() Properties() Diagram Model Note() Diagram Model Object(fill Color) Diagram Model Note() Text Content(content) Diagram Model Image() Diagram Model Object(fill Color) Diagram Model Image() Border Object(border Color) Diagram Model Image() Diagram Model Image Provider(image Path) Diagram Model Connection(text, line Width, line Color, type) Diagram Model Component() Diagram Model Connection(text, line Width, line Color, type) Font Attribute(font, font Color, text Alignment, text Position) Diagram Model Connection(text, line Width, line Color, type) Properties() Diagram Model Connection(text, line Width, line Color, type) Documentable(documentation) Diagram Model Connection(text, line Width, line Color, type) target Diagram Model Object(fill Color) Diagram Model Connection(text, line Width, line Color, type) bendpoints Diagram Model Bendpoint(start X, start Y, end X, end Y) Diagram Model Bendpoint(start X, start Y, end X, end Y) Cloneable() Font Attribute(font, font Color, text Alignment, text Position) Border Object(border Color) Diagram Model Image Provider(image Path) Bounds(x, y, width, height) Lockable(locked) Archimate Diagram Model(viewpoint) Diagram Model(connection Router Type) Diagram Model Archimate Object(type) Diagram Model Object(fill Color) Diagram Model Archimate Object(type) Diagram Model Container() Diagram Model Archimate Object(type) archimate Element Archimate Element() Diagram Model Archimate Connection() Diagram Model Connection(text, line Width, line Color, type) Diagram Model Archimate Connection() relationship Relationship() Sketch Model(background) Diagram Model(connection Router Type) Sketch Model Sticky() Diagram Model Object(fill Color) Sketch Model Sticky() Diagram Model Container() Sketch Model Sticky() Text Content(content) Sketch Model Sticky() Properties() Sketch Model Actor() Diagram Model Object(fill Color) Sketch Model Actor() Documentable(documentation) Sketch Model Actor() Properties()
Label: drones, Text: Named Element(name) Drone(on Board Obstacle Avoidance, min Voltage, max Voltage, max Power Consumption, giro, gps, accelerometer, magnetometer, barometer, communication Range, data Rate, radio Frequency) Named Element(name) Drone(on Board Obstacle Avoidance, min Voltage, max Voltage, max Power Consumption, giro, gps, accelerometer, magnetometer, barometer, communication Range, data Rate, radio Frequency) size Size(width, length, height, weight, propellers, propeller Size) Drone(on Board Obstacle Avoidance, min Voltage, max Voltage, max Power Consumption, giro, gps, accelerometer, magnetometer, barometer, communication Range, data Rate, radio Frequency) flight Perf Flight Performance(launch Type, min Speed, max Speed, min Acceleration, max Acceleration, max Altitude, max Turn Rate, min Turn Rate, max Climb Rate, max Descend Rate, position Hold, max Payload, max Flight Time, max Flight Time With Max Payload, min Operating Temperature, max Operating Temperature) Drone(on Board Obstacle Avoidance, min Voltage, max Voltage, max Power Consumption, giro, gps, accelerometer, magnetometer, barometer, communication Range, data Rate, radio Frequency) batteries Battery(cell Type, capacity, voltage, recharge Time) Drone(on Board Obstacle Avoidance, min Voltage, max Voltage, max Power Consumption, giro, gps, accelerometer, magnetometer, barometer, communication Range, data Rate, radio Frequency) processors Processor(architecture, frequency) Drone(on Board Obstacle Avoidance, min Voltage, max Voltage, max Power Consumption, giro, gps, accelerometer, magnetometer, barometer, communication Range, data Rate, radio Frequency) memory Memory(type, sub Type, size) Drone(on Board Obstacle Avoidance, min Voltage, max Voltage, max Power Consumption, giro, gps, accelerometer, magnetometer, barometer, communication Range, data Rate, radio Frequency) data Equipment Device() Drone(on Board Obstacle Avoidance, min Voltage, max Voltage, max Power Consumption, giro, gps, accelerometer, magnetometer, barometer, communication Range, data Rate, radio Frequency) ros Driver ROS Driver(version, url) Processor(architecture, frequency) Named Element(name) Memory(type, sub Type, size) Named Element(name) STORAGE() Size(width, length, height, weight, propellers, propeller Size) Flight Performance(launch Type, min Speed, max Speed, min Acceleration, max Acceleration, max Altitude, max Turn Rate, min Turn Rate, max Climb Rate, max Descend Rate, position Hold, max Payload, max Flight Time, max Flight Time With Max Payload, min Operating Temperature, max Operating Temperature) OTHER() Battery(cell Type, capacity, voltage, recharge Time) Named Element(name) Device() Named Element(name) Device() supported Actions Action() Device() properties Property(value) Action() Named Element(name) Action() parameters Parameter(key, description) Parameter(key, description) Property(value) Named Element(name) ROS Driver(version, url) Named Element(name)
Label: html, Text: A(class, coords, href, lang, name, shape, style, type) A Content(mixed, group) A(class, coords, href, lang, name, shape, style, type) coords Coords() A(class, coords, href, lang, name, shape, style, type) href URI() A(class, coords, href, lang, name, shape, style, type) type Content Type() Abbr(class, lang, style) Inline(mixed, inline) A Content(mixed, group) br Br(class, style) A Content(mixed, group) span Span(class, lang, style) A Content(mixed, group) object Object(mixed, group, hl7Id, name) A Content(mixed, group) img Img(alt, class, height, hl7Id, image Type, lang, src, style, width) A Content(mixed, group) tt Tt(class, lang, style) A Content(mixed, group) i I(class, lang, style) A Content(mixed, group) b B(class, lang, style) A Content(mixed, group) big Big(class, lang, style) A Content(mixed, group) small Small(class, lang, style) A Content(mixed, group) em Em(class, lang, style) A Content(mixed, group) strong Strong(class, lang, style) A Content(mixed, group) dfn Dfn(class, lang, style) A Content(mixed, group) code Code(class, lang, style) A Content(mixed, group) q Q(cite1, class, lang, style) A Content(mixed, group) samp Samp(class, lang, style) A Content(mixed, group) kbd Kbd(class, lang, style) A Content(mixed, group) var Var(class, lang, style) A Content(mixed, group) cite Cite(class, lang, style) A Content(mixed, group) abbr Abbr(class, lang, style) A Content(mixed, group) acronym Acronym(class, lang, style) A Content(mixed, group) sub Sub(class, lang, style) A Content(mixed, group) sup Sup(class, lang, style) Acronym(class, lang, style) Inline(mixed, inline) char() Align Type Object() B(class, lang, style) Inline(mixed, inline) Big(class, lang, style) Inline(mixed, inline) Block(mixed, block) p P(class, lang, style) Block(mixed, block) div Div(class, hl7Id, lang, style, title) Block(mixed, block) ul Ul(li, class, lang, style) Block(mixed, block) ol Ol(li, class, lang, style) Block(mixed, block) dl Dl(group, class, lang, style) Block(mixed, block) pre Pre(class, lang, space, style) Block(mixed, block) hr Hr(class, lang, style) Block(mixed, block) blockquote Blockquote(cite, class, lang, style) Block(mixed, block) table Table(border, cellpadding, cellspacing, class, frame, hl7Id, lang, rules, style, width) Blockquote(cite, class, lang, style) Block(mixed, block) Blockquote(cite, class, lang, style) cite URI() Br(class, style) Caption(class, lang, style) Inline(mixed, inline) Character() Cite(class, lang, style) Inline(mixed, inline) Code(class, lang, style) Inline(mixed, inline) Col(align, char, charoff, class, lang, span, style, valign, width) char Character() Col(align, char, charoff, class, lang, span, style, valign, width) charoff Length() Col(align, char, charoff, class, lang, span, style, valign, width) span Number() Col(align, char, charoff, class, lang, span, style, valign, width) width Multi Length() Colgroup(align, char, charoff, class, lang, span, style, valign, width) col Col(align, char, charoff, class, lang, span, style, valign, width) Colgroup(align, char, charoff, class, lang, span, style, valign, width) char Character() Colgroup(align, char, charoff, class, lang, span, style, valign, width) charoff Length() Colgroup(align, char, charoff, class, lang, span, style, valign, width) span Number() Colgroup(align, char, charoff, class, lang, span, style, valign, width) width Multi Length() Content Type() Coords() Dd(class, lang, style) Flow(mixed, group) Del() Flow(mixed, group) Dfn(class, lang, style) Inline(mixed, inline) Div(class, hl7Id, lang, style, title) Flow(mixed, group) Div(class, hl7Id, lang, style, title) title Text() Dl(group, class, lang, style) dt Dt(class, lang, style) Dl(group, class, lang, style) dd Dd(class, lang, style) Dt(class, lang, style) Inline(mixed, inline) Em(class, lang, style) Inline(mixed, inline) Flow(mixed, group) p P(class, lang, style) Flow(mixed, group) div Div(class, hl7Id, lang, style, title) Flow(mixed, group) ul Ul(li, class, lang, style) Flow(mixed, group) ol Ol(li, class, lang, style) Flow(mixed, group) dl Dl(group, class, lang, style) Flow(mixed, group) pre Pre(class, lang, space, style) Flow(mixed, group) hr Hr(class, lang, style) Flow(mixed, group) blockquote Blockquote(cite, class, lang, style) Flow(mixed, group) table Table(border, cellpadding, cellspacing, class, frame, hl7Id, lang, rules, style, width) Flow(mixed, group) a A(class, coords, href, lang, name, shape, style, type) Flow(mixed, group) br Br(class, style) Flow(mixed, group) span Span(class, lang, style) Flow(mixed, group) object Object(mixed, group, hl7Id, name) Flow(mixed, group) img Img(alt, class, height, hl7Id, image Type, lang, src, style, width) Flow(mixed, group) tt Tt(class, lang, style) Flow(mixed, group) i I(class, lang, style) Flow(mixed, group) b B(class, lang, style) Flow(mixed, group) big Big(class, lang, style) Flow(mixed, group) small Small(class, lang, style) Flow(mixed, group) em Em(class, lang, style) Flow(mixed, group) strong Strong(class, lang, style) Flow(mixed, group) dfn Dfn(class, lang, style) Flow(mixed, group) code Code(class, lang, style) Flow(mixed, group) q Q(cite1, class, lang, style) Flow(mixed, group) samp Samp(class, lang, style) Flow(mixed, group) kbd Kbd(class, lang, style) Flow(mixed, group) var Var(class, lang, style) Flow(mixed, group) cite Cite(class, lang, style) Flow(mixed, group) abbr Abbr(class, lang, style) Flow(mixed, group) acronym Acronym(class, lang, style) Flow(mixed, group) sub Sub(class, lang, style) Flow(mixed, group) sup Sup(class, lang, style) Hr(class, lang, style) I(class, lang, style) Inline(mixed, inline) image Gif() Image Kind Object() Img(alt, class, height, hl7Id, image Type, lang, src, style, width) alt Text() Img(alt, class, height, hl7Id, image Type, lang, src, style, width) width Length() Img(alt, class, height, hl7Id, image Type, lang, src, style, width) src URI() Inline(mixed, inline) a A(class, coords, href, lang, name, shape, style, type) Inline(mixed, inline) br Br(class, style) Inline(mixed, inline) span Span(class, lang, style) Inline(mixed, inline) object Object(mixed, group, hl7Id, name) Inline(mixed, inline) img Img(alt, class, height, hl7Id, image Type, lang, src, style, width) Inline(mixed, inline) tt Tt(class, lang, style) Inline(mixed, inline) i I(class, lang, style) Inline(mixed, inline) b B(class, lang, style) Inline(mixed, inline) big Big(class, lang, style) Inline(mixed, inline) small Small(class, lang, style) Inline(mixed, inline) em Em(class, lang, style) Inline(mixed, inline) strong Strong(class, lang, style) Inline(mixed, inline) dfn Dfn(class, lang, style) Inline(mixed, inline) code Code(class, lang, style) Inline(mixed, inline) q Q(cite1, class, lang, style) Inline(mixed, inline) samp Samp(class, lang, style) Inline(mixed, inline) kbd Kbd(class, lang, style) Inline(mixed, inline) var Var(class, lang, style) Inline(mixed, inline) cite Cite(class, lang, style) Inline(mixed, inline) abbr Abbr(class, lang, style) Inline(mixed, inline) acronym Acronym(class, lang, style) Inline(mixed, inline) sub Sub(class, lang, style) Inline(mixed, inline) sup Sup(class, lang, style) Ins() Flow(mixed, group) Kbd(class, lang, style) Inline(mixed, inline) Length() Li(class, lang, style) Flow(mixed, group) video Mpeg() Media Type Object() changed() Mif Class Type Object() Multi Length() Number() Object(mixed, group, hl7Id, name) param Param(name, value) Object(mixed, group, hl7Id, name) p P(class, lang, style) Object(mixed, group, hl7Id, name) div Div(class, hl7Id, lang, style, title) Object(mixed, group, hl7Id, name) ul Ul(li, class, lang, style) Object(mixed, group, hl7Id, name) ol Ol(li, class, lang, style) Object(mixed, group, hl7Id, name) dl Dl(group, class, lang, style) Object(mixed, group, hl7Id, name) pre Pre(class, lang, space, style) Object(mixed, group, hl7Id, name) hr Hr(class, lang, style) Object(mixed, group, hl7Id, name) blockquote Blockquote(cite, class, lang, style) Object(mixed, group, hl7Id, name) table Table(border, cellpadding, cellspacing, class, frame, hl7Id, lang, rules, style, width) Object(mixed, group, hl7Id, name) a A(class, coords, href, lang, name, shape, style, type) Object(mixed, group, hl7Id, name) br Br(class, style) Object(mixed, group, hl7Id, name) span Span(class, lang, style) Object(mixed, group, hl7Id, name) img Img(alt, class, height, hl7Id, image Type, lang, src, style, width) Object(mixed, group, hl7Id, name) tt Tt(class, lang, style) Object(mixed, group, hl7Id, name) i I(class, lang, style) Object(mixed, group, hl7Id, name) b B(class, lang, style) Object(mixed, group, hl7Id, name) big Big(class, lang, style) Object(mixed, group, hl7Id, name) small Small(class, lang, style) Object(mixed, group, hl7Id, name) em Em(class, lang, style) Object(mixed, group, hl7Id, name) strong Strong(class, lang, style) Object(mixed, group, hl7Id, name) dfn Dfn(class, lang, style) Object(mixed, group, hl7Id, name) code Code(class, lang, style) Object(mixed, group, hl7Id, name) q Q(cite1, class, lang, style) Object(mixed, group, hl7Id, name) samp Samp(class, lang, style) Object(mixed, group, hl7Id, name) kbd Kbd(class, lang, style) Object(mixed, group, hl7Id, name) var Var(class, lang, style) Object(mixed, group, hl7Id, name) cite Cite(class, lang, style) Object(mixed, group, hl7Id, name) abbr Abbr(class, lang, style) Object(mixed, group, hl7Id, name) acronym Acronym(class, lang, style) Object(mixed, group, hl7Id, name) sub Sub(class, lang, style) Object(mixed, group, hl7Id, name) sup Sup(class, lang, style) test Case Ref() Object Name Object() Ol(li, class, lang, style) li1 Li(class, lang, style) P(class, lang, style) Inline(mixed, inline) Param(name, value) value Param Value() code() Param Name Object() Param Value() Pixels() Pre(class, lang, space, style) Pre Content(mixed, group) Pre Content(mixed, group) a A(class, coords, href, lang, name, shape, style, type) Pre Content(mixed, group) tt Tt(class, lang, style) Pre Content(mixed, group) i I(class, lang, style) Pre Content(mixed, group) b B(class, lang, style) Pre Content(mixed, group) big Big(class, lang, style) Pre Content(mixed, group) small Small(class, lang, style) Pre Content(mixed, group) em Em(class, lang, style) Pre Content(mixed, group) strong Strong(class, lang, style) Pre Content(mixed, group) dfn Dfn(class, lang, style) Pre Content(mixed, group) code Code(class, lang, style) Pre Content(mixed, group) q Q(cite1, class, lang, style) Pre Content(mixed, group) samp Samp(class, lang, style) Pre Content(mixed, group) kbd Kbd(class, lang, style) Pre Content(mixed, group) var Var(class, lang, style) Pre Content(mixed, group) cite Cite(class, lang, style) Pre Content(mixed, group) abbr Abbr(class, lang, style) Pre Content(mixed, group) acronym Acronym(class, lang, style) Pre Content(mixed, group) sub Sub(class, lang, style) Pre Content(mixed, group) sup Sup(class, lang, style) Pre Content(mixed, group) br Br(class, style) Pre Content(mixed, group) span Span(class, lang, style) Q(cite1, class, lang, style) Inline(mixed, inline) Q(cite1, class, lang, style) cite1 URI() Samp(class, lang, style) Inline(mixed, inline) default() Shape Object() Small(class, lang, style) Inline(mixed, inline) Span(class, lang, style) Inline(mixed, inline) Strong(class, lang, style) Inline(mixed, inline) Background Yellow() Style Sheet Object() Sub(class, lang, style) Inline(mixed, inline) Sup(class, lang, style) Inline(mixed, inline) Table(border, cellpadding, cellspacing, class, frame, hl7Id, lang, rules, style, width) caption Caption(class, lang, style) Table(border, cellpadding, cellspacing, class, frame, hl7Id, lang, rules, style, width) col Col(align, char, charoff, class, lang, span, style, valign, width) Table(border, cellpadding, cellspacing, class, frame, hl7Id, lang, rules, style, width) colgroup Colgroup(align, char, charoff, class, lang, span, style, valign, width) Table(border, cellpadding, cellspacing, class, frame, hl7Id, lang, rules, style, width) thead Thead(align, char, charoff, class, lang, style, valign) Table(border, cellpadding, cellspacing, class, frame, hl7Id, lang, rules, style, width) tfoot Tfoot(align, char, charoff, class, lang, style, valign) Table(border, cellpadding, cellspacing, class, frame, hl7Id, lang, rules, style, width) tbody Tbody(align, char, charoff, class, lang, style, valign) Table(border, cellpadding, cellspacing, class, frame, hl7Id, lang, rules, style, width) tr Tr(group, align, char, charoff, class, lang, style, valign) Table(border, cellpadding, cellspacing, class, frame, hl7Id, lang, rules, style, width) border Pixels() Table(border, cellpadding, cellspacing, class, frame, hl7Id, lang, rules, style, width) width Length() Tbody(align, char, charoff, class, lang, style, valign) tr Tr(group, align, char, charoff, class, lang, style, valign) Tbody(align, char, charoff, class, lang, style, valign) char Character() Tbody(align, char, charoff, class, lang, style, valign) charoff Length() Td(align, char, charoff, class, colspan, lang, rowspan, style, valign) Flow(mixed, group) Td(align, char, charoff, class, colspan, lang, rowspan, style, valign) char Character() Td(align, char, charoff, class, colspan, lang, rowspan, style, valign) charoff Length() Td(align, char, charoff, class, colspan, lang, rowspan, style, valign) rowspan Number() Text() Tfoot(align, char, charoff, class, lang, style, valign) tr Tr(group, align, char, charoff, class, lang, style, valign) Tfoot(align, char, charoff, class, lang, style, valign) char Character() Tfoot(align, char, charoff, class, lang, style, valign) charoff Length() border() T Frame Object() Th(align, char, charoff, class, colspan, lang, rowspan, style, valign) Flow(mixed, group) Th(align, char, charoff, class, colspan, lang, rowspan, style, valign) char Character() Th(align, char, charoff, class, colspan, lang, rowspan, style, valign) charoff Length() Th(align, char, charoff, class, colspan, lang, rowspan, style, valign) rowspan Number() Thead(align, char, charoff, class, lang, style, valign) tr Tr(group, align, char, charoff, class, lang, style, valign) Thead(align, char, charoff, class, lang, style, valign) char Character() Thead(align, char, charoff, class, lang, style, valign) charoff Length() Tr(group, align, char, charoff, class, lang, style, valign) th Th(align, char, charoff, class, colspan, lang, rowspan, style, valign) Tr(group, align, char, charoff, class, lang, style, valign) td Td(align, char, charoff, class, colspan, lang, rowspan, style, valign) Tr(group, align, char, charoff, class, lang, style, valign) char Character() Tr(group, align, char, charoff, class, lang, style, valign) charoff Length() all() T Rules Object() Tt(class, lang, style) Inline(mixed, inline) Ul(li, class, lang, style) li1 Li(class, lang, style) URI() baseline() Valign Type Object() Var(class, lang, style) Inline(mixed, inline)
Label: simple-pl, Text: Unit(name) imports Import(name, alias) Unit(name) services Service(name) Unit(name) xtended Classes Behaviored Class(name) Import(name, alias) Service(name) Behaviored Class(name) attributes Attribute(modifier, bounds, name) Behaviored Class(name) operations Operation(name) Extended Class(extends) Behaviored Class(name) Runtime Class() Behaviored Class(name) Operation(name) tag Tag(name) Operation(name) type r Type(name) Operation(name) params Variable(name) Operation(name) body Block() Tag(name) Variable(name) type r Type(name) Attribute(modifier, bounds, name) opposite r Opposite(name) Attribute(modifier, bounds, name) type r Type(name) Attribute(modifier, bounds, name) exp Expression Stmt() r Opposite(name) Statement() Var Decl(name) Statement() Var Decl(name) type r Type(name) Var Decl(name) exp Expression Stmt() Assign() Statement() Assign() target Expression() Assign() exp Expression Stmt() Insert() Statement() Insert() target Expression() Insert() exp Expression Stmt() Remove() Statement() Remove() target Expression() Remove() exp Expression Stmt() For Each(iterator) Statement() For Each(iterator) collection Collection(min, max) For Each(iterator) block Block() Collection(min, max) exp Expression Stmt() Block() statements Statement() If() Statement() If() cond Expression Stmt() If() else Block() While() Statement() While() cond Expression Stmt() While() block Block() r Switch(param Name) other Expression Stmt() r Switch(param Name) cases r Case() r Case() guard r Type(name) r Case() value Expression Stmt() Expression Stmt() Statement() Expression() binding(name) type type Literal() binding(name) exp Expression() literal() type Literal() literal() type Literal() r Type(name) classifier Type Rule() type Literal() r Type(name) Call(name) params Expression() Feature(feature) target Expression() Apply(name, var Name) params Expression() Apply(name, var Name) var Type type Literal() Mult() right Expression() Add() right Expression() Comp(op) right Expression() And() right Expression() Or() right Expression() Xor() right Expression() Implie() right Expression() Not() exp Expression() Min() exp Expression() Var Ref(ID) Expression() Lit() Expression() Lit() literal literal() Conditional() else Expression() Let() exp Expression() Let() bindings binding(name) String(value) literal() Int(value) literal() Real(value) literal() True() literal() False() literal() Null() literal() Sequence() literal() Sequence() params Expression() Ordered Set() literal() Ordered Set() params Expression() Enum() literal() String Type() type Literal() Int Type() type Literal() Real Type() type Literal() Bool Type() type Literal() Seq Type() type type Literal() Set Type() type type Literal() Classifier Set Type() type Literal() Classifier Set Type() types classifier Type Rule() Classifier Type(package Name, class Name) classifier Type Rule()
Label: statemachine, Text: State Machine() init State Init State() State Machine() states State(name) State Machine() transitions Transition() Transition() source Output State() Transition() target Input State() State(name) Input State() State(name) Input State() ingoing Transitions Transition() Output State() State(name) Output State() outgoing Transitions Transition() Init State() Output State() Standard State() Input State() Standard State() Output State() Terminal State() Input State()
Label: forms, Text: Form(caption) groups Group(name) Item(text, explanation) item Type Item Type() Item(text, explanation) dependent Of Option(id, text) Item Type() Free Text() Item Type() Choice(multiple) Item Type() Choice(multiple) options Option(id, text) Option(id, text) Date() Item Type() Number() Item Type() Group(name) items Item(text, explanation) Decision() Item Type() Decision() options Option(id, text)
Label: mvc, Text: Exam() Observable() Exam() exam Items Exam Item(question) Exam() controllers Controller(controller) Exam() views View(font Name, font Color, controller) Exam Item(question) Observable() Open() Exam Item(question) Multiple Choice() Exam Item(question) Observable() observers Observer() Observer() Controller(controller) Observer() View(font Name, font Color, controller) Observer() Exam Controller() Controller(controller) Exam Item Controller() Controller(controller) Multiple Choice Controller() Exam Item Controller() Open Controller() Exam Item Controller() Exam View() View(font Name, font Color, controller) Exam Item View() View(font Name, font Color, controller) Open View() Exam Item View() Multiple Choice View() Exam Item View()
Label: graph, Text: Located Element(location, comments Before, comments After) comments After String() Root() Located Element(location, comments Before, comments After) Root() keys Key(for, attr Name, type, def Value) Root() graphs Graph(edge Default) Element(id) Located Element(location, comments Before, comments After) Element(id) id String() Element(id) datas Data(key, value) Element(id) graph Graph(edge Default) Key(for, attr Name, type, def Value) Element(id) Key(for, attr Name, type, def Value) def Value String() Graph(edge Default) contents Element(id) Edge(directed) Element(id) Edge(directed) target Node() Edge(directed) targetport Port(name) Edge(directed) directed Boolean() Hyper Edge() Element(id) Hyper Edge() endpoints End Point() Node() Element(id) Node() subgraph Graph(edge Default) Node() ports Port(name) Node() target Of Edge(directed) Port(name) Located Element(location, comments Before, comments After) Port(name) name String() End Point() Located Element(location, comments Before, comments After) End Point() node Node() End Point() port Port(name) Data(key, value) Located Element(location, comments Before, comments After) Data(key, value) value String() graph() boolean() undirected() Boolean() Integer() double() String()
Label: class-diagram, Text: Named Elt(name) name String() Classifier() Named Elt(name) Data Type() Classifier() Class(is Abstract) Classifier() Class(is Abstract) attr Attribute(multi Valued) Class(is Abstract) is Abstract Boolean() Attribute(multi Valued) Named Elt(name) Attribute(multi Valued) multi Valued Boolean() Attribute(multi Valued) type Classifier() Attribute(multi Valued) owner Class(is Abstract) Package() classifiers Classifier() Boolean() Integer() String()
Label: publication, Text: Publication Process(min Time, max Time) Named(name) Publication Process(min Time, max Time) phases Phases(name) Researcher(name, for Name) writes Write(time Spent) Researcher(name, for Name) reviews Review(date) Researcher(name, for Name) res papers Paper() Researcher(name, for Name) skills Skill(description) Researcher(name, for Name) position Position(description) Paper() Named(name) Paper() paragraphs Paragraph(content) Paper() progress Progress(percent) Paper() authors Researcher(name, for Name) Paper() keywords Keyword(description) Paragraph(content) Counted(id) Paragraph(content) Named(name) Paragraph(content) reviews Review Note(content) Review Note(content) Named(name) Progress(percent) Labelled(lname) Progress(percent) process Publication Process(min Time, max Time) Progress(percent) paper Paper() Write(time Spent) Labelled(lname) Write(time Spent) paragraph Paragraph(content) Review(date) Labelled(lname) Review(date) review Note Review Note(content) Publication Structure() Named(name) Publication Structure() researchers Researcher(name, for Name) Publication Structure() papers Paper() Publication System() Named(name) Publication System() process View Publication Process(min Time, max Time) Publication System() structural View Publication Structure() Publication System() positions Position(description) Publication System() all Keywords Keyword(description) Named(name) Counted(id) Labelled(lname) Skill(description) Position(description) Named(name) Phases(name) Keyword(description) Named(name)
Label: requirements, Text: Resource Aware(resource Type, resource Uri, resource Name) classpath() Positionable(positioner) App Manifest(title, summary, description, domain, domain Prd, domain Dev, domain Stg, general Email, general Email Prd, general Email Dev, general Email Stg, organization Name, organization Address, organization Phone Numbers, default Time Zone Id, default Time Zone, default Currency Code, default Currency, default Language Tag, default Country Code, default Category U Name, email Logo Uri Template, letter Salutation, letter Closing, footnote, www Used, head Note, head Title, default Style, default Variation, kurs Dollar Paypal, kurs Dollar Dpex, reminder Schedule, reminder Period Str, reminder Period, reminder Schedule Str, support Email, shipment Logo Uri Template) Positionable(positioner) App Manifest(title, summary, description, domain, domain Prd, domain Dev, domain Stg, general Email, general Email Prd, general Email Dev, general Email Stg, organization Name, organization Address, organization Phone Numbers, default Time Zone Id, default Time Zone, default Currency Code, default Currency, default Language Tag, default Country Code, default Category U Name, email Logo Uri Template, letter Salutation, letter Closing, footnote, www Used, head Note, head Title, default Style, default Variation, kurs Dollar Paypal, kurs Dollar Dpex, reminder Schedule, reminder Period Str, reminder Period, reminder Schedule Str, support Email, shipment Logo Uri Template) Resource Aware(resource Type, resource Uri, resource Name) App Manifest(title, summary, description, domain, domain Prd, domain Dev, domain Stg, general Email, general Email Prd, general Email Dev, general Email Stg, organization Name, organization Address, organization Phone Numbers, default Time Zone Id, default Time Zone, default Currency Code, default Currency, default Language Tag, default Country Code, default Category U Name, email Logo Uri Template, letter Salutation, letter Closing, footnote, www Used, head Note, head Title, default Style, default Variation, kurs Dollar Paypal, kurs Dollar Dpex, reminder Schedule, reminder Period Str, reminder Period, reminder Schedule Str, support Email, shipment Logo Uri Template) Bundle Aware(bundle) App Manifest(title, summary, description, domain, domain Prd, domain Dev, domain Stg, general Email, general Email Prd, general Email Dev, general Email Stg, organization Name, organization Address, organization Phone Numbers, default Time Zone Id, default Time Zone, default Currency Code, default Currency, default Language Tag, default Country Code, default Category U Name, email Logo Uri Template, letter Salutation, letter Closing, footnote, www Used, head Note, head Title, default Style, default Variation, kurs Dollar Paypal, kurs Dollar Dpex, reminder Schedule, reminder Period Str, reminder Period, reminder Schedule Str, support Email, shipment Logo Uri Template) Expandable(expansion State) App Manifest(title, summary, description, domain, domain Prd, domain Dev, domain Stg, general Email, general Email Prd, general Email Dev, general Email Stg, organization Name, organization Address, organization Phone Numbers, default Time Zone Id, default Time Zone, default Currency Code, default Currency, default Language Tag, default Country Code, default Category U Name, email Logo Uri Template, letter Salutation, letter Closing, footnote, www Used, head Note, head Title, default Style, default Variation, kurs Dollar Paypal, kurs Dollar Dpex, reminder Schedule, reminder Period Str, reminder Period, reminder Schedule Str, support Email, shipment Logo Uri Template) default Time Zone Date Time Zone() App Manifest(title, summary, description, domain, domain Prd, domain Dev, domain Stg, general Email, general Email Prd, general Email Dev, general Email Stg, organization Name, organization Address, organization Phone Numbers, default Time Zone Id, default Time Zone, default Currency Code, default Currency, default Language Tag, default Country Code, default Category U Name, email Logo Uri Template, letter Salutation, letter Closing, footnote, www Used, head Note, head Title, default Style, default Variation, kurs Dollar Paypal, kurs Dollar Dpex, reminder Schedule, reminder Period Str, reminder Period, reminder Schedule Str, support Email, shipment Logo Uri Template) default Currency Currency Unit() App Manifest(title, summary, description, domain, domain Prd, domain Dev, domain Stg, general Email, general Email Prd, general Email Dev, general Email Stg, organization Name, organization Address, organization Phone Numbers, default Time Zone Id, default Time Zone, default Currency Code, default Currency, default Language Tag, default Country Code, default Category U Name, email Logo Uri Template, letter Salutation, letter Closing, footnote, www Used, head Note, head Title, default Style, default Variation, kurs Dollar Paypal, kurs Dollar Dpex, reminder Schedule, reminder Period Str, reminder Period, reminder Schedule Str, support Email, shipment Logo Uri Template) reminder Schedule Local Time() App Manifest(title, summary, description, domain, domain Prd, domain Dev, domain Stg, general Email, general Email Prd, general Email Dev, general Email Stg, organization Name, organization Address, organization Phone Numbers, default Time Zone Id, default Time Zone, default Currency Code, default Currency, default Language Tag, default Country Code, default Category U Name, email Logo Uri Template, letter Salutation, letter Closing, footnote, www Used, head Note, head Title, default Style, default Variation, kurs Dollar Paypal, kurs Dollar Dpex, reminder Schedule, reminder Period Str, reminder Period, reminder Schedule Str, support Email, shipment Logo Uri Template) reminder Period Period() Person Info(gender, email, mobile Number) Identifiable(id) Person Info(gender, email, mobile Number) Photo Id Container(photo Id) Person Info(gender, email, mobile Number) Sluggable(slug) Person Info(gender, email, mobile Number) Name Container(name) Person Info(gender, email, mobile Number) Person Like() female() Date Time() Currency Unit() Quantity() Unit() Timestamped(creation Time, modification Time) modification Time Date Time() List() Map() Set() Collection() Multimap() Navigable Map() Queue() Multiset() Serializable() Identifiable(id) Sluggable(slug) Nameable() Imageable() Photo Id Container(photo Id) Imageable() Name Container(name) Nameable() Informer() Describable(description) Bundle() Bundle Aware(bundle) bundle Bundle() Java Class Linked(java Class Name, java Class, java Class Status) E Class Linked(e Class Status, e Package Ns Prefix, e Class Name, e Package Name) resolved() Schema Versionable() E Factory Linked(e Factory) e Factory E Factory() Ns Prefixable(ns Prefix) Web Address(base Uri, base Path, api Path, images Uri, skin Uri, js Uri, secure Base Uri, secure Images Uri, secure Skin Uri, secure Js Uri) Positionable(positioner) Web Address(base Uri, base Path, api Path, images Uri, skin Uri, js Uri, secure Base Uri, secure Images Uri, secure Skin Uri, secure Js Uri) Bundle Aware(bundle) Web Address(base Uri, base Path, api Path, images Uri, skin Uri, js Uri, secure Base Uri, secure Images Uri, secure Skin Uri, secure Js Uri) Resource Aware(resource Type, resource Uri, resource Name) Web Address(base Uri, base Path, api Path, images Uri, skin Uri, js Uri, secure Base Uri, secure Images Uri, secure Skin Uri, secure Js Uri) Expandable(expansion State) Added() Model Notification() Attribute Set(principals) Attribute Unset() Removed() Object Notification(object) Attribute Notification(object, old Value, new Value) Added Many() Removed Many() Objects Notification(objects) E Object Linked() Parentable() Category Like(slug Path, color, image Id, level, category Count) Identifiable(id) Category Like(slug Path, color, image Id, level, category Count) Ns Prefixable(ns Prefix) Category Like(slug Path, color, image Id, level, category Count) Name Container(name) Category Like(slug Path, color, image Id, level, category Count) Positionable(positioner) Category Like(slug Path, color, image Id, level, category Count) Sluggable(slug) Category Like(slug Path, color, image Id, level, category Count) Imageable() Category Info(primary Uri, google Formal Id) Money() Measurable() Date Time Zone() Locale() File() Progress Monitor(canceled, task Name) skipped() Shell Progress Monitor() Progress Monitor(canceled, task Name) Event Bus Progress Monitor(event Bus, tracking Id) Progress Monitor(canceled, task Name) Event Bus Progress Monitor(event Bus, tracking Id) event Bus Event Bus() Progress Monitor Wrapper() delegate Progress Monitor(canceled, task Name) unregister() unpublished() archived() Colorable(color) Translatable(translation State, original Language, language) translations Translation Entry(key) translated() Translation(language) messages Translation Message Entry(key, value) Translation Message Entry(key, value) Translation Manager() Translation Entry(key) value Translation(language) Style Configuration() Expandable(expansion State) expanded() Listenable Future() Listening Executor Service() Class Loader() URL() Event Bus() Person Like() Person(schema Version, first Name, last Name, password, account Status, birth Year, birth Month, birth Day, birth Date, gender, language, currency Code, currency, google Plus Id, google Username, virtual Mail, nickname, customer Role, member Role, manager Role, time Zone Id, time Zone, referrer Id, referrer Type, signup Source, signup Source Type, ip Address, last Ip Address, last Login Time, validation Time, activation Time, verification Time, newsletter Subscription Enabled, newsletter Subscription Time, social Sharing Enabled, publication Status, archival Status, folder, religion, password Reset Code, password Reset Expiry Time, client Access Token, security Role Ids, debit Balance, debit Currency, type, verify Code, zendesk User Id, customer Role Edit Time, last Time Synchronize With Zendesk, zendesk Integration) mobile Numbers Phone Number(phone Number, primary, validation Time) Person(schema Version, first Name, last Name, password, account Status, birth Year, birth Month, birth Day, birth Date, gender, language, currency Code, currency, google Plus Id, google Username, virtual Mail, nickname, customer Role, member Role, manager Role, time Zone Id, time Zone, referrer Id, referrer Type, signup Source, signup Source Type, ip Address, last Ip Address, last Login Time, validation Time, activation Time, verification Time, newsletter Subscription Enabled, newsletter Subscription Time, social Sharing Enabled, publication Status, archival Status, folder, religion, password Reset Code, password Reset Expiry Time, client Access Token, security Role Ids, debit Balance, debit Currency, type, verify Code, zendesk User Id, customer Role Edit Time, last Time Synchronize With Zendesk, zendesk Integration) emails Email(email, primary, validation Time) Person(schema Version, first Name, last Name, password, account Status, birth Year, birth Month, birth Day, birth Date, gender, language, currency Code, currency, google Plus Id, google Username, virtual Mail, nickname, customer Role, member Role, manager Role, time Zone Id, time Zone, referrer Id, referrer Type, signup Source, signup Source Type, ip Address, last Ip Address, last Login Time, validation Time, activation Time, verification Time, newsletter Subscription Enabled, newsletter Subscription Time, social Sharing Enabled, publication Status, archival Status, folder, religion, password Reset Code, password Reset Expiry Time, client Access Token, security Role Ids, debit Balance, debit Currency, type, verify Code, zendesk User Id, customer Role Edit Time, last Time Synchronize With Zendesk, zendesk Integration) addresses Postal Address(schema Version, organization, street, city, postal Code, province, country, country Code, primary Mobile, mobiles, primary Phone, phones, primary Home Phone, home Phones, primary Work Phone, work Phones, primary Email, emails, description, primary, primary Billing, primary Shipping, validation Time, district, jne Area Code) Person(schema Version, first Name, last Name, password, account Status, birth Year, birth Month, birth Day, birth Date, gender, language, currency Code, currency, google Plus Id, google Username, virtual Mail, nickname, customer Role, member Role, manager Role, time Zone Id, time Zone, referrer Id, referrer Type, signup Source, signup Source Type, ip Address, last Ip Address, last Login Time, validation Time, activation Time, verification Time, newsletter Subscription Enabled, newsletter Subscription Time, social Sharing Enabled, publication Status, archival Status, folder, religion, password Reset Code, password Reset Expiry Time, client Access Token, security Role Ids, debit Balance, debit Currency, type, verify Code, zendesk User Id, customer Role Edit Time, last Time Synchronize With Zendesk, zendesk Integration) birth Date Local Date() Person(schema Version, first Name, last Name, password, account Status, birth Year, birth Month, birth Day, birth Date, gender, language, currency Code, currency, google Plus Id, google Username, virtual Mail, nickname, customer Role, member Role, manager Role, time Zone Id, time Zone, referrer Id, referrer Type, signup Source, signup Source Type, ip Address, last Ip Address, last Login Time, validation Time, activation Time, verification Time, newsletter Subscription Enabled, newsletter Subscription Time, social Sharing Enabled, publication Status, archival Status, folder, religion, password Reset Code, password Reset Expiry Time, client Access Token, security Role Ids, debit Balance, debit Currency, type, verify Code, zendesk User Id, customer Role Edit Time, last Time Synchronize With Zendesk, zendesk Integration) debit Currency Currency Unit() Person(schema Version, first Name, last Name, password, account Status, birth Year, birth Month, birth Day, birth Date, gender, language, currency Code, currency, google Plus Id, google Username, virtual Mail, nickname, customer Role, member Role, manager Role, time Zone Id, time Zone, referrer Id, referrer Type, signup Source, signup Source Type, ip Address, last Ip Address, last Login Time, validation Time, activation Time, verification Time, newsletter Subscription Enabled, newsletter Subscription Time, social Sharing Enabled, publication Status, archival Status, folder, religion, password Reset Code, password Reset Expiry Time, client Access Token, security Role Ids, debit Balance, debit Currency, type, verify Code, zendesk User Id, customer Role Edit Time, last Time Synchronize With Zendesk, zendesk Integration) time Zone Date Time Zone() Person(schema Version, first Name, last Name, password, account Status, birth Year, birth Month, birth Day, birth Date, gender, language, currency Code, currency, google Plus Id, google Username, virtual Mail, nickname, customer Role, member Role, manager Role, time Zone Id, time Zone, referrer Id, referrer Type, signup Source, signup Source Type, ip Address, last Ip Address, last Login Time, validation Time, activation Time, verification Time, newsletter Subscription Enabled, newsletter Subscription Time, social Sharing Enabled, publication Status, archival Status, folder, religion, password Reset Code, password Reset Expiry Time, client Access Token, security Role Ids, debit Balance, debit Currency, type, verify Code, zendesk User Id, customer Role Edit Time, last Time Synchronize With Zendesk, zendesk Integration) last Time Synchronize With Zendesk Date Time() Person(schema Version, first Name, last Name, password, account Status, birth Year, birth Month, birth Day, birth Date, gender, language, currency Code, currency, google Plus Id, google Username, virtual Mail, nickname, customer Role, member Role, manager Role, time Zone Id, time Zone, referrer Id, referrer Type, signup Source, signup Source Type, ip Address, last Ip Address, last Login Time, validation Time, activation Time, verification Time, newsletter Subscription Enabled, newsletter Subscription Time, social Sharing Enabled, publication Status, archival Status, folder, religion, password Reset Code, password Reset Expiry Time, client Access Token, security Role Ids, debit Balance, debit Currency, type, verify Code, zendesk User Id, customer Role Edit Time, last Time Synchronize With Zendesk, zendesk Integration) organizations Organization(schema Version, black Berry Pin, website, facebook Page Uri, facebook Access Token, facebook Id, facebook User Name, twitter Screen Name, twitter Access Token, twitter Access Token Secret, twitter Id) Phone Number(phone Number, primary, validation Time) validation Time Date Time() Email(email, primary, validation Time) validation Time Date Time() Postal Address(schema Version, organization, street, city, postal Code, province, country, country Code, primary Mobile, mobiles, primary Phone, phones, primary Home Phone, home Phones, primary Work Phone, work Phones, primary Email, emails, description, primary, primary Billing, primary Shipping, validation Time, district, jne Area Code) Name Container(name) Postal Address(schema Version, organization, street, city, postal Code, province, country, country Code, primary Mobile, mobiles, primary Phone, phones, primary Home Phone, home Phones, primary Work Phone, work Phones, primary Email, emails, description, primary, primary Billing, primary Shipping, validation Time, district, jne Area Code) Identifiable(id) Postal Address(schema Version, organization, street, city, postal Code, province, country, country Code, primary Mobile, mobiles, primary Phone, phones, primary Home Phone, home Phones, primary Work Phone, work Phones, primary Email, emails, description, primary, primary Billing, primary Shipping, validation Time, district, jne Area Code) Schema Versionable() Postal Address(schema Version, organization, street, city, postal Code, province, country, country Code, primary Mobile, mobiles, primary Phone, phones, primary Home Phone, home Phones, primary Work Phone, work Phones, primary Email, emails, description, primary, primary Billing, primary Shipping, validation Time, district, jne Area Code) validation Time Date Time() Local Date() alia magazine() Person Catalog() people Person(schema Version, first Name, last Name, password, account Status, birth Year, birth Month, birth Day, birth Date, gender, language, currency Code, currency, google Plus Id, google Username, virtual Mail, nickname, customer Role, member Role, manager Role, time Zone Id, time Zone, referrer Id, referrer Type, signup Source, signup Source Type, ip Address, last Ip Address, last Login Time, validation Time, activation Time, verification Time, newsletter Subscription Enabled, newsletter Subscription Time, social Sharing Enabled, publication Status, archival Status, folder, religion, password Reset Code, password Reset Expiry Time, client Access Token, security Role Ids, debit Balance, debit Currency, type, verify Code, zendesk User Id, customer Role Edit Time, last Time Synchronize With Zendesk, zendesk Integration) Canonical Sluggable(canonical Slug) Sluggable(slug) Twitter Accessible(twitter Access Token, twitter Access Token Secret) Twitter Identity(twitter Id, twitter Screen Name) Facebook Identity(facebook Id, facebook Username) Facebook Accessible(facebook Access Token) No Such Element Exception() Revisionable(guid, revision) Sys Config(tenant Id) Timestamped(creation Time, modification Time) Deque() void() Temperature() Local Time() Geolocation(latitude, longitude, elevation) Thing Info(image Id) Name Container(name) Thing Info(image Id) Identifiable(id) Thing Info(image Id) Sluggable(slug) Thing Info(image Id) Imageable() Exception() General Sys Config(ssl Supported) Expandable(expansion State) General Sys Config(ssl Supported) Sys Config(tenant Id) Organization(schema Version, black Berry Pin, website, facebook Page Uri, facebook Access Token, facebook Id, facebook User Name, twitter Screen Name, twitter Access Token, twitter Access Token Secret, twitter Id) Identifiable(id) Organization(schema Version, black Berry Pin, website, facebook Page Uri, facebook Access Token, facebook Id, facebook User Name, twitter Screen Name, twitter Access Token, twitter Access Token Secret, twitter Id) Schema Versionable() Organization(schema Version, black Berry Pin, website, facebook Page Uri, facebook Access Token, facebook Id, facebook User Name, twitter Screen Name, twitter Access Token, twitter Access Token Secret, twitter Id) Name Container(name) Customer Role(schema Version, status, read Only, quick Shop Enabled, sales Order Report Enabled, history Sales Order Enabled, agent Sales Report Enabled, transaction History Enabled, booking Enabled, payment Gateway Enabled, booking Expiry Time In Minutes, dropship Enabled, review Reminder Enabled, zendesk Integration, zendesk Organization Id) Identifiable(id) Customer Role(schema Version, status, read Only, quick Shop Enabled, sales Order Report Enabled, history Sales Order Enabled, agent Sales Report Enabled, transaction History Enabled, booking Enabled, payment Gateway Enabled, booking Expiry Time In Minutes, dropship Enabled, review Reminder Enabled, zendesk Integration, zendesk Organization Id) Schema Versionable() Customer Role(schema Version, status, read Only, quick Shop Enabled, sales Order Report Enabled, history Sales Order Enabled, agent Sales Report Enabled, transaction History Enabled, booking Enabled, payment Gateway Enabled, booking Expiry Time In Minutes, dropship Enabled, review Reminder Enabled, zendesk Integration, zendesk Organization Id) Name Container(name) Customer Role(schema Version, status, read Only, quick Shop Enabled, sales Order Report Enabled, history Sales Order Enabled, agent Sales Report Enabled, transaction History Enabled, booking Enabled, payment Gateway Enabled, booking Expiry Time In Minutes, dropship Enabled, review Reminder Enabled, zendesk Integration, zendesk Organization Id) Timestamped(creation Time, modification Time) Customer Role(schema Version, status, read Only, quick Shop Enabled, sales Order Report Enabled, history Sales Order Enabled, agent Sales Report Enabled, transaction History Enabled, booking Enabled, payment Gateway Enabled, booking Expiry Time In Minutes, dropship Enabled, review Reminder Enabled, zendesk Integration, zendesk Organization Id) Describable(description) E Factory() Mongo Sys Config(mongo Uri) Mass() Length() page() List Multimap() UUID() Period()
Label: purchases, Text: Order(placed On, filled On, completed, id) filled On Java Date() Order(placed On, filled On, completed, id) owner Customer(last Name, first Name) Order(placed On, filled On, completed, id) item Line Item(quantity, discount) Product(name, sku, price) owner Order System(version) Warehouse(name) owner Order System(version) Warehouse(name) item Inventory Item(in Stock, restock Threshold, next Stock Date) Warehouse(name) location Address(number, street, apartment, city, province, postal Code, country) Order System(version) customer Customer(last Name, first Name) Order System(version) product Product(name, sku, price) Order System(version) warehouse Warehouse(name) Line Item(quantity, discount) owner Order(placed On, filled On, completed, id) Line Item(quantity, discount) product Product(name, sku, price) Java Date() Inventory Item(in Stock, restock Threshold, next Stock Date) next Stock Date Java Date() Inventory Item(in Stock, restock Threshold, next Stock Date) Warehouse Warehouse(name) Inventory Item(in Stock, restock Threshold, next Stock Date) product Product(name, sku, price) Customer(last Name, first Name) owner Order System(version) Customer(last Name, first Name) account Account(payment Method, account Number) Customer(last Name, first Name) order Order(placed On, filled On, completed, id) Address(number, street, apartment, city, province, postal Code, country) Account(payment Method, account Number) owner Customer(last Name, first Name) Account(payment Method, account Number) shipping Address Address(number, street, apartment, city, province, postal Code, country) Preferred Customer(since) Customer(last Name, first Name) Preferred Customer(since) since Java Date() Limited Edition Product(available Until) Product(name, sku, price) Limited Edition Product(available Until) available Until Java Date()
Label: transformation, Text: Located Element(location, comments Before, comments After) comments After String() Unit(name) Located Element(location, comments Before, comments After) Unit(name) libraries Library Ref(name) Unit(name) name String() Library() Unit(name) Library() helpers Helper() Query() Unit(name) Query() body Ocl Expression() Query() helpers Helper() Module(is Refining) Unit(name) Module(is Refining) is Refining Boolean() Module(is Refining) out Models Ocl Model(name) Module(is Refining) elements Module Element() Module Element() Located Element(location, comments Before, comments After) Helper() Module Element() Helper() query Query() Helper() library Library() Helper() definition Ocl Feature Definition() Rule(name) Module Element() Rule(name) out Pattern Out Pattern() Rule(name) action Block Action Block() Rule(name) variables Rule Variable Declaration() Rule(name) name String() Matched Rule(is Abstract, is Refining, is No Default) Rule(name) Matched Rule(is Abstract, is Refining, is No Default) in Pattern In Pattern() Matched Rule(is Abstract, is Refining, is No Default) is No Default Boolean() Lazy Matched Rule(is Unique) Matched Rule(is Abstract, is Refining, is No Default) Lazy Matched Rule(is Unique) is Unique Boolean() Called Rule(is Entrypoint, is Endpoint) Rule(name) Called Rule(is Entrypoint, is Endpoint) parameters Parameter() Called Rule(is Entrypoint, is Endpoint) is Endpoint Boolean() In Pattern() Located Element(location, comments Before, comments After) In Pattern() elements In Pattern Element() In Pattern() rule Matched Rule(is Abstract, is Refining, is No Default) In Pattern() filter Ocl Expression() Out Pattern() Located Element(location, comments Before, comments After) Out Pattern() rule Rule(name) Out Pattern() drop Pattern Drop Pattern() Out Pattern() elements Out Pattern Element() Drop Pattern() Located Element(location, comments Before, comments After) Drop Pattern() out Pattern Out Pattern() Pattern Element() Variable Declaration(id, var Name) In Pattern Element() Pattern Element() In Pattern Element() maps To Out Pattern Element() In Pattern Element() in Pattern In Pattern() In Pattern Element() models Ocl Model(name) Simple In Pattern Element() In Pattern Element() Out Pattern Element() Pattern Element() Out Pattern Element() out Pattern Out Pattern() Out Pattern Element() source Element In Pattern Element() Out Pattern Element() bindings Binding(property Name, is Assignment) Out Pattern Element() model Ocl Model(name) Simple Out Pattern Element() Out Pattern Element() Simple Out Pattern Element() reverse Bindings Ocl Expression() For Each Out Pattern Element() Out Pattern Element() For Each Out Pattern Element() collection Ocl Expression() For Each Out Pattern Element() iterator Iterator() Binding(property Name, is Assignment) Located Element(location, comments Before, comments After) Binding(property Name, is Assignment) value Ocl Expression() Binding(property Name, is Assignment) out Pattern Element Out Pattern Element() Binding(property Name, is Assignment) property Name String() Binding(property Name, is Assignment) is Assignment Boolean() Rule Variable Declaration() Variable Declaration(id, var Name) Rule Variable Declaration() rule Rule(name) Library Ref(name) Located Element(location, comments Before, comments After) Library Ref(name) unit Unit(name) Library Ref(name) name String() Action Block() Located Element(location, comments Before, comments After) Action Block() rule Rule(name) Action Block() statements Statement() Statement() Located Element(location, comments Before, comments After) Expression Stat() Statement() Expression Stat() expression Ocl Expression() Binding Stat(property Name, is Assignment) Statement() Binding Stat(property Name, is Assignment) value Ocl Expression() Binding Stat(property Name, is Assignment) property Name String() Binding Stat(property Name, is Assignment) is Assignment Boolean() If Stat() else Statements Statement() If Stat() condition Ocl Expression() For Stat() statements Statement() For Stat() iterator Iterator() For Stat() collection Ocl Expression() Ocl Expression() Located Element(location, comments Before, comments After) Ocl Expression() type Ocl Type(name) Ocl Expression() if Exp1 If Exp() Ocl Expression() applied Property Property Call Exp() Ocl Expression() collection Collection Exp() Ocl Expression() let Exp Let Exp() Ocl Expression() loop Exp Loop Exp() Ocl Expression() parent Operation Operation Call Exp(operation Name) Ocl Expression() initialized Variable Variable Declaration(id, var Name) Ocl Expression() owning Operation Operation(name) Ocl Expression() owning Attribute Attribute(name) Variable Exp() Ocl Expression() Variable Exp() referred Variable Variable Declaration(id, var Name) Super Exp() Ocl Expression() Primitive Exp() Ocl Expression() String Exp(string Symbol) Primitive Exp() String Exp(string Symbol) string Symbol String() Boolean Exp(boolean Symbol) Primitive Exp() Boolean Exp(boolean Symbol) boolean Symbol Boolean() Numeric Exp() Primitive Exp() Real Exp(real Symbol) Numeric Exp() Real Exp(real Symbol) real Symbol Double() Integer Exp(integer Symbol) Numeric Exp() Integer Exp(integer Symbol) integer Symbol Integer() Collection Exp() elements Ocl Expression() Bag Exp() Collection Exp() Ordered Set Exp() Collection Exp() Sequence Exp() Collection Exp() Set Exp() Collection Exp() Tuple Exp() Ocl Expression() Tuple Exp() tuple Part Tuple Part() Tuple Part() Variable Declaration(id, var Name) Tuple Part() tuple Tuple Exp() Map Exp() Ocl Expression() Map Exp() elements Map Element() Map Element() Located Element(location, comments Before, comments After) Map Element() map Map Exp() Map Element() value Ocl Expression() Enum Literal Exp(name) Ocl Expression() Enum Literal Exp(name) name String() Ocl Undefined Exp() Ocl Expression() Property Call Exp() source Ocl Expression() Navigation Or Attribute Call Exp(name) Property Call Exp() Navigation Or Attribute Call Exp(name) name String() Operation Call Exp(operation Name) Property Call Exp() Operation Call Exp(operation Name) arguments Ocl Expression() Operation Call Exp(operation Name) operation Name String() Operator Call Exp() Operation Call Exp(operation Name) Collection Operation Call Exp() Operation Call Exp(operation Name) Loop Exp() Property Call Exp() Loop Exp() body Ocl Expression() Loop Exp() iterators Iterator() Iterate Exp() Loop Exp() Iterate Exp() result Variable Declaration(id, var Name) Iterator Exp(name) Loop Exp() Iterator Exp(name) name String() Let Exp() in Ocl Expression() Let Exp() variable Variable Declaration(id, var Name) If Exp() else Expression Ocl Expression() Variable Declaration(id, var Name) Located Element(location, comments Before, comments After) Variable Declaration(id, var Name) var Name String() Variable Declaration(id, var Name) type Ocl Type(name) Variable Declaration(id, var Name) init Expression Ocl Expression() Variable Declaration(id, var Name) let Exp Let Exp() Variable Declaration(id, var Name) base Exp Iterate Exp() Variable Declaration(id, var Name) variable Exp Variable Exp() Iterator() Variable Declaration(id, var Name) Iterator() loop Expr Loop Exp() Parameter() Variable Declaration(id, var Name) Collection Type() element Type Ocl Type(name) Ocl Type(name) ocl Expression Ocl Expression() Ocl Type(name) name String() Ocl Type(name) definitions Ocl Context Definition() Ocl Type(name) operation Operation(name) Ocl Type(name) map Type Map Type() Ocl Type(name) attribute Attribute(name) Ocl Type(name) collection Types Collection Type() Ocl Type(name) tuple Type Attribute Tuple Type Attribute(name) Ocl Type(name) variable Declaration Variable Declaration(id, var Name) Primitive() Ocl Type(name) String Type() Primitive() Boolean Type() Primitive() Numeric Type() Primitive() Integer Type() Numeric Type() Real Type() Numeric Type() Bag Type() Collection Type() Ordered Set Type() Collection Type() Sequence Type() Collection Type() Set Type() Collection Type() Ocl Any Type() Ocl Type(name) Tuple Type() Ocl Type(name) Tuple Type() attributes Tuple Type Attribute(name) Tuple Type Attribute(name) Located Element(location, comments Before, comments After) Tuple Type Attribute(name) type Ocl Type(name) Tuple Type Attribute(name) tuple Type Tuple Type() Tuple Type Attribute(name) name String() Ocl Model Element() Ocl Type(name) Ocl Model Element() model Ocl Model(name) Map Type() key Type Ocl Type(name) Ocl Feature Definition() Located Element(location, comments Before, comments After) Ocl Feature Definition() feature Ocl Feature() Ocl Feature Definition() context Ocl Context Definition() Ocl Context Definition() Located Element(location, comments Before, comments After) Ocl Context Definition() definition Ocl Feature Definition() Ocl Context Definition() context Ocl Type(name) Ocl Feature() Located Element(location, comments Before, comments After) Ocl Feature() definition Ocl Feature Definition() Attribute(name) Ocl Feature() Attribute(name) name String() Attribute(name) init Expression Ocl Expression() Attribute(name) type Ocl Type(name) Operation(name) Ocl Feature() Operation(name) name String() Operation(name) parameters Parameter() Operation(name) return Type Ocl Type(name) Operation(name) body Ocl Expression() Ocl Model(name) Located Element(location, comments Before, comments After) Ocl Model(name) name String() Ocl Model(name) elements Ocl Model Element() Boolean() Double() Integer() String()
Label: metamodelling, Text: Native Types Library(name) Types Library(kind) Native Types Library(name) native Types Native Type(name, spec) Enum() Type Instance(length, precision, literals) Type() Type Instance(length, precision, literals) native Type Native Type(name, spec) Native Type(name, spec) Complex Named Type() types User Defined Type(name) Simple Named Type() User Defined Type(name) Simple Named Type() type Type Instance(length, precision, literals) Type() User Defined Type(name) User Defined Type Ref() Type() User Defined Type Ref() type User Defined Type(name) User Defined Types Library(name) Types Library(kind) User Defined Types Library(name) user Defined Types User Defined Type(name) Types Library User() used Libraries Types Library(kind) Types Library(kind) physical Types()
Label: class-diagram, Text: Class() Named Element(name) Class() method Method() Class() attribute Type() Method() Named Element(name) Method() return Type() Association() Named Element(name) Association() user Role(upper, lower) Heritage() Named Element(name) Heritage() child Role(upper, lower) Role(upper, lower) Named Element(name) Role(upper, lower) class Class() Type() Named Element(name) Float() Type() Int() Type() Boolean() Type() String() Type() Named Element(name) Diagram() assoc Association() Diagram() heritage Heritage() Diagram() class Class()
Label: trace, Text: Attribute To Column() From Attribute(name, kind) Attribute To Column() To Column() Attribute To Column() type Primitive To Name(name, type Name) Association To Foreign Key(name) To Column() Association To Foreign Key(name) owner Class To Table(name) Class To Table(name) From Attribute Owner() Class To Table(name) To Column() Class To Table(name) owner Package To Schema(name) Class To Table(name) associations To Foreign Keys Association To Foreign Key(name) From Attribute(name, kind) owner From Attribute Owner() From Attribute(name, kind) leafs Attribute To Column() From Attribute Owner() from Attributes From Attribute(name, kind) Non Leaf Attribute() From Attribute Owner() Non Leaf Attribute() From Attribute(name, kind) Package To Schema(name) classes To Tables Class To Table(name) Package To Schema(name) primitives To Names Primitive To Name(name, type Name) Primitive To Name(name, type Name) owner Package To Schema(name) To Column()
Label: class-diagram, Text: UML Assoc() UML Diagram Item() UML Assoc() right Role UML Role(adornment) UML Cardinality(card String) UML Increment() UML Cardinality(card String) rev Card UML Role(adornment) UML Class Diagram() elements UML Element(name) UML Class() UML Diagram Item() UML Class() roles UML Role(adornment) UML Diagram Item() UML Increment() UML Element(name) diagram UML Class Diagram() UML Increment() UML Element(name) UML Increment() stereotypes UML Stereotype(text) UML Role(adornment) UML Increment() UML Role(adornment) card UML Cardinality(card String) UML Role(adornment) rev Right Role UML Assoc() UML Role(adornment) target UML Class() UML Stereotype(text) increment UML Increment()
Label: graphicaleditor, Text: Identified Element(name, label) label Translatable Message() D Analysis(semantic Resources, version) Identified Element(name, label) D Analysis(semantic Resources, version) semantic Resources Resource Descriptor() D Analysis(semantic Resources, version) e Annotations D Annotation Entry(source, details) D Analysis(semantic Resources, version) selected Views D View() D Analysis(semantic Resources, version) owned Feature Extensions D Feature Extension() D Feature Extension() Identified Element(name, label) D Feature Extension() description Feature Extension Description() D Stylizable() D Refreshable() D Mapping Based() D Semantic Decorator() Identified Element(name, label) D Representation Descriptor(name, rep Path, change Id) Identified Element(name, label) D Representation Descriptor(name, rep Path, change Id) D Model Element() D Representation Descriptor(name, rep Path, change Id) Documented Element(documentation) D Representation Descriptor(name, rep Path, change Id) description Representation Description(title Expression, initialisation, show On Startup) D Representation Descriptor(name, rep Path, change Id) representation D Representation(name, documentation) D Representation Descriptor(name, rep Path, change Id) rep Path Resource Descriptor() D Representation(name, documentation) Identified Element(name, label) D Representation(name, documentation) D Model Element() D Representation(name, documentation) D Refreshable() D Representation(name, documentation) representation Elements D Representation Element(name) D Representation(name, documentation) owned Annotation Entries Annotation Entry(source) D Representation(name, documentation) ui State UI State(inverse Selection Order, decoration Image, sub Diagram Decoration Descriptors) D Representation Element(name) Identified Element(name, label) D Representation Element(name) D Mapping Based() D Representation Element(name) D Stylizable() D Representation Element(name) D Refreshable() D Representation Element(name) D Semantic Decorator() D View() Identified Element(name, label) D View() D Refreshable() D View() viewpoint Viewpoint(model File Extension, icon, conflicts, reuses, customizes) D View() owned Representation Descriptors D Representation Descriptor(name, rep Path, change Id) D View() owned Extensions Meta Model Extension() Meta Model Extension() Identified Element(name, label) Decoration() Identified Element(name, label) Decoration() description Decoration Description(name, position, distribution Direction, precondition Expression, image Expression, tooltip Expression) D Analysis Custom Data(key) Identified Element(name, label) Label Style(label Alignment) Basic Label Style(label Size, label Format, show Icon, icon Path, label Color) strike through() Style() Identified Element(name, label) Style() D Refreshable() Style() Customizable(custom Features) Style() description Style Description() RIGHT() RGB Values() D Analysis Session E Object(open, resources, controlled Resources, synchronization Status) activated Viewpoints Viewpoint(model File Extension, icon, conflicts, reuses, customizes) D Analysis Session E Object(open, resources, controlled Resources, synchronization Status) analyses D Analysis(semantic Resources, version) sync() Session Manager E Object() owned Sessions D Analysis Session E Object(open, resources, controlled Resources, synchronization Status) D Resource(name, path) D File() Identified Element(name, label) D File() D Resource(name, path) D Resource Container() Identified Element(name, label) D Resource Container() members D Resource(name, path) D Project() D Resource Container() D Folder() D Resource Container() D Model() D File() Basic Label Style(label Size, label Format, show Icon, icon Path, label Color) Customizable(custom Features) Basic Label Style(label Size, label Format, show Icon, icon Path, label Color) label Color RGB Values() Customizable(custom Features) Identified Element(name, label) Resource Descriptor() UI State(inverse Selection Order, decoration Image, sub Diagram Decoration Descriptors) tool Sections Tool Section Instance() Tool Instance(id, enabled, visible, filtered) tool Entry Tool Entry() Tool Group Instance() tools Tool Instance(id, enabled, visible, filtered) Tool Section Instance() tools Tool Instance(id, enabled, visible, filtered) Group(name, version) D Model Element() Group(name, version) Documented Element(documentation) Group(name, version) owned Viewpoints Viewpoint(model File Extension, icon, conflicts, reuses, customizes) Group(name, version) system Colors Palette Sytem Colors Palette() Group(name, version) user Colors Palettes User Colors Palette(name) Group(name, version) extensions Extension() Extension() Component() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) Documented Element(documentation) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) Component() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) End User Documented Element(end User Documentation) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) Identified Element(name, label) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) validation Set Validation Set(name) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Representations Representation Description(title Expression, initialisation, show On Startup) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Representation Extensions Representation Extension Description(name, viewpoint URI, representation Name) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Java Extensions Java Extension(qualified Class Name) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned MM Extensions Metamodel Extension Setting() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Feature Extensions Feature Extension Description() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) icon Image Path() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Templates Representation Template(name) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) customizes URI() Feature Extension Description() Representation Description(title Expression, initialisation, show On Startup) Documented Element(documentation) Representation Description(title Expression, initialisation, show On Startup) End User Documented Element(end User Documentation) Representation Description(title Expression, initialisation, show On Startup) Identified Element(name, label) Representation Description(title Expression, initialisation, show On Startup) title Expression Interpreted Expression() Representation Template(name) owned Representations Representation Description(title Expression, initialisation, show On Startup) Representation Import Description() Representation Description(title Expression, initialisation, show On Startup) Representation Extension Description(name, viewpoint URI, representation Name) Metamodel Extension Setting() Java Extension(qualified Class Name) Representation Element Mapping() Identified Element(name, label) Representation Element Mapping() detail Descriptions Representation Creation Description(title Expression, browse Expression) Representation Element Mapping() navigation Descriptions Representation Navigation Description(browse Expression, navigation Name Expression) Abstract Mapping Import(hide Sub Mappings, inherits Ancestor Filters) Documented Element(documentation) D Model Element() e Annotations D Annotation(source) D Annotation(source) Identified Element(name, label) Conditional Style Description(predicate Expression) predicate Expression Interpreted Expression() Type Name() Interpreted Expression() Feature Name() Image Path() Paste Target Description() paste Descriptions Paste Description() Decoration Descriptions Set() decoration Descriptions Decoration Description(name, position, distribution Direction, precondition Expression, image Expression, tooltip Expression) Decoration Description(name, position, distribution Direction, precondition Expression, image Expression, tooltip Expression) tooltip Expression Interpreted Expression() CENTER() HORIZONTAL() Semantic Based Decoration(domain Class) Decoration Description(name, position, distribution Direction, precondition Expression, image Expression, tooltip Expression) Semantic Based Decoration(domain Class) domain Class Type Name() Generic Decoration Description() Decoration Description(name, position, distribution Direction, precondition Expression, image Expression, tooltip Expression) Customization() vsm Element Customizations IVSM Element Customization() IVSM Element Customization() VSM Element Customization(predicate Expression) IVSM Element Customization() VSM Element Customization(predicate Expression) predicate Expression Interpreted Expression() VSM Element Customization(predicate Expression) feature Customizations E Structural Feature Customization(apply On All) VSM Element Customization Reuse() IVSM Element Customization() VSM Element Customization Reuse() reuse E Structural Feature Customization(apply On All) E Structural Feature Customization(apply On All) E Attribute Customization(attribute Name, value) E Structural Feature Customization(apply On All) E Attribute Customization(attribute Name, value) value Interpreted Expression() E Reference Customization(reference Name) E Structural Feature Customization(apply On All) Selection Description(candidates Expression, multiple, tree, root Expression, children Expression, message) children Expression Interpreted Expression() Selection Description(candidates Expression, multiple, tree, root Expression, children Expression, message) message Translatable Message() Color Description() System Color(name) Fixed Color(red, green, blue) Interpolated Color(color Value Computation Expression, min Value Computation Expression, max Value Computation Expression) Color Description() Interpolated Color(color Value Computation Expression, min Value Computation Expression, max Value Computation Expression) User Color(name) Interpolated Color(color Value Computation Expression, min Value Computation Expression, max Value Computation Expression) max Value Computation Expression Interpreted Expression() Interpolated Color(color Value Computation Expression, min Value Computation Expression, max Value Computation Expression) color Steps Color Step(associated Value) Color Step(associated Value) associated Value Interpreted Expression() Color Step(associated Value) associated Color Fixed Color(red, green, blue) Fixed Color(red, green, blue) Color Description() User Fixed Color() Fixed Color(red, green, blue) User Fixed Color() User Color(name) User Color(name) light gray() Environment() system Colors Sytem Colors Palette() Environment() default Tools Tool Entry() Environment() label Border Styles Label Border Styles() Sytem Colors Palette() entries System Color(name) User Colors Palette(name) entries User Color(name) Annotation Entry(source) Identified Element(name, label) End User Documented Element(end User Documentation) Computed Color(red, green, blue) User Color(name) Computed Color(red, green, blue) Color Description() Computed Color(red, green, blue) blue Interpreted Expression() D Annotation Entry(source, details) Identified Element(name, label) URI() Abstract Variable(name) Sub Variable() Abstract Variable(name) Interactive Variable Description(user Documentation) Typed Variable(default Value Expression) Interactive Variable Description(user Documentation) Typed Variable(default Value Expression) Sub Variable() Typed Variable(default Value Expression) default Value Expression Interpreted Expression() Translatable Message() Style Description() Basic Label Style Description(label Size, label Format, show Icon, label Expression, icon Path) label Expression Interpreted Expression() Basic Label Style Description(label Size, label Format, show Icon, label Expression, icon Path) label Color Color Description() Basic Label Style Description(label Size, label Format, show Icon, label Expression, icon Path) icon Path Image Path() Label Style Description(label Alignment) Basic Label Style Description(label Size, label Format, show Icon, label Expression, icon Path) Label Border Styles() label Border Style Descriptions Label Border Style Description(id, name, corner Height, corner Width) Label Border Style Description(id, name, corner Height, corner Width) Tooltip Style Description(tooltip Expression) tooltip Expression Interpreted Expression() Tool Entry() Documented Element(documentation) Tool Entry() Identified Element(name, label) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Tool Entry() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) elements To Select Interpreted Expression() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) filters Tool Filter Description(precondition, elements To Listen) Mapping Based Tool Description() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Tool Description(icon Path) Mapping Based Tool Description() Tool Description(icon Path) icon Path Image Path() Tool Description(icon Path) element Element Variable() Tool Description(icon Path) element View Element View Variable() Tool Description(icon Path) initial Operation Initial Operation() Paste Description() Mapping Based Tool Description() Paste Description() container Drop Container Variable() Paste Description() container View Container View Variable() Paste Description() copied View Element View Variable() Paste Description() copied Element Element Variable() Paste Description() initial Operation Initial Operation() Selection Wizard Description(icon Path, window Title, window Image Path) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Selection Wizard Description(icon Path, window Title, window Image Path) Selection Description(candidates Expression, multiple, tree, root Expression, children Expression, message) Selection Wizard Description(icon Path, window Title, window Image Path) element Element Select Variable() Selection Wizard Description(icon Path, window Title, window Image Path) container View Container View Variable() Selection Wizard Description(icon Path, window Title, window Image Path) container Select Container Variable() Selection Wizard Description(icon Path, window Title, window Image Path) initial Operation Initial Operation() Selection Wizard Description(icon Path, window Title, window Image Path) window Image Path Image Path() Selection Wizard Description(icon Path, window Title, window Image Path) window Title Translatable Message() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) element Element Select Variable() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) container View Container View Variable() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) container Select Container Variable() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) initial Operation Initial Operation() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) window Image Path Image Path() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) selected Values Message Translatable Message() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) pre Selected Candidates Expression Interpreted Expression() Representation Creation Description(title Expression, browse Expression) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Representation Creation Description(title Expression, browse Expression) browse Expression Interpreted Expression() Representation Creation Description(title Expression, browse Expression) representation Description Representation Description(title Expression, initialisation, show On Startup) Representation Creation Description(title Expression, browse Expression) initial Operation Initial Operation() Representation Creation Description(title Expression, browse Expression) container View Variable Container View Variable() Representation Creation Description(title Expression, browse Expression) representation Name Variable Name Variable() Representation Navigation Description(browse Expression, navigation Name Expression) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Representation Navigation Description(browse Expression, navigation Name Expression) navigation Name Expression Interpreted Expression() Representation Navigation Description(browse Expression, navigation Name Expression) representation Description Representation Description(title Expression, initialisation, show On Startup) Representation Navigation Description(browse Expression, navigation Name Expression) container View Variable Container View Variable() Representation Navigation Description(browse Expression, navigation Name Expression) container Variable Element Select Variable() Representation Navigation Description(browse Expression, navigation Name Expression) representation Name Variable Name Variable() Menu Item Or Ref() Menu Item Description() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Menu Item Description() Menu Item Or Ref() Menu Item Description Reference() Menu Item Or Ref() Menu Item Description Reference() item Menu Item Description() Operation Action() Menu Item Description With Icon(icon) Operation Action() Group Menu Item() Operation Action() view Container View Variable() Operation Action() initial Operation Initial Operation() External Java Action(id) Menu Item Description With Icon(icon) External Java Action(id) Container Model Operation() External Java Action(id) Group Menu Item() External Java Action(id) parameters External Java Action Parameter(name, value) External Java Action Call() Menu Item Description With Icon(icon) External Java Action Call() Container Model Operation() External Java Action Call() Group Menu Item() External Java Action Call() action External Java Action(id) Popup Menu() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Popup Menu() Group Menu Item() Popup Menu() menu Item Description Menu Item Description() Variable Container() sub Variables Sub Variable() Acceleo Variable(computation Expression) Variable Container() Acceleo Variable(computation Expression) Sub Variable() Acceleo Variable(computation Expression) computation Expression Interpreted Expression() Dialog Variable(dialog Prompt) Abstract Variable(name) Element Drop Variable() Abstract Variable(name) Element Drop Variable() Variable Container() Element Select Variable() Abstract Variable(name) Element Variable() Abstract Variable(name) Element Variable() Variable Container() Element View Variable() Abstract Variable(name) Element View Variable() Variable Container() Element Delete Variable() Abstract Variable(name) Element Delete Variable() Variable Container() Drop Container Variable() Abstract Variable(name) Drop Container Variable() Variable Container() Select Container Variable() Abstract Variable(name) Select Container Variable() Variable Container() Container View Variable() Abstract Variable(name) Container View Variable() Variable Container() Select Model Element Variable() Sub Variable() Select Model Element Variable() Selection Description(candidates Expression, multiple, tree, root Expression, children Expression, message) Select Model Element Variable() Interactive Variable Description(user Documentation) Edit Mask Variables(mask) Container Model Operation() sub Model Operations Model Operation() Model Operation() Initial Node Creation Operation() first Model Operations Model Operation() Initial Operation() first Model Operations Model Operation() Init Edge Creation Operation() first Model Operations Model Operation() Initial Container Drop Operation() first Model Operations Model Operation() Create Instance(type Name, reference Name, variable Name) Container Model Operation() Create Instance(type Name, reference Name, variable Name) type Name Type Name() Create Instance(type Name, reference Name, variable Name) reference Name Feature Name() Change Context(browse Expression) Container Model Operation() Change Context(browse Expression) browse Expression Interpreted Expression() Set Value(feature Name, value Expression) Container Model Operation() Set Value(feature Name, value Expression) feature Name Feature Name() Set Value(feature Name, value Expression) value Expression Interpreted Expression() Set Object(feature Name) Container Model Operation() Set Object(feature Name) feature Name Feature Name() Unset(feature Name, element Expression) Container Model Operation() Unset(feature Name, element Expression) feature Name Feature Name() Unset(feature Name, element Expression) element Expression Interpreted Expression() Move Element(new Container Expression, feature Name) Container Model Operation() Move Element(new Container Expression, feature Name) new Container Expression Interpreted Expression() Move Element(new Container Expression, feature Name) feature Name Feature Name() Remove Element() Container Model Operation() For(expression, iterator Name) Container Model Operation() For(expression, iterator Name) expression Interpreted Expression() BOTH() If(condition Expression) Container Model Operation() If(condition Expression) condition Expression Interpreted Expression() Delete View() Container Model Operation() Name Variable() Abstract Variable(name) External Java Action Parameter(name, value) value Interpreted Expression() Tool Filter Description(precondition, elements To Listen) elements To Listen Interpreted Expression() Tool Filter Description(precondition, elements To Listen) listeners Feature Change Listener(domain Class, feature Name) Feature Change Listener(domain Class, feature Name) domain Class Type Name() Feature Change Listener(domain Class, feature Name) feature Name Feature Name() Case(condition Expression) Switch Child() Case(condition Expression) condition Expression Interpreted Expression() Switch Child() sub Model Operations Model Operation() Default() Switch Child() Switch() Model Operation() Switch() cases Case(condition Expression) Switch() default Default() Let(variable Name, value Expression) Container Model Operation() Let(variable Name, value Expression) value Expression Interpreted Expression() Group Menu(location URI) Menu Item Description() Group Menu(location URI) popup Menus Popup Menu() Group Menu(location URI) item Descriptions Group Menu Item() Group Menu Item() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Menu Item Description With Icon(icon) Menu Item Description() Menu Item Description With Icon(icon) icon Image Path() Validation Set(name) Documented Element(documentation) Validation Set(name) all Rules Validation Rule(level, message) Validation Rule(level, message) Identified Element(name, label) Validation Rule(level, message) message Interpreted Expression() Validation Rule(level, message) audits Rule Audit(audit Expression) Validation Rule(level, message) fixes Validation Fix(name) Semantic Validation Rule(target Class) Validation Rule(level, message) Semantic Validation Rule(target Class) target Class Type Name() View Validation Rule() Validation Rule(level, message) View Validation Rule() targets Representation Element Mapping() Rule Audit(audit Expression) audit Expression Interpreted Expression() ERROR() Validation Fix(name) initial Operation Initial Operation() Information Section() Template Information Section(template Path) Information Section()
Label: trace, Text: i Trace Model(version, project Name) trace Links Trace Link(created On, type, from File Name, comment, created By, mode, technical Binding, rule Name) i Trace Model(version, project Name) artefacts Artefact(aspect, name, abstraction Level, path) i Trace Model(version, project Name) specific Features Specific Feature(group Name) Trace Link(created On, type, from File Name, comment, created By, mode, technical Binding, rule Name) source Elements Source Element() Trace Link(created On, type, from File Name, comment, created By, mode, technical Binding, rule Name) i Trace Model i Trace Model(version, project Name) Trace Link Element(ref, name, type) model Model(metamodel) M2M Link() Trace Link(created On, type, from File Name, comment, created By, mode, technical Binding, rule Name) M2M Link() target Elements Target Element() M2T Link() Trace Link(created On, type, from File Name, comment, created By, mode, technical Binding, rule Name) M2T Link() target Blocks Block(block Number, start Line, end Line, start Column, end Column) Artefact(aspect, name, abstraction Level, path) i Trace Model i Trace Model(version, project Name) Code() Artefact(aspect, name, abstraction Level, path) Code() blocks Block(block Number, start Line, end Line, start Column, end Column) Block(block Number, start Line, end Line, start Column, end Column) code Code() Block(block Number, start Line, end Line, start Column, end Column) trace Link M2T Link() Model(metamodel) Artefact(aspect, name, abstraction Level, path) Model(metamodel) elements Trace Link Element(ref, name, type) Source Element() Trace Link Element(ref, name, type) Source Element() trace Link Trace Link(created On, type, from File Name, comment, created By, mode, technical Binding, rule Name) Target Element() Trace Link Element(ref, name, type) Target Element() trace Link M2M Link() ANNOTATION() Semantics() Automatic() Annotation() Feature(attribute, value) specific Feature Specific Feature(group Name) Specific Feature(group Name) features Feature(attribute, value) Specific Feature(group Name) i Trace Model i Trace Model(version, project Name) None()
Label: modelling, Text: public() return() shared() Final Node() Control Node() Action() Executable Node() Action() context Classifier(is Abstract) Literal String() Literal Specification() Implementation() Realization() Any Trigger() Message Trigger() Create Link Object Action() Create Link Action() Interval() Value Specification() Use Case() Behaviored Classifier() Opaque Expression() Value Specification() Read Link Object End Qualifier Action() Action() Extension End() Property(is Composite, is Derived, is Derived Union, aggregation) Read Structural Feature Action() Structural Feature Action() Classifier(is Abstract) Namespace() Classifier(is Abstract) Type() Classifier(is Abstract) Redefinable Element() Classifier(is Abstract) feature Feature(is Static) Classifier(is Abstract) inherited Member Named Element(name, visibility) Classifier(is Abstract) generalization Generalization() Duration Constraint() Interval Constraint() Link End Data() Element() Link End Data() value Input Pin() Link End Data() end Property(is Composite, is Derived, is Derived Union, aggregation) Link End Data() qualifier Qualifier Value() Reclassify Object Action() Action() Output Pin() Pin() Create Link Action() Write Link Action() Primitive Function() Packageable Element() Relationship() Element() Connectable Element() Named Element(name, visibility) Connectable Element() Parameterable Element() Template Parameter() Element() Realization() Abstraction() Send Object Action() Invocation Action() Trigger() Named Element(name, visibility) Slot() Element() Slot() defining Feature Structural Feature(is Read Only) Executable Node() Activity Node() Activity() Behavior() Activity Node() Redefinable Element() Communication Path() Association() Parameterable Classifier() Classifier(is Abstract) Object Node() Activity Node() Object Node() Typed Element() Packageable Element() Named Element(name, visibility) Packageable Element() Parameterable Element() Templateable Classifier() Classifier(is Abstract) Directed Relationship() Relationship() Add Structural Feature Value Action() Write Structural Feature Action() Duration Observation Action() Write Structural Feature Action() Value Specification() Typed Element() Value Specification() Parameterable Element() Data Store Node() Central Buffer Node() State() Namespace() State() Redefinable Element() State() Vertex() Exception Handler() Element() Activity Partition() Named Element(name, visibility) Activity Partition() Activity Group() Clear Association Action() Action() Permission() Dependency() Literal Null() Literal Specification() Interruptible Activity Region() Activity Group() Read Link Action() Link Action() Substitution() Realization() Stop() Event Occurrence() Usage() Dependency() Protocol Transition() Transition() Expression() Opaque Expression() Parameter Set() Named Element(name, visibility) Expansion Node() Object Node() Reception() Behavioral Feature() Package() Namespace() Package() Packageable Element() Link Action() Action() Destroy Object Action() Action() Destroy Object Action() target Input Pin() Join Node() Control Node() Namespace() member Named Element(name, visibility) Connector End() Multiplicity Element(is Ordered, is Unique, lower, upper) Collaboration() Behaviored Classifier() Collaboration() Structured Classifier() Model() Package() Clear Variable Action() Variable Action() Interval Constraint() Constraint() Classifier Template Parameter() Template Parameter() Port() Property(is Composite, is Derived, is Derived Union, aggregation) Control Node() Activity Node() Literal Boolean() Literal Specification() Call Trigger() Message Trigger() Signal() Classifier(is Abstract) Profile() Package() Component() Class(is Active) Stereotype() Class(is Active) Literal Integer() Literal Specification() Remove Structural Feature Value Action() Write Structural Feature Action() Time Constraint() Interval Constraint() Decision Node() Control Node() General Ordering() Named Element(name, visibility) Expansion Region() Structured Activity Node() Vertex() Named Element(name, visibility) Structural Feature Action() Action() Structural Feature Action() structural Feature Structural Feature(is Read Only) Activity Group() Element() Send Signal Action() Invocation Action() Class(is Active) Behaviored Classifier() Class(is Active) Encapsulated Classifier() Class(is Active) nested Classifier Classifier(is Abstract) Class(is Active) owned Reception Reception() Information Flow() Packageable Element() Information Flow() Directed Relationship() Redefinable Template Signature() Redefinable Element() Redefinable Template Signature() Template Signature() Duration() Value Specification() Remove Variable Value Action() Write Variable Action() Typed Element() Named Element(name, visibility) Typed Element() type Type() Continuation() Interaction Fragment() Message() Named Element(name, visibility) Apply Function Action() Action() Interface() Classifier(is Abstract) Connectable Element Template Parameter() Template Parameter() Operation Template Parameter() Template Parameter() Event Occurrence() Interaction Fragment() Event Occurrence() Message End() Time Interval() Interval() Deployment Target() Named Element(name, visibility) Merge Node() Control Node() Variable() Connectable Element() Variable() Typed Element() Variable() Multiplicity Element(is Ordered, is Unique, lower, upper) Interaction() Behavior() Interaction() Interaction Fragment() Templateable Element() Element() Lifeline() Named Element(name, visibility) Value Pin() Input Pin() Element() Deployment Specification() Artifact() Constraint() Packageable Element() Constraint() constrained Element Element() Interaction Operand() Namespace() Interaction Operand() Interaction Fragment() State Machine() Behavior() Enumeration Literal() Instance Specification() Manifestation() Abstraction() Instance Value() Value Specification() Call Action() Invocation Action() Structural Feature(is Read Only) Feature(is Static) Structural Feature(is Read Only) Typed Element() Structural Feature(is Read Only) Multiplicity Element(is Ordered, is Unique, lower, upper) Read Extent Action() Action() Element Import() Directed Relationship() Element Import() imported Element Packageable Element() Behaviored Classifier() Classifier(is Abstract) Behaviored Classifier() classifier Behavior Behavior() Literal Unlimited Natural() Literal Specification() Connector() Feature(is Static) Collaboration Occurrence() Named Element(name, visibility) Template Signature() Element() Write Link Action() Link Action() Transition() Redefinable Element() Association() Classifier(is Abstract) Association() Relationship() Association() member End Property(is Composite, is Derived, is Derived Union, aggregation) Qualifier Value() Element() Qualifier Value() qualifier Property(is Composite, is Derived, is Derived Union, aggregation) Package Import() Directed Relationship() Multiplicity Element(is Ordered, is Unique, lower, upper) Element() Structured Activity Node() Action() Structured Activity Node() Namespace() Structured Activity Node() Activity Group() Deployment() Dependency() Template Binding() Directed Relationship() Accept Event Action() Action() Interaction Fragment() Named Element(name, visibility) Loop Node() Structured Activity Node() Conditional Node() Structured Activity Node() Profile Application() Package Import() Create Object Action() Action() Create Object Action() classifier Classifier(is Abstract) Create Object Action() result Output Pin() Literal Specification() Value Specification() Interaction Constraint() Constraint() Link End Creation Data() Link End Data() Abstraction() Dependency() Control Flow() Activity Edge() Object Flow() Activity Edge() Fork Node() Control Node() Property(is Composite, is Derived, is Derived Union, aggregation) Structural Feature(is Read Only) Property(is Composite, is Derived, is Derived Union, aggregation) Connectable Element() Property(is Composite, is Derived, is Derived Union, aggregation) Deployment Target() Property(is Composite, is Derived, is Derived Union, aggregation) association Association() Execution Environment() Node() Node() Class(is Active) Node() Deployment Target() Activity Edge() Redefinable Element() Activity Parameter Node() Object Node() String Expression() Templateable Element() Pin() Object Node() Pin() Multiplicity Element(is Ordered, is Unique, lower, upper) Activity Final Node() Final Node() Time Expression() Value Specification() Extension Point() Redefinable Element() Time Trigger() Trigger() Redefinable Element() Named Element(name, visibility) Call Operation Action() Call Action() Change Trigger() Trigger() Primitive Type() Data Type() Region() Namespace() Region() Redefinable Element() Duration Interval() Interval() Input Pin() Pin() Template Parameter Substitution() Element() Write Variable Action() Variable Action() Generalization() Directed Relationship() Generalization() general Classifier(is Abstract) Read Is Classified Object Action() Action() Flow Final Node() Final Node() Test Identity Action() Action() Test Identity Action() second Input Pin() Feature(is Static) Redefinable Element() Feature(is Static) featuring Classifier Classifier(is Abstract) Invocation Action() Action() Add Variable Value Action() Write Variable Action() Operation() Behavioral Feature() Operation() Typed Element() Operation() Multiplicity Element(is Ordered, is Unique, lower, upper) Operation() Parameterable Element() Operation() owned Parameter Parameter(direction) Part Decomposition() Interaction Occurrence() Structured Classifier() Classifier(is Abstract) Device() Node() Deployed Artifact() Named Element(name, visibility) Write Structural Feature Action() Structural Feature Action() Write Structural Feature Action() value Input Pin() Read Variable Action() Variable Action() Execution Occurrence() Interaction Fragment() Parameter(direction) Connectable Element() Parameter(direction) Typed Element() Parameter(direction) Multiplicity Element(is Ordered, is Unique, lower, upper) Reply Action() Action() Final State() State() Read Link Object End Action() Action() Protocol Conformance() Directed Relationship() Enumeration() Data Type() Gate() Message End() Destroy Link Action() Write Link Action() Instance Specification() Packageable Element() Instance Specification() Deployment Target() Instance Specification() Deployed Artifact() Instance Specification() slot Slot() Instance Specification() classifier Classifier(is Abstract) Extension() Association() Message Trigger() Trigger() Clear Structural Feature Action() Structural Feature Action() Read Self Action() Action() Read Self Action() result Output Pin() Initial Node() Control Node() Call Behavior Action() Call Action() Artifact() Classifier(is Abstract) Artifact() Deployed Artifact() Generalization Set() Packageable Element() Generalization Set() generalization Generalization() Connection Point Reference() Vertex() Interaction Occurrence() Interaction Fragment() Combined Fragment() Interaction Fragment() Central Buffer Node() Object Node() Behavioral Feature() Namespace() Behavioral Feature() Feature(is Static) Actor() Classifier(is Abstract) Signal Trigger() Message Trigger() Behavior() Class(is Active) Behavior() specification Behavioral Feature() Raise Exception Action() Action() Comment() Templateable Element() Information Item() Classifier(is Abstract) Parameterable Element() Element() State Invariant() Interaction Fragment() Broadcast Signal Action() Invocation Action() Data Type() Classifier(is Abstract) Time Observation Action() Write Structural Feature Action() Association Class() Class(is Active) Association Class() Association() Encapsulated Classifier() Structured Classifier() Clause() Element() Protocol State Machine() State Machine() Start Owned Behavior Action() Action() Dependency() Packageable Element() Dependency() Directed Relationship() Message End() Named Element(name, visibility) Named Element(name, visibility) Templateable Element() Include() Named Element(name, visibility) Include() Directed Relationship() Accept Call Action() Accept Event Action() Package Merge() Directed Relationship() Type() Packageable Element() Extend() Named Element(name, visibility) Extend() Directed Relationship() Variable Action() Action() Pseudostate() Vertex()
Label: interaction, Text: Function() Sequence Node(name) Function() Process Node(label) Function() sequence Nodes Sequence() Function() flows Flow() Function() output Ports Output Port() Function() input Ports Input Port() Function() descriptions Description(content) Sequence Node(name) Sequence() Sequence Node(name) And() Sequence() Or() Sequence() Start() Sequence() Final() Sequence() Loop() Sequence() Input Port() Port(id) Port(id) Item(name) Flow() Process Node(label) Flow() inputflow Edge Input Port() Flow() items Item(name) Process Node(label) Output Port() Port(id) Output Port() outputflow Edge Flow() Description(content)
Label: graphicaleditor, Text: D Vertex() D Graph Element(name) D Vertex() source D Node(point Of View) D Graph Element(name) D Node(point Of View) D Graph Element(name) D Node(point Of View) D Typed Element() D Node(point Of View) D Contained Element() D Node(point Of View) vertices D Vertex() D Link() D Contained Vertex() D Link() D Typed Element() D Reference(property) D Vertex() D Containment(compartment) D Contained Vertex() Graph() elements D Graph Element(name) D Typed Element() D Contained Element() D Graph Element(name) D Contained Element() containment D Node(point Of View) D Contained Vertex() D Contained Element() D Contained Vertex() D Vertex()
Label: iot, Text: Program() board Library() Program() sensors Imports Sensor Import(name) Program() definitions Board Definition(name, di, do, ain, aout) Sensor Import(name) Library() boardtype Board Definition(name, di, do, ain, aout) Board Definition(name, di, do, ain, aout) Rule(type) condition Or(operator) Rule(type) body Rule Body() Or(operator) right Expression() Expression() Or(operator) Parenthesis() Expression() Parenthesis() sub Or(operator) Value() Parenthesis() Attribute() Value() Attribute() name Node(name) Attribute() component Component(name) Delta() Value() Delta() attr Attribute() Number Literal(float, int) Value() State(value) Rule Body() assignment Assignment() Assignment() attribute Attribute() Node(name) board Type Board Definition(name, di, do, ain, aout) Node(name) components Component(name) Component(name) sensor Sensor Import(name) Component(name) properties Component Body(io, type, pinned, pin) Component Body(io, type, pinned, pin) rate Rate(value) Component Body(io, type, pinned, pin) map Map() OUTPUT() DIGITAL() Map() out Range(low, high) Range(low, high) Rate(value) Smoothing(value) And() Expression() Comparison() Expression() Exp() Expression() Factor() Expression()
Label: graphicaleditor, Text: Edge() target View(visible, type, mutable) Edge() bendpoints Bendpoints() Edge() target Anchor Anchor() Node() View(visible, type, mutable) Node() layout Constraint Layout Constraint() Style() Fill Style(fill Color, transparency, gradient) Style() Fill Style(fill Color, transparency, gradient) gradient Gradient Data() Line Style(line Color, line Width) Style() Font Style(font Color, font Name, font Height, bold, italic, underline, strike Through) Style() Title Style(show Title) Style() Sorting Style(sorting, sorting Keys) Style() Sorting Style(sorting, sorting Keys) sorting Keys Sort Key Map() Description Style(description) Style() Layout Constraint() Size(width, height) Layout Constraint() Location(x, y) Layout Constraint() Bounds() Location(x, y) Bounds() Size(width, height) Ratio(value) Layout Constraint() Anchor() Bendpoints() Automatic() Identity Anchor(id) Anchor() Tree() More() Above() Chamfered() Routing Style(routing, smoothness, avoid Obstructions, closest Distance, jump Link Status, jump Link Type, jump Links Reverse, rounded Bendpoints Radius) Style() View(visible, type, mutable) target Edges Edge() View(visible, type, mutable) transient Children Node() View(visible, type, mutable) styles Style() View(visible, type, mutable) diagram Diagram(name, measurement Unit) Relative Bendpoints(points) Bendpoints() Relative Bendpoints(points) points Relative Bendpoint List() Diagram(name, measurement Unit) View(visible, type, mutable) Diagram(name, measurement Unit) Transient Edges Edge() Image(data) Canonical Style(canonical) Style() Shape Style() Font Style(font Color, font Name, font Height, bold, italic, underline, strike Through) Shape Style() Description Style(description) Shape Style() Fill Style(fill Color, transparency, gradient) Shape Style() Line Style(line Color, line Width) Connector Style() Routing Style(routing, smoothness, avoid Obstructions, closest Distance, jump Link Status, jump Link Type, jump Links Reverse, rounded Bendpoints Radius) Connector Style() Line Style(line Color, line Width) Relative Bendpoint List() Page Style(page X, page Y, page Width, page Height) Style() Drawer Style(collapsed) Style() Guide Style() Style() Guide Style() vertical Guides Guide(position) Guide(position) node Map Node Entry(value) Node Entry(value) key Node() Bottom() Filtering Style(filtering, filtering Keys) Style() Filtering Style(filtering, filtering Keys) filtering Keys Filter Key List() Filter Key List() Sort Key Map() Descending() Diagram Style() Page Style(page X, page Y, page Width, page Height) Diagram Style() Guide Style() Diagram Style() Description Style(description) Image Style(anti Alias, maintain Aspect Ratio) Style() Image Style(anti Alias, maintain Aspect Ratio) crop Bound Bounds() Image Buffer Style() Image Style(anti Alias, maintain Aspect Ratio) Image Buffer Style() image Buffer Image(data) Pixel() Properties Set Style() Named Style(name) Properties Set Style() properties Map String To Property Value Map Entry(key) String To Property Value Map Entry(key) value Property Value(raw Value) Property Value(raw Value) String Object Converter() Single Value Style(raw Value) Data Type Style() List Value Style(raw Values List) Data Type Style() Named Style(name) Style() String Object Converter() Data Type Style() Named Style(name) Data Type Style() String Object Converter() Int Value Style(int Value) Named Style(name) Int List Value Style(int List Value) Named Style(name) Boolean Value Style(boolean Value) Named Style(name) Double Value Style(double Value) Named Style(name) Double List Value Style(double List Value) Named Style(name) String Value Style(string Value) Named Style(name) String List Value Style(string List Value) Named Style(name) E Object Value Style() Named Style(name) E Object List Value Style() Named Style(name) Byte Array Value Style(byte Array Value) Named Style(name) Boolean List Value Style(boolean List Value) Named Style(name) Hinted Diagram Link Style(hint) Diagram Link Style() Hinted Diagram Link Style(hint) Style() Diagram Link Style() Style() Diagram Link Style() diagram Link Diagram(name, measurement Unit) Multi Diagram Link Style() Style() Multi Diagram Link Style() diagram Links Diagram(name, measurement Unit) Center() Text Style(text Alignment) Style() Double() Line Type Style(line Type) Style() Solid Arrow() Arrow Style(arrow Source, arrow Target) Style() Shape() Node() Shape() Shape Style() Compartment() Basic Compartment() Compartment() Canonical Style(canonical) Compartment() Title Style(show Title) List Compartment() Basic Compartment() List Compartment() Sorting Style(sorting, sorting Keys) List Compartment() Filtering Style(filtering, filtering Keys) List Compartment() Title Style(show Title) Connector() Edge() Connector() Connector Style() Standard Diagram() Diagram(name, measurement Unit) Standard Diagram() Diagram Style() Decoration Node() Basic Decoration Node() Basic Decoration Node() Node() Basic Compartment() Decoration Node() Basic Compartment() Drawer Style(collapsed) Basic Semantic Compartment() Basic Decoration Node() Basic Semantic Compartment() Drawer Style(collapsed) Semantic List Compartment() Basic Semantic Compartment() Semantic List Compartment() Sorting Style(sorting, sorting Keys) Semantic List Compartment() Filtering Style(filtering, filtering Keys) Semantic List Compartment() Title Style(show Title) Horizontal() Gradient Data()
Label: workflow, Text: Activity() Named Element(name) Activity() nodes Activity Node(running) Activity() edges Activity Edge() Activity() inputs Variable(name) Activity Node(running) Named Element(name) Activity Node(running) incoming Activity Edge() Activity Node(running) activity Activity() Activity Edge() Named Element(name) Activity Edge() target Activity Node(running) Control Flow() Activity Edge() Control Flow() guard Boolean Variable() Control Node() Activity Node(running) Executable Node() Activity Node(running) Action() Executable Node() Opaque Action() Action() Opaque Action() expressions Expression() Named Element(name) Initial Node() Control Node() Final Node() Control Node() Activity Final Node() Final Node() Fork Node() Control Node() Join Node() Control Node() Merge Node() Control Node() Decision Node() Control Node() Variable(name) initial Value Value() Integer Variable() Variable(name) Boolean Variable() Variable(name) Value() Boolean Value(value) Value() Integer Value(value) Value() Expression() Integer Expression() Expression() Integer Expression() operand1 Integer Variable() Boolean Expression() Expression() Boolean Expression() assignee Boolean Variable() Integer Calculation Expression(operator) Integer Expression() Integer Calculation Expression(operator) assignee Integer Variable() Integer Comparison Expression(operator) Integer Expression() Integer Comparison Expression(operator) assignee Boolean Variable() SUBRACT() GREATER() Boolean Unary Expression(operator) Boolean Expression() Boolean Unary Expression(operator) operand Boolean Variable() Boolean Binary Expression(operator) Boolean Expression() Boolean Binary Expression(operator) operand2 Boolean Variable() NOT() OR()
Label: constraints, Text: Root CS() packages Package CS(name) Root CS() constraints Constraint CS() Package CS(name) classes Class CS(name) Class CS(name) extends Path Name CS() Class CS(name) properties Property CS(name) Class CS(name) operations Operation CS(name) Property CS(name) type Ref Path Name CS() Operation CS(name) params Parameter CS(name) Operation CS(name) result Ref Path Name CS() Operation CS(name) body Exp CS() Parameter CS(name) type Ref Path Name CS() Constraint CS() type Ref Path Name CS() Constraint CS() invariants Invariant CS() Invariant CS() exp Exp CS() Exp CS() Logic Exp CS(op) Exp CS() Logic Exp CS(op) right Call Exp CS() Call Exp CS() Logic Exp CS(op) Call Exp CS() nav Exp Navigation Exp CS() Primary Exp CS() Call Exp CS() Navigation Exp CS() Primary Exp CS() Name Exp CS() Navigation Exp CS() Name Exp CS() exp Name Path Name CS() Name Exp CS() rounded Brackets Rounded Bracket Clause CS() Name Exp CS() call Exp Call Exp CS() Loop Exp CS(logic Op) Navigation Exp CS() Loop Exp CS(logic Op) it Var Iterator Var CS(it Name) Loop Exp CS(logic Op) exp Exp CS() Collect Exp CS() Loop Exp CS(logic Op) Iterator Var CS(it Name) it Type Path Name CS() Iterate Exp CS() Loop Exp CS(logic Op) Iterate Exp CS() acc Var Acc Var CS(acc Var Name) Acc Var CS(acc Var Name) acc Type Path Name CS() Acc Var CS(acc Var Name) acc Init Exp Exp CS() Rounded Bracket Clause CS() args Exp CS() Literal Exp CS() Primary Exp CS() Int Literal Exp CS(int Symbol) Literal Exp CS() String Literal Exp CS(string Symbol) Literal Exp CS() Boolean Literal Exp CS() Literal Exp CS() Path Name CS() path Path CS() Path CS() Path Variable CS(var Name) Path CS() Path Element CS() Path CS() Path Element CS() path Name Feature(name, visibility, scope) Boolean Exp CS(bool Symbol) Boolean Literal Exp CS() Exists Exp CS() Loop Exp CS(logic Op) Exists Exp CS() acc Vars Acc Var CS(acc Var Name) Navigation Name Exp CS() Navigation Exp CS() Navigation Name Exp CS() exp Name Navigation Path Name CS() Navigation Name Exp CS() rounded Brackets Rounded Bracket Clause CS() Navigation Name Exp CS() call Exp Call Exp CS() Navigation Path Name CS() path Navigation Path CS() Navigation Path CS() Navigation Path Variable CS(var Name) Navigation Path CS() Navigation Path Element CS() Navigation Path CS() Navigation Path Element CS() path Name Feature(name, visibility, scope) For All Exp CS() Loop Exp CS(logic Op) For All Exp CS() acc Vars Acc Var CS(acc Var Name) Class Diagram() classes Classifier(abstract, derived) Class Diagram() relations Relation(nsrc, ntar, derived) Class Diagram() types Primitive Element(type) Class Diagram() constraints Constraint(id) Named Element(name) Primitive Element(type) Named Element(name) Parameter() type Named Element(name) Feature(name, visibility, scope) type Named Element(name) Modifier(visibility, scope) Named Element(name) Classifier(abstract, derived) Modifier(visibility, scope) Classifier(abstract, derived) features Feature(name, visibility, scope) Classifier(abstract, derived) supplier Class() Class() Classifier(abstract, derived) Attribute(derived) Feature(name, visibility, scope) Constraint(id) type Class() Constraint(id) expressions Root CS() Operation() Feature(name, visibility, scope) Operation() params Parameter() Operation() operators Operator(operator) Operator(operator) Relation(nsrc, ntar, derived) Modifier(visibility, scope) Relation(nsrc, ntar, derived) tar Classifier(abstract, derived) Dependency() Relation(nsrc, ntar, derived) Association() Relation(nsrc, ntar, derived) Aggregation() Relation(nsrc, ntar, derived) Composition() Relation(nsrc, ntar, derived) Association Class() Classifier(abstract, derived) Association Class() association Association() Date() package() classifier() negative()
Label: entities, Text: Domainmodel() elements Abstract Element() Abstract Element() Package Declaration(name) elements Abstract Element() Import(imported Namespace) Abstract Element() E Type(name) Type(name) Abstract Element() Data Type() Type(name) Entity() Type(name) Entity() features Feature(many, name, default Val) Validator(name, value, svalue) Feature(many, name, default Val) type Type(name) Feature(many, name, default Val) valdiators Validator(name, value, svalue)
Label: constraints, Text: Ocl Expression() Located Element(location, comments Before, comments After) Ocl Expression() type Ocl Type(name) Ocl Expression() if Exp1 If Exp() Ocl Expression() applied Property Property Call Exp() Ocl Expression() collection Collection Exp() Ocl Expression() let Exp Let Exp() Ocl Expression() loop Exp Loop Exp() Ocl Expression() parent Operation Operation Call Exp(operation Name) Ocl Expression() initialized Variable Variable Declaration(id, var Name) Ocl Expression() owning Operation Operation(name) Ocl Expression() owning Attribute Attribute(name) Variable Exp() Ocl Expression() Variable Exp() referred Variable Variable Declaration(id, var Name) Super Exp() Ocl Expression() Primitive Exp() Ocl Expression() String Exp(string Symbol) Primitive Exp() String Exp(string Symbol) string Symbol String() Boolean Exp(boolean Symbol) Primitive Exp() Boolean Exp(boolean Symbol) boolean Symbol Boolean() Numeric Exp() Primitive Exp() Real Exp(real Symbol) Numeric Exp() Real Exp(real Symbol) real Symbol Double() Integer Exp(integer Symbol) Numeric Exp() Integer Exp(integer Symbol) integer Symbol Integer() Collection Exp() elements Ocl Expression() Bag Exp() Collection Exp() Ordered Set Exp() Collection Exp() Sequence Exp() Collection Exp() Set Exp() Collection Exp() Tuple Exp() Ocl Expression() Tuple Exp() tuple Part Tuple Part() Tuple Part() Variable Declaration(id, var Name) Tuple Part() tuple Tuple Exp() Map Exp() Ocl Expression() Map Exp() elements Map Element() Map Element() Located Element(location, comments Before, comments After) Map Element() map Map Exp() Map Element() value Ocl Expression() Enum Literal Exp(name) Ocl Expression() Enum Literal Exp(name) name String() Ocl Undefined Exp() Ocl Expression() Property Call Exp() source Ocl Expression() Navigation Or Attribute Call Exp(name) Property Call Exp() Navigation Or Attribute Call Exp(name) name String() Operation Call Exp(operation Name) Property Call Exp() Operation Call Exp(operation Name) arguments Ocl Expression() Operation Call Exp(operation Name) operation Name String() Operator Call Exp() Operation Call Exp(operation Name) Collection Operation Call Exp() Operation Call Exp(operation Name) Loop Exp() Property Call Exp() Loop Exp() body Ocl Expression() Loop Exp() iterators Iterator() Iterate Exp() Loop Exp() Iterate Exp() result Variable Declaration(id, var Name) Iterator Exp(name) Loop Exp() Iterator Exp(name) name String() Let Exp() in Ocl Expression() Let Exp() variable Variable Declaration(id, var Name) If Exp() else Expression Ocl Expression() Variable Declaration(id, var Name) Located Element(location, comments Before, comments After) Variable Declaration(id, var Name) var Name String() Variable Declaration(id, var Name) type Ocl Type(name) Variable Declaration(id, var Name) init Expression Ocl Expression() Variable Declaration(id, var Name) let Exp Let Exp() Variable Declaration(id, var Name) base Exp Iterate Exp() Variable Declaration(id, var Name) variable Exp Variable Exp() Iterator() Variable Declaration(id, var Name) Iterator() loop Expr Loop Exp() Parameter() Variable Declaration(id, var Name) Parameter() operation Operation(name) Collection Type() element Type Ocl Type(name) Ocl Type(name) ocl Expression Ocl Expression() Ocl Type(name) name String() Ocl Type(name) definitions Ocl Context Definition() Ocl Type(name) operation Operation(name) Ocl Type(name) map Type Map Type() Ocl Type(name) attribute Attribute(name) Ocl Type(name) collection Types Collection Type() Ocl Type(name) tuple Type Attribute Tuple Type Attribute(name) Ocl Type(name) variable Declaration Variable Declaration(id, var Name) Primitive() Ocl Type(name) String Type() Primitive() Boolean Type() Primitive() Numeric Type() Primitive() Integer Type() Numeric Type() Real Type() Numeric Type() Bag Type() Collection Type() Ordered Set Type() Collection Type() Sequence Type() Collection Type() Set Type() Collection Type() Ocl Any Type() Ocl Type(name) Tuple Type() Ocl Type(name) Tuple Type() attributes Tuple Type Attribute(name) Tuple Type Attribute(name) Located Element(location, comments Before, comments After) Tuple Type Attribute(name) type Ocl Type(name) Tuple Type Attribute(name) tuple Type Tuple Type() Tuple Type Attribute(name) name String() Ocl Model Element() Ocl Type(name) Ocl Model Element() model Ocl Model(name) Map Type() key Type Ocl Type(name) Ocl Feature Definition() Located Element(location, comments Before, comments After) Ocl Feature Definition() feature Ocl Feature() Ocl Feature Definition() context Ocl Context Definition() Ocl Context Definition() Located Element(location, comments Before, comments After) Ocl Context Definition() definition Ocl Feature Definition() Ocl Context Definition() context Ocl Type(name) Ocl Feature() Located Element(location, comments Before, comments After) Ocl Feature() definition Ocl Feature Definition() Attribute(name) Ocl Feature() Attribute(name) name String() Attribute(name) init Expression Ocl Expression() Attribute(name) type Ocl Type(name) Operation(name) Ocl Feature() Operation(name) name String() Operation(name) parameters Parameter() Operation(name) return Type Ocl Type(name) Operation(name) body Ocl Expression() Ocl Model(name) Located Element(location, comments Before, comments After) Ocl Model(name) name String() Ocl Model(name) elements Ocl Model Element() Located Element(location, comments Before, comments After) comments After String() Module(name) ocl Features Ocl Feature Definition() Module(name) name String() Boolean() Double() Integer() String()
Label: features, Text: Feature(name, value Type) Clonable(state) Feature(name, value Type) references Reference() Feature(name, value Type) typed Value Typed Value(integer Value, string Value, float Value) Feature(name, value Type) described Node Node(max, min, id) Feature(name, value Type) constraints Constraint(text) Feature Group() Node(max, min, id) Node(max, min, id) properties Feature(name, value Type) Reference() Clonable(state) Reference() feature Feature(name, value Type) Project() meta Meta Model Feature(name, value Type) Typed Value(integer Value, string Value, float Value) feature Value Feature(name, value Type) Clonable(state) Node(max, min, id) Constraint(text) STRING() UNDECIDED()
Label: class-diagram, Text: Named Element(name, Archpoint) Element() Named Element(name, Archpoint) name String() Named Element(name, Archpoint) Archpoint Boolean() Classifier() Named Element(name, Archpoint) Classifier() attribute Property() Classifier() package Package() Classifier() generalization Generalization() Structural Feature(is Read Only) Typed Element() Structural Feature(is Read Only) is Read Only Boolean() Class(is Active) nested Classifier Classifier() Class(is Active) owned Operation Operation(is Query, is Ordered, is Unique, lower, upper) Class(is Active) owned Attribute Property() Class(is Active) is Active Boolean() Class(is Active) reference Association() Property() Structural Feature(is Read Only) Property() class Class(is Active) Property() datatype Data Type() Property() association Association() Property() classifier Classifier() Association() Classifier() Association() Relationship() Association() navigable Owned End Property() Association() target Class(is Active) Operation(is Query, is Ordered, is Unique, lower, upper) Named Element(name, Archpoint) Operation(is Query, is Ordered, is Unique, lower, upper) class Class(is Active) Operation(is Query, is Ordered, is Unique, lower, upper) datatype Data Type() Operation(is Query, is Ordered, is Unique, lower, upper) is Unique Boolean() Operation(is Query, is Ordered, is Unique, lower, upper) upper Integer() Data Type() Classifier() Data Type() owned Attribute Property() Data Type() owned Operation Operation(is Query, is Ordered, is Unique, lower, upper) String() Boolean() Typed Element() Named Element(name, Archpoint) Package() Named Element(name, Archpoint) Package() classifiers Classifier() Integer() Generalization() Directed Relationship() Generalization() specific Classifier() Generalization() source Class(is Active) Relationship() Element() Element() Directed Relationship() Relationship()
Label: relational, Text: Rdbms Column(rdbms Type) Rdbms Model Element(rdbms Name, rdbms Kind, id) Rdbms Column(rdbms Type) rdbms Owner Rdbms Table() Rdbms Column(rdbms Type) rdbms Key Rdbms Key() Rdbms Column(rdbms Type) rdbms Foreign Key Rdbms Foreign Key() Rdbms Foreign Key() Rdbms Model Element(rdbms Name, rdbms Kind, id) Rdbms Foreign Key() rdbms Owner Rdbms Table() Rdbms Foreign Key() rdbms Refers To Rdbms Key() Rdbms Foreign Key() rdbms Column Rdbms Column(rdbms Type) Rdbms Key() Rdbms Model Element(rdbms Name, rdbms Kind, id) Rdbms Key() rdbms Column Rdbms Column(rdbms Type) Rdbms Key() rdbms Refers To Opposite Rdbms Foreign Key() Rdbms Key() rdbms Owner Rdbms Table() Rdbms Model Element(rdbms Name, rdbms Kind, id) Rdbms Schema() Rdbms Model Element(rdbms Name, rdbms Kind, id) Rdbms Schema() rdbms Table Rdbms Table() Rdbms Table() Rdbms Model Element(rdbms Name, rdbms Kind, id) Rdbms Table() rdbms Column Rdbms Column(rdbms Type) Rdbms Table() rdbms Foreign Key Rdbms Foreign Key() Rdbms Table() rdbms Key Rdbms Key() Rdbms Table() rdbms Schema Rdbms Schema()
Label: graphicaleditor, Text: Property(key, value) Property Container() properties Property(key, value) Graphics Algorithm Container() Property Container() Style Container() styles Style(id, description, horizontal Alignment, vertical Alignment, angle, stretch H, stretch V, proportional) Shape() Anchor Container() Shape() container Container Shape() Container Shape() children Shape() Diagram(grid Unit, diagram Type Id, name, snap To Grid, show Guides, vertical Grid Unit, version) Container Shape() Diagram(grid Unit, diagram Type Id, name, snap To Grid, show Guides, vertical Grid Unit, version) Style Container() Diagram(grid Unit, diagram Type Id, name, snap To Grid, show Guides, vertical Grid Unit, version) connections Connection() Diagram(grid Unit, diagram Type Id, name, snap To Grid, show Guides, vertical Grid Unit, version) colors Color(red, green, blue) Diagram(grid Unit, diagram Type Id, name, snap To Grid, show Guides, vertical Grid Unit, version) fonts Font(name, size, italic, bold) Diagram(grid Unit, diagram Type Id, name, snap To Grid, show Guides, vertical Grid Unit, version) pictogram Links Pictogram Link() Pictogram Element(visible, active) Graphics Algorithm Container() Pictogram Element(visible, active) graphics Algorithm Graphics Algorithm(width, height, x, y) Pictogram Element(visible, active) link Pictogram Link() Connection() Anchor Container() Connection() end Anchor() Connection() parent Diagram(grid Unit, diagram Type Id, name, snap To Grid, show Guides, vertical Grid Unit, version) Connection() connection Decorators Connection Decorator(location Relative, location) Anchor() Pictogram Element(visible, active) Anchor() parent Anchor Container() Anchor() incoming Connections Connection() Anchor() referenced Graphics Algorithm Graphics Algorithm(width, height, x, y) Anchor Container() Pictogram Element(visible, active) Anchor Container() anchors Anchor() Fix Point Anchor() Advanced Anchor(use Anchor Location As Connection Endpoint) Fix Point Anchor() location Point(x, y, before, after) Box Relative Anchor(relative Width, relative Height) Advanced Anchor(use Anchor Location As Connection Endpoint) Chopbox Anchor() Anchor() Connection Decorator(location Relative, location) Shape() Connection Decorator(location Relative, location) connection Connection() Free Form Connection() Connection() Free Form Connection() bendpoints Point(x, y, before, after) Manhattan Connection() Connection() Pictogram Link() Property Container() Pictogram Link() pictogram Element Pictogram Element(visible, active) Advanced Anchor(use Anchor Location As Connection Endpoint) Anchor() Curved Connection() Connection() Curved Connection() control Points Precision Point(x, y) Composite Connection() Connection() Composite Connection() children Curved Connection() Graphics Algorithm(width, height, x, y) Graphics Algorithm Container() Graphics Algorithm(width, height, x, y) Abstract Style(line Width, line Style, filled, line Visible, transparency) Graphics Algorithm(width, height, x, y) pictogram Element Pictogram Element(visible, active) Graphics Algorithm(width, height, x, y) style Style(id, description, horizontal Alignment, vertical Alignment, angle, stretch H, stretch V, proportional) Polyline() Graphics Algorithm(width, height, x, y) Polyline() points Point(x, y, before, after) Ellipse() Graphics Algorithm(width, height, x, y) Text() Abstract Text(horizontal Alignment, vertical Alignment, angle, value) Polygon() Polyline() Rectangle() Graphics Algorithm(width, height, x, y) Rounded Rectangle(corner Height, corner Width) Graphics Algorithm(width, height, x, y) Image(id, stretch H, stretch V, proportional) Graphics Algorithm(width, height, x, y) Platform Graphics Algorithm(id) Graphics Algorithm(width, height, x, y) Abstract Text(horizontal Alignment, vertical Alignment, angle, value) Graphics Algorithm(width, height, x, y) Abstract Text(horizontal Alignment, vertical Alignment, angle, value) font Font(name, size, italic, bold) Abstract Text(horizontal Alignment, vertical Alignment, angle, value) style Regions Text Style Region(start, end) Multi Text() Abstract Text(horizontal Alignment, vertical Alignment, angle, value) UNSPECIFIED() LOCATION TYPE ABSOLUTE END() UNDERLINE SQUIGGLE() Rendering Style() adapted Gradient Colored Areas Adapted Gradient Colored Areas(defined Style Id, gradient Type) Style(id, description, horizontal Alignment, vertical Alignment, angle, stretch H, stretch V, proportional) style Container Style Container() Style(id, description, horizontal Alignment, vertical Alignment, angle, stretch H, stretch V, proportional) Abstract Style(line Width, line Style, filled, line Visible, transparency) Style(id, description, horizontal Alignment, vertical Alignment, angle, stretch H, stretch V, proportional) font Font(name, size, italic, bold) Abstract Style(line Width, line Style, filled, line Visible, transparency) foreground Color(red, green, blue) Abstract Style(line Width, line Style, filled, line Visible, transparency) rendering Style Rendering Style() Gradient Colored Location(location Type, location Value) color Color(red, green, blue) Gradient Colored Area() end Gradient Colored Location(location Type, location Value) Gradient Colored Areas(style Adaption) gradient Color Gradient Colored Area() Adapted Gradient Colored Areas(defined Style Id, gradient Type) adapted Gradient Colored Areas Gradient Colored Areas(style Adaption) Font(name, size, italic, bold) Point(x, y, before, after) Color(red, green, blue) Precision Point(x, y) Text Style(underline, underline Style, strikeout) font Font(name, size, italic, bold) Text Style(underline, underline Style, strikeout) strikeout Color Color(red, green, blue) Text Style Region(start, end) style Text Style(underline, underline Style, strikeout)
Label: education, Text: Course(subject, weight) school School(name, address) Course(subject, weight) teacher Teacher(name) Course(subject, weight) school Class School Class(code) School(name, address) years Year(starting Date) School(name, address) teachers Teacher(name) School(name, address) courses Course(subject, weight) School Class(code) year Year(starting Date) School Class(code) students Student(name) School Class(code) courses Course(subject, weight) School Class(code) homeroom Teacher Teacher(name) Specialisation Course(specialisation) Course(subject, weight) Student(name) school Class School Class(code) Teacher(name) school School(name, address) Teacher(name) courses Course(subject, weight) Teacher(name) homeroomed Class School Class(code) Year(starting Date) school School(name, address) Year(starting Date) school Classes School Class(code) Limited Capacity Course(capacity) Course(subject, weight)
Label: interaction, Text: Function(domain) Sequence Node(name, t Min, t Max) Function(domain) Model Element(model Id, model Name) Function(domain) sequence Nodes Sequence() Function(domain) flows Flow(flow Name) Function(domain) output Ports Output Port() Function(domain) input Ports Input Port() Function(domain) descriptions Description(content) Function(domain) tokens Token() Function(domain) property Function Property(description) Sequence Node(name, t Min, t Max) Sequence() Sequence Node(name, t Min, t Max) And() Sequence() Or() Sequence() Start() Sequence() Final() Sequence() Loop() Sequence() Input Port() Port(id) Port(id) Item(name) Flow(flow Name) inputflow Edge Input Port() Flow(flow Name) items Item(name) Output Port() Port(id) Output Port() outputflow Edge Flow(flow Name) Description(content) form() Loop Exit() Sequence() Iteration() Sequence() Token() Function Property(description) Pattern Catalog(id) patterns Function(domain) Pattern Catalog(id) system Patterns System Pattern(pattern Id, name, alias, challeng, description, creation Date, known Applications) Workbench() function Properties Function Property(description) Workbench() problems Problem(name, description) Workbench() domains Domain(name, description) Workbench() keywords Keyword(value) Workbench() features Feature(name, description) Workbench() conditions Condition(name) Workbench() contexts Context(description) Workbench() working Models Model() Workbench() pattern Catalog Pattern Catalog(id) Workbench() allocations Allocation(id, redundant) Model Element(model Id, model Name) Indexable() Model Element(model Id, model Name) pattern System Pattern(pattern Id, name, alias, challeng, description, creation Date, known Applications) Indexable() keywords Keyword(value) Keyword(value) Parameter(name) concrete Role Model Element(model Id, model Name) Condition(name) Context(description) Indexable() Context(description) conditions Condition(name) Pattern Model() Abstract Model(name, version) Pattern Model() functional Pattern Function(domain) Pattern Model() physical Pattern Component() Component() Model Element(model Id, model Name) Domain(name, description) Indexable() Abstract Model(name, version) Indexable() Abstract Model(name, version) domain Domain(name, description) Feature(name, description) Force(value, scale, description) problem Problem(name, description) Force(value, scale, description) condition Condition(name) Problem(name, description) Indexable() Problem(name, description) use Cases Before Pattern Pattern Model() Problem(name, description) features To Optimize Feature(name, description) Problem(name, description) forces Force(value, scale, description) Impact(value, scale) feature Feature(name, description) Impact(value, scale) pattern System Pattern(pattern Id, name, alias, challeng, description, creation Date, known Applications) System Pattern(pattern Id, name, alias, challeng, description, creation Date, known Applications) Indexable() System Pattern(pattern Id, name, alias, challeng, description, creation Date, known Applications) parameters Parameter(name) System Pattern(pattern Id, name, alias, challeng, description, creation Date, known Applications) context Context(description) System Pattern(pattern Id, name, alias, challeng, description, creation Date, known Applications) problem Problem(name, description) System Pattern(pattern Id, name, alias, challeng, description, creation Date, known Applications) domain Domain(name, description) System Pattern(pattern Id, name, alias, challeng, description, creation Date, known Applications) pattern Model Pattern Model() System Pattern(pattern Id, name, alias, challeng, description, creation Date, known Applications) impacts Impact(value, scale) System Pattern(pattern Id, name, alias, challeng, description, creation Date, known Applications) model Element Model Element(model Id, model Name) Model() Abstract Model(name, version) Model() functional Architecture Function(domain) Model() physical Architecture Component() Allocation(id, redundant) from Function Function(domain) Allocation(id, redundant) to Component Component()
Label: class-diagram, Text: Attribute() UML Model Element(kind, name) Attribute() owner Class() Attribute() type Classifier() Association() Package Element() Association() source Class() Class() Classifier() Class() attributes Attribute() Class() reverse Association() Classifier() Package Element() Classifier() type Opposite Attribute() Package() elements Package Element() Package Element() UML Model Element(kind, name) Package Element() namespace Package() Primitive Data Type() Classifier() UML Model Element(kind, name)
Label: graphicaleditor, Text: Canvas() Identity(name) Canvas() figures Figure Gallery(implementation Bundle) Canvas() nodes Node(resize Constraint, affixed Parent Side) Canvas() connections Connection() Canvas() compartments Compartment(collapsible, needs Title) Canvas() labels Diagram Label(element Icon) Figure Gallery(implementation Bundle) Identity(name) Figure Gallery(implementation Bundle) figures Figure() Identity(name) Diagram Element() Identity(name) Diagram Element() figure Figure Handle() Diagram Element() facets Visual Facet() Node(resize Constraint, affixed Parent Side) Diagram Element() Node(resize Constraint, affixed Parent Side) node Figure Figure() Connection() Diagram Element() Connection() connection Figure Figure() Compartment(collapsible, needs Title) Diagram Element() Diagram Label(element Icon) Node(resize Constraint, affixed Parent Side) Visual Facet() General Facet(identifier, data) Visual Facet() Alignment Facet(alignment) Visual Facet() Gradient Facet(direction) Visual Facet() Label Offset Facet(x, y) Visual Facet() Default Size Facet() Visual Facet() Default Size Facet() default Size Dimension(dx, dy) Figure Marker() Layoutable() Figure Marker() parent Figure() Figure Handle() referencing Elements Diagram Element() Figure() children Figure Marker() Figure() Figure Handle() Figure() Identity(name) Figure() background Color Color() Figure() preferred Size Dimension(dx, dy) Figure() font Font() Figure() insets Insets(top, left, bottom, right) Figure() border Border() Figure() size Point(x, y) Figure Ref() Figure Marker() Figure Ref() figure Figure() Connection Figure() Figure() Decoration Figure() Figure() Shape(outline, fill, line Width, line Kind, xor Fill, xor Outline) resolved Children Figure() Label(text) Figure() Labeled Container() Figure() Rectangle() Shape(outline, fill, line Width, line Kind, xor Fill, xor Outline) Rounded Rectangle(corner Width, corner Height) Shape(outline, fill, line Width, line Kind, xor Fill, xor Outline) Ellipse() Shape(outline, fill, line Width, line Kind, xor Fill, xor Outline) Polyline() Shape(outline, fill, line Width, line Kind, xor Fill, xor Outline) Polyline() template Point(x, y) Polygon() Polyline() Scalable Polygon() Polygon() Polyline Connection() Polyline() Polyline Connection() Connection Figure() Polyline Connection() target Decoration Decoration Figure() Polyline Decoration() Polyline() Polyline Decoration() Decoration Figure() Polygon Decoration() Polygon() Polygon Decoration() Decoration Figure() Custom Class(qualified Class Name, bundle Name) attributes Custom Attribute(name, value, direct Access, multi Statement Value) Custom Attribute(name, value, direct Access, multi Statement Value) Figure Accessor(accessor) Figure Handle() Figure Accessor(accessor) typed Figure Custom Figure() Custom Figure() Figure() Custom Figure() Custom Class(qualified Class Name, bundle Name) Custom Figure() custom Children Figure Accessor(accessor) Custom Decoration() Custom Figure() Custom Decoration() Decoration Figure() Custom Connection() Custom Figure() Custom Connection() Connection Figure() Color() RGB Color(red, green, blue) Color() Constant Color(value) Color() dark Blue() Font() Basic Font(face Name, height, style) Font() ITALIC() Point(x, y) Dimension(dx, dy) Insets(top, left, bottom, right) Border() Line Border(width) Border() Line Border(width) color Color() Margin Border() Border() Margin Border() insets Insets(top, left, bottom, right) Compound Border() inner Border() Custom Border() Border() Custom Border() Custom Class(qualified Class Name, bundle Name) NSEW() LINE CUSTOM() Layout Data() owner Layoutable() Custom Layout Data() Layout Data() Custom Layout Data() Custom Class(qualified Class Name, bundle Name) Grid Layout Data(grab Excess Horizontal Space, grab Excess Vertical Space, vertical Alignment, horizontal Alignment, vertical Span, horizontal Span, horizontal Indent) Layout Data() Grid Layout Data(grab Excess Horizontal Space, grab Excess Vertical Space, vertical Alignment, horizontal Alignment, vertical Span, horizontal Span, horizontal Indent) size Hint Dimension(dx, dy) Border Layout Data(alignment, vertical) Layout Data() FILL() Layoutable() layout Data Layout Data() Layoutable() layout Layout() Layout() Custom Layout() Layout() Custom Layout() Custom Class(qualified Class Name, bundle Name) Grid Layout(num Columns, equal Width) Layout() Grid Layout(num Columns, equal Width) spacing Dimension(dx, dy) Border Layout() Layout() Border Layout() spacing Dimension(dx, dy) Flow Layout(vertical, match Minor Size, force Single Line, major Alignment, minor Alignment, major Spacing, minor Spacing) Layout() XY Layout() Layout() XY Layout Data() Layout Data() XY Layout Data() top Left Point(x, y) XY Layout Data() size Dimension(dx, dy) Stack Layout() Layout()
Label: class-diagram, Text: Named Element(name) Class Model() packages Package() Package() Named Element(name) Package() classes Class(persistent) Package() associations Association() Class(persistent) Named Element(name) Class(persistent) attributes Attribute() Attribute() Named Element(name) Association() Named Element(name) Association() target Class(persistent)
Label: activities, Text: Activity(is Read Only, is Single Execution) node Activity Node() Activity(is Read Only, is Single Execution) edge Activity Edge() Activity Node() Redefinable Element(is Leaf) Activity Node() activity Activity(is Read Only, is Single Execution) Activity Node() outgoing Activity Edge() Control Node() Activity Node() Activity Final Node() Control Node() Initial Node() Control Node() Activity Edge() Redefinable Element(is Leaf) Activity Edge() source Activity Node() Activity Edge() activity Activity(is Read Only, is Single Execution) Activity Edge() guard Value Specification() Control Flow() Activity Edge() Decision Node() Control Node() Action() Activity Node() Accept Event Action(is Un Marshall) Action() Accept Event Action(is Un Marshall) trigger Trigger() Value Specification() Named Element(visibility) Redefinable Element(is Leaf) Named Element(visibility) Named Element(visibility) package() Trigger() Named Element(visibility) Trigger() event Event() Event() Execution Event() Event() Creation Event() Event() Destruction Event() Event() Opaque Expression() Value Specification()
Label: modelling, Text: CORE Model() CORE Named Element(name) CORE Model() model Reuses CORE Model Reuse() CORE Model() model Elements CORE Model Element(partiality, visibility) CORE Model() realizes CORE Feature(parent Relationship) CORE Model() core Concern CORE Concern() CORE Impact Model() CORE Model() CORE Impact Model() impact Model Elements CORE Impact Node(scaling Factor, offset) CORE Impact Model() layouts Layout Container Map() CORE Impact Model() contributions CORE Contribution(relative Weight) CORE Concern() CORE Named Element(name) CORE Concern() models CORE Model() CORE Concern() interface CORE Interface() CORE Concern() feature Model CORE Feature Model() CORE Concern() impact Model CORE Impact Model() CORE Feature(parent Relationship) CORE Model Element(partiality, visibility) CORE Feature(parent Relationship) realized By CORE Model() CORE Feature(parent Relationship) reuses CORE Reuse() CORE Feature(parent Relationship) related To CORE Relativity(probabilistic Value) CORE Feature(parent Relationship) incoming CORE Relativity Opt2(probabilistic Value) CORE Binding() CORE Model Element(partiality, visibility) CORE Named Element(name) CORE Composition Specification() CORE Mapping() CORE Named Element(name) CORE Interface() selectable CORE Feature(parent Relationship) CORE Interface() usable CORE Model Element(partiality, visibility) CORE Interface() impacted CORE Impact Node(scaling Factor, offset) CORE Interface() defaults CORE Configuration() CORE Reuse() CORE Named Element(name) CORE Reuse() reused Concern CORE Concern() CORE Reuse() selected Configuration CORE Reuse Configuration() CORE Pattern() CORE Impact Node(scaling Factor, offset) CORE Model Element(partiality, visibility) CORE Impact Node(scaling Factor, offset) incoming CORE Contribution(relative Weight) CORE Configuration() reexposed CORE Feature(parent Relationship) CORE Configuration() extending Configurations CORE Reuse Configuration() CORE Feature Model() CORE Model() CORE Feature Model() root CORE Feature(parent Relationship) CORE Feature Model() default Configuration CORE Concern Configuration() CORE Feature Model() related Features CORE Relativity Opt2(probabilistic Value) OR() CORE Model Reuse() reuse CORE Reuse() CORE Contribution(relative Weight) impacts CORE Impact Node(scaling Factor, offset) Layout Map() value Layout Element(x, y) Layout Element(x, y) Layout Container Map() value Layout Map() CORE Feature Impact Node(relative Feature Weight) CORE Impact Node(scaling Factor, offset) CORE Feature Impact Node(relative Feature Weight) represents CORE Feature(parent Relationship) CORE Feature Impact Node(relative Feature Weight) weighted Mappings CORE Weighted Mapping(weight) CORE Model Composition Specification() CORE Weighted Mapping(weight) CORE Impact Model Binding() concern() CORE Concern Configuration() CORE Configuration() CORE Reuse Configuration() CORE Configuration() CORE Reuse Configuration() reused Configuration CORE Concern Configuration() CORE Reuse Configuration() reuse CORE Reuse() CORE Relativity(probabilistic Value) CORE Model Element(partiality, visibility) CORE Relativity(probabilistic Value) related To Feature CORE Feature(parent Relationship) CORE Relativity Opt2(probabilistic Value) features CORE Feature(parent Relationship)
Label: class-diagram, Text: Class() Classifier(access Modifier, name) Attribute(name, type) Operation(name, return Type) Design(language) elements Classifier(access Modifier, name) Design(language) relations Relation() Association() Relation() Generalization() Relation() Dependency() Relation() Composition() Relation() Relation() target Classifier(access Modifier, name) Aggregation() Relation() Realization() Relation() CPP() void() private() Interface() Classifier(access Modifier, name) Classifier(access Modifier, name) attributes Attribute(name, type) Classifier(access Modifier, name) operations Operation(name, return Type)
Label: railway, Text: Segment(Segment length, Segment height) Trackelement() Trackelement() Thing() Trackelement() Track Element sensor Sensor(Sensor year) Switch(Switch actual State) Trackelement() Switch(Switch actual State) Switch switch Position Switch Position(Switch Position switch State) Route() Thing() Route() Route exit Signal(Signal actual State) Route() Route switch Position Switch Position(Switch Position switch State) Route() Route route Definition Sensor(Sensor year) Signal(Signal actual State) Thing() Switch Position(Switch Position switch State) Thing() Switch Position(Switch Position switch State) Switch Position switch Switch(Switch actual State) Switch Position(Switch Position switch State) Switch Position route Route() Thing() Sensor(Sensor year) Thing() Sensor(Sensor year) Sensor track Element Trackelement() Signal State Kind GO() Point State Kind STRAIGHT() Individual Container() contains Thing()
Label: components, Text: Named Element(name) name String() Model Element() Named Element(name) System() Model Element() System() root Composite Instance() System() services Service() System() types Component Type() System() data Types Data Type() System() groups Group() Data Type() Model Element() Typed Element() Model Element() Typed Element() type Data Type() String() Boolean() Cardinality Element(lower, upper) Model Element() Cardinality Element(lower, upper) upper Integer() Integer() Component Instance(state) Model Element() Component Instance(state) type Component Type() Component Instance(state) state String() Component Instance(state) super Component Composite Instance() Component Instance(state) attribute Attribute Instance() Component Instance(state) binding Transmission Binding() Component Instance(state) implem Component Implementation() Component Instance(state) groups Instance Group() Primitive Instance() Component Instance(state) Composite Instance() sub Component Component Instance(state) Composite Instance() delegation Delegation Binding() ON() Binding(id) server Instance Component Instance(state) Binding(id) id String() Transmission Binding() Binding(id) Transmission Binding() server Abstract Port(role) Delegation Binding() Binding(id) Delegation Binding() exported Abstract Port(role) Attribute Instance() Valued Attribute(value) Attribute Instance() Valued Attribute(value) value String() Valued Attribute(value) attribute Basic Attribute(default Value) Dictionary Valued Attribute() Attribute Instance() Dictionary Valued Attribute() entries Entry(value) Dictionary Valued Attribute() attribute Dictionary() Entry(value) value String() Default Entry() Entry(value) Default Entry() key Dictionary Default Value(key, value) Other Entry(key) Entry(value) Other Entry(key) key String() Component Type() Model Element() Component Type() port Abstract Port(role) Component Type() attribute Attribute() Component Type() groups Type Group() Component Type() implem Type Implementation() Primitive Type() Component Type() Composite Type() Component Type() Service() Model Element() Service() operation Operation() Operation() Model Element() Operation() output Parameter() Parameter() Typed Element() Functional Service() Service() Control Service() Service() Abstract Port(role) Named Element(name) Abstract Port(role) service Service() Abstract Port(role) role String() Port(is Optional) Cardinality Element(lower, upper) Port(is Optional) Abstract Port(role) Port(is Optional) is Optional Boolean() Port Collection() Abstract Port(role) Port Collection() ids Port Id() Port Id() Named Element(name) server() Attribute() Typed Element() Basic Attribute(default Value) Attribute() Basic Attribute(default Value) default Value String() Dictionary() Attribute() Dictionary() value Type Data Type() Dictionary() keys Dictionary Default Value(key, value) Dictionary Default Value(key, value) value String() Component Implementation() Fractal Component(controller Desc, content Desc) Component Implementation() Fractal Component(controller Desc, content Desc) content Desc String() OS Gi Component(implementing Class) Component Implementation() OS Gi Component(implementing Class) implementing Class String() Type Implementation() OS Gi Type(generate Instance Bundle) Type Implementation() OS Gi Type(generate Instance Bundle) generate Instance Bundle Boolean() Group() Named Element(name) Type Group() Group() Type Group() types Component Type() Instance Group() Group() Instance Group() instances Component Instance(state)
Label: transformation, Text: Model Element() annotations Annotation(key, value) Annotation(key, value) Model Element() Named Element(name, description) Model Element() Graph Element(action) action Action() Module() Named Element(name, description) Module() units Unit(activated) Module() instances Graph() Unit(activated) Named Element(name, description) Unit(activated) parameters Parameter(kind) Unit(activated) parameter Mappings Parameter Mapping() Rule(check Dangling, injective Matching, java Imports) Unit(activated) Rule(check Dangling, injective Matching, java Imports) rhs Graph() Rule(check Dangling, injective Matching, java Imports) attribute Conditions Attribute Condition(condition Text) Rule(check Dangling, injective Matching, java Imports) multi Mappings Mapping() Parameter(kind) Named Element(name, description) Parameter(kind) unit Unit(activated) Parameter Mapping() Model Element() Parameter Mapping() target Parameter(kind) Graph() Named Element(name, description) Graph() nodes Node() Graph() edges Edge(index, index Constant) Graph() formula Formula() Node() Named Element(name, description) Node() Graph Element(action) Node() attributes Attribute(value, constant, null) Node() graph Graph() Node() outgoing Edge(index, index Constant) Edge(index, index Constant) Model Element() Edge(index, index Constant) Graph Element(action) Edge(index, index Constant) target Node() Edge(index, index Constant) graph Graph() Attribute(value, constant, null) Model Element() Attribute(value, constant, null) Graph Element(action) Attribute(value, constant, null) node Node() Attribute Condition(condition Text) Named Element(name, description) Attribute Condition(condition Text) rule Rule(check Dangling, injective Matching, java Imports) Mapping() Model Element() Mapping() image Node() Unary Unit() sub Unit Unit(activated) Multi Unit() sub Units Unit(activated) Independent Unit() Multi Unit() Sequential Unit(strict, rollback) Multi Unit() Conditional Unit() else Unit(activated) Priority Unit() Multi Unit() Iterated Unit(iterations, strict, rollback) Unary Unit() Loop Unit() Unary Unit() Formula() Nested Condition() Model Element() Nested Condition() Formula() Nested Condition() conclusion Graph() Nested Condition() mappings Mapping() Unary Formula() Model Element() Unary Formula() child Formula() Binary Formula() Model Element() Binary Formula() right Formula() And() Binary Formula() Or() Binary Formula() Xor() Binary Formula() Not() Unary Formula() Action() VAR() True() Formula()
Label: entities, Text: Domainmodel() elements Abstract Element() Package Declaration(name) elements Abstract Element() Abstract Element() Import(imported Namespace) Abstract Element() Type(name) Abstract Element() Data Type() Type(name) Entity() Type(name) Entity() features Feature(many, name, value) Entity() methods Method(name, body) Feature(many, name, value) type Type(name) Method(name, body)
Label: petrinet, Text: Petri Net(name) Ref Petri Nets() Petri Net(name) nodes Ref Nodes() Petri Net(name) arcs Ref Arcs() Ref Petri Nets() Node(name) Ref Nodes() Arc(name) Ref Arcs() Arc(name) source Ref Nodes() Ref Arcs() Ref Nodes() Transition() Node(name) Place() Node(name) Place() marking Ref Tokens() Token(name) Ref Tokens() Ref Tokens()
Label: petrinet, Text: Element(name) Petri Net(name) elements Element(name) Node() Element(name) Arc() Element(name) Arc() to Net Petri Net(name) Output Arc() Arc() Output Arc() from Transition(max Delay, min Delay) Output Arc() to Place() Input Arc() Arc() Input Arc() to Transition(max Delay, min Delay) Input Arc() from Place() Transition(max Delay, min Delay) Node() Place() Node() Network System() petrinets Petri Net(name)
Label: gpl, Text: Delphi Unit() Compilation Unit(language) Delphi Unit() name Name(name String) Delphi Unit() interface Delphi Interface Section() Delphi Unit() implementation Delphi Implementation Section() Delphi Interface Section() Compilation Unit(language) Delphi Interface Section() uses Named Type Reference() Delphi Implementation Section() Compilation Unit(language) Delphi Implementation Section() exports Named Type Reference() Delphi Block Statement() Block Statement() Delphi Block Statement() exports Named Type Reference() Delphi Block Statement() declarations Definition Object() Delphi Function Call Expression() Function Call Expression() Delphi Function Call Expression() apply To Definition Object() Delphi With Statement() Block Statement() Delphi With Statement() withs Definition Object() GASTM Object() Visitable() GASTM Source Object() Visitable() GASTM Semantic Object() Visitable() Other Syntax Object() GASTM Syntax Object() Storage Specification() Visitable() Data Type() Type(is Const, is Volatile) Access Kind() Visitable() Unary Operator() Operator() Binary Operator() Operator() Actual Parameter() Visitable() Source File(path Name) GASTM Source Object() Source Location(start Line, start Column, end Line, end Column) GASTM Source Object() Source Location(start Line, start Column, end Line, end Column) in Source File Source File(path Name) Project() GASTM Semantic Object() Project() files Compilation Unit(language) Project() outer Scope Global Scope() Scope() GASTM Semantic Object() Scope() definition Object Definition Object() GASTM Syntax Object() GASTM Object() GASTM Syntax Object() location Info Source Location(start Line, start Column, end Line, end Column) GASTM Syntax Object() pre Processor Elements Preprocessor Element() GASTM Syntax Object() annotations Annotation Expression() Compilation Unit(language) Other Syntax Object() Compilation Unit(language) fragments Definition Object() Compilation Unit(language) opens Scope Program Scope() Name(name String) Other Syntax Object() Declaration Or Definition(is Register, linkage Specifier) Definition Object() Declaration Or Definition(is Register, linkage Specifier) access Kind Other Syntax Object() Definition() Declaration Or Definition(is Register, linkage Specifier) Definition() identifier Name Name(name String) Definition() definition Type Type Reference() Declaration() Declaration Or Definition(is Register, linkage Specifier) Declaration() def Ref Definition() Declaration() identifier Name Name(name String) Declaration() declaration Type Type Reference() Function Declaration() Declaration() Function Declaration() formal Parameters Formal Parameter Declaration() Function Declaration() function Member Attributes Function Member Attributes(is Friend, is Inline, is This Const) Function Declaration() return Type Type Reference() Variable Declaration(is Mutable) Declaration() Function Definition() Definition() Function Definition() return Type Type Reference() Function Definition() formal Parameters Formal Parameter Definition() Function Definition() body Statement() Function Definition() function Member Attributes Function Member Attributes(is Friend, is Inline, is This Const) Function Definition() opens Scope Function Scope() Function Member Attributes(is Friend, is Inline, is This Const) Visitable() Function Member Attributes(is Friend, is Inline, is This Const) virtual Specifier Virtual Specification() Entry Definition() Definition() Entry Definition() formal Parameters Formal Parameter Definition() Entry Definition() body Statement() Data Definition(is Mutable) Definition() Data Definition(is Mutable) initial Value Expression() Bit Field Definition() Data Definition(is Mutable) Bit Field Definition() bit Field Size Expression() Enum Literal Definition() Definition() Enum Literal Definition() value Expression() Type Definition() Definition Object() Type Definition() name Name(name String) Named Type Definition() Type Definition() Named Type Definition() definition Type Named Type() Aggregate Type Definition() Type Definition() Aggregate Type Definition() aggregate Type Aggregate Type() Name Space Definition() body Definition Object() Name Space Definition() name Space Name(name String) Name Space Definition() name Space Type Name Space Type() Label Definition() Definition Object() Label Definition() label Name Name(name String) Label Definition() label Type Label Type() Include Unit() Preprocessor Element() Include Unit() file Source File(path Name) Macro Call() Preprocessor Element() Macro Call() refers To Macro Definition(macro Name, body) Macro Definition(macro Name, body) Preprocessor Element() Comment(text) Preprocessor Element() Type(is Const, is Volatile) GASTM Syntax Object() Primitive Type(is Signed) Data Type() Enum Type() Data Type() Enum Type() enum Literals Enum Literal Definition() Constructed Type() Data Type() Constructed Type() base Type Type Reference() Aggregate Type() Data Type() Aggregate Type() members Definition Object() Aggregate Type() opens Scope Aggregate Scope() Array Type() Constructed Type() Array Type() ranks Dimension() Dimension() Other Syntax Object() Dimension() high Bound Expression() Function Type() Type(is Const, is Volatile) Function Type() return Type Type Reference() Function Type() parameter Types Formal Parameter Type() Formal Parameter Type() Data Type() Formal Parameter Type() type Type Reference() Named Type() Data Type() Named Type() body Type(is Const, is Volatile) Class Type() Aggregate Type() Class Type() derives From Derives From(is Virtual) Derives From(is Virtual) access Kind Other Syntax Object() Derives From(is Virtual) class Name Named Type() Unnamed Type Reference() Type Reference() Unnamed Type Reference() type Type(is Const, is Volatile) Named Type Reference() Type Reference() Named Type Reference() name Name(name String) Named Type Reference() type Type Definition() Delete Statement() Statement() Delete Statement() operand Expression() Declaration Or Definition Statement() Statement() Declaration Or Definition Statement() decl Or Defn Definition Object() Expression Statement() Statement() Expression Statement() expression Expression() Jump Statement() Statement() Jump Statement() target Expression() Break Statement() Statement() Break Statement() target Label Access() Continue Statement() Statement() Continue Statement() target Label Access() Labeled Statement() statement Statement() Labeled Statement() label Label Definition() Block Statement() sub Statements Statement() Block Statement() opens Scope Block Scope() Empty Statement() Statement() If Statement() else Body Statement() If Statement() condition Expression() Switch Statement() Statement() Switch Statement() switch Expression Expression() Switch Statement() cases Switch Case() Switch Case() Other Syntax Object() Switch Case() body Statement() Case Block() Switch Case() Case Block() case Expressions Expression() Return Statement() Statement() Return Statement() return Value Expression() Loop Statement() body Statement() Loop Statement() condition Expression() For Statement() Loop Statement() For Statement() iteration Body Expression() Try Statement() final Statement Statement() Try Statement() catch Blocks Catch Block() Catch Block() Other Syntax Object() Catch Block() body Statement() Types Catch Block() Catch Block() Types Catch Block() exceptions Type(is Const, is Volatile) Variable Catch Block() Catch Block() Variable Catch Block() exception Variable Data Definition(is Mutable) Throw Statement() Statement() Throw Statement() exception Expression() Expression() GASTM Syntax Object() Expression() expression Type Type Reference() Name Reference() Expression() Name Reference() name Name(name String) Name Reference() refers To Definition Object() Array Access() subscripts Expression() Qualified Identifier Reference() Name Reference() Qualified Identifier Reference() qualifiers Expression() Qualified Identifier Reference() member Identifier Reference() Type Qualified Identifier Reference() Name Reference() Type Qualified Identifier Reference() aggregate Type Type Reference() Type Qualified Identifier Reference() member Identifier Reference() Literal(value) Expression() Cast Expression() expression Expression() Cast Expression() cast Type Type Reference() Unary Expression() operand Expression() Unary Expression() operator Other Syntax Object() Binary Expression() right Operand Expression() Binary Expression() operator Other Syntax Object() Operator Assign() Binary Operator() Operator Assign() operator Other Syntax Object() Conditional Expression() on False Operand Expression() Range Expression() to Expression Expression() Function Call Expression() called Function Expression() Function Call Expression() actual Params Actual Parameter() Actual Parameter Expression() Actual Parameter() Actual Parameter Expression() value Expression() New Expression() Expression() New Expression() new Type Type Reference() New Expression() actual Params Other Syntax Object() Label Access() Expression() Label Access() name Name(name String) Label Access() definition Label Definition() Annotation Expression() member Values Expression() Annotation Expression() annotation Type Type Reference() Global Scope() Scope() Preprocessor Element() GASTM Syntax Object() Definition Object() GASTM Syntax Object() Program Scope() Scope() Type Reference() Type(is Const, is Volatile) Statement() GASTM Syntax Object() Function Scope() Scope() Name Space Type() Type(is Const, is Volatile) Label Type() Type(is Const, is Volatile) Aggregate Scope() Scope() Block Scope() Scope() Identifier Reference() Name Reference() Formal Parameter Definition() Data Definition(is Mutable) Virtual Specification() Other Syntax Object() Formal Parameter Declaration() Declaration() Variable Definition() Data Definition(is Mutable) Function Member Attribute() Other Syntax Object() External() Storage Specification() Function Persistent() Storage Specification() File Local() Storage Specification() Per Class Member() Storage Specification() No Def() Storage Specification() Virtual() Virtual Specification() Pure Virtual() Virtual Specification() Non Virtual() Virtual Specification() Exception Type() Data Type() Void() Primitive Type(is Signed) Byte() Primitive Type(is Signed) Short Integer() Primitive Type(is Signed) Integer() Primitive Type(is Signed) Long Integer() Primitive Type(is Signed) Float() Primitive Type(is Signed) Double() Primitive Type(is Signed) Long Double() Primitive Type(is Signed) Character() Primitive Type(is Signed) String() Primitive Type(is Signed) Boolean() Primitive Type(is Signed) Wide Character() Primitive Type(is Signed) Collection Type() Constructed Type() Pointer Type() Constructed Type() Reference Type() Constructed Type() Range Type() Constructed Type() Structure Type() Aggregate Type() Union Type() Aggregate Type() Annotation Type() Aggregate Type() By Value Formal Parameter Type() Formal Parameter Type() By Reference Formal Parameter Type() Formal Parameter Type() Public() Access Kind() Protected() Access Kind() Private() Access Kind() Terminate Statement() Statement() Default Block() Switch Case() While Statement() Loop Statement() Do While Statement() Loop Statement() For Check Before Statement() For Statement() For Check After Statement() For Statement() Aggregate Expression() Expression() Qualified Over Pointer() Qualified Identifier Reference() Qualified Over Data() Qualified Identifier Reference() Integer Literal() Literal(value) String Literal() Literal(value) Char Literal() Literal(value) Real Literal() Literal(value) Boolean Literal() Literal(value) Bit Literal() Literal(value) Unary Plus() Unary Operator() Negate() Unary Operator() Not() Unary Operator() Bit Not() Unary Operator() Address Of() Unary Operator() Deref() Unary Operator() Increment() Unary Operator() Decrement() Unary Operator() Post Increment() Unary Operator() Post Decrement() Unary Operator() Add() Binary Operator() Subtract() Binary Operator() Multiply() Binary Operator() Divide() Binary Operator() Modulus() Binary Operator() Exponent() Binary Operator() And() Binary Operator() Or() Binary Operator() Equal() Binary Operator() Not Equal() Binary Operator() Greater() Binary Operator() Not Greater() Binary Operator() Less() Binary Operator() Not Less() Binary Operator() Bit And() Binary Operator() Bit Or() Binary Operator() Bit Xor() Binary Operator() Bit Left Shift() Binary Operator() Bit Right Shift() Binary Operator() Assign() Binary Operator() Missing Actual Parameter() Actual Parameter() By Value Actual Parameter Expression() Actual Parameter Expression() By Reference Actual Parameter Expression() Actual Parameter Expression() Specific Trigger Definition() Definition() Specific Trigger Definition() body Statement() Specific Less Equal() Binary Operator() Specific Greater Equal() Binary Operator() Specific In() Binary Operator() Specific Like() Binary Operator() Specific Concat String() Binary Operator() Specific Select Statement() Statement() Visitable() Operator() Other Syntax Object()
Label: calculator, Text: Module(name) imports Import() Module(name) statements Statement() Import() module Module(name) Statement() Definition() Statement() Definition() Abstract Definition(name) Definition() args Declared Parameter() Definition() expr Expression() Declared Parameter() Abstract Definition(name) Abstract Definition(name) Evaluation() Statement() Evaluation() expression Expression() Expression() Plus() right Expression() Minus() right Expression() Multi() right Expression() Div() right Expression() Number Literal(value) Expression() Function Call() args Expression() Function Call() func Abstract Definition(name)
Label: statemachine, Text: Named Element(name) State Machine() Named Element(name) State Machine() states2 State2(initial Time2, final Time) State Machine() transitions2 Transition2(initial Time, final Time2) State2(initial Time2, final Time) Named Element(name) State2(initial Time2, final Time) incoming Transition2(initial Time, final Time2) State2(initial Time2, final Time) state Machine2 State Machine() Final State() State2(initial Time2, final Time) Initial State() State2(initial Time2, final Time) Transition2(initial Time, final Time2) Named Element(name) Transition2(initial Time, final Time2) source State2(initial Time2, final Time) Transition2(initial Time, final Time2) trigger Trigger2(expression) Transition2(initial Time, final Time2) state Machine State Machine() Timed Transition(duration) Transition2(initial Time, final Time2) Trigger2(expression) Pseudostate() State2(initial Time2, final Time) Fork() Pseudostate() Join2() Pseudostate()
Label: iot, Text: Project(name) sketch Sketch(name) Sketch(name) setup Setup(name) Sketch(name) loop Loop(name) Sketch(name) instruction Instruction() Instruction() Write(name) Function() Write(name) digitalpin Digital Pin(number) Read(return Value, name) Function() Read(return Value, name) digitalpin Digital Pin(number) Setup(name) digitalpin Digital Pin(number) Pin(Direction, name) Digital Pin(number) Pin(Direction, name) OUTPUT() Loop(name) instruction Instruction() Function() Instruction() D5()
Label: company, Text: Person(firstname, lastname, position) assigned To Project(name) Person(firstname, lastname, position) employed Service Line() client() Company(name) persons Person(firstname, lastname, position) Company(name) projects Project(name) Company(name) address Address(city, complete Address) Company(name) lines Division(name) Project(name) related Category(name) European(budget) Project(name) National(budget) Project(name) Address(city, complete Address) Category(name) topics Topic(id) Topic(id) category Category(name) Company Model() company Company(name) Company Model() categories Category(name) Company Model() topics Topic(id) Company Model() address Address(city, complete Address) Company Model() division Division(name) Unit() Division(name) Service Line() Division(name) Division(name)
Label: library, Text: Library() available Books Books() Library() authors Authors() Library() clients Clients() Book(isbn, title) isbn ISBN() Book(isbn, title) author Author Short(nationality, name) Book(isbn, title) current Reservation Reservation(to, from) Book(isbn, title) reservations Reservations() Books() items Book Short(isbn, title) Authors() items Author Short(nationality, name) Author Short(nationality, name) self Author(name, nationality, full Bio) Client(name, email) email E Mail() Clients() items Client(name, email) Reservation(to, from) client Client(name, email) Reservation(to, from) book Book(isbn, title) ISBN() Author(name, nationality, full Bio) books Book Short(isbn, title) Book Short(isbn, title) self Book(isbn, title) Book Short(isbn, title) isbn ISBN() E Mail() Reservations() items Reservation(to, from)
Label: library, Text: Named Element(name) Ecosystem() libraries Library() Ecosystem() devices Device() Ecosystem() media Sources Media Source() Library() Named Element(name) Library() collections Media Collection() Media Collection() Named Element(name) Media Collection() members Artifact() Media Collection() synced Devices Device() Device() Named Element(name) Device() collections Media Collection() Tablet() Device() Computer() Device() Smartphone() Device() E Reader(video Enabled, audio Enabled) Device() Artifact() Named Element(name) Artifact() origin Media Source() Duration Artifact(duration) Artifact() Audio Book() Duration Artifact(duration) Music Track() Duration Artifact(duration) Video() Duration Artifact(duration) Image() Artifact() Ebook() Artifact() Media Source() Named Element(name) Media Source() contents Artifact() OTHER() External Source(source Type) Media Source() Store() Media Source()
Label: statemachine, Text: State(label) in Transitions Transition() State(label) event Tokens Event Token() State(label) time Constraints Time Constraint(type) Transition() post State State(label) Transition() guard Guard() Guard() Final State() State(label) Init State() State(label) Trap State() State(label) State Machine(priority, context) states State(label) Internal Execution Model(context) state Machines State Machine(priority, context) Internal Execution Model(context) event Tokens Event Token() Event Token() current State State(label) Time Constraint Specification(id, expected Length, start Timestamp, stop Timestamp) MORE THAN() CHECK() Time Constraint(type) time Constraint Specification Time Constraint Specification(id, expected Length, start Timestamp, stop Timestamp) STRICT IMMEDIATE()
Label: mvc, Text: Model(name) root Entity Entity(name) Model(name) associations Association(name, containment, lower Bound, upper Bound, type) Entity(name) attributes Attribute(name, type) Attribute(name, type) Association(name, containment, lower Bound, upper Bound, type) target Entity(name) Association(name, containment, lower Bound, upper Bound, type) type Association Type() Association Type() View(name) root Component UI Component(name, type, layout, id) UI Component(name, type, layout, id) events Event(name) MVC Model(name, version) models Model(name) MVC Model(name, version) views View(name) MVC Model(name, version) events Event(name) MVC Model(name, version) controllers Controller(name) MVC Model(name, version) components Component(name) Controller(name) actions Action(name) Controller(name) views Controller View() Controller(name) event Actions Event Action() Event(name) Action(name) trigger Events Event(name) Controller View() view View(name) Controller View() models Model(name) Component(name) controllers Controller(name) Event Action() action Action(name) Event Action() events Event(name)
Label: statemachine, Text: State Machine() Graph(name) State Machine() final State() State() Node(name) State() sub Machines State Machine() Transition() Edge(name) Observation() Mark(time) sm Boolean() sm Integer() sm String() Graph(name) name String() Graph(name) nodes Node(name) Graph(name) edges Edge(name) Graph(name) marks Mark(time) Node(name) name String() Node(name) mark Mark(time) Node(name) graph Graph(name) Edge(name) name String() Edge(name) target Node(name) Edge(name) graph Graph(name) Mark(time) time Integer() Mark(time) node Node(name) Mark(time) graph Graph(name) String() Boolean() Integer()
Label: simple-pl, Text: OO Package(name) classes OO Class(name, keep, languages) OO Package(name) enums OO Enumeration(name, options) OO Class(name, keep, languages) OO Comment Owner() OO Class(name, keep, languages) members OO Member(visibility, static, languages) OO Class(name, keep, languages) package OO Package(name) OO Class(name, keep, languages) methods OO Method(visibility, name, static, languages) OO Class(name, keep, languages) constructors OO Constructor(visibility, class Name) OO Member(visibility, static, languages) OO Variable(name, transient) BOOLEAN() OO Variable(name, transient) OO Statement() OO Variable(name, transient) type OO Type(base Type, array Dimensions, collection Type, number Of Indirections) OO Variable(name, transient) initializer Expression OO Expression() OO Type(base Type, array Dimensions, collection Type, number Of Indirections) class Type OO Class(name, keep, languages) OO Type(base Type, array Dimensions, collection Type, number Of Indirections) array Size Expressions OO Expression() OO Type(base Type, array Dimensions, collection Type, number Of Indirections) enum Type OO Enumeration(name, options) PUBLIC() OO Method(visibility, name, static, languages) OO Comment Owner() OO Method(visibility, name, static, languages) parameters OO Variable(name, transient) OO Method(visibility, name, static, languages) return Type OO Type(base Type, array Dimensions, collection Type, number Of Indirections) OO Method(visibility, name, static, languages) statements OO Statement() OO Model() packages OO Package(name) OO Model() global Variables OO Variable(name, transient) OO Model() global Functions OO Method(visibility, name, static, languages) LIST() OO Statement() OO Comment Owner() OO Expression() OO Statement() OO Return() OO Statement() OO Return() returned Expresssion OO Expression() OO Arithmetic Expression() OO Expression() OO Indexing() collection Expression OO Expression() OO Assignment Expression() right Side OO Expression() OO Two Operand Arithmetic Expression() OO Arithmetic Expression() OO Two Operand Arithmetic Expression() left Side OO Expression() OO Addition Expression() OO Two Operand Assignable Expression(assigned) OO Subtraction Expression() OO Two Operand Assignable Expression(assigned) OO Division Expression() OO Two Operand Assignable Expression(assigned) OO Integer Division Expression() OO Two Operand Assignable Expression(assigned) OO Multiplication Expression() OO Two Operand Assignable Expression(assigned) OO Power Expression() OO Two Operand Arithmetic Expression() OO Root Expression() OO Two Operand Arithmetic Expression() OO Bitwise Or Expression() OO Two Operand Assignable Expression(assigned) OO Bitwise Xor Expression() OO Two Operand Assignable Expression(assigned) OO Bitwise And Expression() OO Two Operand Assignable Expression(assigned) OO Logical Expression() OO Expression() OO And Expression() OO Two Operand Logical Expression() OO Or Expression() OO Two Operand Logical Expression() OO Xor Expression() OO Two Operand Logical Expression() OO Not Expression() OO One Operand Logical Expression() OO Two Operand Logical Expression() OO Logical Expression() OO Two Operand Logical Expression() right Side OO Expression() OO One Operand Logical Expression() OO Logical Expression() OO One Operand Logical Expression() operand OO Expression() OO Double Literal(value) OO Arithmetic Expression() OO Float Literal(value) OO Arithmetic Expression() OO Integer Literal(value) OO Arithmetic Expression() OO Long Literal(value) OO Arithmetic Expression() OO If() OO Conditional Statement() OO If() else Statements OO Statement() OO For() OO Conditional Statement() OO For() init Statement OO Statement() OO For() increment Expression OO Expression() OO Conditional Statement() OO Statement() OO Conditional Statement() OO Compound Statement() OO Conditional Statement() condition OO Expression() OO While() OO Conditional Statement() OO Do While() OO Conditional Statement() OO Empty Statement() OO Statement() OO For Each() body Statements OO Statement() OO For Each() loop Variable OO Variable(name, transient) OO Bit Wise Left Shift() OO Two Operand Assignable Expression(assigned) OO Bit Wise Right Shift() OO Two Operand Assignable Expression(assigned) OO Bit Wise Complement() OO One Operand Arithmetic Expression() OO Language Specific Expression() OO Expression() OO Language Specific Expression() OO Logical Expression() OO Language Specific Expression() snippets OO Language Specific Snippet(code, lang) OO Language Specific Snippet(code, lang) CPP() OO Type Cast() expression OO Expression() OO Type Cast() type OO Type(base Type, array Dimensions, collection Type, number Of Indirections) OO Bool Literal(value) OO Expression() OO New Class(class Name) constructor Parameter Expressions OO Expression() OO Equals Expression() OO Comparator Expression() OO Comparator Expression() OO Logical Expression() OO Comparator Expression() right Side OO Expression() OO Logical Literal(value) OO Logical Expression() OO Greater Than Expression() OO Comparator Expression() OO Less Than Expression() OO Comparator Expression() OO Not Equals Expression() OO Comparator Expression() OO Greater Equals Expression() OO Comparator Expression() OO Less Equals Expression() OO Comparator Expression() OO Compound Statement() body Statements OO Statement() OO Switch() OO Statement() OO Switch() controller Expression OO Expression() OO Switch() case Statements OO Case() OO Switch() default Statement OO Default() OO Case() OO Compound Statement() OO Case() expression OO Expression() OO Break() OO Statement() OO Default() OO Compound Statement() OO Two Operand Assignable Expression(assigned) OO Two Operand Arithmetic Expression() OO Modulo Expression() OO Two Operand Assignable Expression(assigned) OO Continue() OO Statement() OO Variable Declaration List() OO Statement() OO Variable Declaration List() variable Declarations OO Variable(name, transient) OO One Operand Arithmetic Expression() OO Arithmetic Expression() OO One Operand Arithmetic Expression() operand OO Expression() OO Bracketed Expression() OO One Operand Arithmetic Expression() OO Postfix Increment Expression() OO One Operand Arithmetic Expression() OO Prefix Increment Expression() OO One Operand Arithmetic Expression() OO Postfix Decrement Expression() OO One Operand Arithmetic Expression() OO Prefix Decrement Expression() OO One Operand Arithmetic Expression() OO Plus Expression() OO One Operand Arithmetic Expression() OO Minus Expression() OO One Operand Arithmetic Expression() OO Ternary Operator() OO Logical Expression() OO Ternary Operator() negative Branch OO Expression() OO Field Reference Expression(field Name) field Owner OO Expression() OO Variable Reference Expression() OO Expression() OO Variable Reference Expression() variable OO Variable(name, transient) OO Initializer List() initializer Expressions OO Expression() OO This Literal() OO Expression() OO Null Literal() OO Expression() OO Function Call Expression(function Name) owner Expression OO Expression() OO String Literal(value) OO Expression() OO Constructor(visibility, class Name) parameters OO Variable(name, transient) OO Constructor(visibility, class Name) statements OO Statement() OO New Array() OO Expression() OO New Array() array Type OO Type(base Type, array Dimensions, collection Type, number Of Indirections) OO New Array() initializer List OO Initializer List() OO Comment(text, is Block Comment) OO Comment Owner() after Comments OO Comment(text, is Block Comment) OO Enumeration(name, options) OO Comment Owner() OO Enumeration(name, options) package OO Package(name) OO Empty Expression() OO Expression()
Label: class-diagram, Text: Named Element(name, Archpoint) Element() Named Element(name, Archpoint) name String() Named Element(name, Archpoint) Archpoint Boolean() Classifier() Named Element(name, Archpoint) Classifier() attribute Property() Classifier() package Package() Classifier() generalization Generalization() Structural Feature(is Read Only) Typed Element() Structural Feature(is Read Only) is Read Only Boolean() Class(is Active) nested Classifier Classifier() Class(is Active) owned Operation Operation(is Query, is Ordered, is Unique, lower, upper) Class(is Active) owned Attribute Property() Class(is Active) is Active Boolean() Class(is Active) reference Association() Property() Structural Feature(is Read Only) Property() class Class(is Active) Property() datatype Data Type() Property() association Association() Property() classifier Classifier() Association() Classifier() Association() Relationship() Association() navigable Owned End Property() Association() target Class(is Active) Operation(is Query, is Ordered, is Unique, lower, upper) Named Element(name, Archpoint) Operation(is Query, is Ordered, is Unique, lower, upper) class Class(is Active) Operation(is Query, is Ordered, is Unique, lower, upper) datatype Data Type() Operation(is Query, is Ordered, is Unique, lower, upper) is Unique Boolean() Operation(is Query, is Ordered, is Unique, lower, upper) upper Integer() Data Type() Classifier() Data Type() owned Attribute Property() Data Type() owned Operation Operation(is Query, is Ordered, is Unique, lower, upper) String() Boolean() Typed Element() Named Element(name, Archpoint) Package() Named Element(name, Archpoint) Package() classifiers Classifier() Integer() Generalization() Directed Relationship() Generalization() specific Classifier() Generalization() source Class(is Active) Relationship() Element() Element() Directed Relationship() Relationship() Optional Operation() Operation(is Query, is Ordered, is Unique, lower, upper) Alternative Operation() operations Operation(is Query, is Ordered, is Unique, lower, upper)
Label: expressions, Text: Expression() Binary Expression() right Operand Expression() Unary Expression() operand Expression() Argument Expression() args Expression() Literal() Bool Literal(value) Literal() Int Literal(value) Literal() Double Literal(value) Literal() Float Literal(value) Literal() Hex Literal(value) Literal() String Literal(value) Literal() Null Literal() Literal() or Assign() right() minus() mod() complement() not Equals() not() or() Assignment Expression(operator) expression Expression() Conditional Expression() false Case Expression() Logical Or Expression() Binary Expression() Logical And Expression() Binary Expression() Logical Not Expression() Unary Expression() Bitwise Xor Expression() Binary Expression() Bitwise Or Expression() Binary Expression() Bitwise And Expression() Binary Expression() Logical Relation Expression(operator) Binary Expression() Shift Expression(operator) Binary Expression() Numerical Add Subtract Expression(operator) Binary Expression() Numerical Multiply Divide Expression(operator) Binary Expression() Numerical Unary Expression(operator) Unary Expression() Primitive Value Expression() Expression() Primitive Value Expression() value Literal() Feature Call(operation Call, array Access) Argument Expression() Feature Call(operation Call, array Access) array Selector Expression() Element Reference Expression(operation Call, array Access) Argument Expression() Element Reference Expression(operation Call, array Access) array Selector Expression() Parenthesized Expression() expression Expression() Type Cast Expression() operand Expression()
Label: types, Text: Type(in Extent Domain) Data Type() Type(in Extent Domain) Boolean Type() Data Type() Number Type() Data Type() Integer Type() Real Type() Real Type() Number Type() String Type() Data Type() Object Type() Type(in Extent Domain) Collection Type() element Type Type(in Extent Domain) Map Type() value Type Type(in Extent Domain) Function Type(optional Parameter Count) parameter Types Type(in Extent Domain) Method Type() Function Type(optional Parameter Count) Method Type() object Type Type(in Extent Domain) Enum Type() Type(in Extent Domain)
Label: types, Text: Type Group(uid, name) types Type Element(uid, name) Type Group(uid, name) relationships Relationship(uid) Primitives Group() primitives Primitive() Type Element(uid, name) Relationship(uid) target Type Element(uid, name) References() Relationship(uid) Generalization() Relationship(uid) Many2Many() Type Pointer() type Ref Type Element(uid, name) Package Pointer() package Ref Type Group(uid, name) Non() Assosiation(type, containment, internal, source Operation, target Operation) Relationship(uid) Assosiation(type, containment, internal, source Operation, target Operation) links Link(uid) Assosiation(type, containment, internal, source Operation, target Operation) many2many Helper Type Pointer() Link(uid) detail Field Attribute(uid, name, pk) Attribute(uid, name, pk) Type Pointer() Operation(uid, name) parameters Parameter(uid, name, order) Operation(uid, name) return Value Return Value(uid) Primitive() Type Element(uid, name) Type() Type Element(uid, name) Type() attributes Attribute(uid, name, pk) Type() operations Operation(uid, name) Type Reference() Type Element(uid, name) Type Reference() Type Pointer() Parameter(uid, name, order) Type Pointer() Return Value(uid) Type Pointer() Enumerator() Type Element(uid, name) Enumerator() values Enum Attribute(uid, name, value) Enum Attribute(uid, name, value) Method Pointer() method Ref Operation(uid, name) Attribute Pointer() attribute Ref Attribute(uid, name, pk)
Label: education, Text: Program(Name, Credits) specialization Specialization(Name) Program(Name, Credits) program course Program course(Fall or spring, Mandatory) Program(Name, Credits) Credits Program credits() Program(Name, Credits) semester Semester(Number, Credits) Specialization(Name) semester Semester(Number, Credits) Semester(Number, Credits) semester course Semester Course(Mandatory, Fall or spring) Semester(Number, Credits) Credits Semester credits() Semester Course(Mandatory, Fall or spring) course Course(Name, Code, Credits, Start Date, Exam Date) Course(Name, Code, Credits, Start Date, Exam Date) Code course code() Course(Name, Code, Credits, Start Date, Exam Date) Exam Date Calendar() Calendar() course code() Program course(Fall or spring, Mandatory) course Course(Name, Code, Credits, Start Date, Exam Date) Spring() Semester credits() Program credits()
Label: transformation, Text: Tr Net Model(id) patterns Pattern(id, expected size) Tr Net Model(id) operators Operator(id) Tr Net Model(id) flow Rules Flow Rule() Node Pattern(name, id) outgoing Edge Pattern(name) Node Pattern(name, id) same In Same() Node Pattern(name, id) pattern Pattern(id, expected size) Node Pattern(name, id) attributes Attribute Pattern(name) Node Pattern(name, id) different Out Different() Node Pattern(name, id) keep Out Keep() Edge Pattern(name) target Node Pattern(name, id) Edge Pattern(name) pattern Pattern(id, expected size) Pattern(id, expected size) nodes Node Pattern(name, id) Pattern(id, expected size) edges Edge Pattern(name) Pattern(id, expected size) outgoing Operands Operand(index) Pattern(id, expected size) incomming Results Result() Operator(id) operands Operand(index) Operator(id) results Result() Combinator() Operator(id) Combinator() restrictions Restriction() Restriction() Same() Restriction() Same() target Node Pattern(name, id) Attribute Pattern(name) expression Expression() Attribute Pattern(name) operator Expression Operator() Expression() String Literal(value) Expression() Keep() Restriction() Keep() target Node Pattern(name, id) Operand(index) pattern Pattern(id, expected size) Operand(index) operator Operator(id) Result() pattern Pattern(id, expected size) Result() operator Operator(id) Some Operand(count) Operand(index) Anti Operand() Operand(index) Any Operand() Operand(index) Some Result(count) Result() Any Result() Result() Different() Restriction() Different() target Node Pattern(name, id) External() Operator(id) Union() Operator(id) Union() restrictions Restriction() Mandatory Node() Node Pattern(name, id) Optional Node() Node Pattern(name, id) Expression Operator() Equality() Expression Operator() Optional Operand() Operand(index) Flow Rule() target Tr Net Model(id) Next() Flow Rule() Eventually() Flow Rule() Next Derived() Flow Rule()
Label: class-diagram, Text: Feature() Redefinable Element() Named Element(name, visibility) Element() Named Element(name, visibility) name String() Packageable Element() Named Element(name, visibility) Packageable Element() Parameterable Element() Dependency() Packageable Element() Dependency() Directed Relationship() Dependency() supplier Named Element(name, visibility) Property() Structural Feature() Property() Connectable Element() Property() Deployment Target() Generalization() Directed Relationship() Generalization() general Classifier(is Abstract) Class() Encapsulated Classifier() Class() Behaviored Classifier() Class() owned Operation Operation() Class() nested Classifier Classifier(is Abstract) Parameter() Connectable Element() Parameter() Multiplicity Element() Model() Package() Operation() Behavioral Feature() Operation() Parameterable Element() Operation() Templateable Element() Package() Namespace() Package() packaged Element Packageable Element() Package() Templateable Element() Classifier(is Abstract) Namespace() Classifier(is Abstract) Redefinable Element() Classifier(is Abstract) Type() Classifier(is Abstract) Templateable Element() Classifier(is Abstract) generalization Generalization() Classifier(is Abstract) is Abstract Boolean() String() Behavioral Feature() Namespace() Behavioral Feature() Feature() Behavioral Feature() method Behavior() Behavioral Feature() owned Parameter Parameter() Behavior() Class() Boolean() Typed Element() Named Element(name, visibility) Typed Element() type Type() Type() Packageable Element() package() Structured Classifier() Classifier(is Abstract) Structured Classifier() owned Attribute Property() Element() E Model Element() E Model Element() Encapsulated Classifier() Structured Classifier() Namespace() Named Element(name, visibility) Redefinable Element() Named Element(name, visibility) Parameterable Element() Element() Templateable Element() Element() Behaviored Classifier() Classifier(is Abstract) Directed Relationship() Relationship() Relationship() Element() Connectable Element() Typed Element() Connectable Element() Parameterable Element() Multiplicity Element() Element() Structural Feature() Feature() Structural Feature() Typed Element() Structural Feature() Multiplicity Element() Deployment Target() Named Element(name, visibility)
Label: enterprisearchitecture, Text: Node Element() Business Actor() Node Element() Business Role() Node Element() Business Collaboration() Node Element() Business Interface() Node Element() Location() Node Element() Business Process() Node Element() Business Function() Node Element() Business Interaction() Node Element() Business Event() Node Element() Business Service() Node Element() Business Object() Node Element() Representation() Node Element() Meaning() Node Element() Value() Node Element() Product() Node Element() Contract() Node Element() Grouping() Node Element() Junction() Relationship() Relationship() target Node Element() Association() Relationship() Access() Relationship() Used By() Relationship() Realization() Relationship() Assignment() Relationship() Aggregation() Relationship() Composition() Relationship() Flow() Relationship() Triggering() Relationship() Specialization() Relationship()
Label: relationships, Text: World() things Thing(id) Thing(id) Named Element(name) Thing(id) relations Related To(since) Thing(id) parts Part() Thing(id) elements Element() Thing(id) items Item() Thing(id) pieces Piece() Named Element(name) Related To(since) Named Element(name) Related To(since) to Thing Thing(id) Part() Named Element(name) Element() Named Element(name) Item() Named Element(name) Piece() Named Element(name) Piece() part Part()
Label: simple-pl, Text: Model() phrase Phrase() Phrase() Statement List() Phrase() Statement List() head Statement() Statement() Assignment Statement() Statement() Assignment Statement() expression Expression() Variable Assignment Statement() Assignment Statement() Variable Assignment Statement() designator Designator() Self Assignment Statement() Assignment Statement() Expression() Phrase() Expression() Expression Rest() Function Call() Expression() Function Call() params Expression List() Procedure Call() params Expression List() Expression List() head Expression() Expression List() tail Expression Rest() Expression Rest() Key Value Pair(key) rest Key Value Pair Rest() Key Value Pair(key) value Expression() Key Value Pair Rest() Term() structured Expression Expression() List() terms Term() Designator() Term() Or Expression(op) right Expression() And Expression(op) right Expression() Equality Expression(op) right Expression() Dash Expression(op) right Expression() Point Expression(op) right Expression() Pow Expression(op) right Expression() Qualifier Expression(op) right Expression() There Is In() expr Expression() Forall In() expr Expression() First In() expr Expression() Last In() expr Expression() Count() expr Expression() Reduce() init Value Expression() Sum() using Expr Expression() Map() using Expr Expression() Apply() expr Expression() Unary Expression() structured Expression Expression() Structure Expression() structured Expressions Expression() Structure Expression() key Value Pair Key Value Pair(key) String Value(value) Term() Integer Value(value) Term() Double Value(value) Term()
Label: relational, Text: Named Element(name) Database Element(ID, comments) Data Base(url) Table Container() Data Base(url) schemas Schema() Abstract Table() Named Element(name) Abstract Table() columns Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique) Abstract Table() owner Table Container() Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique) Named Element(name) Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique) indexes Index(qualifier, unique, cardinality, index Type) Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique) index Elements Index Element(asc) Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique) primary Key Primary Key() Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique) foreign Keys Foreign Key() Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique) foreign Key Elements Foreign Key Element() Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique) sequence Sequence(start, increment, min Value, max Value) Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique) owner Abstract Table() Index(qualifier, unique, cardinality, index Type) Named Element(name) Index(qualifier, unique, cardinality, index Type) elements Index Element(asc) Index(qualifier, unique, cardinality, index Type) owner Table() View(query) Abstract Table() Table() Abstract Table() Table() primary Key Primary Key() Table() foreign Keys Foreign Key() Table() constraints Constraint(expression) Table() indexes Index(qualifier, unique, cardinality, index Type) Primary Key() Named Element(name) Primary Key() columns Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique) Primary Key() owner Table() Foreign Key() Named Element(name) Foreign Key() elements Foreign Key Element() Foreign Key() target Table() Foreign Key Element() Database Element(ID, comments) Foreign Key Element() pk Column Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique) Index Element(asc) Database Element(ID, comments) Index Element(asc) column Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique) Constraint(expression) Named Element(name) Constraint(expression) owner Table() Database Element(ID, comments) Schema() Table Container() Sequence(start, increment, min Value, max Value) Named Element(name) Table Container() Named Element(name) Table Container() tables Abstract Table() Table Container() sequences Sequence(start, increment, min Value, max Value)
Label: robots, Text: Missions(name) mission List Mission(name) Mission(name) flags List Flag(name) Mission(name) task List Task(name, prio) Mission(name) goal Goal() Goal() goal Events Trigger(touching, degrees) Goal() timeout Time(sec) Goal() finish Actions Action(duration, degr, cent) Task(name, prio) trigger List Trigger(touching, degrees) Task(name, prio) action List Action(duration, degr, cent) Action(duration, degr, cent) turn Dir Direction(dir) Action(duration, degr, cent) speed Speed(speed) Action(duration, degr, cent) trig Trigger(touching, degrees) Action(duration, degr, cent) op Arm Op(op Type) Action(duration, degr, cent) sound Sound(sound Name) Action(duration, degr, cent) flag Flag(name) Action(duration, degr, cent) bool Bool(bool Type) Trigger(touching, degrees) bool Type Bool(bool Type) Trigger(touching, degrees) neg Negation(NOT) Trigger(touching, degrees) flag Flag(name) Trigger(touching, degrees) sensor Sensor(sensor Type) Trigger(touching, degrees) color Color(color Name) Trigger(touching, degrees) dist Distance(distance) Distance(distance) range Bool Bool(bool Type) Flag(name) Time(sec) Direction(dir) RIGHT() Speed(speed) LOW() Arm Op(op Type) DOWN() Sound(sound Name) FANFARE() Sensor(sensor Type) GYRO() Color(color Name) BLUE() Bool(bool Type) FALSE() Negation(NOT)
Label: modelling, Text: Aspect() Named Element() Aspect() structural View Structural View() Aspect() message Views Abstract Message View() Aspect() instantiations Instantiation(type) Aspect() layout Layout() Aspect() state Views State View() Aspect() woven Aspects Woven Aspect() Mappable Element() Named Element() Structural View() classes Classifier(data Type) Structural View() associations Association() Structural View() types Type() Class(abstract) Classifier(data Type) Class(abstract) attributes Attribute() Association End(navigable) Property(lower Bound, upper Bound, reference Type) Association End(navigable) assoc Association() Association End(navigable) classifier Classifier(data Type) Association() Named Element() Association() ends Association End(navigable) Named Element() Instantiation(type) Operation(abstract, extended Visibility, static, operation Type) Named Element() Operation(abstract, extended Visibility, static, operation Type) Mappable Element() Operation(abstract, extended Visibility, static, operation Type) Traceable() Operation(abstract, extended Visibility, static, operation Type) return Type Type() Operation(abstract, extended Visibility, static, operation Type) parameters Parameter() Attribute() Structural Feature(static) Attribute() Temporary Property() Attribute() Mappable Element() Attribute() Traceable() Attribute() type Object Type() Type() Named Element() Parameter() Typed Element() Parameter() Mappable Element() Parameter() type Type() package() Primitive Type() Object Type() Primitive Type() Implementation Class(instance Class Name, interface) Object Type() Type() Object Type() Mappable Element() R Void() Type() R Boolean() Primitive Type() Regular() R Int() Primitive Type() R Char() Primitive Type() R String() Primitive Type() R Any() Type() R Enum() Primitive Type() R Enum() literals R Enum Literal() R Enum Literal() Named Element() R Enum Literal() enum R Enum() Abstract Message View() affected By Aspect Message View() Message View() Abstract Message View() Message View() specifies Operation(abstract, extended Visibility, static, operation Type) Message View() specification Interaction() Message View Reference() Abstract Message View() Message View Reference() references Message View() Interaction() Fragment Container() Interaction() lifelines Lifeline() Interaction() messages Message(message Sort, self Message) Interaction() properties Reference() Interaction() formal Gates Gate() Aspect Message View() Abstract Message View() Aspect Message View() Named Element() Aspect Message View() pointcut Operation(abstract, extended Visibility, static, operation Type) Aspect Message View() advice Interaction() Lifeline() represents Typed Element() Lifeline() covered By Interaction Fragment() Message(message Sort, self Message) receive Event Message End() Message(message Sort, self Message) signature Operation(abstract, extended Visibility, static, operation Type) Message(message Sort, self Message) assign To Structural Feature(static) Message(message Sort, self Message) arguments Parameter Value Mapping() Message(message Sort, self Message) interaction Interaction() Message(message Sort, self Message) returns Value Specification() Message(message Sort, self Message) local Properties Temporary Property() reply() Message End() message Message(message Sort, self Message) Message Occurrence Specification() Occurrence Specification() Message Occurrence Specification() Message End() Occurrence Specification() Interaction Fragment() Destruction Occurrence Specification() Message Occurrence Specification() Interaction Fragment() covered Lifeline() Interaction Fragment() container Fragment Container() critical() Combined Fragment(interaction Operator) Interaction Fragment() Combined Fragment(interaction Operator) operands Interaction Operand() Original Behavior Execution() Interaction Fragment() Execution Statement() Interaction Fragment() Execution Statement() specification Value Specification() Interaction Operand() Fragment Container() Interaction Operand() interaction Constraint Value Specification() Value Specification() Structural Feature Value() Value Specification() Structural Feature Value() value Structural Feature(static) Parameter Value Mapping() parameter Parameter() Parameter Value Mapping() value Value Specification() Parameter Value() Value Specification() Parameter Value() parameter Parameter() Opaque Expression(body, language) Value Specification() Literal Specification() Value Specification() Literal String(value) Literal Specification() Literal Integer(value) Literal Specification() Fragment Container() fragments Interaction Fragment() R Collection() Type() R Collection() Implementation Class(instance Class Name, interface) R Collection() type Object Type() R Set() R Collection() R Sequence() R Collection() Layout() containers Container Map() Container Map() value Element Map() Element Map() value New Layout Element(x, y) New Layout Element(x, y) Extends() Classifier(data Type) Object Type() Classifier(data Type) Traceable() Classifier(data Type) operations Operation(abstract, extended Visibility, static, operation Type) Classifier(data Type) association Ends Association End(navigable) Classifier(data Type) type Parameters Type Parameter() Implementation Class(instance Class Name, interface) Classifier(data Type) Temporary Property() Structural Feature(static) Typed Element() Reference() Property(lower Bound, upper Bound, reference Type) Reference() Temporary Property() Reference() type Object Type() Property(lower Bound, upper Bound, reference Type) Structural Feature(static) Typed Element() Named Element() Gate() Message End() Gate() Named Element() Literal Boolean(value) Literal Specification() Classifier Mapping() operation Mappings Operation Mapping() Classifier Mapping() attribute Mappings Attribute Mapping() Attribute Mapping() Operation Mapping() parameter Mappings Parameter Mapping() Parameter Mapping() State View() Named Element() State View() state Machines State Machine() State View() specifies Classifier(data Type) State Machine() states Check State() State Machine() transitions Transition() State Machine() substitutions Substitution() Transition() Named Element() Transition() start State Check State() Transition() signature Operation(abstract, extended Visibility, static, operation Type) Transition() guard Constraint() Check State() Named Element() Check State() outgoings Transition() R Double() Primitive Type() R Float() Primitive Type() Constraint() Specification Value Specification() Substitution() Transition Substitution() Substitution() Transition Substitution() to Transition() Type Parameter() Type() Type Parameter() generic Type Object Type() R Long() Primitive Type() R Array(size) Primitive Type() R Array(size) type Object Type() Destructor() Traceable() Woven Aspect() Named Element() Woven Aspect() comes From Aspect() Woven Aspect() woven Elements Tracing Map() Literal Null() Literal Specification() Enum Literal Value() Value Specification() Enum Literal Value() value R Enum Literal() Assignment Statement() Interaction Fragment() Assignment Statement() assign To Structural Feature(static) Assignment Statement() value Value Specification() Tracing Map() value Traceable() R Byte() Primitive Type() Literal Long(value) Literal Specification() Literal Float(value) Literal Specification() Literal Byte(value) Literal Specification() Literal Char(value) Literal Specification() Literal Double(value) Literal Specification()
Label: petrinet, Text: Petri Net() Identification(ID, name) Petri Net() Places Place() Petri Net() Transitions Transition() Petri Net() Arcs Arc() Place() Identification(ID, name) Place() outgoing Arcs Place To Transition Arc() Place() incoming Arcs Transition To Place Arc() Transition() Identification(ID, name) Transition() outgoing Arcs Transition To Place Arc() Transition() incoming Arcs Place To Transition Arc() Place To Transition Arc() Arc() Place To Transition Arc() to Transition() Place To Transition Arc() from Place() Transition To Place Arc() Arc() Transition To Place Arc() from Transition() Transition To Place Arc() to Place() Identification(ID, name) Arc() Identification(ID, name)
Label: workflow, Text: Named(name) Workflow() Named(name) Workflow() State Container() Workflow() transition State Transition() Abstract State(associated Class) Named(name) From State() outbound Transitions State Transition() To State() inbound Transitions State Transition() State Container() start State Start() State Container() states Intermediate State() State Container() end State End() Intermediate State() Abstract State(associated Class) Intermediate State() From State() Intermediate State() To State() Intermediate State() state Container State Container() State Transition() Named(name) State Transition() from From State() State Transition() to To State() Start() Abstract State(associated Class) Start() From State() Start() state Container State Container() End() Abstract State(associated Class) End() To State() End() state Container State Container() Task() Intermediate State() Processing() Intermediate State() Decision() Intermediate State() Fork() Intermediate State() Join() Intermediate State() Sub Process() State Container() Sub Process() Intermediate State()
Label: education, Text: University(name) study Programmes Study Programme(code, name, num Years) University(name) courses Course(code, name, credits, level) University(name) students Student(username, name) Study Programme(code, name, num Years) university University(name) Study Programme(code, name, num Years) base Specializations Specialization(name, num Years) Specialization(name, num Years) study Programme Study Programme(code, name, num Years) Specialization(name, num Years) semesters Semester(ordinal) Semester(ordinal) specialization Specialization(name, num Years) Semester(ordinal) mandatory Courses Course(code, name, credits, level) Semester(ordinal) elective Courses Elective Course List() Course(code, name, credits, level) university University(name) Elective Course List() semester Semester(ordinal) Elective Course List() courses Course(code, name, credits, level) Student(username, name) university University(name) Student(username, name) study Plan Individual Study Plan() Individual Study Plan() student Student(username, name) Individual Study Plan() current Semester Semester(ordinal) Individual Study Plan() courses Course Relationship(grade, num Exam Attempts) Course Relationship(grade, num Exam Attempts) study Plan Individual Study Plan() Course Relationship(grade, num Exam Attempts) course Course(code, name, credits, level) F()
Label: simple-pl, Text: Scope() Node(id) Scope() declarations Declaration(name) Node(id) annotations Annotation(name) Variable Import(namespace) Declaration(name) Variable External() Declaration(name) Variable External() type Type() Type Declaration Import(namespace) Declaration(name) Namespace(name) Scope() Namespace(name) actors Abstract Actor() Abstract Actor() Scope() Abstract Actor() type Type Actor(namespace, name) Abstract Actor() output Ports Port(name) Abstract Actor() parameters Variable(constant, parameter) External Actor() Abstract Actor() Actor() Abstract Actor() Actor() initializers Action(tag) Actor() schedule Schedule(Priority Graph) Network() Abstract Actor() Network() connections Connection() Network() actors Actor Instance() Action(tag) Scope() Action(tag) guards Guard() Action(tag) outputs Port Write() Action(tag) inputs Port Read() Action(tag) statements Statement() Port(name) Node(id) Port(name) type Type() Actor Instance() Variable(constant, parameter) Actor Instance() outputs Port Instance(name) Actor Instance() actual Parameters Tagged Expression(tag) Port Instance(name) Node(id) Port Instance(name) connections Connection() Port Instance(name) actor Actor Instance() Expression() Node(id) Expression() type Type() Expression() context Scope() Tagged Expression(tag) expression Expression() Literal Expression() Expression() Integer Literal(value) Literal Expression() Float Literal(value) Literal Expression() Boolean Literal(value) Literal Expression() String Literal(value) Literal Expression() Variable Expression() index Expression() Variable Expression() variable Declaration(name) Variable Expression() member Member(name) List Expression() expressions Expression() List Expression() generators Generator() Generator() Scope() Generator() source Expression() Member(name) Node(id) Member(name) index Expression() Member(name) type Type() Binary Expression(operator) operand2 Expression() Unary Expression(operator) operand Expression() Expression Call() Expression() Function Call() Expression Call() Function Call() function Expression() Type Constructor Call(name) Expression Call() Type Constructor Call(name) parameters Expression() Type Constructor Call(name) typedef Declaration(name) Connection() Node(id) Connection() attributes Tagged Expression(tag) Point2Point Connection() Connection() Point2Point Connection() target Port Instance(name) From Source() Connection() From Source() target Port Instance(name) From Source() source Port(name) To Sink() Connection() To Sink() source Port Instance(name) To Sink() sink Port(name) Statement() Node(id) Variable Reference() Node(id) Variable Reference() declaration Variable(constant, parameter) Variable Reference() index Expression() Variable Reference() member Member(name) Variable Reference() type Type() Assign() Statement() Assign() target Variable Reference() Assign() expression Expression() Return Value() Statement() Return Value() value Expression() Proc Call() Statement() Proc Call() in Parameters Expression() Proc Call() out Parameters Variable Reference() Proc Call() procedure Declaration(name) While Loop() Statement() While Loop() body Block() While Loop() condition Expression() For Each() Statement() For Each() body Block() For Each() generators Generator() If Statement() Statement() If Statement() else Block Block() If Statement() condition Expression() Block() Scope() Block() statements Statement() Port Access() Node(id) Port Access() port Port(name) Port Access() repeat Expression() Port Write() Block() Port Write() Port Access() Port Write() expressions Expression() Port Read() Port Access() Port Read() variables Variable Reference() Port Peek(position) Port Access() Port Peek(position) variable Variable Reference() Declaration(name) Node(id) Declaration(name) scope Scope() Declaration(name) attributes Tagged Expression(tag) Forward Declaration() declaration Declaration(name) Forward Declaration() type Type() Variable(constant, parameter) Declaration(name) Variable(constant, parameter) init Value Expression() Variable(constant, parameter) type Type() Lambda Expression() Scope() Lambda Expression() body Expression() Lambda Expression() parameters Variable(constant, parameter) Proc Expression() Scope() Proc Expression() Expression() Proc Expression() outputs Variable(constant, parameter) Proc Expression() body Block() If Expression() condition Expression() Guard() Lambda Expression() Guard() peeks Port Peek(position) Type() Type Bool() Type() Type External(name, scope Name) Type() Type External(name, scope Name) attributes Tagged Expression(tag) Type Int() Type() Type Int() size Expression() Type List() type Type() Type List() size Expression() Type Float() Type() Type Uint() Type() Type Uint() size Expression() Type String() Type() Type Record() Type() Type Record() Node(id) Type Record() members Variable(constant, parameter) Type Undef() Type() Type Actor(namespace, name) Type() Type User() Type() Type User() declaration Declaration(name) Type Lambda() output Type Type() Type Proc() output Types Type() Type Constructor() Declaration(name) Type Constructor() typedef Type Declaration() Type Constructor() parameters Variable(constant, parameter) Type Declaration() Declaration(name) Type Declaration() type Type() Type Declaration() constructor Type Constructor() Schedule(Priority Graph) initial State State(name, Priority Graph, Action2Target Map) Schedule(Priority Graph) free Runners Action(tag) State(name, Priority Graph, Action2Target Map) Annotation(name) arguments Annotation Argument(id, value) Annotation Argument(id, value)
Label: simple-pl, Text: Program(name) imports Import(imported Namespace) Program(name) classes Type(name) Program(name) expr Expr() Import(imported Namespace) Type(name) members Member() Member() Symbol(name) Symbol(name) type Type(name) Field() Member() Method() Member() Method() params Param() Method() body Block2() Param() Symbol(name) Binding() Symbol(name) Binding() value Expr() Block2() exprs Expr() Expr() If() on False Expr() Let() expr Expr() Let() bindings Binding() Assignment() value Expr() Or() right Expr() And() right Expr() Eq() right Expr() Neq() right Expr() Lt() right Expr() Add() right Expr() Sub() right Expr() Mul() right Expr() Div() right Expr() Cast() left Expr() Cast() type Type(name) Not() expr Expr() Min() expr Expr() Member Ref(method Invocation) args Expr() Member Ref(method Invocation) member Member() Num(value) Expr() Bool(true) Expr() This() Expr() Null() Expr() Null() type Type(name) New() Expr() New() type Type(name) Var(method Invocation) args Expr() Var(method Invocation) member Symbol(name)
Label: embedded, Text: Debug Seq Model() debugvars Debug Vars(configfile, version, pname) Debug Seq Model() sequences Sequences() Debug Vars(configfile, version, pname) statements Statement() Statement() Variable Declaration(name) Statement() Variable Declaration(name) value Expression() Sequences() sequences Sequence(name, disable, pname, info) Sequence(name, disable, pname, info) codeblocks Code Block(info) Code Block(info) Block(atomic) Code Block(info) Block(atomic) statements Statement() Control(timeout) codeblocks Code Block(info) Control(timeout) while Expression() Expression() Statement() Expression() Parameter() Parameter() Assignment(op) right Expression() Ternary() exp2 Expression() Or() right Expression() And() right Expression() Bit Or() right Expression() Bit Xor() right Expression() Bit And() right Expression() Equality(op) right Expression() Comparison(op) right Expression() Shift(op) right Expression() Plus() right Expression() Minus() right Expression() Mul() right Expression() Div() right Expression() Rem() right Expression() Not() expression Expression() Bit Not() expression Expression() Sequence Call(seqname) Expression() Query(message) default Expression() Query Value(message) default Expression() Message(format) type Expression() Message(format) parameters Parameter() Load Debug Info(path) Expression() Read8() addr Expression() Read16() addr Expression() Read32() addr Expression() Read64() addr Expression() Read AP() addr Expression() Read DP() addr Expression() Write8() val Expression() Write16() val Expression() Write32() val Expression() Write64() val Expression() Write AP() val Expression() Write DP() val Expression() Dap Delay() delay Expression() Dap Write ABORT() value Expression() Dap Swj Pins() pinwait Expression() Dap Swj Clock() value Expression() Dap Swj Sequence() val Expression() Dap Jtag Sequence() tdi Expression() Int Constant(value) Expression() String Constant(value) Expression() Variable Ref() Expression() Variable Ref() variable Variable Declaration(name)
Label: workflow, Text: Document Root(mixed) BPMN Base() Document Root(mixed) activity Activity(completion Quantity, is For Compensation, start Quantity) Document Root(mixed) ad Hoc Sub Process Ad Hoc Sub Process(cancel Remaining Instances, ordering) Document Root(mixed) flow Element Flow Element(name) Document Root(mixed) artifact Artifact() Document Root(mixed) assignment Assignment() Document Root(mixed) association Association(association Direction) Document Root(mixed) auditing Auditing() Document Root(mixed) base Element With Mixed Content Base Element(id, any Attribute) Document Root(mixed) boundary Event Boundary Event(cancel Activity) Document Root(mixed) business Rule Task Business Rule Task(implementation) Document Root(mixed) callable Element Callable Element(name) Document Root(mixed) call Activity Call Activity() Document Root(mixed) call Choreography Call Choreography() Document Root(mixed) call Conversation Call Conversation() Document Root(mixed) conversation Node Conversation Node(name) Document Root(mixed) cancel Event Definition Cancel Event Definition() Document Root(mixed) event Definition Event Definition() Document Root(mixed) root Element Root Element() Document Root(mixed) catch Event Catch Event(parallel Multiple) Document Root(mixed) category Category(name) Document Root(mixed) category Value Category Value(value) Document Root(mixed) choreography Choreography() Document Root(mixed) collaboration Collaboration(is Closed, name) Document Root(mixed) choreography Activity Choreography Activity(loop Type) Document Root(mixed) choreography Task Choreography Task() Document Root(mixed) compensate Event Definition Compensate Event Definition(wait For Completion) Document Root(mixed) complex Behavior Definition Complex Behavior Definition() Document Root(mixed) complex Gateway Complex Gateway() Document Root(mixed) conditional Event Definition Conditional Event Definition() Document Root(mixed) conversation Conversation() Document Root(mixed) conversation Association Conversation Association() Document Root(mixed) conversation Link Conversation Link(name) Document Root(mixed) correlation Key Correlation Key(name) Document Root(mixed) correlation Property Correlation Property(name) Document Root(mixed) correlation Property Binding Correlation Property Binding() Document Root(mixed) correlation Property Retrieval Expression Correlation Property Retrieval Expression() Document Root(mixed) correlation Subscription Correlation Subscription() Document Root(mixed) data Association Data Association() Document Root(mixed) data Input Data Input(is Collection, name) Document Root(mixed) data Input Association Data Input Association() Document Root(mixed) data Object Data Object(is Collection) Document Root(mixed) data Object Reference Data Object Reference() Document Root(mixed) data Output Data Output(is Collection, name) Document Root(mixed) data Output Association Data Output Association() Document Root(mixed) data State Data State(name) Document Root(mixed) data Store Data Store(capacity, is Unlimited, name) Document Root(mixed) data Store Reference Data Store Reference() Document Root(mixed) definitions Definitions(exporter, exporter Version, expression Language, name, target Namespace, type Language) Document Root(mixed) documentation Documentation(mixed, text, text Format) Document Root(mixed) end Event End Event() Document Root(mixed) end Point End Point() Document Root(mixed) error Error(error Code, name) Document Root(mixed) error Event Definition Error Event Definition() Document Root(mixed) escalation Escalation(escalation Code, name) Document Root(mixed) escalation Event Definition Escalation Event Definition() Document Root(mixed) event Event() Document Root(mixed) event Based Gateway Event Based Gateway(event Gateway Type, instantiate) Document Root(mixed) exclusive Gateway Exclusive Gateway() Document Root(mixed) expression Expression() Document Root(mixed) extension Extension(must Understand, xsd Definition) Document Root(mixed) extension Elements Extension Attribute Value(value) Document Root(mixed) flow Node Flow Node() Document Root(mixed) formal Expression Formal Expression(mixed, body, language) Document Root(mixed) gateway Gateway(gateway Direction) Document Root(mixed) global Business Rule Task Global Business Rule Task(implementation) Document Root(mixed) global Choreography Task Global Choreography Task() Document Root(mixed) global Conversation Global Conversation() Document Root(mixed) global Manual Task Global Manual Task() Document Root(mixed) global Script Task Global Script Task(script, script Language) Document Root(mixed) global Task Global Task() Document Root(mixed) global User Task Global User Task(implementation) Document Root(mixed) group Group() Document Root(mixed) human Performer Human Performer() Document Root(mixed) performer Performer() Document Root(mixed) resource Role Resource Role(name) Document Root(mixed) implicit Throw Event Implicit Throw Event() Document Root(mixed) import Import(import Type, location, namespace) Document Root(mixed) inclusive Gateway Inclusive Gateway() Document Root(mixed) input Set Input Set(name) Document Root(mixed) interface Interface(name) Document Root(mixed) intermediate Catch Event Intermediate Catch Event() Document Root(mixed) intermediate Throw Event Intermediate Throw Event() Document Root(mixed) io Binding Input Output Binding() Document Root(mixed) io Specification Input Output Specification() Document Root(mixed) item Definition Item Definition(is Collection, item Kind) Document Root(mixed) lane Lane(name) Document Root(mixed) lane Set Lane Set(name) Document Root(mixed) link Event Definition Link Event Definition(name) Document Root(mixed) loop Characteristics Loop Characteristics() Document Root(mixed) manual Task Manual Task() Document Root(mixed) message Message(name) Document Root(mixed) message Event Definition Message Event Definition() Document Root(mixed) message Flow Message Flow(name) Document Root(mixed) message Flow Association Message Flow Association() Document Root(mixed) monitoring Monitoring() Document Root(mixed) multi Instance Loop Characteristics Multi Instance Loop Characteristics(behavior, is Sequential) Document Root(mixed) operation Operation(name) Document Root(mixed) output Set Output Set(name) Document Root(mixed) parallel Gateway Parallel Gateway() Document Root(mixed) participant Participant(name) Document Root(mixed) participant Association Participant Association() Document Root(mixed) participant Multiplicity Participant Multiplicity(maximum, minimum) Document Root(mixed) partner Entity Partner Entity(name) Document Root(mixed) partner Role Partner Role(name) Document Root(mixed) potential Owner Potential Owner() Document Root(mixed) process Process(is Closed, is Executable, process Type) Document Root(mixed) property Property(name) Document Root(mixed) receive Task Receive Task(implementation, instantiate) Document Root(mixed) relationship Relationship(direction, type) Document Root(mixed) rendering Rendering() Document Root(mixed) resource Resource(name) Document Root(mixed) resource Assignment Expression Resource Assignment Expression() Document Root(mixed) resource Parameter Resource Parameter(is Required, name) Document Root(mixed) resource Parameter Binding Resource Parameter Binding() Document Root(mixed) script Task Script Task(script, script Format) Document Root(mixed) send Task Send Task(implementation) Document Root(mixed) sequence Flow Sequence Flow(is Immediate) Document Root(mixed) service Task Service Task(implementation) Document Root(mixed) signal Signal(name) Document Root(mixed) signal Event Definition Signal Event Definition() Document Root(mixed) standard Loop Characteristics Standard Loop Characteristics(test Before) Document Root(mixed) start Event Start Event(is Interrupting) Document Root(mixed) sub Choreography Sub Choreography() Document Root(mixed) sub Conversation Sub Conversation() Document Root(mixed) sub Process Sub Process(triggered By Event) Document Root(mixed) task Task() Document Root(mixed) terminate Event Definition Terminate Event Definition() Document Root(mixed) text Annotation Text Annotation(text, text Format) Document Root(mixed) throw Event Throw Event() Document Root(mixed) timer Event Definition Timer Event Definition() Document Root(mixed) transaction Transaction(protocol, method) Document Root(mixed) user Task User Task(implementation) Activity(completion Quantity, is For Compensation, start Quantity) Flow Node() Activity(completion Quantity, is For Compensation, start Quantity) io Specification Input Output Specification() Activity(completion Quantity, is For Compensation, start Quantity) boundary Event Refs Boundary Event(cancel Activity) Activity(completion Quantity, is For Compensation, start Quantity) properties Property(name) Activity(completion Quantity, is For Compensation, start Quantity) data Input Associations Data Input Association() Activity(completion Quantity, is For Compensation, start Quantity) data Output Associations Data Output Association() Activity(completion Quantity, is For Compensation, start Quantity) resources Resource Role(name) Activity(completion Quantity, is For Compensation, start Quantity) loop Characteristics Loop Characteristics() Activity(completion Quantity, is For Compensation, start Quantity) default Sequence Flow(is Immediate) Sequential() Ad Hoc Sub Process(cancel Remaining Instances, ordering) Sub Process(triggered By Event) Ad Hoc Sub Process(cancel Remaining Instances, ordering) completion Condition Expression() Artifact() Base Element(id, any Attribute) Assignment() Base Element(id, any Attribute) Assignment() to Expression() Association(association Direction) Artifact() Association(association Direction) target Ref Base Element(id, any Attribute) Both() Auditing() Base Element(id, any Attribute) Base Element(id, any Attribute) BPMN Base() Base Element(id, any Attribute) extension Values Extension Attribute Value(value) Base Element(id, any Attribute) documentation Documentation(mixed, text, text Format) Base Element(id, any Attribute) extension Definitions Extension Definition(name) Boundary Event(cancel Activity) Catch Event(parallel Multiple) Boundary Event(cancel Activity) attached To Ref Activity(completion Quantity, is For Compensation, start Quantity) Business Rule Task(implementation) Task() Call Activity() Activity(completion Quantity, is For Compensation, start Quantity) Call Activity() called Element Ref Callable Element(name) Call Choreography() Choreography Activity(loop Type) Call Choreography() participant Associations Participant Association() Call Choreography() called Choreography Ref Choreography() Call Conversation() Conversation Node(name) Call Conversation() participant Associations Participant Association() Call Conversation() called Collaboration Ref Collaboration(is Closed, name) Callable Element(name) Root Element() Callable Element(name) supported Interface Refs Interface(name) Callable Element(name) io Specification Input Output Specification() Callable Element(name) io Binding Input Output Binding() Cancel Event Definition() Event Definition() Catch Event(parallel Multiple) Event() Catch Event(parallel Multiple) data Outputs Data Output(is Collection, name) Catch Event(parallel Multiple) data Output Association Data Output Association() Catch Event(parallel Multiple) output Set Output Set(name) Catch Event(parallel Multiple) event Definition Refs Event Definition() Category(name) Root Element() Category(name) category Value Category Value(value) Category Value(value) Base Element(id, any Attribute) Category Value(value) categorized Flow Elements Flow Element(name) Choreography() Collaboration(is Closed, name) Choreography() Flow Elements Container() Choreography Activity(loop Type) Flow Node() Choreography Activity(loop Type) initiating Participant Ref Participant(name) Choreography Activity(loop Type) correlation Keys Correlation Key(name) Multi Instance Parallel() Choreography Task() Choreography Activity(loop Type) Choreography Task() message Flow Ref Message Flow(name) Collaboration(is Closed, name) Root Element() Collaboration(is Closed, name) participants Participant(name) Collaboration(is Closed, name) message Flows Message Flow(name) Collaboration(is Closed, name) artifacts Artifact() Collaboration(is Closed, name) conversations Conversation Node(name) Collaboration(is Closed, name) conversation Associations Conversation Association() Collaboration(is Closed, name) participant Associations Participant Association() Collaboration(is Closed, name) message Flow Associations Message Flow Association() Collaboration(is Closed, name) correlation Keys Correlation Key(name) Collaboration(is Closed, name) choreography Ref Choreography() Collaboration(is Closed, name) conversation Links Conversation Link(name) Compensate Event Definition(wait For Completion) Event Definition() Compensate Event Definition(wait For Completion) activity Ref Activity(completion Quantity, is For Compensation, start Quantity) Complex Behavior Definition() Base Element(id, any Attribute) Complex Behavior Definition() condition Formal Expression(mixed, body, language) Complex Behavior Definition() event Implicit Throw Event() Complex Gateway() Gateway(gateway Direction) Complex Gateway() activation Condition Expression() Complex Gateway() default Sequence Flow(is Immediate) Conditional Event Definition() Event Definition() Conditional Event Definition() condition Expression() Conversation() Conversation Node(name) Conversation Association() Base Element(id, any Attribute) Conversation Association() outer Conversation Node Ref Conversation Node(name) Conversation Link(name) Base Element(id, any Attribute) Conversation Link(name) target Ref Interaction Node() Conversation Node(name) Base Element(id, any Attribute) Conversation Node(name) Interaction Node() Conversation Node(name) participant Refs Participant(name) Conversation Node(name) message Flow Refs Message Flow(name) Conversation Node(name) correlation Keys Correlation Key(name) Correlation Key(name) Base Element(id, any Attribute) Correlation Key(name) correlation Property Ref Correlation Property(name) Correlation Property(name) Root Element() Correlation Property(name) correlation Property Retrieval Expression Correlation Property Retrieval Expression() Correlation Property(name) type Item Definition(is Collection, item Kind) Correlation Property Binding() Base Element(id, any Attribute) Correlation Property Binding() data Path Formal Expression(mixed, body, language) Correlation Property Binding() correlation Property Ref Correlation Property(name) Correlation Property Retrieval Expression() Base Element(id, any Attribute) Correlation Property Retrieval Expression() message Path Formal Expression(mixed, body, language) Correlation Property Retrieval Expression() message Ref Message(name) Correlation Subscription() Base Element(id, any Attribute) Correlation Subscription() correlation Property Binding Correlation Property Binding() Correlation Subscription() correlation Key Ref Correlation Key(name) Data Association() Base Element(id, any Attribute) Data Association() target Ref Item Aware Element() Data Association() transformation Formal Expression(mixed, body, language) Data Association() assignment Assignment() Data Input(is Collection, name) Item Aware Element() Data Input(is Collection, name) input Set Refs Input Set(name) Data Input Association() Data Association() Data Object(is Collection) Flow Element(name) Data Object(is Collection) Item Aware Element() Data Object Reference() Flow Element(name) Data Object Reference() Item Aware Element() Data Object Reference() data Object Ref Data Object(is Collection) Data Output(is Collection, name) Item Aware Element() Data Output(is Collection, name) output Set Refs Output Set(name) Data Output Association() Data Association() Data State(name) Base Element(id, any Attribute) Data Store(capacity, is Unlimited, name) Item Aware Element() Data Store(capacity, is Unlimited, name) Root Element() Data Store Reference() Flow Element(name) Data Store Reference() Item Aware Element() Data Store Reference() data Store Ref Data Store(capacity, is Unlimited, name) Definitions(exporter, exporter Version, expression Language, name, target Namespace, type Language) Base Element(id, any Attribute) Definitions(exporter, exporter Version, expression Language, name, target Namespace, type Language) imports Import(import Type, location, namespace) Definitions(exporter, exporter Version, expression Language, name, target Namespace, type Language) extensions Extension(must Understand, xsd Definition) Definitions(exporter, exporter Version, expression Language, name, target Namespace, type Language) root Elements Root Element() Definitions(exporter, exporter Version, expression Language, name, target Namespace, type Language) relationships Relationship(direction, type) Documentation(mixed, text, text Format) Base Element(id, any Attribute) End Event() Throw Event() End Point() Root Element() Error(error Code, name) Root Element() Error(error Code, name) structure Ref Item Definition(is Collection, item Kind) Error Event Definition() Event Definition() Error Event Definition() error Ref Error(error Code, name) Escalation(escalation Code, name) BPMN Base() Escalation(escalation Code, name) structure Ref Item Definition(is Collection, item Kind) Escalation Event Definition() Event Definition() Escalation Event Definition() escalation Ref Escalation(escalation Code, name) Event() Flow Node() Event() Interaction Node() Event() properties Property(name) Event Based Gateway(event Gateway Type, instantiate) Gateway(gateway Direction) Exclusive() Event Definition() Root Element() Exclusive Gateway() Gateway(gateway Direction) Exclusive Gateway() default Sequence Flow(is Immediate) Expression() Base Element(id, any Attribute) Extension(must Understand, xsd Definition) BPMN Base() Extension(must Understand, xsd Definition) definition Extension Definition(name) Extension Attribute Definition(name, type, is Reference) BPMN Base() Extension Attribute Definition(name, type, is Reference) extension Definition Extension Definition(name) Extension Attribute Value(value) BPMN Base() Extension Attribute Value(value) extension Attribute Definition Extension Attribute Definition(name, type, is Reference) Extension Definition(name) BPMN Base() Extension Definition(name) extension Attribute Definitions Extension Attribute Definition(name, type, is Reference) Flow Element(name) Base Element(id, any Attribute) Flow Element(name) auditing Auditing() Flow Element(name) monitoring Monitoring() Flow Element(name) category Value Ref Category Value(value) Flow Elements Container() Base Element(id, any Attribute) Flow Elements Container() lane Sets Lane Set(name) Flow Elements Container() flow Elements Flow Element(name) Flow Node() Flow Element(name) Flow Node() outgoing Sequence Flow(is Immediate) Flow Node() lanes Lane(name) Formal Expression(mixed, body, language) Expression() Formal Expression(mixed, body, language) evaluates To Type Ref Item Definition(is Collection, item Kind) Gateway(gateway Direction) Flow Node() Mixed() Global Business Rule Task(implementation) Global Task() Global Choreography Task() Choreography() Global Choreography Task() initiating Participant Ref Participant(name) Global Conversation() Collaboration(is Closed, name) Global Manual Task() Global Task() Global Script Task(script, script Language) Global Task() Global Task() Callable Element(name) Global Task() resources Resource Role(name) Global User Task(implementation) Global Task() Global User Task(implementation) renderings Rendering() Group() Artifact() Group() category Value Ref Category Value(value) Human Performer() Performer() Implicit Throw Event() Throw Event() Import(import Type, location, namespace) BPMN Base() Inclusive Gateway() Gateway(gateway Direction) Inclusive Gateway() default Sequence Flow(is Immediate) Input Output Binding() BPMN Base() Input Output Binding() input Data Ref Input Set(name) Input Output Binding() operation Ref Operation(name) Input Output Binding() output Data Ref Output Set(name) Input Output Specification() Base Element(id, any Attribute) Input Output Specification() data Inputs Data Input(is Collection, name) Input Output Specification() data Outputs Data Output(is Collection, name) Input Output Specification() input Sets Input Set(name) Input Output Specification() output Sets Output Set(name) Input Set(name) Base Element(id, any Attribute) Input Set(name) while Executing Input Refs Data Input(is Collection, name) Input Set(name) output Set Refs Output Set(name) Interaction Node() BPMN Base() Interaction Node() outgoing Conversation Links Conversation Link(name) Interface(name) Root Element() Interface(name) operations Operation(name) Intermediate Catch Event() Catch Event(parallel Multiple) Intermediate Throw Event() Throw Event() Item Aware Element() Base Element(id, any Attribute) Item Aware Element() data State Data State(name) Item Aware Element() item Subject Ref Item Definition(is Collection, item Kind) Item Definition(is Collection, item Kind) Root Element() Item Definition(is Collection, item Kind) import Import(import Type, location, namespace) Information() Lane(name) partition Element Ref Base Element(id, any Attribute) Lane(name) flow Node Refs Flow Node() Lane(name) child Lane Set Lane Set(name) Lane Set(name) Base Element(id, any Attribute) Lane Set(name) lanes Lane(name) Link Event Definition(name) Event Definition() Loop Characteristics() Base Element(id, any Attribute) Manual Task() Task() Message(name) Root Element() Message(name) item Ref Item Definition(is Collection, item Kind) Message Event Definition() Event Definition() Message Event Definition() operation Ref Operation(name) Message Event Definition() message Ref Message(name) Message Flow(name) Base Element(id, any Attribute) Message Flow(name) message Ref Message(name) Message Flow(name) target Ref Interaction Node() Message Flow Association() Base Element(id, any Attribute) Message Flow Association() outer Message Flow Ref Message Flow(name) Monitoring() Base Element(id, any Attribute) Complex() Multi Instance Loop Characteristics(behavior, is Sequential) Loop Characteristics() Multi Instance Loop Characteristics(behavior, is Sequential) completion Condition Expression() Multi Instance Loop Characteristics(behavior, is Sequential) loop Data Output Ref Item Aware Element() Multi Instance Loop Characteristics(behavior, is Sequential) input Data Item Data Input(is Collection, name) Multi Instance Loop Characteristics(behavior, is Sequential) output Data Item Data Output(is Collection, name) Multi Instance Loop Characteristics(behavior, is Sequential) complex Behavior Definition Complex Behavior Definition() Multi Instance Loop Characteristics(behavior, is Sequential) one Behavior Event Ref Event Definition() Operation(name) Base Element(id, any Attribute) Operation(name) out Message Ref Message(name) Operation(name) error Refs Error(error Code, name) Output Set(name) Base Element(id, any Attribute) Output Set(name) while Executing Output Refs Data Output(is Collection, name) Output Set(name) input Set Refs Input Set(name) Parallel Gateway() Gateway(gateway Direction) Participant(name) Base Element(id, any Attribute) Participant(name) Interaction Node() Participant(name) interface Refs Interface(name) Participant(name) end Point Refs End Point() Participant(name) participant Multiplicity Participant Multiplicity(maximum, minimum) Participant(name) process Ref Process(is Closed, is Executable, process Type) Participant Association() Base Element(id, any Attribute) Participant Association() outer Participant Ref Participant(name) Participant Multiplicity(maximum, minimum) BPMN Base() Partner Entity(name) Root Element() Partner Entity(name) participant Ref Participant(name) Partner Role(name) Root Element() Partner Role(name) participant Ref Participant(name) Performer() Resource Role(name) Potential Owner() Human Performer() Process(is Closed, is Executable, process Type) Callable Element(name) Process(is Closed, is Executable, process Type) Flow Elements Container() Process(is Closed, is Executable, process Type) auditing Auditing() Process(is Closed, is Executable, process Type) monitoring Monitoring() Process(is Closed, is Executable, process Type) properties Property(name) Process(is Closed, is Executable, process Type) artifacts Artifact() Process(is Closed, is Executable, process Type) resources Resource Role(name) Process(is Closed, is Executable, process Type) correlation Subscriptions Correlation Subscription() Process(is Closed, is Executable, process Type) definitional Collaboration Ref Collaboration(is Closed, name) Private() Property(name) Item Aware Element() Receive Task(implementation, instantiate) Task() Receive Task(implementation, instantiate) message Ref Message(name) Receive Task(implementation, instantiate) operation Ref Operation(name) Relationship(direction, type) Base Element(id, any Attribute) Rendering() Base Element(id, any Attribute) Resource(name) Root Element() Resource(name) resource Parameters Resource Parameter(is Required, name) Resource Assignment Expression() BPMN Base() Resource Assignment Expression() expression Expression() Resource Parameter(is Required, name) Base Element(id, any Attribute) Resource Parameter(is Required, name) type Item Definition(is Collection, item Kind) Resource Parameter Binding() BPMN Base() Resource Parameter Binding() expression Expression() Resource Parameter Binding() parameter Ref Resource Parameter(is Required, name) Resource Role(name) Base Element(id, any Attribute) Resource Role(name) resource Ref Resource(name) Resource Role(name) resource Parameter Bindings Resource Parameter Binding() Resource Role(name) resource Assignment Expression Resource Assignment Expression() Root Element() Base Element(id, any Attribute) Script Task(script, script Format) Task() Send Task(implementation) Task() Send Task(implementation) message Ref Message(name) Send Task(implementation) operation Ref Operation(name) Sequence Flow(is Immediate) Flow Element(name) Sequence Flow(is Immediate) condition Expression Expression() Sequence Flow(is Immediate) target Ref Flow Node() Service Task(implementation) Task() Service Task(implementation) operation Ref Operation(name) Signal(name) Root Element() Signal(name) structure Ref Item Definition(is Collection, item Kind) Signal Event Definition() Event Definition() Signal Event Definition() signal Ref Signal(name) Standard Loop Characteristics(test Before) Loop Characteristics() Standard Loop Characteristics(test Before) loop Maximum Expression() Start Event(is Interrupting) Catch Event(parallel Multiple) Sub Choreography() Choreography Activity(loop Type) Sub Choreography() Flow Elements Container() Sub Choreography() artifacts Artifact() Sub Conversation() conversation Nodes Conversation Node(name) Sub Process(triggered By Event) Activity(completion Quantity, is For Compensation, start Quantity) Sub Process(triggered By Event) Flow Elements Container() Sub Process(triggered By Event) artifacts Artifact() Task() Activity(completion Quantity, is For Compensation, start Quantity) Task() Interaction Node() Terminate Event Definition() Event Definition() Text Annotation(text, text Format) Artifact() Throw Event() Event() Throw Event() data Inputs Data Input(is Collection, name) Throw Event() data Input Association Data Input Association() Throw Event() input Set Input Set(name) Throw Event() event Definition Refs Event Definition() Timer Event Definition() Event Definition() Timer Event Definition() time Cycle Expression() Transaction(protocol, method) Sub Process(triggered By Event) User Task(implementation) Task() User Task(implementation) renderings Rendering() BPMN Base()
Label: railway, Text: Station() Named Element(name) Station() declarations Declaration() Declaration() Named Element(name) Track Object(length) Declaration() Track Object(length) Route Object(speed Limit, error) Vertex(kind) Declaration() Segment() Track Object(length) Segment() end Vertex(kind) Segment() objects Segment Object() Segment Object() Named Element(name) Segment Object() Route Object(speed Limit, error) Segment Object() position Segment Position(at Start, at End, position, side, orientation) Derailer(active) Segment Object() Level Crossing(closed, length) Segment Object() Signal(main, shunting) Segment Object() Platform(length) Segment Object() Segment Position(at Start, at End, position, side, orientation) segment Segment() Point(kind, selected Input, selected Output, locked) Track Object(length) Point(kind, selected Input, selected Output, locked) outputs Vertex(kind) Track() Declaration() Track() elements Track Object(length) Max() Double Slip Point() Station Border() Named Element(name) Backwards() Left() Train(length, speed, acceleration) Declaration() Train(length, speed, acceleration) segments Train Segment(length) Train(length, speed, acceleration) position Segment Position(at Start, at End, position, side, orientation) Train Segment(length) position Segment Position(at Start, at End, position, side, orientation) Route Object(speed Limit, error) Train Route(kind, locked) Declaration() Train Route(kind, locked) protection Objects Train Route Object(speed Limit) Train Route(kind, locked) end Signal Signal(main, shunting) Shunting() Train Route Object(speed Limit) Train Route Point(selected Input, selected Output) Train Route Object(speed Limit) Train Route Point(selected Input, selected Output) original Point Point(kind, selected Input, selected Output, locked) Train Route Segment() Train Route Object(speed Limit) Train Route Segment() original Segment Segment()
Label: class-diagram, Text: Named Element(name) name String() Classifier() Named Element(name) Data Type() Classifier() Class(is Abstract) Classifier() Class(is Abstract) attr Attribute(multi Valued) Class(is Abstract) is Abstract Boolean() Attribute(multi Valued) Named Element(name) Attribute(multi Valued) multi Valued Boolean() Attribute(multi Valued) type Classifier() Attribute(multi Valued) owner Class(is Abstract) Named(name) name String() Table() Named(name) Table() key Column() Column() Named(name) Column() key Of Table() Column() type Type() Type() Named(name) Boolean() Integer() String()
Label: entities, Text: Persistence Unit() entities Entity(name, comment) Entity(name, comment) properties Property(name, comment) Entity(name, comment) anotations Anotation() Property(name, comment) anotations Anotation() Anotation() Entity Pk(name) Anotation() Entity Pk(name) properties Property(name, comment) Table(name) Anotation() Column(name, type, nullable, fetch) Anotation() One To One(name, referenced Column Name, updatable) Anotation() One To Many(cascade, fetch) Anotation() Many To One(fetch, join Column, nullable) Anotation() Many To Many(name, join Column, inverse Join Column) Anotation() ALL() EAGER()
Label: relational, Text: ARRAY(num elements) Collection Type() Attribute(default) Structural Component(name) Attribute(default) structured Structured Type(is final, is instantiable) Base Table() Table(name) Behavioural Component(name, body) schema Schema(name) Behavioural Component(name, body) parameters With Mode Parameter With Mode(mode) Binary String Type(descriptor, length def) Predefined Type() BINARYVARYING() Boolean Type(descriptor) Predefined Type() BOOLEAN() Character String Type(descriptor, length def) Predefined Type() CHARACTERLARGEOBJECT() Collection Type() Constructed Type(name) Collection Type() type Data Type() Column(default) Structural Component(name) Column(default) table Table(name) Column Constraint() Restriction() Constructed Type(name) Data Type() Data Type() schema Schema(name) Datetime Feature(key, value) Feature() precision() Datetime Type(descriptor) Predefined Type() TIMESTAMPWITHTIMEZONE() Derived Table(query expression) Table(name) Distinct Type() User Defined Type(name) Distinct Type() source type Predefined Type() Distinct Type() features Feature() Feature() Field() Structural Component(name) Field() row ROW() Function() Behavioural Component(name, body) Function() return type Data Type() Interval Feature(key, value) Feature() second precision() Interval Type(descriptor) Predefined Type() SECOND() MULTISET() Collection Type() TOTAL() Method(name, body) structured Structured Type(is final, is instantiable) Method(name, body) return type Data Type() Method(name, body) parameters Method Parameter() Method Parameter() Parameter(name) Method Parameter() method Method(name, body) P() Not Null() Column Constraint() BINARY() Numeric Feature(key, value) Feature() radix() Numeric Type(descriptor) Predefined Type() DOUBLEPRECISION() Parameter(name) type Data Type() INOUT() Parameter With Mode(mode) Parameter(name) Parameter With Mode(mode) behavioural Component Behavioural Component(name, body) Predefined Type() Data Type() Predefined Type() is source of Distinct Type() Primary Key() Unique Constraint() Procedure() Behavioural Component(name, body) ROW() Constructed Type(name) ROW() fields Field() Reference Type() Constructed Type(name) Reference Type() type Structured Type(is final, is instantiable) SET DEFAULT() Referential Constraint(delete action, update action, match) Table Constraint(name) Referential Constraint(delete action, update action, match) references Unique Constraint() Restriction() table Table(name) Restriction() columns Structural Component(name) Schema(name) behavioural Components Behavioural Component(name, body) Schema(name) datatypes Data Type() Schema(name) tables Table(name) String Feature(key, value) Feature() multiplier() Structural Component(name) type Data Type() Structural Component(name) views View() Structural Component(name) restrictions Restriction() Structural Component(name) features Feature() Structured Type(is final, is instantiable) User Defined Type(name) Structured Type(is final, is instantiable) attributes Attribute(default) Structured Type(is final, is instantiable) methods Method(name, body) Structured Type(is final, is instantiable) typed Typed Table() Table(name) schema Schema(name) Table(name) columns Column(default) Table(name) views View() Table(name) triggers Trigger(name, event, action Time, triggered Action) Table(name) restrictions Restriction() Table Check Constraint(expression) Table Constraint(name) Table Constraint(name) Restriction() Trigger(name, event, action Time, triggered Action) table Table(name) Trigger(name, event, action Time, triggered Action) update Columns Structural Component(name) AFTER() UPDATE() Typed Table() Base Table() Typed Table() structured Structured Type(is final, is instantiable) Unique Constraint() Table Constraint(name) OCTETS() User Defined Type(name) Data Type() View() Derived Table(query expression) View() tables Table(name) View() components Structural Component(name) XML Type(descriptor) Predefined Type() XMLTYPE()
Label: transformation, Text: Model Element() annotations Annotation(key, value) Annotation(key, value) Model Element() Named Element(name, description) Model Element() Graph Element(action) action Action() Module(null Value Matching) Named Element(name, description) Module(null Value Matching) units Unit(activated, is Used) Module(null Value Matching) instances Graph() Unit(activated, is Used) Named Element(name, description) Unit(activated, is Used) parameters Parameter() Unit(activated, is Used) parameter Mappings Parameter Mapping() Rule(check Dangling, injective Matching, java Imports) Unit(activated, is Used) Rule(check Dangling, injective Matching, java Imports) rhs Graph() Rule(check Dangling, injective Matching, java Imports) attribute Conditions Attribute Condition(condition Text) Rule(check Dangling, injective Matching, java Imports) multi Mappings Mapping() Parameter() Named Element(name, description) Parameter() unit Unit(activated, is Used) Parameter Mapping() Model Element() Parameter Mapping() target Parameter() Graph() Named Element(name, description) Graph() nodes Node() Graph() edges Edge(index, index Constant) Graph() formula Formula() Node() Named Element(name, description) Node() Graph Element(action) Node() attributes Attribute(value, constant, null) Node() graph Graph() Node() outgoing Edge(index, index Constant) Edge(index, index Constant) Model Element() Edge(index, index Constant) Graph Element(action) Edge(index, index Constant) target Node() Edge(index, index Constant) graph Graph() Attribute(value, constant, null) Model Element() Attribute(value, constant, null) Graph Element(action) Attribute(value, constant, null) node Node() Attribute Condition(condition Text) Named Element(name, description) Attribute Condition(condition Text) rule Rule(check Dangling, injective Matching, java Imports) Mapping() Model Element() Mapping() image Node() Unary Unit() sub Unit Unit(activated, is Used) Multi Unit() sub Units Unit(activated, is Used) Independent Unit() Multi Unit() Sequential Unit(strict, rollback) Multi Unit() Conditional Unit() else Unit(activated, is Used) Priority Unit() Multi Unit() Iterated Unit(iterations) Unary Unit() Loop Unit() Unary Unit() Formula() Nested Condition() Model Element() Nested Condition() Formula() Nested Condition() conclusion Graph() Nested Condition() mappings Mapping() Unary Formula() Model Element() Unary Formula() child Formula() Binary Formula() Model Element() Binary Formula() right Formula() And() Binary Formula() Or() Binary Formula() Xor() Binary Formula() Not() Unary Formula() Action()
Label: class-diagram, Text: UML Class(kind) Classifier() UML Class(kind) attribute Attribute() Model Element(name) Association() Model Element(name) Association() target UML Class(kind) Classifier() Model Element(name) Attribute() Model Element(name) Attribute() type Classifier() Attribute() owner UML Class(kind) Primitive Data Type() Classifier() UML Package() contents Model Element(name) anotherlit()
Label: termrewriting, Text: ADT(name) signature Signature(ops) ADT(name) variables Variable Declaration(name) ADT(name) equations Equation() A Sort(name) Sub Sort() super Sort A Sort(name) Sort() A Sort(name) Signature(ops) generators Operation(name) Signature(ops) sorts A Sort(name) Variable Declaration(name) sort A Sort(name) Operation(name) formal Parameters A Sort(name) Object() A Term(symbol) adt ADT(name) A Term(symbol) sort A Sort(name) Term() subterms A Term(symbol) Term() operation Symbol Operation(name) Variable() A Term(symbol) Variable() declaration Variable Declaration(name) Equation() right Hand Term A Term(symbol)
Label: gpl, Text: Pascal() head program(name) Pascal() declarations var block() Pascal() scope block() program(name) var block() var decl(var id, var type, value) var list(var id, var ids, var type) STRING() block() statements statement() statement() atrib block atrib(var id) atrib(var id) exp expression() expression() arit expression(value) expression() arit expression(value) exp repetitive arit expression(op, value) repetitive arit expression(op, value) rel expression(open, first, op, second, close) expression()
Label: gpl, Text: Class Declaration() Type Declaration() Class Declaration() super Class Type Access() Class Declaration() fields Field Declaration() Type Access() Expression() Type Access() type Type Declaration() Interface Declaration() Type Declaration() Package() Named Element(name, proxy) Package() owned Elements Abstract Type Declaration() Abstract Type Declaration() Body Declaration() Abstract Type Declaration() Type() Abstract Type Declaration() super Interfaces Type Access() Type() Named Element(name, proxy) Named Element(name, proxy) AST Node() AST Node() Type Declaration() Abstract Type Declaration() Body Declaration() Named Element(name, proxy) Expression() AST Node() Field Declaration() Body Declaration() Field Declaration() type Access Type Access()
Label: workflow, Text: finish To Finish() Process(name) process Elements Process Element() Work Definition(name) Process Element() Work Definition(name) links To Successors Work Sequence(link Type) Work Definition(name) allocations Allocation(count) Work Sequence(link Type) Process Element() Work Sequence(link Type) successor Work Definition(name) Process Element() process Process(name) Guidance(text) process Elements Process Element() Ressource(count, name) Process Element() Ressource(count, name) allocations Allocation(count) Allocation(count) work Definition Work Definition(name) Allocation(count) ressource Ressource(count, name)
Label: relational, Text: Named Element(name) Schema() Named Element(name) Schema() tables Table() Table() Named Element(name) Table() columns Column() Table() foreign Keys Foreign Key() Table() key Key() Column() Named Element(name) Foreign Key() Named Element(name) Foreign Key() column Column() Foreign Key() refer To Key() RDBMS Model() schemas Schema() Key() Named Element(name) Key() column Column()
Label: transformation, Text: Transformation() Typed Element() Transformation() in Params Input Actual Parameter() Transformation() out Params Output Actual Parameter() Transformation() control Node Decision Node(expression) Query() Transformation() Atomic Model Transformation() Transformation() Typed Element() Connectable Element(name) Typed Element() type Type(path) Type(path) Connectable Element(name) Model Type(uri) Data Type() Data Type() Type(path) Actual Parameter() Typed Element() Decision Node(expression) Wires Element() Decision Node(expression) false Branch Transformation() Decision Node(expression) in Params Input Actual Parameter() Data Flow() Wires Element() Data Flow() src Connectable Element(name) Transformation Type() Type(path) Transformation Type() out Params Output Formal Parameter() Transformation Type() libraries Library Ref(name) Transformation Type() in Params Input Formal Parameter() Formal Parameter(type Name) Type(path) Formal Parameter(type Name) type El Data Type() Query Type() Transformation Type() Connectable Element(name) Wires Element() Connectable Element(name) outgoing Data Flow() Model(path) Typed Element() Basic Data(path) Typed Element() Composite Transformation Type() Transformation Type() Composite Transformation Type() Wires Specification() Composite Transformation() Transformation() Basic Data Type() Data Type() Wires Specification() els Wires Element() Wires Element() Library Ref(name) library Library(name, path) Library(name, path) Wires Element() Library(name, path) libraries Library Ref(name) Input Formal Parameter() Formal Parameter(type Name) Output Formal Parameter() Formal Parameter(type Name) Input Actual Parameter() Actual Parameter() Output Actual Parameter() Actual Parameter() Atomic Model Transfomation Type() Transformation Type() Identity Transformation() Atomic Model Transformation() Generic Transformation() Atomic Model Transformation() Generic Transformation() type Param Type Parameter() Type Parameter() Actual Parameter() Generic Query() Query() Generic Query() type Param Type Parameter()
Label: workflow, Text: Classifier(is Abstract) Type() Classifier(is Abstract) is Abstract Boolean() Type() Packageable Element() Packageable Element() Named Element(name) Named Element(name) Element() Named Element(name) name String() Element() String() Boolean() Package() Namespace() Package() Packageable Element() Namespace() Named Element(name) Date() Uri() Set() Sequence() Integer() Double() Constraint(body) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Constraint(body) body String() Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Packageable Element() Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) ordering Guide String() Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) owned Rules Constraint(body) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) method Element Property Method Element Property(value) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) kind Kind() Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) suppressed Boolean() Method Element Property(value) Packageable Element() Method Element Property(value) value String() Kind() Content Element() Kind() applicable Meta Class Info Applicable Meta Class Info(is Primary Extension) Content Element() Describable Element(shapeicon, nodeicon) Content Element() Variability Element(variability Type) Content Element() supporting Materials Supporting Material() Content Element() concepts And Papers Concept() Content Element() checklists Checklist() Content Element() guidelines Guideline() Content Element() examples Example() Content Element() assets Reusable Asset() Content Element() termdefinition Term Definition() Describable Element(shapeicon, nodeicon) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Describable Element(shapeicon, nodeicon) Classifier(is Abstract) Describable Element(shapeicon, nodeicon) presentation Content Description(main Description, external Id, key Considerations, long Presentation Name) Describable Element(shapeicon, nodeicon) nodeicon Uri() Content Description(main Description, external Id, key Considerations, long Presentation Name) Method Unit(authors, change Date, change Description, version) Content Description(main Description, external Id, key Considerations, long Presentation Name) long Presentation Name String() Content Description(main Description, external Id, key Considerations, long Presentation Name) sections Section(section Name, section Description) Method Unit(authors, change Date, change Description, version) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Method Unit(authors, change Date, change Description, version) version String() Method Unit(authors, change Date, change Description, version) change Date Date() Method Unit(authors, change Date, change Description, version) copyright Statement Supporting Material() Supporting Material() Guidance() Guidance() Content Element() Section(section Name, section Description) Variability Element(variability Type) Section(section Name, section Description) section Description String() Variability Element(variability Type) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) extends Replaces() Concept() Guidance() Checklist() Guidance() Guideline() Guidance() Example() Guidance() Reusable Asset() Guidance() Term Definition() Guidance() Applicable Meta Class Info(is Primary Extension) Classifier(is Abstract) Applicable Meta Class Info(is Primary Extension) is Primary Extension Boolean() Artifact() Work Product() Work Product() Content Element() Work Product() Fulfillable Element() Work Product() reports Report() Work Product() templates Template() Work Product() tool Mentors Tool Mentor() Work Product() estimation Considerations Estimation Considerations() Fulfillable Element() Describable Element(shapeicon, nodeicon) Report() Guidance() Template() Guidance() Tool Mentor() Guidance() Estimation Considerations() Guidance() Deliverable() delivered Work Products Work Product() Outcome() Work Product() Step() Section(section Name, section Description) Step() Work Definition() Work Definition() Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Work Definition() postcondition Constraint(body) Whitepaper() Concept() Task() Content Element() Task() Work Definition() Task() additionally Performed By Role() Task() optional Input Work Product() Task() steps Step() Task() tool Mentors Tool Mentor() Task() estimation Considerations Estimation Considerations() Role() Content Element() Role() Fulfillable Element() Role() responsible For Work Product() Artifact Description(brief Outline, representation Options, representation, notation) Work Product Description(purpose, impact Of Not Having, reasons For Not Needing) Artifact Description(brief Outline, representation Options, representation, notation) notation String() Work Product Description(purpose, impact Of Not Having, reasons For Not Needing) Content Description(main Description, external Id, key Considerations, long Presentation Name) Work Product Description(purpose, impact Of Not Having, reasons For Not Needing) reasons For Not Needing String() Deliverable Description(external Description, packaging Guidance) Work Product Description(purpose, impact Of Not Having, reasons For Not Needing) Deliverable Description(external Description, packaging Guidance) packaging Guidance String() Role Description(skills, assignment Approaches, synonyms) Content Description(main Description, external Id, key Considerations, long Presentation Name) Role Description(skills, assignment Approaches, synonyms) synonyms String() Task Description(purpose, alternatives) Content Description(main Description, external Id, key Considerations, long Presentation Name) Task Description(purpose, alternatives) alternatives String() Guidance Description(attachments) Content Description(main Description, external Id, key Considerations, long Presentation Name) Guidance Description(attachments) attachments String() Practice Description(additional Info, problem, background, goals, application, levels Of Adoption) Content Description(main Description, external Id, key Considerations, long Presentation Name) Practice Description(additional Info, problem, background, goals, application, levels Of Adoption) levels Of Adoption String() Role Set() Content Category() Role Set() roles Role() Content Category() Content Element() Domain() Content Category() Domain() work Products Work Product() Work Product Type() Content Category() Work Product Type() work Products Work Product() Discipline Grouping() Content Category() Discipline Grouping() disciplines Discipline() Discipline() Content Category() Discipline() tasks Task() Discipline() reference Workflows Activity() Activity() Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) Activity() Fulfillable Element() Activity() Variability Element(variability Type) Activity() Work Definition() Activity() breakdown Elements Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Activity() roadmaps Roadmap() Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) is Event Driven Boolean() Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) link To Predecessor Work Order(link Type) Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Process Element() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) prefix String() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) is Optional Boolean() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) planning Data Planning Data(start Date, finish Date, rank) Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) super Activities Activity() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) checklists Checklist() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) concepts Concept() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) examples Example() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) guidelines Guideline() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) reusable Assets Reusable Asset() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) supporting Materials Supporting Material() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) templates Template() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) reports Report() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) estimationconsiderations Estimation Considerations() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) toolmentor Tool Mentor() Process Element() Describable Element(shapeicon, nodeicon) Planning Data(start Date, finish Date, rank) Process Element() Planning Data(start Date, finish Date, rank) finish Date Date() Planning Data(start Date, finish Date, rank) rank Integer() Work Order(link Type) Process Element() Work Order(link Type) pred Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) start To Finish() Roadmap() Guidance() Tool() Content Category() Tool() tool Mentors Tool Mentor() Role Set Grouping() Content Category() Role Set Grouping() role Sets Role Set() Custom Category() sub Categories Content Category() Custom Category() categorized Elements Describable Element(shapeicon, nodeicon) Method Package(global) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Method Package(global) Package() Method Package(global) global Boolean() Content Package() Method Package(global) Content Package() content Elements Content Element() Milestone() Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) Milestone() required Results Work Product Descriptor(activity Entry State, activity Exit State) Work Product Descriptor(activity Entry State, activity Exit State) Descriptor(is Synchronized With Source) Work Product Descriptor(activity Entry State, activity Exit State) activity Exit State String() Work Product Descriptor(activity Entry State, activity Exit State) Work Product Work Product() Descriptor(is Synchronized With Source) Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Descriptor(is Synchronized With Source) is Synchronized With Source Boolean() Iteration() Activity() Phase() Activity() Team Profile() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Team Profile() team Roles Role Descriptor() Role Descriptor() Descriptor(is Synchronized With Source) Role Descriptor() Role Role() Role Descriptor() responsible For Work Product Descriptor(activity Entry State, activity Exit State) Task Descriptor() Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) Task Descriptor() Descriptor(is Synchronized With Source) Task Descriptor() Task Task() Task Descriptor() performed Primarily By Role Descriptor() Task Descriptor() output Work Product Descriptor(activity Entry State, activity Exit State) Task Descriptor() selected Steps Section(section Name, section Description) Composite Role() Role Descriptor() Composite Role() aggregated Roles Role() Delivery Process() Process() Delivery Process() communications Materials Supporting Material() Process() Activity() Process() includes Patterns Capability Pattern() Process() valid Context Method Configuration() Capability Pattern() Process() Method Configuration() Method Unit(authors, change Date, change Description, version) Method Configuration() method Plugin Selection Method Plugin(user Changeable, supporting) Method Configuration() method Package Selection Method Package(global) Method Configuration() added Category Content Category() Method Plugin(user Changeable, supporting) Method Unit(authors, change Date, change Description, version) Method Plugin(user Changeable, supporting) Package() Method Plugin(user Changeable, supporting) user Changeable Boolean() Method Plugin(user Changeable, supporting) method Packages Method Package(global) Process Planning Template() based On Processes Process() Practice() Guidance() Practice() content References Content Element() Practice() activity References Activity() Breakdown Element Description(usage Guidance) Content Description(main Description, external Id, key Considerations, long Presentation Name) Breakdown Element Description(usage Guidance) usage Guidance String() Activity Description(purpose, alternatives, howto Staff) Breakdown Element Description(usage Guidance) Activity Description(purpose, alternatives, howto Staff) howto Staff String() Delivery Process Description(scale, project Characteristics, risk Level, estimating Technique, project Member Expertise, type Of Contract) Process Description(scope, usage Notes) Delivery Process Description(scale, project Characteristics, risk Level, estimating Technique, project Member Expertise, type Of Contract) type Of Contract String() Process Description(scope, usage Notes) Activity Description(purpose, alternatives, howto Staff) Process Description(scope, usage Notes) usage Notes String() Descriptor Description(refined Description) Breakdown Element Description(usage Guidance) Descriptor Description(refined Description) refined Description String() Process Component Descriptor() Descriptor(is Synchronized With Source) Process Component Descriptor() process Component Process Component() Process Component() Process Package() Process Component() Method Unit(authors, change Date, change Description, version) Process Component() interfaces Process Component Interface() Process Component() process Process() Process Package() Method Package(global) Process Package() process Elements Process Element() Process Package() diagrams Diagram(zoom) Diagram(zoom) Graph Node() Diagram(zoom) diagram Link Diagram Link(zoom) Diagram(zoom) namespace Semantic Model Bridge(presentation) Diagram(zoom) zoom Double() Diagram(zoom) viewpoint Point(x, y) Graph Node() Graph Element() Graph Node() size Dimension(width, height) Graph Element() contained Diagram Element(is Visible) Graph Element() position Point(x, y) Graph Element() link Diagram Link(zoom) Graph Element() anchorage Graph Connector() Graph Element() semantic Model Semantic Model Bridge(presentation) Diagram Element(is Visible) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Diagram Element(is Visible) is Visible Boolean() Diagram Element(is Visible) container Graph Element() Diagram Element(is Visible) reference Reference(is Individual Representation) Diagram Element(is Visible) property Property(key, value) Reference(is Individual Representation) referenced Diagram Element(is Visible) Reference(is Individual Representation) is Individual Representation Boolean() Property(key, value) Diagram Element(is Visible) Property(key, value) value String() Point(x, y) y Double() Diagram Link(zoom) Diagram Element(is Visible) Diagram Link(zoom) zoom Double() Diagram Link(zoom) viewport Point(x, y) Diagram Link(zoom) diagram Diagram(zoom) Diagram Link(zoom) graph Element Graph Element() Graph Connector() graph Element Graph Element() Graph Connector() graph Edge Graph Edge() Graph Edge() Graph Element() Graph Edge() waypoints Point(x, y) Graph Edge() anchor Graph Connector() Semantic Model Bridge(presentation) Diagram Element(is Visible) Semantic Model Bridge(presentation) presentation String() Semantic Model Bridge(presentation) diagram Diagram(zoom) Semantic Model Bridge(presentation) graph Element Graph Element() Dimension(width, height) height Double() Process Component Interface() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Process Component Interface() interface Specifications Task Descriptor() Process Component Interface() interface IO Work Product Descriptor(activity Entry State, activity Exit State) Simple Semantic Model Element(type Info) Semantic Model Bridge(presentation) Simple Semantic Model Element(type Info) type Info String() UMA Semantic Model Bridge() Semantic Model Bridge(presentation) UMA Semantic Model Bridge() element Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Core Semantic Model Bridge() Semantic Model Bridge(presentation) Core Semantic Model Bridge() element Element() Leaf Element() Diagram Element(is Visible) Text Element(text) Leaf Element() Text Element(text) text String() Image(uri, mime Type) Leaf Element() Image(uri, mime Type) uri Uri() Image(uri, mime Type) mime Type String() Graphic Primitive() Leaf Element() Polyline(closed) Graphic Primitive() Polyline(closed) closed Boolean() Polyline(closed) waypoints Point(x, y) Ellipse(radius X, radius Y, rotation, start Angle, end Angle) Graphic Primitive() Ellipse(radius X, radius Y, rotation, start Angle, end Angle) center Point(x, y) Ellipse(radius X, radius Y, rotation, start Angle, end Angle) end Angle Double() Process Family() Method Configuration() Process Family() delivery Processes Delivery Process() Method Library() Method Unit(authors, change Date, change Description, version) Method Library() Package() Method Library() method Plugins Method Plugin(user Changeable, supporting) Method Library() predefined Configurations Method Configuration()
Label: webapp, Text: Web App(name, User, Password) webpages Web Page(name) Web App(name, User, Password) database Data Base() Web App(name, User, Password) questionbank Question Bank() Attribute(name, type) Entity(name) attributes Attribute(name, type) Opened() Simple Question(Question Text, visual Rep) Page S Q() Web Page(name) Page S Q() question Question() Survey() Page S Q() TEXTUAL() Questionnary(feedback) Page S Q() Web Page(name) socialnetwork External Source() Web Page(name) externallinks External Link(url) Home() Web Page(name) Index() Entity Web Page() Details() Entity Web Page() Create() Entity Web Page() Delete() Entity Web Page() CRUD() Entity Web Page() External Link(url) External Source() VARCHAR() Option(text, fraction) Question() Group Of Questions(name) questions Question() Multiple() Simple Question(Question Text, visual Rep) Multiple() option Option(text, fraction) True False() Simple Question(Question Text, visual Rep) False() Simple Question(Question Text, visual Rep) Question() Entity Web Page() Web Page(name) Entity Web Page() entity Entity(name) Data Base() entities Entity(name) Question Bank() quiestions Question() True False For Survey() True False() Multiple For Survey() Multiple() True False For Questionnary(correct) True False() Multiple For Questionnary() Multiple() Multiple For Questionnary() correct Option Option(text, fraction) Twitter(username) External Source() RSS Feed(url, items to display, show date, feedname) External Source()
Label: automata, Text: Automaton() states State(name, initial) Automaton() transitions Transition() Automaton() variables Variable(name) State(name, initial) Transition() target State(name, initial) Transition() guard Guard() Transition() action Action() Variable(name) String Variable(initial Value) Variable(name) Number Variable(initial Value) Variable(name) Boolean Variable(initial Value) Variable(name) Guard() Boolean Guard(value, operator) Guard() Boolean Guard(value, operator) source Boolean Variable(initial Value) Unequal() String Guard(value, operator) Guard() String Guard(value, operator) source String Variable(initial Value) Number Guard(value, operator) Guard() Number Guard(value, operator) source Number Variable(initial Value) Less Or Equal Than() Action() String Action(value) Action() String Action(value) target String Variable(initial Value) Number Action(value) Action() Number Action(value) target Number Variable(initial Value) Boolean Action(value) Action() Boolean Action(value) target Boolean Variable(initial Value)
Label: families, Text: Family(last Name, address) Model Element() Family(last Name, address) a Family() Family(last Name, address) father a Member() Member(first Name, age) Model Element() Member(first Name, age) relatives a Member() Family Registry() Model Element() Family Registry() a Family Registry() Family Registry() families a Family() Model Element() U Data(name, utype) OR() u Family() a Family() u Family() U Data(name, utype) u Family() uright Family(last Name, address) a Family() u Member() a Member() u Member() U Data(name, utype) u Member() uright Member(first Name, age) a Member() u Family Registry() a Family Registry() u Family Registry() U Data(name, utype) u Family Registry() uright Family Registry() a Family Registry()
Label: constraints, Text: Root CS() CS Trace() Root CS() imports Import CS(alias, uri) Root CS() packages Package CS(name) Root CS() constraints Constraints Def CS() Import CS(alias, uri) CS Trace() Package CS(name) CS Trace() Package CS(name) classes Class CS(name) Class CS(name) CS Trace() Class CS(name) extends Path Name CS() Class CS(name) properties Property CS(name) Class CS(name) operations Operation CS(name) Property CS(name) CS Trace() Property CS(name) type Ref Path Name CS() Property CS(name) multiplicity Multiplicity CS(opt, mult, mandatory, lower Int, upper Int, upper Mult) Multiplicity CS(opt, mult, mandatory, lower Int, upper Int, upper Mult) CS Trace() Operation CS(name) CS Trace() Operation CS(name) params Parameter CS(name) Operation CS(name) result Ref Path Name CS() Operation CS(name) body Exp CS() Parameter CS(name) CS Trace() Parameter CS(name) type Ref Path Name CS() Constraints Def CS() CS Trace() Constraints Def CS() type Ref Path Name CS() Constraints Def CS() invariants Invariant CS() Invariant CS() CS Trace() Invariant CS() exp Exp CS() Exp CS() CS Trace() Equality Exp CS(op Name) Exp CS() Equality Exp CS(op Name) right Call Exp CS() Call Exp CS() Equality Exp CS(op Name) Call Exp CS() nav Exp Navigation Exp CS() Primary Exp CS() Call Exp CS() Self Exp CS() Primary Exp CS() Navigation Exp CS() CS Trace() Loop Exp CS() Navigation Exp CS() Loop Exp CS() it Var Iterator Var CS(it Name) Loop Exp CS() exp Exp CS() Collect Exp CS() Loop Exp CS() Iterator Var CS(it Name) CS Trace() Iterator Var CS(it Name) it Type Path Name CS() Iterate Exp CS() Loop Exp CS() Iterate Exp CS() acc Var Acc Var CS(acc Name) Acc Var CS(acc Name) CS Trace() Acc Var CS(acc Name) acc Type Path Name CS() Acc Var CS(acc Name) acc Init Exp Exp CS() Name Exp CS() Primary Exp CS() Name Exp CS() Navigation Exp CS() Name Exp CS() exp Name Path Name CS() Name Exp CS() rounded Brackets Rounded Bracket Clause CS() Rounded Bracket Clause CS() CS Trace() Rounded Bracket Clause CS() args Exp CS() Literal Exp CS() Primary Exp CS() Int Literal Exp CS(int Symbol) Literal Exp CS() Boolean Literal Exp CS() Literal Exp CS() Null Literal Exp CS() Literal Exp CS() Collection() Collection Literal Exp CS(kind) Literal Exp CS() Collection Literal Exp CS(kind) parts Collection Literal Part CS() Collection Literal Part CS() CS Trace() Collection Literal Part CS() last Exp CS() Let Exp CS() Primary Exp CS() Let Exp CS() let Vars Let Var CS(name) Let Exp CS() in Exp Exp CS() Let Var CS(name) CS Trace() Let Var CS(name) type Ref Path Name CS() Let Var CS(name) init Exp Exp CS() Path Name CS() CS Trace() Path Name CS() path Elements Path Element CS() Path Element CS() CS Trace() Boolean Exp CS(bool Symbol) Boolean Literal Exp CS() CS Trace()
Label: graph, Text: Graph() Named(name) Graph() nodes Node() Graph() edges Edge() Named(name) Typed(type) Named(name) Node() Typed(type) Node() parent Graph() Node() ingoing Edges Edge() Edge() Typed(type) Edge() parent Graph() Edge() target Node()
Label: activities, Text: Activity() nodes Activity Node() Activity() edges Activity Edge() Activity() groups Activity Group() Activity Node() Activity Group() Activity Partition() Activity Group() Opaque Action() Activity Node() Fork Node() Activity Node() Join Node() Activity Node() Decision Node() Activity Node() Activity Final Node() Activity Node() Activity Edge() target Activity Node() Activity Edge() guard Value Specification() Control Flow() Activity Edge() Object Flow() Activity Edge() Value Specification() Opaque Expression(language, body) Value Specification()
Label: company, Text: Organization(name) employees Employee(id, first Name, last Name, gender, salary, responsibilities) Organization(name) projects Project(name, description) Organization(name) jobs Job Title(title) Project(name, description) team Leader Employee(id, first Name, last Name, gender, salary, responsibilities) Small Project() Project(name, description) Large Project(budget, milestone) Project(name, description) Phone Number(number, type, area Code) owner Employee(id, first Name, last Name, gender, salary, responsibilities) Job Title(title) Female() Employment Period(id, start Date, end Date) Employee(id, first Name, last Name, gender, salary, responsibilities) period Employment Period(id, start Date, end Date) Employee(id, first Name, last Name, gender, salary, responsibilities) address Address(id, city, country, province, postal Code, street) Employee(id, first Name, last Name, gender, salary, responsibilities) job Title Job Title(title) Employee(id, first Name, last Name, gender, salary, responsibilities) phone Numbers Phone Number(number, type, area Code) Employee(id, first Name, last Name, gender, salary, responsibilities) projects Project(name, description) Employee(id, first Name, last Name, gender, salary, responsibilities) email Addresses Email Address(id, name, address) Email Address(id, name, address) Address(id, city, country, province, postal Code, street)
Label: class-diagram, Text: Comment(value) Named Element(name) comments Comment(value) Named Element(name) constraints Constraint(specification) Package() Named Element(name) Package() packaged Class Class(active) Package() packaged Enum Enumeration() Package() packaged Assoc Association(is Derived) Package() packaged Generalizations Generalization(is Substitutable) Package() packaged Primitive Primitive Type() Constraint(specification) Generalization(is Substitutable) specific Class(active) Generalization(is Substitutable) generalization Set Generalization Set(is Covering, is Disjoint) Parameter(kind, default Value) enum Type Enumeration() Parameter(kind, default Value) primitive Type Primitive Type() Operation(is Query, visibility, body) Named Element(name) Class(active) Named Element(name) Class(active) owned Operation Operation(is Query, visibility, body) Class(active) owned Attribute Property(is Derived, aggregation, lower, upper) Data Type() Named Element(name) Property(is Derived, aggregation, lower, upper) Named Element(name) Association(is Derived) Named Element(name) Association(is Derived) owned End Property(is Derived, aggregation, lower, upper) Primitive Type() Data Type() Enumeration() Data Type() Enumeration() owned Literal Enumeration Literal() Enumeration Literal() Named Element(name) Generalization Set(is Covering, is Disjoint) UML Model() packages Package()
Label: statemachine, Text: Model(name) capsules Capsule(root, name) Model(name) protocols Protocol(name) Local Var() Assignable() Attribute() Assignable() Attribute() default Value Expression() Protocol(name) outgoing Messages Signal(name) Signal(name) Local Vars Local Var() Capsule(root, name) internal Ports Port(conjugated, name) Capsule(root, name) timer Ports Timer Port(name) Capsule(root, name) log Ports Log Port(name) Capsule(root, name) attributes Attribute() Capsule(root, name) capsule Insts Capsule Inst(name) Capsule(root, name) connectors Connector() Capsule(root, name) operations Operation(is Bool, is Int, is Void, name) Capsule(root, name) statemachines State Machine() Operation(is Bool, is Int, is Void, name) Local Vars Local Var() Operation(is Bool, is Int, is Void, name) operation Code Operation Code() Timer Port(name) Log Port(name) Port(conjugated, name) protocol Protocol(name) Connector() capsule Inst2 Capsule Inst(name) Connector() port2 Port(conjugated, name) Capsule Inst(name) type Capsule(root, name) State Machine() states State (final, name) State Machine() transitions Transition(name, init, universal) State (final, name) exit Code Action Code() State (final, name) substatemachine State Machine() Transition(name, init, universal) to State (final, name) Transition(name, init, universal) guard Expression() Transition(name, init, universal) triggers Trigger in() Transition(name, init, universal) timer Port Timer Port(name) Transition(name, init, universal) action Action Code() Trigger in() from Port(conjugated, name) Trigger in() signal Signal(name) Trigger in() parameters Incoming Variable() Incoming Variable() Identifiable(is Bool, is Int, name) Trigger out() to Port(conjugated, name) Trigger out() signal Signal(name) Trigger out() parameters Expression() Operation Code() statements Statement Operation() Statement Operation() While Loop Operation() statements Statement Operation() While Loop Operation() condition Expression() If Statement Operation() else Statements Statement Operation() If Statement Operation() condition Expression() Return Statement() Statement Operation() Return Statement() return Value Expression() Action Code() statements Statement() Statement() Variable(assign) Statement Operation() Variable(assign) Statement() Variable(assign) var Local Var() Variable(assign) exp Expression() Send Trigger() Statement Operation() Send Trigger() Statement() Send Trigger() triggers Trigger out() Inform Timer() Statement Operation() Inform Timer() Statement() Inform Timer() timer Port Timer Port(name) Inform Timer() time Expression() No Op() Statement Operation() No Op() Statement() Invoke() Statement Operation() Invoke() Statement() Invoke() operation Operation(is Bool, is Int, is Void, name) Invoke() parameters Expression() Assignment() Statement Operation() Assignment() Statement() Assignment() lvalue Assignable() Assignment() exp Expression() Assignable() Identifiable(is Bool, is Int, name) While Loop() statements Statement() While Loop() condition Expression() If Statement() else Statements Statement() If Statement() condition Expression() Log Statement() Statement Operation() Log Statement() Statement() Log Statement() log Port Log Port(name) Log Statement() left String Expression(str) String Expression(str) expr Expression() Expression() Not Boolean Expression() exp Expression() Literal() Expression() Int Literal(int) Literal() Identifier() Expression() Identifier() id Identifiable(is Bool, is Int, name) Identifiable(is Bool, is Int, name) Function Call() Literal() Function Call() call Operation(is Bool, is Int, is Void, name) Function Call() params Expression() Bool Literal(true) Literal() Concatenate Expression() rest String Expression(str) Conditional Or Expression() rest Expression() Conditional And Expression() rest Expression() Less Than Or Equal() rest Expression() Less Than() rest Expression() Greater Than Or Equal() rest Expression() Greater Than() rest Expression() Equal() rest Expression() Not Equal() rest Expression() Plus() rest Expression() Minus() rest Expression() Multiply() rest Expression() Divide() rest Expression() Modulo() rest Expression() Unary Expression() exp Expression()
Label: simple-pl, Text: Stmt() Skip() Stmt() Assign(name) Stmt() Assign(name) index Expr() Expr() Block() stmts Stmt() If() rhs Stmt() If() cond Expr() While() body Stmt() While() cond Expr() Int Const(value) Expr() Var(name) index Expr() Unary(op) expr Expr() Binary(op) rhs Expr() NOT() OR() Store() values String To Value Map(key) String To Value Map(key) value Value() Value() Int Value(value) Value() Bool Value(value) Value() Array Value() values Value() Array Decl() values Expr() Bool Const(value) Expr()
Label: relational, Text: Model Root() target DB Database() Model Root() operations Operation() Named Element(name) Database() Named Element(name) Database() schemas Schema() Db Object() Named Element(name) Schema() Db Object() Schema() tables Table() Schema() sequences Sequence(cache Size) Schema() indexes Index() Relation() Table() Db Object() Table() Relation() Table() owning Schema Schema() Table() primary Key Primary Key() Table() owned Columns Table Column(type) Table() constraints Table Constraint() Sequence(cache Size) Db Object() Sequence(cache Size) owning Schema Schema() Constraint() Db Object() Table Constraint() Constraint() Table Constraint() Named Element(name) Table Constraint() owning Table Table() Column Constraint() Constraint() Column Constraint() owning Column Table Column(type) Foreign Key() Table Constraint() Foreign Key() target Table Table() Foreign Key() constrained Column Table Column(type) Column() Named Element(name) Table Column(type) Column() Table Column(type) owning Table Table() Table Column(type) constraints Column Constraint() Index() Db Object() Index() columns Table Column(type) Index() indexed Table Table() Index() owning Schema Schema() Unique Index() Table Constraint() Unique Index() underlying Index Index() Primary Key() Unique Index() Operation() model Root Model Root() Create Table(table Name) Operation() Create Table(table Name) table Columns Table Column(type) Create Table(table Name) table Constraints Table Constraint() Create Table(table Name) primary Key Primary Key() Create Table(table Name) generate ID Sequence(cache Size) Rename Table(new Name) Operation() Rename Table(new Name) renamed Table Table() Delete Table() Operation() Delete Table() deleted Table Table() Add Column(new Column Name) Operation() Add Column(new Column Name) changed Table Table() Add Column(new Column Name) column Constrains Column Constraint() Rename Column(new Column Name) Operation() Rename Column(new Column Name) changed Table Table() Rename Column(new Column Name) renamed Column Table Column(type) Type Change To Column(new Type) Operation() Type Change To Column(new Type) changed Table Table() Type Change To Column(new Type) changed Type Column Table Column(type) Delete Column() Operation() Delete Column() changed Table Table() Delete Column() delete Column Table Column(type) Query() Relation() Query() column References Column Reference() Column Reference() reference Column()
Label: education, Text: Program(Name, Credits) specialization Specialization(Name) Program(Name, Credits) program course Program course(Fall or spring, Mandatory) Program(Name, Credits) Credits Program credits() Program(Name, Credits) semester Semester(Number, Credits) Specialization(Name) semester Semester(Number, Credits) Semester(Number, Credits) semester course Semester Course(Mandatory, Fall or spring) Semester(Number, Credits) Credits Semester credits() Semester Course(Mandatory, Fall or spring) course Course(Name, Code, Credits, Start Date, Exam Date) Course(Name, Code, Credits, Start Date, Exam Date) Code course code() Course(Name, Code, Credits, Start Date, Exam Date) Exam Date Calendar() Calendar() course code() Program course(Fall or spring, Mandatory) course Course(Name, Code, Credits, Start Date, Exam Date) Spring() Semester credits() Program credits() Department(Name) course Course(Name, Code, Credits, Start Date, Exam Date) Department(Name) program Program(Name, Credits)
Label: webapp, Text: Page(width, title, height, canvas color) components Component(xposition, yposition, width, height, name, alignment) Page(width, title, height, canvas color) reuse components Reuse component(xposition, yposition) Page(width, title, height, canvas color) style Style(background color) Reuse component(xposition, yposition) link Reuses component link() Component(xposition, yposition, width, height, name, alignment) style Style(background color) Picture(source, title, alternative text) Component(xposition, yposition, width, height, name, alignment) Text field(header level, text) Component(xposition, yposition, width, height, name, alignment) User input field(label) Knowledge base(xml file uri) Item to KB link() item Item() Item to KB link() knowledge base Knowledge base(xml file uri) Checkbox() User input field(label) Branding() Component(xposition, yposition, width, height, name, alignment) Branding() company name Text field(header level, text) Branding() company logo Picture(source, title, alternative text) Radio button() User input field(label) Text input field() User input field(label) Reuses component link() source Reuse component(xposition, yposition) Reuses component link() target Component(xposition, yposition, width, height, name, alignment) Webshop builder 3k(company name) item details page Page(width, title, height, canvas color) Webshop builder 3k(company name) free components Component(xposition, yposition, width, height, name, alignment) Webshop builder 3k(company name) knowledge bases Knowledge base(xml file uri) Item() Component(xposition, yposition, width, height, name, alignment) Item() item picture Picture(source, title, alternative text) Item() text fields Text field(header level, text) Item() kb link Item to KB link() Login widget() Slideshow() Social button() Newsletter subscription widget() Shopping cart button() Search widget() Menu() Component group() Result list(number of items per page, distance between items) Component(xposition, yposition, width, height, name, alignment) Result list(number of items per page, distance between items) result template Item() Source code() Navigation button() Component(xposition, yposition, width, height, name, alignment) Navigation button() link Navigation to Page link() Navigation button() picture Picture(source, title, alternative text) Navigation button() text Text field(header level, text) Navigation to Page link() Source Navigation button() Navigation to Page link() target Page(width, title, height, canvas color) Style(background color) border Border(thickness, color) Border(thickness, color) right()
Label: enterprisearchitecture, Text: File() Adapter() Identifier(id) Property(key, value) Properties() properties Property(key, value) Metadata() entries Property(key, value) Nameable(name) Text Content(content) Documentable(documentation) Cloneable() implementation migration() Folder Container() folders Folder(type) Folder(type) Archimate Model Object() Folder(type) Folder Container() Folder(type) Documentable(documentation) Folder(type) Properties() Archimate Model Object() Adapter() Archimate Model Object() Nameable(name) Archimate Model Object() Identifier(id) Archimate Concept() Archimate Model Object() Archimate Concept() Cloneable() Archimate Concept() Documentable(documentation) Archimate Concept() Properties() Archimate Element() Archimate Concept() Archimate Relationship() target Archimate Concept() Strategy Element() Archimate Element() Business Element() Archimate Element() Application Element() Archimate Element() Technology Element() Archimate Element() Technology Object() Technology Element() Technology Object() Passive Structure Element() Physical Element() Archimate Element() Motivation Element() Archimate Element() Implementation Migration Element() Archimate Element() Composite Element() Archimate Element() Behavior Element() Archimate Element() Structure Element() Archimate Element() Active Structure Element() Structure Element() Passive Structure Element() Structure Element() Structural Relationship() Archimate Relationship() Dependendency Relationship() Archimate Relationship() Dynamic Relationship() Archimate Relationship() Other Relationship() Archimate Relationship() Archimate Model(purpose, file, version) Folder Container() Archimate Model(purpose, file, version) Archimate Model Object() Archimate Model(purpose, file, version) Properties() Archimate Model(purpose, file, version) file File() Archimate Model(purpose, file, version) metadata Metadata() Junction(type) Archimate Element() Application Collaboration() Application Element() Application Collaboration() Active Structure Element() Application Component() Application Element() Application Component() Active Structure Element() Application Event() Application Element() Application Event() Behavior Element() Application Function() Application Element() Application Function() Behavior Element() Application Interaction() Application Element() Application Interaction() Behavior Element() Application Interface() Application Element() Application Interface() Active Structure Element() Application Process() Application Element() Application Process() Behavior Element() Application Service() Application Element() Application Service() Behavior Element() Artifact() Technology Object() Assessment() Motivation Element() Business Actor() Business Element() Business Actor() Active Structure Element() Business Collaboration() Business Element() Business Collaboration() Active Structure Element() Business Event() Business Element() Business Event() Behavior Element() Business Function() Business Element() Business Function() Behavior Element() Business Interaction() Business Element() Business Interaction() Behavior Element() Business Interface() Business Element() Business Interface() Active Structure Element() Business Object() Business Element() Business Object() Passive Structure Element() Business Process() Business Element() Business Process() Behavior Element() Business Role() Business Element() Business Role() Active Structure Element() Business Service() Business Element() Business Service() Behavior Element() Capability() Strategy Element() Capability() Behavior Element() Communication Network() Technology Element() Communication Network() Active Structure Element() Contract() Business Element() Contract() Passive Structure Element() Constraint() Motivation Element() Course Of Action() Strategy Element() Course Of Action() Behavior Element() Data Object() Application Element() Data Object() Passive Structure Element() Deliverable() Implementation Migration Element() Deliverable() Passive Structure Element() Device() Technology Element() Device() Active Structure Element() Distribution Network() Physical Element() Distribution Network() Active Structure Element() Driver() Motivation Element() Equipment() Physical Element() Equipment() Active Structure Element() Facility() Physical Element() Facility() Active Structure Element() Gap() Implementation Migration Element() Gap() Passive Structure Element() Goal() Motivation Element() Grouping() Composite Element() Implementation Event() Implementation Migration Element() Location() Composite Element() Material() Physical Element() Material() Passive Structure Element() Meaning() Motivation Element() Node() Technology Element() Node() Active Structure Element() Outcome() Motivation Element() Path() Technology Element() Plateau() Implementation Migration Element() Plateau() Composite Element() Principle() Motivation Element() Product() Business Element() Product() Composite Element() Representation() Business Element() Representation() Passive Structure Element() Resource() Strategy Element() Resource() Structure Element() Requirement() Motivation Element() Stakeholder() Motivation Element() Stakeholder() Active Structure Element() System Software() Technology Element() System Software() Active Structure Element() Technology Collaboration() Technology Element() Technology Collaboration() Active Structure Element() Technology Event() Technology Element() Technology Event() Behavior Element() Technology Function() Technology Element() Technology Function() Behavior Element() Technology Interface() Technology Element() Technology Interface() Active Structure Element() Technology Interaction() Technology Element() Technology Interaction() Behavior Element() Technology Process() Technology Element() Technology Process() Behavior Element() Technology Service() Technology Element() Technology Service() Behavior Element() Value() Motivation Element() Work Package() Implementation Migration Element() Work Package() Behavior Element() Access Relationship(access Type) Dependendency Relationship() Aggregation Relationship() Structural Relationship() Assignment Relationship() Structural Relationship() Association Relationship() Other Relationship() Composition Relationship() Structural Relationship() Flow Relationship() Dynamic Relationship() Influence Relationship(strength) Dependendency Relationship() Realization Relationship() Structural Relationship() Serving Relationship() Dependendency Relationship() Specialization Relationship() Other Relationship() Triggering Relationship() Dynamic Relationship() Diagram Model Component() Identifier(id) Diagram Model Component() Cloneable() Diagram Model Component() Adapter() Diagram Model Component() Nameable(name) Connectable() Diagram Model Component() Connectable() target Connections Diagram Model Connection(text, text Position, type) Diagram Model Container() Diagram Model Component() Diagram Model Container() children Diagram Model Object(fill Color) Diagram Model(connection Router Type) Archimate Model Object() Diagram Model(connection Router Type) Diagram Model Container() Diagram Model(connection Router Type) Documentable(documentation) Diagram Model(connection Router Type) Properties() Diagram Model Reference() Diagram Model Object(fill Color) Diagram Model Reference() Text Position(text Position) Diagram Model Reference() referenced Model Diagram Model(connection Router Type) Diagram Model Object(fill Color) Connectable() Diagram Model Object(fill Color) Font Attribute(font, font Color) Diagram Model Object(fill Color) Line Object(line Width, line Color) Diagram Model Object(fill Color) Text Alignment(text Alignment) Diagram Model Object(fill Color) bounds Bounds(x, y, width, height) Diagram Model Group() Diagram Model Object(fill Color) Diagram Model Group() Diagram Model Container() Diagram Model Group() Documentable(documentation) Diagram Model Group() Properties() Diagram Model Note(border Type) Diagram Model Object(fill Color) Diagram Model Note(border Type) Text Content(content) Diagram Model Note(border Type) Text Position(text Position) Diagram Model Image() Diagram Model Object(fill Color) Diagram Model Image() Border Object(border Color) Diagram Model Image() Diagram Model Image Provider(image Path) Diagram Model Connection(text, text Position, type) target Connectable() Diagram Model Connection(text, text Position, type) Font Attribute(font, font Color) Diagram Model Connection(text, text Position, type) Properties() Diagram Model Connection(text, text Position, type) Documentable(documentation) Diagram Model Connection(text, text Position, type) Line Object(line Width, line Color) Diagram Model Connection(text, text Position, type) bendpoints Diagram Model Bendpoint(start X, start Y, end X, end Y) Diagram Model Bendpoint(start X, start Y, end X, end Y) Cloneable() Line Object(line Width, line Color) Font Attribute(font, font Color) Text Position(text Position) Text Alignment(text Alignment) Border Object(border Color) Diagram Model Image Provider(image Path) Bounds(x, y, width, height) Lockable(locked) Archimate Diagram Model(viewpoint) Diagram Model(connection Router Type) Diagram Model Archimate Component() Connectable() Diagram Model Archimate Object(type) Diagram Model Object(fill Color) Diagram Model Archimate Object(type) Diagram Model Container() Diagram Model Archimate Object(type) Diagram Model Archimate Component() Diagram Model Archimate Object(type) Text Position(text Position) Diagram Model Archimate Object(type) archimate Element Archimate Element() Diagram Model Archimate Connection() Diagram Model Connection(text, text Position, type) Diagram Model Archimate Connection() Diagram Model Archimate Component() Diagram Model Archimate Connection() archimate Relationship Archimate Relationship() Sketch Model(background) Diagram Model(connection Router Type) Sketch Model Sticky() Diagram Model Object(fill Color) Sketch Model Sticky() Diagram Model Container() Sketch Model Sticky() Text Content(content) Sketch Model Sticky() Properties() Sketch Model Sticky() Text Position(text Position) Sketch Model Actor() Diagram Model Object(fill Color) Sketch Model Actor() Documentable(documentation) Sketch Model Actor() Properties()
Label: types, Text: Element(id, name) Root() Element(id, name) Root() types Type() Type() Element(id, name) Strings(text 01 Empty Default, text 01, text 1, textarea, link 01, html 01, not Editable Text 01) Type() Dates(date Empty Default 01, date 01, date 1, date 01 HM, date 01 HMS, date 01 HM Sms, not Editable Date 01, dates) Type() Enums(enum 01, enum 01 Empty Default, enum 1, enums, not Editable Enum 01, states, states Max2, states Min1Max2, heavy) Type() ENUM1() Booleans(boolean 01, boolean 01 Empty Default, boolean 1, not Editable Boolean 01) Type() Integers(int 01, int 1, int 01 Empty Default, not Editable Int 01, ints, hidden Int 01) Type() Longs(long 01, long 1, long 01 Empty Default, not Editable Long 01) Type() Shorts(short 01, short 1, short 01 Empty Default, not Editable Short 01) Type() Doubles(double 01, double 1, double 01 Empty Default, not Editable Double 01) Type() Floats(float 01, float 1, float 01 Empty Default, not Editable Float 01) Type() DELETE() DELETE4() Big Integers(big Int 01, big Int 1, big Int 01 Empty Default, not Editable Big Int 01, big Ints) Type() Big Decimals(big Decimal 01, big Decimal 1, big Decimal 01 Empty Default, not Editable Big Decimal 01, big Decimals) Type()
Label: relationships, Text: World() things Thing(id) Thing(id) Named Element(name) Thing(id) relations Related To(since) Named Element(name) Related To(since) Named Element(name) Related To(since) to Thing Thing(id) Required(ir) bindings Binding(type) Binding(type) src Required(ir) Binding(type) trg Provided(ip) Provided(ip) Abstract Component(name) required Interfaces Required(ir) Abstract Component(name) provided Interfaces Provided(ip) Level2() Abstract Component(name) Nested Component() Abstract Component(name) Nested Component() levels2 Level2() Recursive Componen() Abstract Component(name) Recursive Componen() levels1 Nested Component() Recursive Componen() bazbars Bazbar(b) Bazbar(b)
Label: expressions, Text: Rule() evaluated Val Integer Expression() Rule() filter Filter() Add() Binary Expression() Integer Expression() Unary Expression() target Integer Expression() And() Binary Expression() Or() Binary Expression() Not() Unary Expression() Greater() Binary Expression() Lower() Binary Expression() Integer Literal(val) Integer Expression() Conditional() condition Integer Expression() Binary Expression() right Integer Expression() Mult() Binary Expression() Div() Binary Expression() Filter() Mod() Binary Expression() U Minus() Unary Expression() Minus() Binary Expression() Equal() Binary Expression()
Label: entities, Text: Module(name, type) packages Package(name) Nested Functions() Package(name) entities Entity(name) Entity(name) features Feature(name) Feature(name) Reference(unique) Feature(name) Reference(unique) reference Entity(name) Reference(unique) opposite Multi Reference() Single Reference() Reference(unique) Multi Reference() Reference(unique) Data Type(type) Feature(name) Data Type(type) opposite Multi Data Type(unique) Single Data Type() Data Type(type) Multi Data Type(unique) Data Type(type) Double()
Label: relational, Text: Model() query Select Query() Model() order By Entry Or Order By Column() Select Query() Select Sub Set(op, all) query Select(select) Select(select) Select Query() Select(select) op Select Sub Set(op, all) Select(select) cols Or Column() Select(select) tbl Or Table() Select(select) having Entry Or Expr() Select(select) group By Entry Or Group By Column() Or Column() entries Column Or Alias(alias, all Cols) Column Or Alias(alias, all Cols) Or Column() Column Or Alias(alias, all Cols) ce Operands() Column Or Alias(alias, all Cols) col Alias Db Object Name(dbname) Column Or Alias(alias, all Cols) db All Cols Db Object Name All(dbname) Column Full() Or Table() entries From Table() From Table() Or Table() From Table() table Table Or Alias(alias) From Table() fjoin From Table Join(join) From Table Join(join) on Table Table Or Alias(alias) From Table Join(join) join Expr Or Expr() Table Or Alias(alias) tfull Table Full() Table Or Alias(alias) sq Sub Query Operand() Table Or Alias(alias) tbl Alias Db Object Name(dbname) Table Full() Db Object Name All(dbname) Db Object Name(dbname) Column Full() Db Object Name(dbname) Table Full() Or Order By Column() entries Order By Column Full(col Order Int, direction) Order By Column Full(col Order Int, direction) Or Order By Column() Order By Column Full(col Order Int, direction) col Order Column Full() Or Group By Column() entries Group By Column Full() Group By Column Full() Or Group By Column() Group By Column Full() col Gr By Column Full() Or Expr() entries Full Expression(c, not Prm, isnull) Full Expression(c, not Prm, isnull) Or Expr() Full Expression(c, not Prm, isnull) expgroup Expr Group() Full Expression(c, not Prm, isnull) xexp X Expr(xf) Full Expression(c, not Prm, isnull) op1 Operands() Full Expression(c, not Prm, isnull) in In Oper(op) Full Expression(c, not Prm, isnull) between Between(op Between) Full Expression(c, not Prm, isnull) like Like(op Like) Full Expression(c, not Prm, isnull) comp Comparison(operator, sub Operator) Expr Group() expr Or Expr() X Expr(xf) col Operands() X Expr(xf) prm Prms() Prms() entries JR Parameter(jrprm) JR Parameter(jrprm) Prms() Comparison(operator, sub Operator) op2 Operands() Like(op Like) op2 Like Operand(op2) Like Operand(op2) fop2 Op Function(fname) Like Operand(op2) fcast Op Function Cast(type, p, p2) Between(op Between) op3 Operands() In Oper(op) subquery Sub Query Operand() In Oper(op) op List Operand List() Operand List() Operands() Op Function Arg Agregate() Operands() right Operand() Operand() column Column Operand() Operand() subq Sub Query Operand() Operand() fcast Op Function Cast(type, p, p2) Operand() func Op Function(fname) Operand() sqlcase SQL Case Operand() Operand() param P Operand(prm) Operand() eparam Exp Operand(prm) Operand() scalar Scalar Operand(soint, sostr, sodbl, sodate, sotime, sodt) Op Function(fname) args Op Function Arg() Op Function Arg() Op Function Arg Operand() Op Function Arg() Op Function Arg Operand() op Op Function Arg Agregate() Op Function Cast(type, p, p2) op Operands() Op Function Arg Agregate() P Operand(prm) Exp Operand(prm) Column Operand() cfull Column Full() Sub Query Operand() sel Select Query() Scalar Operand(soint, sostr, sodbl, sodate, sotime, sodt) Operand List() SQL Case Operand() expr Or Expr() SQL Case Operand() when SQL Case Whens() SQL Case Whens() Sql Case When() SQL Case Whens() Sql Case When() expr Or Expr() Sql Case When() eexp Operands() xbwnr() Col() Column Full() Col() entries Db Object Name(dbname) tbls() Table Full() tbls() entries Db Object Name(dbname) Op List() Operand List() Op List() entries Scalar Operand(soint, sostr, sodbl, sodate, sotime, sodt) Plus() Operands() Minus() Operands() Star() Operands() Div() Operands() Concat() Operands() Op F List() Op Function Arg() Op F List() entries Op Function Arg Operand() When List() SQL Case Whens() When List() entries Sql Case When()
Label: relational, Text: Named(name) Table() Named(name) Table() key Column() Table() fkeys F Key() Column() Named(name) Column() key Of Table() Column() type Type() Type() Named(name) F Key() ref Table() F Key() cols Column() ER Model() table Table() ER Model() type Type()
Label: modelling, Text: Repository() lexical Scope Lexical Scope() Type() Lexical Scope() Type() Context() Type() categorizes Thing() Type() has Property Property Type() Type() asserts Pattern Pattern Of Type() Type() has Covering Covering Constraint() Type() has Generalization Generalization Constraint(redefines) Type() respect Of Multiplicity Constraint(mininum Number, maximum Number, at Once, is Sufficent) Type() properties Of Type Property Type Constraint(prerequisite Type) Type() recording Types Record Type() Type() returned By Expression Context() Type() asserted By Match End() Type() represents Rule Representation Rule(map All) Intersection Type() Type() Union Type() Type() Entity Type() Type() Situation Type() Entity Type() Situation() Proposition() Situation() Temporal Entity() Situation() Context() Situation() Lexical Scope() Situation() matched By Pattern Match() Actual Situation() Actual Entity() Actual Situation() Situation() Quantity Kind() Value Type() Unit Type(ratio, offset, symbol) Value Type() Unit Type(ratio, offset, symbol) offset Real() Unit Type(ratio, offset, symbol) unit Reference Definition(text Definition, summary Description) Unit Type(ratio, offset, symbol) defined Within System System Of Units() Base Unit Type() Unit Type(ratio, offset, symbol) Value Type() Type() Value() Thing() System Of Units() Context() System Of Units() unit Of System Unit Type(ratio, offset, symbol) Structured Value Type() Value Type() Structured Value Type() Property Owner Type() Structured Value() Value() Structured Value() Property Owner() Boolean() String() Data Value() Primitive Value() Numeric() Measurement Value() Integer() Real() Number() Unit Value(has Value) Value() Unit Value(has Value) has Value Measurement Value() Scalar Quantity( unnamed Scalar Quantity) Unit Value(has Value) Scalar Quantity( unnamed Scalar Quantity) unnamed Scalar Quantity Number() Unique Identifier() Identifier() Unique Identifier() unique Within Namespace() IRI Identifier() Technical Identifier() Term() Name() Term() Unique Text Identifier() Unique Text Identifier() Unique Identifier() Unique Text Identifier() Text Identifier(value) Identifier() Value() Identifier() preferred For Identifiable Entity() Namespace() Context() Namespace() scopes Identifier Unique Identifier() Text Identifier(value) Identifier() Name() Text Identifier(value) Name() names Identifiable Entity() Technical Identifier() Unique Text Identifier() Function Type() Property Owner Type() Function Type() Expression Context() Function Type() implemented By Expression Node(expression Text, expression Text Language) Function Type() is Used By Function Call() Constant Reference() Expression Node(expression Text, expression Text Language) Constant Reference() has Value Thing() Expression Node(expression Text, expression Text Language) Expression Context() Expression Node(expression Text, expression Text Language) evaluated By Evaluation() Expression Node(expression Text, expression Text Language) implements Function Type() Function Call() Expression Node(expression Text, expression Text Language) Function Call() Property Owner() Function Call() calls Function Type() Traversal(traverse To Relation, inverse) Expression Node(expression Text, expression Text Language) Traversal(traverse To Relation, inverse) Property Owner() Traversal(traverse To Relation, inverse) traverses Through Property Type() Object Operation Type() Function Type() Object Operation Type() receiver Property Type() Equality() Expression Node(expression Text, expression Text Language) Equality() has Equal Thing() Evaluation() Expression Context() Evaluation() evaluates Expression Node(expression Text, expression Text Language) Expression Context() Identifiable Entity() Expression Context() evaluates In Context() Expression Context() resulting Type Type() Relationship() Actual Situation() Relationship() Property Owner() Relationship Type() Situation Type() Relationship Type() Property Owner Type() Rule() Proposition() Rule() constrains Identifiable Entity() Multiplicity Constraint(mininum Number, maximum Number, at Once, is Sufficent) Type Constraint() Multiplicity Constraint(mininum Number, maximum Number, at Once, is Sufficent) is Sufficent Boolean() Multiplicity Constraint(mininum Number, maximum Number, at Once, is Sufficent) multiplicity Of Type() Uniqueness Constraint(is Primary Identity) Type Constraint() Uniqueness Constraint(is Primary Identity) has Unique Property Type() Conditional Rule() Rule() Conditional Rule() Conditional() Type Constraint() Rule() Equivalent() Rule() Disjoint() Rule() Enumerated() Rule() Generalization Constraint(redefines) Type Constraint() Generalization Constraint(redefines) has Specific Type() Property Constraint() Rule() Property Transitivity Constraint() Property Constraint() Property Type Constraint(prerequisite Type) Property Constraint() Property Type Constraint(prerequisite Type) is Of Type Type() Covering Constraint() Type Constraint() Covering Constraint() is Covered By Type() Facet Classification Constraint() Generalization Constraint(redefines) Conditional() condition Expression Node(expression Text, expression Text Language) Identifiable Entity() Thing() Identifiable Entity() was Stated In Statement() Identifiable Entity() identified By Identifier() Identifiable Entity() defined By Definition(text Definition, summary Description) Identifiable Entity() has Metadata Metadata() Identifiable Entity() has Name Name() Identifiable Entity() has Record Record() Identifiable Entity() constrained By Rule() Identifiable Entity() has Authoritative Source Information Source() Identifiable Entity() has Binding Property Binding() Thing() stated By Lexical Scope() Thing() in Context Of Context() Thing() has Type Type() Thing() referenced By Constant Reference() Thing() has Equality Equality() Thing() bound In Property Binding() Context() Identifiable Entity() Context() negates Proposition() Context() contextualizes Thing() Context() contextualizes Express Expression Context() Context() referenced By LR Lexical Reference() Proposition() Identifiable Entity() Proposition() negated Within Context() Proposition() qualified Within Proposition Variable() Actual Entity() Temporal Entity() Temporal Entity() Identifiable Entity() Pattern() Situation Type() Pattern() Situation() Pattern() Lexical Scope() Pattern() Property Owner() Pattern() owns Variable Pattern Variable(qualification, explicit) Pattern() satisfied By Pattern Match() Pattern Variable(qualification, explicit) Owned Property Type() Pattern Variable(qualification, explicit) Conditional() Pattern Variable(qualification, explicit) has Owning Pattern Pattern() Pattern Variable(qualification, explicit) maps To Match End() Pattern Variable(qualification, explicit) concrete Mapping Mapping(strength) Proposition Variable() Pattern Variable(qualification, explicit) Proposition Variable() qualifies Proposition() All() Expression Variable() Pattern Variable(qualification, explicit) Expression Variable() Computed() Part Variable(is Boundary Part) Type Pattern Variable() Focus Variable() Type Pattern Variable() Type Pattern Variable() Pattern Variable(qualification, explicit) Pattern Of Type() Pattern() Pattern Of Type() subject Type Type() Pattern Match() Actual Situation() Pattern Match() unnamed Pattern Match Variable Binding() Pattern Match() satisfies Pattern() Pattern Match() matches Situation() Variable Binding() Owned Property Binding() Variable Binding() unnamed Variable Binding Pattern Match() Computed() computation Expression Node(expression Text, expression Text Language) Match Rule(coerce) Rule() Match Rule(coerce) reference End Match End() Match Rule(coerce) map Rule Of Mapping(strength) Match End() Conditional() Match End() Computed() Match End() asserted Type Type() Match End() maps Variable Pattern Variable(qualification, explicit) Match End() match To Match Rule(coerce) Mapping(strength) Pattern() Mapping(strength) Rule() Mapping(strength) reference Focus Pattern Variable(qualification, explicit) Mapping(strength) has Map Rule Match Rule(coerce) Facade() Record Type() Computed Facade() Facade() Representation Rule(map All) Conditional Rule() Representation Rule(map All) represented Type Type() Local() Model() Package() Lexical Scope() Namespace() Lexical Scope() states Thing() Lexical Scope() references Lexical Reference() Lexical Reference() referenced Scope Context() Lexical Reference() extends Scope Lexical Scope() Include() Lexical Reference() Package() Lexical Scope() Package() has Prefix Prefix() MOF Package() Package() Logical Package() Package() Physical Package() Package() Mapping Package() Package() Prefix() Unique Text Identifier() Prefix() prefix Of Package() Association Type() Property Owner Type() Association() Property Owner() Association() Proposition() Statement() Metadata() Statement() transaction Id Value Type() Statement() resulted In Identifiable Entity() Information Source() Actual Entity() Information Source() Metadata() Information Source() made Statement Identifiable Entity() Metadata() Record() Metadata() metadata About Identifiable Entity() Definition(text Definition, summary Description) Metadata() Definition(text Definition, summary Description) external Reference IRI Identifier() Definition(text Definition, summary Description) external Term Term() Definition(text Definition, summary Description) defines Entity Identifiable Entity() Property Binding() binds Thing() Property Binding() bound By Property Type() Property Binding() bound To Identifiable Entity() Property Type() property Of Type() Property Type() traversed By Traversal(traverse To Relation, inverse) Property Type() received By Object Operation Type() Property Type() has Uniqueness Constraint Uniqueness Constraint(is Primary Identity) Property Type() has Binding Property Property Binding() Characteristic Type() Property Type() Characteristic Type() Situation Type() Characteristic Binding() Property Binding() Characteristic Binding() Actual Situation() Annotation Property() Characteristic Type() Owned Property Type() Property Type() Property Owner Type() Type() Owned Property Binding() Property Binding() Property Owner() Thing() Facet Of Entity() Relationship() Phase() Facet() Phase() Situation Type() Role() Facet() Facet() Type() Category() Facet() Record() Actual Situation() Record() Property Owner() Record() about Identifiable Entity() Record Type() Situation Type() Record Type() Property Owner Type() Record Type() about Type Type()
Label: relationships, Text: World() things Thing(id) World() eef0 E Class10() Thing(id) Named Element(name) Thing(id) relations Related To(since) Thing(id) E Reference0 E Class0() Named Element(name) Related To(since) Named Element(name) Related To(since) to Thing Thing(id) E Class0() Named Element(name) E Class0() ecl1 E Class1() E Class1() Named Element(name) E Class1() ecl2 E Class2() E Class2() Named Element(name) E Class2() ecl3 E Class3() E Class3() Named Element(name) E Class3() ecl4 E Class4() E Class4() Named Element(name) E Class4() ecl5 E Class5() E Class5() Named Element(name) E Class5() E Class6() E Class6() E Class7() E Class6() E Class8() E Class7() Thing(id) E Class8() Named Element(name) E Class9(name) E Class11() E Class9(name) E Class12() E Class9(name) ecl13 E Class13() E Class10() E Class9(name) E Class11() E Class12() E Class13()
Label: robots, Text: Turtle Bot() Named Element(name) Turtle Bot() area Area(xmax, ymax) Turtle Bot() waypointtypes Waypoint Type() Turtle Bot() waypoints Way Point(coord x, coord y) Turtle Bot() missions Mission() Named Element(name) Area(xmax, ymax) Waypoint Type() Named Element(name) Way Point(coord x, coord y) Named Element(name) Way Point(coord x, coord y) waypointtypes Waypoint Type() Mission() Named Element(name) Mission() task Task() Task() Line Task() Task() Line Task() waypoints Way Point(coord x, coord y) Shortest Path Task() Task() Shortest Path Task() waypoints Way Point(coord x, coord y) Return To Start Task() Task()
Label: gpl, Text: Program(name) imports Import(imported Namespace) Program(name) classes Type Declaration(access Level) Program(name) state State() Import(imported Namespace) Type Declaration(access Level) Named Element(name) Type Declaration(access Level) implementz Interface() Type Declaration(access Level) members Member(access) Clazz(isabstract) Type Declaration(access Level) Interface() Type Declaration(access Level) Member(access) Typed Declaration() Method(isabstract, isstatic) Member(access) Method(isabstract, isstatic) params Parameter() Method(isabstract, isstatic) body Block() Method(isabstract, isstatic) cache Clazz To Method Map() Parameter() Symbol() Field() Member(access) Field() default Value Expression() PUBLIC() Block() statements Statement() Statement() Print Statement() Statement() Print Statement() expression Expression() Return() Statement() Return() expression Expression() If Statement() Statement() If Statement() expression Expression() If Statement() else Block Block() While Statement() Statement() While Statement() condition Expression() While Statement() block Block() For Statement() Statement() For Statement() progression Assignment() For Statement() condition Expression() For Statement() block Block() Type Ref() Single Type Ref() Type Ref() Class Ref() Single Type Ref() Class Ref() referenced Class Type Declaration(access Level) Named Element(name) Typed Declaration() Named Element(name) Typed Declaration() type Ref Type Ref() Symbol() Typed Declaration() Variable Declaration() Symbol() Variable Declaration() Assignee() Assignment() Statement() Assignment() assignee Assignee() Assignment() value Expression() Assignee() Expression() Statement() Expression() Assignee() Array Type Ref() Type Ref() Array Type Ref() type Ref Single Type Ref() Integer Type Ref() Single Type Ref() Boolean Type Ref() Single Type Ref() String Type Ref() Single Type Ref() Void Type Ref() Single Type Ref() Or() right Expression() And() right Expression() Equality() right Expression() Inequality() right Expression() Superior Or Equal() right Expression() Inferior Or Equal() right Expression() Superior() right Expression() Inferior() right Expression() Plus() right Expression() Minus() right Expression() Multiplication() right Expression() Division() right Expression() Array Access() index Expression() Array Length() array Expression() Not() expression Expression() Neg() expression Expression() Field Access() receiver Expression() Field Access() field Field() Method Call() args Expression() Method Call() method Method(isabstract, isstatic) String Constant(value) Expression() Int Constant(value) Expression() Bool Constant(value) Expression() This() Expression() Super() Expression() Null() Expression() New Object() args Expression() New Object() type Clazz(isabstract) New Array() size Expression() New Array() type Type Ref() Symbol Ref() Expression() Symbol Ref() symbol Symbol() Context() bindings Symbol Binding() Context() cache Symbol To Symbol Binding Map() Value() Integer Value(value) Value() Symbol Binding() value Value() Symbol Binding() symbol Symbol() Field Binding() field Field() Field Binding() value Value() String Value(value) Value() Boolean Value(value) Value() Output Stream(stream) State() frame Cache Frame() State() objects Heap Object Instance() State() output Stream Output Stream(stream) State() arrays Heap Array Instance(size) State() context Cache Context() Frame() call Call() Frame() instance Object Instance() Frame() root Context Context() Frame() return Value Value() Null Value() Value() Call() New Call() Call() New Call() newz New Object() Method Call2() Call() Method Call2() methodcall Method Call() Object Instance() fieldbindings Field Binding() Object Instance() type Clazz(isabstract) Array Instance(size) value Value() Object Ref Value() Value() Object Ref Value() instance Object Instance() Array Ref Value() Value() Array Ref Value() instance Array Instance(size) Symbol To Symbol Binding Map() key Symbol() Symbol To Symbol Binding Map() value Symbol Binding() Clazz To Method Map() key Clazz(isabstract) Clazz To Method Map() value Method(isabstract, isstatic) Modulo() right Expression() Native Expression(value) Expression()
Label: automata, Text: Dfa() Named Element(name) Dfa() language Language() Dfa() regular States Regular State() Dfa() initial State Initial State() Dfa() final States Final State() Named Element(name) State(description) Named Element(name) Initial State() Regular State() Final State() State(description) Transition() target State State(description) Transition() symbols Symbol(literal, description, direction) Language() Named Element(name) Language() symbols Symbol(literal, description, direction) Symbol(literal, description, direction) Regular State() State(description) Regular State() transitions Transition()
Label: modelling, Text: Parameterable Classifier() Classifier() Primitive Type() Data Type() Templateable Classifier() Classifier() Extension() Association() Interaction() Behavior() Extension End() Property() Actor() Classifier() Encapsulated Classifier() Structured Classifier() Structured Classifier() Classifier() Activity() Behavior() Information Item() Classifier() Use Case() Behaviored Classifier() Generalization() general Classifier() Class() Behaviored Classifier() Class() Encapsulated Classifier() Device() Node() Behavior() Class() Behaviored Classifier() Classifier() State Machine() Behavior() Enumeration() Data Type() Deployment Specification() Artifact() Port() Property() Property() Data Type() Classifier() Association() Classifier() Association() member End Property() Node() Class() Signal() Classifier() Component() Class() Classifier() generalization Generalization() Stereotype() Class() Collaboration() Behaviored Classifier() Collaboration() Structured Classifier() Execution Environment() Node() Association Class() Class() Association Class() Association() Artifact() Classifier() Communication Path() Association() Protocol State Machine() State Machine() Interface() Classifier()
Label: education, Text: University(name) departments Department(name) Department(name) school University(name) Department(name) courses Course(semester, name, credits, code) Department(name) programs Program(name) Program(name) department Department(name) Program(name) study Plans Study Plan(name) Program(name) elective Courses Elective Courses() Program(name) obligatory Courses Obligatory Courses() Study Plan(name) years Year(value) Study Plan(name) program Program(name) Year(value) semesters Semester(type) Year(value) study Plan Study Plan(name) Semester(type) year Year(value) Semester(type) semester Courses Semester Course(type, name) Semester Course(type, name) semester Semester(type) Semester Course(type, name) course Course(semester, name, credits, code) Course(semester, name, credits, code) department Department(name) Elective Courses() program Program(name) Elective Courses() courses Course(semester, name, credits, code) Obligatory Courses() program Program(name) Obligatory Courses() courses Course(semester, name, credits, code) Spring() Elective()
Label: education, Text: Department() programme Programme(name, m Code) Department() course Course(name, code) Department() study Plan Study Plan() Department() spesialization Specialization(name) Course(name, code) code course Code() Course(name, code) mandatory Course Mandatory Course(mandatory, credit) Programme(name, m Code) study Plan Study Plan() Study Plan() programme Programme(name, m Code) Study Plan() spesialization Specialization(name) Study Plan() semester Semester(semester Number, total Points) Study Plan() mandatory Course Mandatory Course(mandatory, credit) Specialization(name) semester Semester(semester Number, total Points) Semester(semester Number, total Points) course Slot Course(name, code) Semester(semester Number, total Points) mandatory Course Mandatory Course(mandatory, credit) Mandatory Course(mandatory, credit) semester Semester(semester Number, total Points) Mandatory Course(mandatory, credit) course Course(name, code) Datateknologi2() course Code()
Label: webapp, Text: Application(name) frontend Front End(name) Application(name) backend Back End(name) Front End(name) views View(name) Front End(name) controllers Controller(name) Back End(name) services Service(name) Back End(name) logics Logic(name) Back End(name) entities Entity(name) View(name) graphic Controls Graphic Control(name) View(name) controllers Controller(name) Controller(name) views View(name) Controller(name) events Event(name) Service(name) methods Method(name, returntype) Logic(name) methods Method(name, returntype) Entity(name) attributes Attribute(name, type) Entity(name) methods Method(name, returntype) Attribute(name, type) Method(name, returntype) parameters Parameter(name, type) Graphic Control(name) events Event(name) Event(name) Parameter(name, type) Label(text) Graphic Control(name) Text Box(type) Graphic Control(name) Div() graphic Controls Graphic Control(name) Drop Down List(items) Graphic Control(name)
Label: metrics, Text: Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) Named Element(name, title) Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) entities Entity(stakeholder, use Case) Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) factors Factor() Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) evaluations Evaluation(maximum Points, completeness) Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) measures Measure(type) Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) measurement Methods Measurement Method() Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) tools Tool() Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) tags Tag() Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) sources Source() Quality Model Element(qualified Name) originates From Source() Source() Named Element(name, title) Source() quality Model Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) Described Element(description) Annotated Element() Named Element(name, title) Described Element(description) Annotated Element() Tagged Element() Annotated Element() annotations Annotation(key, value) Annotated Element() advanced Annotations Annotation Base() Annotation(key, value) Tag() Named Element(name, title) Tag() quality Model Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) Tagged Element() Quality Model Element(qualified Name) Tagged Element() tagged By Tag() Entity(stakeholder, use Case) Named Element(name, title) Entity(stakeholder, use Case) is A Specialization() Entity(stakeholder, use Case) part Of Decomposition() Entity(stakeholder, use Case) quality Model Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) Specialization() Annotated Element() Specialization() child Entity(stakeholder, use Case) Decomposition() Annotated Element() Decomposition() child Entity(stakeholder, use Case) Characterizing Element() Named Element(name, title) Characterizing Element() characterizes Entity(stakeholder, use Case) Factor() Characterizing Element() Factor() influences Impact(justification, effect) Factor() refines Factor Refinement() Factor() quality Model Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) Impact(justification, effect) Annotated Element() Impact(justification, effect) target Factor() NEGATIVE() Evaluation(maximum Points, completeness) Named Element(name, title) Evaluation(maximum Points, completeness) evaluates Factor() Evaluation(maximum Points, completeness) quality Model Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) Factor Refinement() Annotated Element() Factor Refinement() parent Factor() Measurement() Annotated Element() Measurement() parent Factor() Measurement() child Measure(type) Measure Refinement() Annotated Element() Measure Refinement() child Measure(type) Measure(type) Characterizing Element() Measure(type) measures Measurement() Measure(type) measures Direct Factor() Measure(type) quality Model Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) Measure(type) refines Measure Refinement() NUMBER() Measurement Method() Annotated Element() Measurement Method() determines Measure(type) Measurement Method() quality Model Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) Measure Aggregation() Measurement Method() Measure Aggregation() Named Element(name, title) Instrument() Measurement Method() Manual Instrument() Instrument() Manual Instrument() Named Element(name, title) Tool Based Instrument(metric) Instrument() Tool Based Instrument(metric) tool Tool() Tool() Named Element(name, title) Tool() quality Model Quality Model(school Grade Boundary2, school Grade Boundary3, school Grade Boundary4, school Grade Boundary5, school Grade Boundary6) Annotation Base() QIESL Evaluation() Text Evaluation(specification) Text Evaluation(specification) Evaluation(maximum Points, completeness) Form Based Evaluation() Evaluation(maximum Points, completeness) Single Measure Evaluation() Form Based Evaluation() Single Measure Evaluation() Measure Evaluation(range) Factor Aggregation() Form Based Evaluation() Normalization Measure() Measure(type) QIESL Aggregation() Text Aggregation(specification) Text Aggregation(specification) Measure Aggregation() Form Based Measure Aggregation() Measure Aggregation() Factor Ranking() Ranking(rank, weight) Factor Ranking() factor Factor() Linear Function(lower Bound, upper Bound) Function() Function() Linear Increasing Function() Linear Function(lower Bound, upper Bound) Linear Decreasing Function() Linear Function(lower Bound, upper Bound) Weighted Sum Factor Aggregation() Factor Aggregation() Weighted Sum Factor Aggregation() rankings Factor Ranking() Findings Union Measure Aggregation() Form Based Measure Aggregation() Number Mean Measure Aggregation() Form Based Measure Aggregation() Manual Evaluation() Evaluation(maximum Points, completeness) Measure Evaluation(range) measure Measure(type) Measure Evaluation(range) normlization Measure Normalization Measure() Measure Evaluation(range) function Function() Ranking(rank, weight) Multi Measure Evaluation() Form Based Evaluation() Weighted Sum Multi Measure Evaluation() Multi Measure Evaluation() Weighted Sum Multi Measure Evaluation() rankings Measure Ranking() Measure Ranking() Measure Evaluation(range) Measure Ranking() Ranking(rank, weight) Quality Model Result(system, date) measurement Results Measurement Result() Quality Model Result(system, date) evaluation Results Evaluation Result() Measurement Result() Result(message) Measurement Result() results From Measurement Method() Number Measurement Result() Measurement Result() Number Measurement Result() value Double Interval(lower, upper) Findings Measurement Result(count, findings) Measurement Result() Findings Measurement Result(count, findings) findings Finding Collection() Findings Measurement Result(count, findings) finding Messages Finding Message(message, location) Double Interval(lower, upper) Evaluation Result() Result(message) Evaluation Result() value Double Interval(lower, upper) Evaluation Result() results From Evaluation(maximum Points, completeness) Single Measure Evaluation Result(ratio Affected) Evaluation Result() Multi Measure Evaluation Result() Evaluation Result() Multi Measure Evaluation Result() evaluation Results Measure Ranking Evaluation Result(ratio Affected) Measure Ranking Evaluation Result(ratio Affected) value Double Interval(lower, upper) Measure Ranking Evaluation Result(ratio Affected) results From Measure Ranking() Result(message) Finding Collection() Finding Message(message, location)
Label: modelling, Text: Module() definitions Definition(name) Definition(name) Data Type Definition() Definition(name) Enumeration Definition() Data Type Definition() Enumeration Definition() literal Declarations Enumeration Literal Declaration(name) Enumeration Literal Declaration(name) Type Alias Definition() Data Type Definition() Record Definition() Data Type Definition() Record Definition() field Declarations Record Field Declaration(name) Record Field Declaration(name) type Data Type Specifier() Function Definition(kind) Definition(name) Function Definition(kind) Callable Element() Function Definition(kind) template Parameter Declarations Template Parameter Declaration() Function Definition(kind) input Parameter Declarations Input Parameter Declaration() Function Definition(kind) output Parameter Declarations Output Parameter Declaration() Function Definition(kind) checks Check() Function Definition(kind) assertions Assertion(static, status Kind) Function Definition(kind) function Object Declarations Function Object Declaration(name) Function Definition(kind) state Variable Declarations State Variable Declaration(name) Function Definition(kind) equations Equation(initial) Continuous() Check() function Function Definition(kind) Check() output Parameter Types Data Type Specifier() Callable Element() Parameter Declaration(name) Callable Element() Template Parameter Declaration() Parameter Declaration(name) Input Parameter Declaration() Parameter Declaration(name) Output Parameter Declaration() Parameter Declaration(name) Fatal() Assertion(static, status Kind) State Variable Declaration(name) Callable Element() Function Object Declaration(name) Callable Element() Function Object Declaration(name) function Name Function Definition(kind) Equation(initial) Data Type Specifier() Let Expression() variable Declarations Let Expression Variable Declaration() Let Expression Variable Declaration() parts Let Expression Variable Declaration Part(name) Let Expression Variable Declaration Part(name) Callable Element() If Expression(static) Switch Expression(static) cases Switch Case() Switch Case() Not Equal To() Greater Than Or Equal To() Subtract() Element Wise Divide() Element Wise Power() Logical Not() Transpose() Array Element Access() subscripts Array Subscript(slice) Array Subscript(slice) Iteration Call(identifier) variables Iteration Variable(name) Iteration Call(identifier) accumulator Iteration Accumulator(name) Iteration Variable(name) Callable Element() Iteration Accumulator(name) Callable Element() Derivative Operator() variable Callable Element() Array Construction Operator() iteration Clauses Array Construction Iteration Clause(variable Name) Array Construction Iteration Clause(variable Name) Array Concatenation Operator() rows Expression List() Expression List() Unit Construction Operator() Parenthesized Expression() End Expression() Range Expression() Implies Expression() Logical Or Expression() Logical And Expression() Equality Expression(operator) Relational Expression(operator) Type Test Expression() type Data Type Specifier() Additive Expression(operator) Multiplicative Expression(operator) Power Expression(operator) Unary Expression(operator) Postfix Expression(operator) Feature Call() feature Callable Element() Variable Access() Feature Call() Variable Access() step Expression Step Expression() Step Expression() Range Step Expression() end Step Expression() Additive Step Expression(operator) right Operand Step Expression() Negate Step Expression() operand Step Expression() Primitive Step Expression() Step Expression() Step Literal(value) Primitive Step Expression() Step N() Primitive Step Expression() Function Call() Feature Call() Member Variable Access() member Variable Callable Element() Algorithm Expression() body Compound() Compound() statements Statement() Statement() Assignment() Statement() Variable Declaration(name) Statement() If Statement() else Statement Statement() While Statement() body Statement() Do While Statement() body Statement() For Statement() body Statement() For Statement() iteration Variable Iteration Variable(name) Continue Statement() Statement() Break Statement() Statement() Return Statement() Statement() Builtin Definition() Definition(name) Builtin Definition() Callable Element() Builtin Function() Builtin Definition() Builtin Variable() Builtin Definition()
Label: app, Text: Domainmodel(nome Proj) elements Abstract Element() Package Declaration(name) elements Abstract Element() Abstract Element() Import(imported Namespace) Abstract Element() Abstract Type() Data Type(name) Abstract Type() Entity Type() Abstract Type() Entity Type() entity Entity(name) Entity(name) Abstract Element() Entity(name) features Feature(required, min, max, name) Feature(required, min, max, name) type Abstract Type() Page(name, title, header, footer) Abstract Element() Page(name, title, header, footer) forms Form Types(name) Form Types(name) Abstract Element() Form Types(name) entity Entity(name) Form(get, post, put, delete) Form Types(name) Form New Entity Only() Form Types(name) Form Report(filter, order, pagination) Form Types(name)
Label: gpl, Text: Abstract Method Declaration() Body Declaration() Abstract Method Declaration() body Block() Abstract Method Declaration() parameters Single Variable Declaration(varargs) Abstract Method Declaration() thrown Exceptions Type Access() Abstract Method Declaration() type Parameters Type Parameter() Abstract Method Declaration() usages In Doc Comments Method Ref() Abstract Method Declaration() usages Abstract Method Invocation() Abstract Method Invocation() AST Node() Abstract Method Invocation() method Abstract Method Declaration() Abstract Method Invocation() arguments Expression() Abstract Method Invocation() type Arguments Type Access() Abstract Type Declaration() body Declarations Body Declaration() Abstract Type Declaration() Type() Abstract Type Declaration() comments After Body Comment(content, enclosed By Parent, prefix Of Parent) Abstract Type Declaration() package Package() Abstract Type Declaration() super Interfaces Type Access() Abstract Type Qualified Expression() Expression() Abstract Type Qualified Expression() qualifier Type Access() Abstract Variables Container() AST Node() Abstract Variables Container() type Type Access() Abstract Variables Container() fragments Variable Declaration Fragment() Annotation() Expression() Annotation() type Type Access() Annotation() values Annotation Member Value Pair() Archive(original File Path) Named Element(name, proxy) Archive(original File Path) manifest Manifest() Assert Statement() Statement() Assert Statement() expression Expression() AST Node() comments Comment(content, enclosed By Parent, prefix Of Parent) AST Node() original Compilation Unit Compilation Unit(original File Path) Annotation Member Value Pair() Named Element(name, proxy) Annotation Member Value Pair() member Annotation Type Member Declaration() Annotation Member Value Pair() value Expression() Annotation Type Declaration() Abstract Type Declaration() Annotation Type Member Declaration() Body Declaration() Annotation Type Member Declaration() default Expression() Annotation Type Member Declaration() type Type Access() Annotation Type Member Declaration() usages Annotation Member Value Pair() Anonymous Class Declaration() AST Node() Anonymous Class Declaration() body Declarations Body Declaration() Array Access() index Expression() Array Creation() dimensions Expression() Array Creation() initializer Array Initializer() Array Creation() type Type Access() Array Initializer() expressions Expression() Array Length Access() array Expression() Array Type(dimensions) Type() Array Type(dimensions) element Type Type Access() Assignment(operator) right Hand Side Expression() RIGHT SHIFT UNSIGNED ASSIGN() Body Declaration() Named Element(name, proxy) Body Declaration() abstract Type Declaration Abstract Type Declaration() Body Declaration() annotations Annotation() Body Declaration() anonymous Class Declaration Owner Anonymous Class Declaration() Body Declaration() modifier Modifier(visibility, inheritance, static, transient, volatile, native, strictfp, synchronized) Boolean Literal(value) Expression() Block Comment() Comment(content, enclosed By Parent, prefix Of Parent) Block() statements Statement() Break Statement() Statement() Break Statement() label Labeled Statement() Cast Expression() expression Expression() Cast Expression() type Type Access() Catch Clause() Statement() Catch Clause() exception Single Variable Declaration(varargs) Catch Clause() body Block() Character Literal(escaped Value) Expression() Constructor Declaration() Abstract Method Declaration() Conditional Expression() then Expression Expression() Constructor Invocation() Statement() Constructor Invocation() Abstract Method Invocation() Class Declaration() Type Declaration() Class Declaration() super Class Type Access() Comment(content, enclosed By Parent, prefix Of Parent) AST Node() Compilation Unit(original File Path) Named Element(name, proxy) Compilation Unit(original File Path) comment List Comment(content, enclosed By Parent, prefix Of Parent) Compilation Unit(original File Path) imports Import Declaration(static) Compilation Unit(original File Path) package Package() Compilation Unit(original File Path) types Abstract Type Declaration() Continue Statement() Statement() Continue Statement() label Labeled Statement() Do Statement() body Statement() Do Statement() expression Expression() Empty Statement() Statement() Enhanced For Statement() body Statement() Enhanced For Statement() expression Expression() Enhanced For Statement() parameter Single Variable Declaration(varargs) Enum Constant Declaration() Body Declaration() Enum Constant Declaration() Variable Declaration(extra Array Dimensions) Enum Constant Declaration() anonymous Class Declaration Anonymous Class Declaration() Enum Constant Declaration() arguments Expression() Enum Declaration() Abstract Type Declaration() Enum Declaration() enum Constants Enum Constant Declaration() Expression() AST Node() Expression Statement() Statement() Expression Statement() expression Expression() Field Access() expression Expression() Field Access() field Single Variable Access() Field Declaration() Body Declaration() Field Declaration() Abstract Variables Container() For Statement() body Statement() For Statement() initializers Expression() If Statement() else Statement Statement() If Statement() expression Expression() Import Declaration(static) AST Node() Import Declaration(static) imported Element Named Element(name, proxy) Infix Expression(operator) extended Operands Expression() CONDITIONAL OR() final() Initializer() Body Declaration() Initializer() body Block() Instanceof Expression() left Operand Expression() Instanceof Expression() right Operand Type Access() Interface Declaration() Type Declaration() Javadoc() Comment(content, enclosed By Parent, prefix Of Parent) Javadoc() tags Tag Element(tag Name) Labeled Statement() Named Element(name, proxy) Labeled Statement() body Statement() Labeled Statement() usages In Break Statements Break Statement() Labeled Statement() usages In Continue Statements Continue Statement() Line Comment() Comment(content, enclosed By Parent, prefix Of Parent) Manifest() main Attributes Manifest Attribute(key, value) Manifest() entry Attributes Manifest Entry(name) Manifest Attribute(key, value) Manifest Entry(name) attributes Manifest Attribute(key, value) Member Ref() AST Node() Member Ref() member Named Element(name, proxy) Member Ref() qualifier Type Access() Method Declaration(extra Array Dimensions) Abstract Method Declaration() Method Declaration(extra Array Dimensions) return Type Type Access() Method Invocation() expression Expression() Method Invocation() Abstract Method Invocation() Method Ref() AST Node() Method Ref() method Abstract Method Declaration() Method Ref() qualifier Type Access() Method Ref() parameters Method Ref Parameter(name, varargs) Method Ref Parameter(name, varargs) AST Node() Method Ref Parameter(name, varargs) type Type Access() Model(name) owned Elements Package() Model(name) orphan Types Type() Model(name) unresolved Items Unresolved Item() Model(name) compilation Units Compilation Unit(original File Path) Model(name) archives Archive(original File Path) Modifier(visibility, inheritance, static, transient, volatile, native, strictfp, synchronized) AST Node() Modifier(visibility, inheritance, static, transient, volatile, native, strictfp, synchronized) body Declaration Body Declaration() Modifier(visibility, inheritance, static, transient, volatile, native, strictfp, synchronized) single Variable Declaration Single Variable Declaration(varargs) Modifier(visibility, inheritance, static, transient, volatile, native, strictfp, synchronized) variable Declaration Statement Variable Declaration Statement(extra Array Dimensions) Modifier(visibility, inheritance, static, transient, volatile, native, strictfp, synchronized) variable Declaration Expression Variable Declaration Expression() Named Element(name, proxy) AST Node() Named Element(name, proxy) usages In Imports Import Declaration(static) Namespace Access() AST Node() Number Literal(token Value) Expression() Null Literal() Expression() Package() Named Element(name, proxy) Package() owned Elements Abstract Type Declaration() Package() model Model(name) Package() usages In Package Access Package Access() Package Access() Namespace Access() Package Access() package Package() Parameterized Type() Type() Parameterized Type() type Arguments Type Access() Parenthesized Expression() expression Expression() Postfix Expression(operator) operand Expression() DECREMENT() Prefix Expression(operator) operand Expression() NOT() Primitive Type() Type() Primitive Type Boolean() Primitive Type() Primitive Type Byte() Primitive Type() Primitive Type Char() Primitive Type() Primitive Type Double() Primitive Type() Primitive Type Short() Primitive Type() Primitive Type Float() Primitive Type() Primitive Type Int() Primitive Type() Primitive Type Long() Primitive Type() Primitive Type Void() Primitive Type() Return Statement() Statement() Return Statement() expression Expression() Single Variable Access() qualifier Expression() Single Variable Access() variable Variable Declaration(extra Array Dimensions) Single Variable Declaration(varargs) Variable Declaration(extra Array Dimensions) Single Variable Declaration(varargs) modifier Modifier(visibility, inheritance, static, transient, volatile, native, strictfp, synchronized) Single Variable Declaration(varargs) type Type Access() Single Variable Declaration(varargs) annotations Annotation() Single Variable Declaration(varargs) method Declaration Abstract Method Declaration() Single Variable Declaration(varargs) catch Clause Catch Clause() Single Variable Declaration(varargs) enhanced For Statement Enhanced For Statement() Statement() AST Node() String Literal(escaped Value) Expression() Super Constructor Invocation() Statement() Super Constructor Invocation() Abstract Method Invocation() Super Constructor Invocation() expression Expression() Super Field Access() Abstract Type Qualified Expression() Super Field Access() field Single Variable Access() Super Method Invocation() Abstract Type Qualified Expression() Super Method Invocation() Abstract Method Invocation() Switch Case(default) Statement() Switch Case(default) expression Expression() Switch Statement() statements Statement() Switch Statement() expression Expression() Synchronized Statement() Statement() Synchronized Statement() body Block() Synchronized Statement() expression Expression() Tag Element(tag Name) fragments AST Node() Text Element(text) AST Node() This Expression() Abstract Type Qualified Expression() Throw Statement() Statement() Throw Statement() expression Expression() Try Statement() Statement() Try Statement() finally Block() Try Statement() catch Clauses Catch Clause() Type() Named Element(name, proxy) Type() usages In Type Access Type Access() Type Access() Expression() Type Access() qualifier Namespace Access() Type Access() type Type() Type Declaration() Abstract Type Declaration() Type Declaration() type Parameters Type Parameter() Type Declaration Statement() Statement() Type Declaration Statement() declaration Abstract Type Declaration() Type Literal() Expression() Type Literal() type Type Access() Type Parameter() Type() Type Parameter() bounds Type Access() Unresolved Item() Named Element(name, proxy) Unresolved Item Access() Expression() Unresolved Item Access() Namespace Access() Unresolved Item Access() element Unresolved Item() Unresolved Item Access() qualifier AST Node() Unresolved Annotation Declaration() Annotation Type Declaration() Unresolved Annotation Declaration() Unresolved Item() Unresolved Annotation Type Member Declaration() Annotation Type Member Declaration() Unresolved Annotation Type Member Declaration() Unresolved Item() Unresolved Class Declaration() Class Declaration() Unresolved Class Declaration() Unresolved Item() Unresolved Enum Declaration() Enum Declaration() Unresolved Enum Declaration() Unresolved Item() Unresolved Interface Declaration() Interface Declaration() Unresolved Interface Declaration() Unresolved Item() Unresolved Labeled Statement() Labeled Statement() Unresolved Labeled Statement() Unresolved Item() Unresolved Method Declaration() Method Declaration(extra Array Dimensions) Unresolved Method Declaration() Unresolved Item() Unresolved Single Variable Declaration() Single Variable Declaration(varargs) Unresolved Single Variable Declaration() Unresolved Item() Unresolved Type() Type() Unresolved Type() Unresolved Item() Unresolved Type Declaration() Abstract Type Declaration() Unresolved Type Declaration() Unresolved Item() Unresolved Variable Declaration Fragment() Variable Declaration Fragment() Unresolved Variable Declaration Fragment() Unresolved Item() Variable Declaration(extra Array Dimensions) Named Element(name, proxy) Variable Declaration(extra Array Dimensions) initializer Expression() Variable Declaration(extra Array Dimensions) usage In Variable Access Single Variable Access() Variable Declaration Expression() Expression() Variable Declaration Expression() Abstract Variables Container() Variable Declaration Expression() modifier Modifier(visibility, inheritance, static, transient, volatile, native, strictfp, synchronized) Variable Declaration Expression() annotations Annotation() Variable Declaration Fragment() Variable Declaration(extra Array Dimensions) Variable Declaration Fragment() variables Container Abstract Variables Container() Variable Declaration Statement(extra Array Dimensions) Statement() Variable Declaration Statement(extra Array Dimensions) Abstract Variables Container() Variable Declaration Statement(extra Array Dimensions) modifier Modifier(visibility, inheritance, static, transient, volatile, native, strictfp, synchronized) Variable Declaration Statement(extra Array Dimensions) annotations Annotation() protected() Wild Card Type(upper Bound) Type() Wild Card Type(upper Bound) bound Type Access() While Statement() body Statement() While Statement() expression Expression()
Label: petrinet, Text: Trace() global Trace Global State() Trace() events Events() Trace() traced Objects Traced Objects() Trace() static Objects Pools Static Objects Pools() Global State() events Triggered During State Event Occurrence() Global State() place tokens States Place tokens State(tokens) Static Objects Pools() Event Occurrence() state During Which Triggered Global State() Events() Net main Entry Event Occurrence Trace Net main Entry Event Occurrence() Events() Net main Exit Event Occurrence Trace Net main Exit Event Occurrence() Events() Net run Entry Event Occurrence Trace Net run Entry Event Occurrence() Events() Net run Exit Event Occurrence Trace Net run Exit Event Occurrence() Events() Place add Token Entry Event Occurrence Trace Place add Token Entry Event Occurrence() Events() Place add Token Exit Event Occurrence Trace Place add Token Exit Event Occurrence() Events() Place remove Token Entry Event Occurrence Trace Place remove Token Entry Event Occurrence() Events() Place remove Token Exit Event Occurrence Trace Place remove Token Exit Event Occurrence() Events() Transition is Enabled Entry Event Occurrence Trace Transition is Enabled Entry Event Occurrence() Events() Transition is Enabled Exit Event Occurrence Trace Transition is Enabled Exit Event Occurrence() Events() Transition fire Entry Event Occurrence Trace Transition fire Entry Event Occurrence() Events() Transition fire Exit Event Occurrence Trace Transition fire Exit Event Occurrence() Net main Entry Event Occurrence() Event Occurrence() Net main Exit Event Occurrence() Event Occurrence() Net main Exit Event Occurrence() corresponding Entry Event Net main Entry Event Occurrence() Net run Entry Event Occurrence() Event Occurrence() Net run Exit Event Occurrence() Event Occurrence() Net run Exit Event Occurrence() corresponding Entry Event Net run Entry Event Occurrence() Place add Token Entry Event Occurrence() Event Occurrence() Place add Token Entry Event Occurrence() this Param Traced Place(initial Tokens, name) Place add Token Exit Event Occurrence() Event Occurrence() Place add Token Exit Event Occurrence() corresponding Entry Event Place add Token Entry Event Occurrence() Place remove Token Entry Event Occurrence() Event Occurrence() Place remove Token Entry Event Occurrence() this Param Traced Place(initial Tokens, name) Place remove Token Exit Event Occurrence() Event Occurrence() Place remove Token Exit Event Occurrence() corresponding Entry Event Place remove Token Entry Event Occurrence() Transition is Enabled Entry Event Occurrence() Event Occurrence() Transition is Enabled Exit Event Occurrence() Event Occurrence() Transition is Enabled Exit Event Occurrence() corresponding Entry Event Transition is Enabled Entry Event Occurrence() Transition fire Entry Event Occurrence() Event Occurrence() Transition fire Exit Event Occurrence() Event Occurrence() Transition fire Exit Event Occurrence() corresponding Entry Event Transition fire Entry Event Occurrence() Place tokens State(tokens) parent Traced Place(initial Tokens, name) Place tokens State(tokens) global States Global State() Traced Objects() petrinet traced Places Traced Place(initial Tokens, name) Traced Place(initial Tokens, name) tokens Trace Place tokens State(tokens)
Label: modelling, Text: State Machine() Behavior() Collaboration() Behaviored Classifier() Protocol State Machine() State Machine() Stereotype() Class() Device() Node() Component() Class() Node() Class() Execution Environment() Node() Class() Behaviored Classifier() Operation() Behavioral Feature() Reception() Behavioral Feature() Behavioral Feature() Interaction() Behavior() Activity() Behavior() Association Class() Class() Use Case() Behaviored Classifier() Behavior() Class() Behavior() specification Behavioral Feature() Behaviored Classifier() classifier Behavior Behavior()
Label: statemachine, Text: States Model() systemunits System Unit Model(name) Attribute(name) datatype Data Type(name) System Unit Model(name) datatypelibrary Data Type Library(name) System Unit Model(name) systemunitlibrary System Unit Library(name) Data Type(name) function Function(name) System Unit Library(name) systemunit System Unit(name) System Unit(name) statesystemmodel State System Model(name) System Unit(name) attribute Attribute(name) System Unit(name) function Function(name) Data Type Library(name) datatype Data Type(name) Function(name) returnparameter Return Parameter() Function(name) incomingparameter Incoming Parameter() Parameter(name) datatype Data Type(name) State System Model(name) statesystem State System() State System() node Node(name) State System() edge Edge(name) State System() attribute Attribute(name) State System() event Event(name) Node(name) incoming Edge(name) Edge(name) target Node(name) Event(name) State() Node(name) State() functioncall Function Call() Transition() Node(name) Transition() trigger Trigger() Selection Divergence() Node(name) Selection Convergence() Node(name) Trigger() event Event(name) Return Parameter() Parameter(name) Incoming Parameter() Parameter(name) Incoming Parameter() attribute Attribute(name) Function Call() function Function(name) Function Call() parametervalue Parameter Value() String() Data Type(name) Integer() Data Type(name) Boolean() Data Type(name) Initial State() State() Terminal State() State() Middle State() State() Change Event() Event(name) Change Event() changeexpression Change Expression(fulfilled) Change Expression(fulfilled) function Function(name) Change Expression(fulfilled) incomingparameter Incoming Parameter() Parameter Value() incomingparameter Incoming Parameter()
Label: petrinet, Text: Petri Net Doc(xmlns) nets Petri Net(id, type) Petri Net(id, type) pages Page() Petri Net(id, type) name Name(text) Petri Net(id, type) toolspecifics Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) Petri Net(id, type) container Petri Net Doc Petri Net Doc(xmlns) Petri Net(id, type) declaration Declaration() SYMNET() Page() objects Pn Object(id) Page() container Petri Net Petri Net(id, type) Page() nodegraphics Node Graphics() Page() declaration Declaration() Pn Object(id) name Name(text) Pn Object(id) toolspecifics Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) Pn Object(id) container Page Page() Name(text) Annotation() Name(text) container Name Petri Net Petri Net(id, type) Name(text) container Name Pn Object Pn Object(id) Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) formatted XML Buffer Long String() Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) tool Info Grammar URI URI() Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) container Petri Net Petri Net(id, type) Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) container Pn Object Pn Object(id) Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) container Label Label() Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) tool Info Model Any Object() Label() toolspecifics Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) Node Graphics() Graphics() Node Graphics() position Position() Node Graphics() dimension Dimension() Node Graphics() fill Fill(color, gradientcolor, gradientrotation, image) Node Graphics() line Line(color, shape, width, style) Node Graphics() container Node Node() Node Graphics() container Page Page() Graphics() Coordinate(x, y) Position() Coordinate(x, y) Position() container Arc Graphics Arc Graphics() Position() container P Node Graphics Node Graphics() Offset() Coordinate(x, y) Offset() container Annotation Graphics Annotation Graphics() Dimension() Coordinate(x, y) Dimension() container D Node Graphics Node Graphics() Annotation Graphics() Graphics() Annotation Graphics() offset Offset() Annotation Graphics() fill Fill(color, gradientcolor, gradientrotation, image) Annotation Graphics() line Line(color, shape, width, style) Annotation Graphics() font Font(align, decoration, family, rotation, size, style, weight) Annotation Graphics() container Annotation Annotation() Fill(color, gradientcolor, gradientrotation, image) image URI() Fill(color, gradientcolor, gradientrotation, image) container Node Graphics Node Graphics() Fill(color, gradientcolor, gradientrotation, image) container Annotation Graphics Annotation Graphics() YELLOW() DIAGONAL() Line(color, shape, width, style) container Node Graphics Node Graphics() Line(color, shape, width, style) container Arc Graphics Arc Graphics() Line(color, shape, width, style) container Annotation Graphics Annotation Graphics() CURVE() Arc Graphics() Graphics() Arc Graphics() positions Position() Arc Graphics() line Line(color, shape, width, style) Arc Graphics() container Arc Arc() Arc() Pn Object(id) Arc() target Node() Arc() arcgraphics Arc Graphics() Arc() hlinscription HL Annotation() Node() Pn Object(id) Node() Out Arcs Arc() Node() nodegraphics Node Graphics() Font(align, decoration, family, rotation, size, style, weight) container Annotation Graphics Annotation Graphics() RIGHT() LINETHROUGH() TREBUCHET() XXLARGE() OBLIQUE() LIGHTER() Place Node() Node() Place Node() referencing Places Ref Place() Transition Node() Node() Transition Node() referencing Transitions Ref Transition() Place() Place Node() Place() type Type() Place() hlinitial Marking HL Marking() Ref Transition() ref Transition Node() Transition() Transition Node() Transition() condition Condition() Ref Place() ref Place Node() Attribute() Label() DOT() Annotation() Label() Annotation() annotationgraphics Annotation Graphics() URI() Long String() Any Object() container Tool Info Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) HL Core Annotation(text) Annotation() Type() HL Core Annotation(text) Type() container Place Place() HL Marking() HL Core Annotation(text) HL Marking() container Place Place() Condition() HL Core Annotation(text) Condition() container Transition Transition() HL Annotation() HL Core Annotation(text) HL Annotation() container Arc Arc() Declaration() HL Core Annotation(text) Declaration() container Declaration Petri Net Petri Net(id, type) Declaration() container Declaration Page Page()
Label: metamodelling, Text: E Attribute(i D) E Structural Feature(changeable, volatile, transient, default Value Literal, unsettable, derived) E Attribute(i D) e Attribute Type E Data Type(serializable) E Annotation(source) e Model Element E Model Element() E Class(abstract, interface) E Classifier(instance Class Name, instance Class, instance Type Name) E Class(abstract, interface) e Operations E Operation() E Class(abstract, interface) e References E Reference(containment, container, resolve Proxies) E Class(abstract, interface) e ID Attribute E Attribute(i D) E Class(abstract, interface) e Structural Features E Structural Feature(changeable, volatile, transient, default Value Literal, unsettable, derived) E Classifier(instance Class Name, instance Class, instance Type Name) E Named Element(name) E Classifier(instance Class Name, instance Class, instance Type Name) e Package E Package(ns URI, ns Prefix) E Data Type(serializable) E Classifier(instance Class Name, instance Class, instance Type Name) E Enum() E Data Type(serializable) E Enum() e Literals E Enum Literal(value, literal) E Enum Literal(value, literal) E Named Element(name) E Enum Literal(value, literal) e Enum E Enum() E Model Element() e Annotations E Annotation(source) E Named Element(name) E Model Element() E Operation() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Operation() e Containing Class E Class(abstract, interface) E Operation() e Parameters E Parameter() E Operation() e Exceptions E Classifier(instance Class Name, instance Class, instance Type Name) E Package(ns URI, ns Prefix) E Named Element(name) E Package(ns URI, ns Prefix) e Classifiers E Classifier(instance Class Name, instance Class, instance Type Name) E Parameter() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Parameter() e Operation E Operation() E Reference(containment, container, resolve Proxies) E Structural Feature(changeable, volatile, transient, default Value Literal, unsettable, derived) E Reference(containment, container, resolve Proxies) e Reference Type E Class(abstract, interface) E Reference(containment, container, resolve Proxies) e Keys E Attribute(i D) E Structural Feature(changeable, volatile, transient, default Value Literal, unsettable, derived) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Structural Feature(changeable, volatile, transient, default Value Literal, unsettable, derived) e Containing Class E Class(abstract, interface) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Named Element(name) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) e Type E Classifier(instance Class Name, instance Class, instance Type Name)
Label: webapp, Text: Web Model(name) hypertext Hypertext Layer() Web Model(name) content Content Layer() Hypertext Layer() home Page Page(name) Content Layer() classes Class(name) Class(name) representative Attribute Attribute(name, type) Attribute(name, type) Page(name) links Link() Index Page(size) Dynamic Page() Details Page() Dynamic Page() Dynamic Page() Page(name) Dynamic Page() displayed Class Class(name) Static Page() Page(name) Link() target Page(name) NC Link() Link() C Link() Link() Email()
Label: statemachine, Text: Named Element(name) State Machine() Named Element(name) State Machine() states State(initial Time, final Time) State Machine() transitions Transition(initial Time, final Time, time) State(initial Time, final Time) Named Element(name) State(initial Time, final Time) incoming Transition(initial Time, final Time, time) State(initial Time, final Time) state Machine State Machine() State(initial Time, final Time) parent State Composite State() Final State() State(initial Time, final Time) Initial State() State(initial Time, final Time) Transition(initial Time, final Time, time) Named Element(name) Transition(initial Time, final Time, time) source State(initial Time, final Time) Transition(initial Time, final Time, time) trigger Trigger(expression) Transition(initial Time, final Time, time) state Machine State Machine() Timed Transition(duration) Transition(initial Time, final Time, time) Trigger(expression) Pseudostate() State(initial Time, final Time) Fork() Pseudostate() Join() Pseudostate() Composite State() State(initial Time, final Time) Composite State() regions Region() Region() states State(initial Time, final Time) Region() parent Composite State()
Label: education, Text: Programme(name, code, duration) programme Semester Semester(number, total Credits, season, credit Constraint) Programme(name, code, duration) programme Specializaton Specialization(name) Course(name, code, credits, level) Semester(number, total Credits, season, credit Constraint) course List Course(name, code, credits, level) Semester(number, total Credits, season, credit Constraint) course Groups Course Group(status) Semester(number, total Credits, season, credit Constraint) credit Constraint credits() Specialization(name) specialization Course Course(name, code, credits, level) Specialization(name) semesters Semester(number, total Credits, season, credit Constraint) Course Group(status) courses In Group Course(name, code, credits, level) Department(name, code) programmes Programme(name, code, duration) Department(name, code) course Course(name, code, credits, level) credits()
Label: class-diagram, Text: Boolean() Integer() String() Named Elt(name) name String() Classifier() Named Elt(name) Data Type() Classifier() Class(is Abstract) Classifier() Class(is Abstract) attr Attribute(multi Valued) Class(is Abstract) is Abstract Boolean() Attribute(multi Valued) Named Elt(name) Attribute(multi Valued) multi Valued Boolean() Attribute(multi Valued) type Classifier() Attribute(multi Valued) owner Class(is Abstract)
Label: petrinet, Text: Place() net Net() Place() out PT Arc() Place() in TP Arc() Transition() net Net() Transition() in PT Arc() Transition() out TP Arc() Net() place Place() Net() transition Transition() Arc() PT Arc() Arc() PT Arc() dst Transition() PT Arc() src Place() TP Arc() Arc() TP Arc() src Transition() TP Arc() dst Place()
Label: app, Text: Model() application Application(name) Model() elements Model Element(name) Model Element(name) Variable Declaration(name) Type Description(many) type Type() Parameter() Variable Declaration(name) Parameter() description Type Description(many) Object Reference() Expression() Object Reference() Scalar Expression() Object Reference() Collection Expression() Object Reference() object Variable Declaration(name) Expression() Scalar Expression() Collection Expression() String Literal(value) Expression() String Literal(value) Scalar Expression() String Function() Expression() String Function() Scalar Expression() Collection Literal() Expression() Collection Literal() Collection Expression() Collection Literal() items Scalar Expression() Collection Function() Expression() Collection Function() Collection Expression() Application(name) background Scalar Expression() Application(name) buttons Tabbar Button() Tabbar Button() icon Scalar Expression() Tabbar Button() view View Call() Type() Model Element(name) Simple Type(platform Type) Type() Entity() Type() Entity() properties Property(derived) Property(derived) Variable Declaration(name) Property(derived) description Type Description(many) Content Provider(many) Model Element(name) Content Provider(many) parameter Parameter() Content Provider(many) type Type() Content Provider(many) selection Scalar Expression() Provider Construction() View() Model Element(name) View() content Parameter() Sectioned View() View() Sectioned View() title Scalar Expression() Sectioned View() sections View Section() Table View() Sectioned View() Details View() Sectioned View() Details View() header View Header() Custom View(objclass) View() View Header() image Scalar Expression() View Section() title Scalar Expression() View Section() cells Section Cell(type) Section Cell(type) iterator Collection Iterator() Section Cell(type) image Scalar Expression() Section Cell(type) action View Action() subtitle() Collection Iterator() Variable Declaration(name) Collection Iterator() collection Collection Expression() View Action() External Open() View Action() External Open() url Scalar Expression() View Call() View Action() View Call() view View() View Call() provider Provider Construction() String Concat() String Function() String Concat() values Scalar Expression() String Replace() String Function() String Replace() replacement Scalar Expression() String Url Conform() String Function() String Url Conform() value Scalar Expression() String Split() Collection Function() String Split() delimiter Scalar Expression() Complex Provider Construction() Provider Construction() Complex Provider Construction() provider Content Provider(many) Complex Provider Construction() argument Expression() Simple Provider Construction() Provider Construction() Simple Provider Construction() expression Expression()
Label: transformation, Text: Named Element(name) Section(type) Pattern() Section(type) Pattern() variables Object Variable() Pattern() link Constraints Link Constraint() Pattern() statements Statement() Pattern() additional Constraints Additional Constraint() Clause() Section(type) Clause() statements Statement() Variable() Named Element(name) Object Variable() Variable() Object Variable() model Typed Model(type) Primitive Variable() Variable() Link Constraint() target Object Variable() Simple Link Constraint() Link Constraint() Simple Link Constraint() id Expression() Enclosure Link Constraint() Link Constraint() Path Constraint(min Length, max Length) Link Constraint() Path Constraint(min Length, max Length) path Variable Variable() POST() Query Model() Unit() Query Model() queries Query() Typed Model(type) Named Element(name) transient() Query() Pattern() Query() Named Element(name) Query() Executable(active, parameters) Unit() models Typed Model(type) Expression() Atomic Exp() Unary Exp Child() Atomic Exp() path Call Path Exp() Literal Exp() Atomic Exp() String Literal Exp(string Symbol) Literal Exp() Integer Literal Exp(integer Symbol) Literal Exp() Real Literal Exp(real Symbol) Literal Exp() Boolean Literal Exp(bool Symbol) Literal Exp() Undefined Literal Exp(value) Literal Exp() Collection Literal Exp(type) Literal Exp() Collection Literal Exp(type) literals Expression() Enum Literal Exp() Literal Exp() INVALID() Type Literal Exp() Literal Exp() Variable Exp() Atomic Exp() Variable Exp() referred Variable Variable() Predefined Variable Exp(variable) Atomic Exp() id() Nested Exp() Atomic Exp() Nested Exp() expression Expression() Call Path Exp() Feature Path Exp(feature) Call Path Exp() Operation Path Exp(separator, operation) Call Path Exp() Operation Path Exp(separator, operation) parameters Expression() arrow() Loop Path Exp() Call Path Exp() Iterator Path Exp(type) Loop Path Exp() Iterator Path Exp(type) second Var Variable() Iterator Path Exp(type) body Exp Expression() closure() Let Exp() in Exp Expression() Let Exp() Imperative Exp() Let Exp() variables Variable With Init() Variable With Init() Variable() Variable With Init() init Exp Expression() Object Variable With Init() Object Variable() Object Variable With Init() Variable With Init() Primitive Variable With Init() Primitive Variable() Primitive Variable With Init() Variable With Init() Condition Exp() else Branch Expression() Condition Exp() condition Boolean Implies Exp(operator) Boolean Implies Exp(operator) Expression() Boolean Implies Exp(operator) right Boolean Implies Exp Child() Boolean Implies Exp Child() Expression() Boolean Or Exp(operators) Boolean Implies Exp Child() Boolean Or Exp(operators) children Boolean Or Exp Child() Boolean Or Exp Child() Boolean Implies Exp Child() Boolean And Exp(operators) Boolean Or Exp Child() Boolean And Exp(operators) children Boolean And Exp Child() Boolean And Exp Child() Boolean Or Exp Child() implies() Relational Exp(operator) Boolean And Exp Child() Relational Exp(operator) right Relational Exp Child() Relational Exp Child() Boolean And Exp Child() not Equal() Additive Exp(operators) Relational Exp Child() Additive Exp(operators) children Additive Exp Child() minus() Additive Exp Child() Relational Exp Child() Multiplicative Exp(operators) Additive Exp Child() Multiplicative Exp(operators) children Multiplicative Exp Child() div() Multiplicative Exp Child() Additive Exp Child() Unary Exp(operator) Multiplicative Exp Child() Unary Exp(operator) child Unary Exp Child() Unary Exp Child() Multiplicative Exp Child() not() Collection Type() Ordered Set Type() Collection Type() Sequence Type() Collection Type() Set Type() Collection Type() Bag Type() Collection Type() Imperative Exp() Expression() Bind Exp() Imperative Exp() Bind Exp() source Variable Exp() Bind Exp() value Exp Expression() Predefined Bind Exp() Imperative Exp() Predefined Bind Exp() source Predefined Variable Exp(variable) Predefined Bind Exp() value Exp Expression() If Statement() else Statement Imperative Statement() If Statement() condition Boolean Implies Exp(operator) For Statement() body Statement Imperative Statement() For Statement() iterator Variable With Init() For Statement() termination Exp Boolean Implies Exp(operator) For Statement() step Exp Expression() Block Statement() Imperative Statement() Block Statement() statements Statement() Transformation Model() Unit() Transformation Model() Named Element(name) Transformation Model() rules Rule Element() Rule Element() Named Element(name) Rule Element() Executable(active, parameters) Rule() Rule Element() Rule() patterns Pattern() Rule Group(scope, scope Size, order, iteration, max Iteration, repetition) Rule Element() Rule Group(scope, scope Size, order, iteration, max Iteration, repetition) rules Rule() dynamic Random() parallel() shuffle() random One() Statement() Declarative Statement() Statement() Declarative Statement() expression Expression() Imperative Statement() Statement() Reflective Variable Exp() Expression() Reflective Variable Exp() variable Variable() Array Literal Exp() Literal Exp() Array Literal Exp() elements Expression() Executable(active, parameters) primitive Variables Primitive Variable() Additional Constraint() variables Variable() Order Constraint() Additional Constraint() Order Constraint() base Object Variable() All Different Constraint() Additional Constraint() Primitive Constraint() variable Primitive Variable() Multi Value Constraint() Primitive Constraint() Multi Value Constraint() object Object Variable() Value Range Constraint() Primitive Constraint() Value Range Constraint() expression Expression()
Label: interaction, Text: Behavioral Feature() Feature(is Static) Behavioral Feature() Named Element(name, Archpoint) Behavioral Feature() method Behavior() Operation() Behavioral Feature() Named Element(name, Archpoint) Element() Behavior() Class() Behavior() context Behaviored Classifier() Behavior() specification Behavioral Feature() Behaviored Classifier() Classifier(is Abstract) Behaviored Classifier() owned Behavior Behavior() Behaviored Classifier() include Lifeline() Classifier(is Abstract) Namespace() Classifier(is Abstract) inherited Member Named Element(name, Archpoint) Classifier(is Abstract) feature Feature(is Static) Actor() Object() Class() Behaviored Classifier() Class() nested Classifier Classifier(is Abstract) Namespace() Named Element(name, Archpoint) Redefinable Element() Named Element(name, Archpoint) Redefinable Element() redefinition Context Classifier(is Abstract) Element() owned Comment Comment(body) Message(Message Order) Named Element(name, Archpoint) Message(Message Order) interaction Interaction() Message(Message Order) send Event Message End() Message(Message Order) connector Connector() Lifeline() Named Element(name, Archpoint) Lifeline() covered By Interaction Fragment() Lifeline() interaction Interaction() Lifeline() endby Destruction Event() Lifeline() actor Behaviored Classifier() Lifeline() behavior Execution Behavior Execution Specification() Interaction() Behavior() Interaction() fragment Interaction Fragment() Interaction() object Behaviored Classifier() Interaction() destructionevent Destruction Event() Interaction() lifeline Lifeline() Interaction() message Message(Message Order) Interaction Fragment() Named Element(name, Archpoint) Interaction Fragment() covered Lifeline() Interaction Fragment() enclosing Interaction Interaction() Interaction Fragment() general Ordering General Ordering() Comment(body) annotated Element Element() Feature(is Static) Redefinable Element() Feature(is Static) featuring Classifier Classifier(is Abstract) Occurrence Specification() Interaction Fragment() Occurrence Specification() to Before General Ordering() Execution Specification() Interaction Fragment() Execution Specification() finish Occurrence Specification() Message End() Named Element(name, Archpoint) Message End() message Message(Message Order) Connector() Feature(is Static) Connector() contract Behavior() Event() Named Element(name, Archpoint) Creat Event() Event() Destruction Event() Event() Destruction Event() end Lifeline() Destruction Event() interaction Interaction() Execution Event() Event() Message Occurrence Specification() Occurrence Specification() Message Occurrence Specification() Message End() Message Occurrence Specification() event Event() Execution Occurrence Specification() Occurrence Specification() Execution Occurrence Specification() execution Execution Specification() General Ordering() Named Element(name, Archpoint) General Ordering() after Occurrence Specification() Behavior Execution Specification() Execution Specification() Object() Behaviored Classifier() Optional Message() Message(Message Order) Alternative Message() messages Message(Message Order)
Label: workflow, Text: finish To Finish() Process(name, min time, max time) process Elements Process Element() Work Definition(name, min time, max time) Process Element() Work Definition(name, min time, max time) links To Successors Work Sequence(link Type) Work Sequence(link Type) Process Element() Work Sequence(link Type) successor Work Definition(name, min time, max time) Process Element() Guidance(text) element Process Element() Ressource(name, quantity) Process Element() Ressource Link(weight) Process Element() Ressource Link(weight) ressource Ressource(name, quantity) Ressource Link(weight) ressource Set Ressource Set(name) Ressource Set(name) Process Element() Ressource Set(name) work Def Work Definition(name, min time, max time)
Label: webapp, Text: Web Gen Model() website Properties Website Properties(site Title, development Version, base URL, rewrite UR Ls, webmaster Email, copyright Text, meta Description, project Name, test Project Name, default Date Format, default Time Format, default Date Time Format, default Maximum Upload Size, database Technology, database Prefix, database Host, database Name, database Port, database Username, database Password, orm Technology, timestamp Creation, timestamp Updates, framework Technology, input Technology, ajax Technology, captcha Site Key, captcha Secret Key, text Editor URL, responsive Top Menu, top Navigation Id, site Template, static Units Editable) Web Gen Model() classifiers Classifier() Web Gen Model() services Service() Web Gen Model() pages Page(authenticated, uri Element, top Menu Option, top Menu Rank, navigation Label, style Class) Web Gen Model() menus Menu(omit Caption, caption Class, style Class, layout Class) Web Gen Model() allow Type Customisation Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Web Gen Model() image Manipulations Image Manipulation(jpeg Quality) Oracle() Doctrine ODM() Symfony() j Query UI() Angular JS() Website Properties(site Title, development Version, base URL, rewrite UR Ls, webmaster Email, copyright Text, meta Description, project Name, test Project Name, default Date Format, default Time Format, default Date Time Format, default Maximum Upload Size, database Technology, database Prefix, database Host, database Name, database Port, database Username, database Password, orm Technology, timestamp Creation, timestamp Updates, framework Technology, input Technology, ajax Technology, captcha Site Key, captcha Secret Key, text Editor URL, responsive Top Menu, top Navigation Id, site Template, static Units Editable) authentication Authentication(login Label, logout Label) Website Properties(site Title, development Version, base URL, rewrite UR Ls, webmaster Email, copyright Text, meta Description, project Name, test Project Name, default Date Format, default Time Format, default Date Time Format, default Maximum Upload Size, database Technology, database Prefix, database Host, database Name, database Port, database Username, database Password, orm Technology, timestamp Creation, timestamp Updates, framework Technology, input Technology, ajax Technology, captcha Site Key, captcha Secret Key, text Editor URL, responsive Top Menu, top Navigation Id, site Template, static Units Editable) side Menu Menu(omit Caption, caption Class, style Class, layout Class) Authentication(login Label, logout Label) authenticates Website Properties(site Title, development Version, base URL, rewrite UR Ls, webmaster Email, copyright Text, meta Description, project Name, test Project Name, default Date Format, default Time Format, default Date Time Format, default Maximum Upload Size, database Technology, database Prefix, database Host, database Name, database Port, database Username, database Password, orm Technology, timestamp Creation, timestamp Updates, framework Technology, input Technology, ajax Technology, captcha Site Key, captcha Secret Key, text Editor URL, responsive Top Menu, top Navigation Id, site Template, static Units Editable) Authentication(login Label, logout Label) user Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Authentication(login Label, logout Label) user Key Attribute(placeholder, validation Pattern, input Class) Username() Local Authentication System(authentication Key, use Captcha, allow Remember Me, allow Self Registration, track Login Attempts, use Email Activation, send Welcome Email) Authentication(login Label, logout Label) Local Authentication System(authentication Key, use Captcha, allow Remember Me, allow Self Registration, track Login Attempts, use Email Activation, send Welcome Email) authentication Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Local Authentication System(authentication Key, use Captcha, allow Remember Me, allow Self Registration, track Login Attempts, use Email Activation, send Welcome Email) registration Unit Registration Unit(style Class) Local Authentication System(authentication Key, use Captcha, allow Remember Me, allow Self Registration, track Login Attempts, use Email Activation, send Welcome Email) login Unit Login Unit(logout Uri Element, style Class) Local Authentication System(authentication Key, use Captcha, allow Remember Me, allow Self Registration, track Login Attempts, use Email Activation, send Welcome Email) forgotten Password Unit Forgotten Password Unit(style Class) Cas Authentication() Authentication(login Label, logout Label) Named Element(name) Named Display Element(display Label) Named Element(name) Classifier() Named Display Element(display Label) Data Type(persistent Type, orm Type, interface Type, placeholder, validation Pattern) Classifier() Enumeration Type() Data Type(persistent Type, orm Type, interface Type, placeholder, validation Pattern) Enumeration Type() enumerations Enumeration Literal() Enumeration Literal() Named Display Element(display Label) Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Classifier() Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) all Features Feature(title, collection Allow Add, collection Allow Remove, null Display Value, encode Uri Key, serialization Groups, serialization Expose, header Class, display Class, footer Class) Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) served By Service() Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) labels Model Label(format) Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) attributes Attribute(placeholder, validation Pattern, input Class) Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) all Associations Association(pseudo, input Class, serialization Max Depth) Feature(title, collection Allow Add, collection Allow Remove, null Display Value, encode Uri Key, serialization Groups, serialization Expose, header Class, display Class, footer Class) Attribute(placeholder, validation Pattern, input Class) Feature(title, collection Allow Add, collection Allow Remove, null Display Value, encode Uri Key, serialization Groups, serialization Expose, header Class, display Class, footer Class) Attribute(placeholder, validation Pattern, input Class) Label() Association(pseudo, input Class, serialization Max Depth) Feature(title, collection Allow Add, collection Allow Remove, null Display Value, encode Uri Key, serialization Groups, serialization Expose, header Class, display Class, footer Class) Association(pseudo, input Class, serialization Max Depth) encapsulated By Encapsulated Association(name, is Source Association, cardinality) Association(pseudo, input Class, serialization Max Depth) target Entity X Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Label() Model Label(format) Named Element(name) Model Label(format) Label() Model Label(format) label For Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Model Label(format) features Model Label Feature() Model Label Feature() part Of Model Label(format) Model Label Attribute(date Format) Model Label Feature() Model Label Attribute(date Format) attribute Attribute(placeholder, validation Pattern, input Class) Model Label Association(is Source Association) Model Label Feature() Model Label Association(is Source Association) association Entity Association(bidirectional, pivot Table Name, target Feature Name, target Primary Key, target Display Label, target Header Class, target Input Class, target Display Class, target Footer Class) Model Label Association(is Source Association) dynamic Label Model Label(format) Entity() Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Entity() entity Features Entity Feature(cardinality, unique, ordered, boolean Is Has Choice, singleton Name, pluralised Name, column Name) Entity() association Ends Entity Association(bidirectional, pivot Table Name, target Feature Name, target Primary Key, target Display Label, target Header Class, target Input Class, target Display Class, target Footer Class) Many() has A() Entity Feature(cardinality, unique, ordered, boolean Is Has Choice, singleton Name, pluralised Name, column Name) Named Display Element(display Label) Entity Feature(cardinality, unique, ordered, boolean Is Has Choice, singleton Name, pluralised Name, column Name) Feature(title, collection Allow Add, collection Allow Remove, null Display Value, encode Uri Key, serialization Groups, serialization Expose, header Class, display Class, footer Class) Entity Feature(cardinality, unique, ordered, boolean Is Has Choice, singleton Name, pluralised Name, column Name) part Of Entity() Entity Attribute(primary Key, container Unique, persistent Type, orm Type, interface Type) Entity Feature(cardinality, unique, ordered, boolean Is Has Choice, singleton Name, pluralised Name, column Name) Entity Attribute(primary Key, container Unique, persistent Type, orm Type, interface Type) Attribute(placeholder, validation Pattern, input Class) Data Type Attribute(obfuscate Form Fields, case Insensitive, encrypt) Entity Attribute(primary Key, container Unique, persistent Type, orm Type, interface Type) Data Type Attribute(obfuscate Form Fields, case Insensitive, encrypt) data Type Data Type(persistent Type, orm Type, interface Type, placeholder, validation Pattern) Date And Time() Date Attribute(details, format) Entity Attribute(primary Key, container Unique, persistent Type, orm Type, interface Type) Url Attribute(display Value) Entity Attribute(primary Key, container Unique, persistent Type, orm Type, interface Type) Resource Attribute(maximum Upload Size, valid Upload Mime Types, valid Upload Extensions, uploads Within Website) Entity Attribute(primary Key, container Unique, persistent Type, orm Type, interface Type) Resource Attribute(maximum Upload Size, valid Upload Mime Types, valid Upload Extensions, uploads Within Website) upload Path Path Element() Path Element() Static Path Element(element) Path Element() Date Path Element(format) Path Element() File Attribute() Resource Attribute(maximum Upload Size, valid Upload Mime Types, valid Upload Extensions, uploads Within Website) Image Attribute() Resource Attribute(maximum Upload Size, valid Upload Mime Types, valid Upload Extensions, uploads Within Website) Location Attribute() Entity Attribute(primary Key, container Unique, persistent Type, orm Type, interface Type) Entity Association(bidirectional, pivot Table Name, target Feature Name, target Primary Key, target Display Label, target Header Class, target Input Class, target Display Class, target Footer Class) Entity Feature(cardinality, unique, ordered, boolean Is Has Choice, singleton Name, pluralised Name, column Name) Entity Association(bidirectional, pivot Table Name, target Feature Name, target Primary Key, target Display Label, target Header Class, target Input Class, target Display Class, target Footer Class) Association(pseudo, input Class, serialization Max Depth) Entity Association(bidirectional, pivot Table Name, target Feature Name, target Primary Key, target Display Label, target Header Class, target Input Class, target Display Class, target Footer Class) keys Association Key(target Column Name) Entity Association(bidirectional, pivot Table Name, target Feature Name, target Primary Key, target Display Label, target Header Class, target Input Class, target Display Class, target Footer Class) target Entity Entity() Association Without Containment(target Cardinality, target Unique) Entity Association(bidirectional, pivot Table Name, target Feature Name, target Primary Key, target Display Label, target Header Class, target Input Class, target Display Class, target Footer Class) Association With Containment(source Visible) Entity Association(bidirectional, pivot Table Name, target Feature Name, target Primary Key, target Display Label, target Header Class, target Input Class, target Display Class, target Footer Class) Association Key(target Column Name) key For Entity Association(bidirectional, pivot Table Name, target Feature Name, target Primary Key, target Display Label, target Header Class, target Input Class, target Display Class, target Footer Class) Association Key(target Column Name) target Feature Entity Feature(cardinality, unique, ordered, boolean Is Has Choice, singleton Name, pluralised Name, column Name) View() encapsulates Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) View() view Features View Feature() View Feature() Feature(title, collection Allow Add, collection Allow Remove, null Display Value, encode Uri Key, serialization Groups, serialization Expose, header Class, display Class, footer Class) View Feature() part Of View() Encapsulated Feature(display Label, alias, column Name) View Feature() Encapsulated Attribute(name, cardinality) Encapsulated Feature(display Label, alias, column Name) Encapsulated Attribute(name, cardinality) attribute Attribute(placeholder, validation Pattern, input Class) Encapsulated Association(name, is Source Association, cardinality) Encapsulated Feature(display Label, alias, column Name) Encapsulated Association(name, is Source Association, cardinality) association Association(pseudo, input Class, serialization Max Depth) Encapsulated Association(name, is Source Association, cardinality) target Entity Entity() View Association(cardinality) Named Display Element(display Label) View Association(cardinality) View Feature() View Association(cardinality) Association(pseudo, input Class, serialization Max Depth) View Association(cardinality) opposite Encapsulated Association(name, is Source Association, cardinality) Service() Named Element(name) Service() serves Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Service() selections Selection(distinct, limit, selected) Service() operations Business Operation(result Type, result Mime Type) Selection(distinct, limit, selected) Named Element(name) Selection(distinct, limit, selected) used By Service() Selection(distinct, limit, selected) fields Feature(title, collection Allow Add, collection Allow Remove, null Display Value, encode Uri Key, serialization Groups, serialization Expose, header Class, display Class, footer Class) Selection(distinct, limit, selected) parameters Selection Parameter(optional, default Value) Selection(distinct, limit, selected) joins Association(pseudo, input Class, serialization Max Depth) Selection Parameter(optional, default Value) Named Element(name) Selection Parameter(optional, default Value) formal For Selection(distinct, limit, selected) Business Operation(result Type, result Mime Type) Named Element(name) Business Operation(result Type, result Mime Type) uses Service() File() Image Manipulation(jpeg Quality) Named Element(name) Image Manipulation(jpeg Quality) filters Image Filter() Image Filter() Thumbnail Filter(width, height) Image Filter() Include When Authenticated() Page(authenticated, uri Element, top Menu Option, top Menu Rank, navigation Label, style Class) Named Display Element(display Label) Page(authenticated, uri Element, top Menu Option, top Menu Rank, navigation Label, style Class) Unit Container() Page(authenticated, uri Element, top Menu Option, top Menu Rank, navigation Label, style Class) child Pages Page Link() Page(authenticated, uri Element, top Menu Option, top Menu Rank, navigation Label, style Class) side Menu Menu(omit Caption, caption Class, style Class, layout Class) Page Link() target Page Page(authenticated, uri Element, top Menu Option, top Menu Rank, navigation Label, style Class) Menu(omit Caption, caption Class, style Class, layout Class) Named Display Element(display Label) Menu(omit Caption, caption Class, style Class, layout Class) entries Menu Entry(requires Role) Menu Entry(requires Role) part Of Menu(omit Caption, caption Class, style Class, layout Class) Static Menu() Menu(omit Caption, caption Class, style Class, layout Class) Action Menu Entry() Menu Entry(requires Role) Action Menu Entry() Named Display Element(display Label) Action Menu Entry() destination Content Unit(create Default Uri Element, requires Role, purpose Summary, uri Element, alternative, omit Caption, caption Class) Action Menu Entry() query Query() Edit Static Text Menu Entry() Menu Entry(requires Role) Edit Static Text Menu Entry() Named Display Element(display Label) Dynamic Menu() Menu(omit Caption, caption Class, style Class, layout Class) Dynamic Menu() entity Or View Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Dynamic Menu() selection Selection(distinct, limit, selected) Dynamic Menu() title Label() Menu Feature() Menu Entry(requires Role) Filter() Named Display Element(display Label) Filter() parameters Filter Parameter(default Value, placeholder) Filter() selection Selection(distinct, limit, selected) Filter Parameter(default Value, placeholder) Named Element(name) Filter Parameter(default Value, placeholder) part Of Filter() Filter Parameter(default Value, placeholder) formal Selection Parameter(optional, default Value) Filter Parameter(default Value, placeholder) data Type Data Type(persistent Type, orm Type, interface Type, placeholder, validation Pattern) Query() filter Filter() Query() parameters Query Parameter(value) Query Parameter(value) formal Filter Parameter(default Value, placeholder) Unit Container() units Content Unit(create Default Uri Element, requires Role, purpose Summary, uri Element, alternative, omit Caption, caption Class) Content Unit(create Default Uri Element, requires Role, purpose Summary, uri Element, alternative, omit Caption, caption Class) Named Display Element(display Label) Content Unit(create Default Uri Element, requires Role, purpose Summary, uri Element, alternative, omit Caption, caption Class) displayed On Unit Container() Static Unit(content, style Class, content Class) Content Unit(create Default Uri Element, requires Role, purpose Summary, uri Element, alternative, omit Caption, caption Class) Create Sitemap Unit(deployed URL, filename, style Class, content Class) Content Unit(create Default Uri Element, requires Role, purpose Summary, uri Element, alternative, omit Caption, caption Class) Dynamic Unit(header, footer, header Class, control Class, footer Class, error Class) Content Unit(create Default Uri Element, requires Role, purpose Summary, uri Element, alternative, omit Caption, caption Class) Dynamic Unit(header, footer, header Class, control Class, footer Class, error Class) entities Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Dynamic Unit(header, footer, header Class, control Class, footer Class, error Class) display Fields Unit Field(title, collection Display Option, collection Allow Add, collection Allow Remove, maximum Display Size, date Format) Dynamic Unit(header, footer, header Class, control Class, footer Class, error Class) support Actions Unit Support Action(disable, confirm Message) Page Direction() Unit Field(title, collection Display Option, collection Allow Add, collection Allow Remove, maximum Display Size, date Format) displayed On Dynamic Unit(header, footer, header Class, control Class, footer Class, error Class) Unit Feature(only Display When Not Empty, display Label, required, null Display Value, footer, autofocus, header Class, input Class, display Class, footer Class) Unit Field(title, collection Display Option, collection Allow Add, collection Allow Remove, maximum Display Size, date Format) Unit Feature(only Display When Not Empty, display Label, required, null Display Value, footer, autofocus, header Class, input Class, display Class, footer Class) Inline Action Container() Unit Element(name, obfuscate Form Fields, placeholder, validation Pattern) Unit Feature(only Display When Not Empty, display Label, required, null Display Value, footer, autofocus, header Class, input Class, display Class, footer Class) Unit Element(name, obfuscate Form Fields, placeholder, validation Pattern) attribute Attribute(placeholder, validation Pattern, input Class) Unit Association(is Source Association) Unit Feature(only Display When Not Empty, display Label, required, null Display Value, footer, autofocus, header Class, input Class, display Class, footer Class) Unit Association(is Source Association) Unit Container() Unit Association(is Source Association) Association Reference(name) Unit Association(is Source Association) target Entity Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Unit Association(is Source Association) selection Selection(distinct, limit, selected) Association Reference(name) association Association(pseudo, input Class, serialization Max Depth) Association Reference(name) value Display Label() Association Reference(name) child Feature Child Path() Interface Field(required, default Value, input Class, placeholder, validation Pattern) Named Display Element(display Label) Interface Field(required, default Value, input Class, placeholder, validation Pattern) must Match Unit Field(title, collection Display Option, collection Allow Add, collection Allow Remove, maximum Display Size, date Format) Data Type Field(obfuscate Form Fields, encrypt, interface Type) Interface Field(required, default Value, input Class, placeholder, validation Pattern) Data Type Field(obfuscate Form Fields, encrypt, interface Type) data Type Data Type(persistent Type, orm Type, interface Type, placeholder, validation Pattern) Date Field(details, format) Interface Field(required, default Value, input Class, placeholder, validation Pattern) Captcha Field() Interface Field(required, default Value, input Class, placeholder, validation Pattern) Unit Support Action(disable, confirm Message) Named Display Element(display Label) Selectable Unit() selection Type Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Singleton Unit() content Type Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Collection Unit(empty Message, default Pagination Size, next Npages, previous Npages, next Page Label, previous Page Label, use Disabled Page Links, use First Last Page Links, first Page Label, last Page Label) Selectable Unit() Collection Unit(empty Message, default Pagination Size, next Npages, previous Npages, next Page Label, previous Page Label, use Disabled Page Links, use First Last Page Links, first Page Label, last Page Label) content Type Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Collection Unit(empty Message, default Pagination Size, next Npages, previous Npages, next Page Label, previous Page Label, use Disabled Page Links, use First Last Page Links, first Page Label, last Page Label) containing Feature Feature(title, collection Allow Add, collection Allow Remove, null Display Value, encode Uri Key, serialization Groups, serialization Expose, header Class, display Class, footer Class) Collection Unit(empty Message, default Pagination Size, next Npages, previous Npages, next Page Label, previous Page Label, use Disabled Page Links, use First Last Page Links, first Page Label, last Page Label) selection Selection(distinct, limit, selected) Collection Unit(empty Message, default Pagination Size, next Npages, previous Npages, next Page Label, previous Page Label, use Disabled Page Links, use First Last Page Links, first Page Label, last Page Label) pagination Filter() Edit Unit(confirm Label, cancel Label, content Class, customise Values) Dynamic Unit(header, footer, header Class, control Class, footer Class, error Class) Edit Unit(confirm Label, cancel Label, content Class, customise Values) Singleton Unit() Edit Unit(confirm Label, cancel Label, content Class, customise Values) default Selection Selection(distinct, limit, selected) Edit Unit(confirm Label, cancel Label, content Class, customise Values) title Label() Edit Unit(confirm Label, cancel Label, content Class, customise Values) cancel Destination Page(authenticated, uri Element, top Menu Option, top Menu Rank, navigation Label, style Class) Create Unit(style Class) Edit Unit(confirm Label, cancel Label, content Class, customise Values) Create Update Unit(create Uri Element, clear Label, style Class) Edit Unit(confirm Label, cancel Label, content Class, customise Values) Create Update Unit(create Uri Element, clear Label, style Class) Selectable Unit() Update Unit(style Class) Edit Unit(confirm Label, cancel Label, content Class, customise Values) Update Unit(style Class) Selectable Unit() Map Unit(read Only, default Zoom Level, style Class) Edit Unit(confirm Label, cancel Label, content Class, customise Values) Map Unit(read Only, default Zoom Level, style Class) Selectable Unit() Map Unit(read Only, default Zoom Level, style Class) location Location Attribute() Map Unit(read Only, default Zoom Level, style Class) place Name Attribute(placeholder, validation Pattern, input Class) Data Unit() Dynamic Unit(header, footer, header Class, control Class, footer Class, error Class) Data Unit() default Selection Selection(distinct, limit, selected) Data Unit() title Label() Details Unit(only Display When Not Empty, omit Field Labels, style Class, content Class) Data Unit() Details Unit(only Display When Not Empty, omit Field Labels, style Class, content Class) Singleton Unit() Details Unit(only Display When Not Empty, omit Field Labels, style Class, content Class) Selectable Unit() Line Direction() Index Unit(display Option, omit Column Labels, style Class, content Class, row Classes) Data Unit() Index Unit(display Option, omit Column Labels, style Class, content Class, row Classes) Collection Unit(empty Message, default Pagination Size, next Npages, previous Npages, next Page Label, previous Page Label, use Disabled Page Links, use First Last Page Links, first Page Label, last Page Label) Index Unit(display Option, omit Column Labels, style Class, content Class, row Classes) Inline Action Container() Control Unit(submit Label, cancel Label, content Class) Dynamic Unit(header, footer, header Class, control Class, footer Class, error Class) Control Unit(submit Label, cancel Label, content Class) cancel Destination Page(authenticated, uri Element, top Menu Option, top Menu Rank, navigation Label, style Class) Search Unit(style Class) Control Unit(submit Label, cancel Label, content Class) Search Unit(style Class) results Destination Index Unit(display Option, omit Column Labels, style Class, content Class, row Classes) Image Unit(missing Image Path, show Time, transition Time) Dynamic Unit(header, footer, header Class, control Class, footer Class, error Class) Image Unit(missing Image Path, show Time, transition Time) Collection Unit(empty Message, default Pagination Size, next Npages, previous Npages, next Page Label, previous Page Label, use Disabled Page Links, use First Last Page Links, first Page Label, last Page Label) Image Unit(missing Image Path, show Time, transition Time) default Selection Selection(distinct, limit, selected) Image Unit(missing Image Path, show Time, transition Time) title Feature Feature Path() Image Unit(missing Image Path, show Time, transition Time) image Filter Image Manipulation(jpeg Quality) Feature Path() Feature Path Attribute(name) Feature Path() Feature Path Attribute(name) attribute Attribute(placeholder, validation Pattern, input Class) Feature Path Association(is Source Association) Feature Path() Feature Path Association(is Source Association) Association Reference(name) Feature Path Association(is Source Association) target Entity Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Child Path() part Of Association Reference(name) Child Path Attribute(name) Child Path() Child Path Attribute(name) attribute Attribute(placeholder, validation Pattern, input Class) Child Path Association(is Source Association) Child Path() Child Path Association(is Source Association) Association Reference(name) Child Path Association(is Source Association) target Entity Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface) Image Index Unit(style Class, content Class) Image Unit(missing Image Path, show Time, transition Time) Image Index Unit(style Class, content Class) Inline Action Container() Slider Unit(style Class, content Class) Image Unit(missing Image Path, show Time, transition Time) Gallery Unit(style Class, content Class) Image Unit(missing Image Path, show Time, transition Time) Gallery Unit(style Class, content Class) full Size Filter Image Manipulation(jpeg Quality) Authentication Unit() Registration Unit(style Class) Authentication Unit() Registration Unit(style Class) Control Unit(submit Label, cancel Label, content Class) Login Unit(logout Uri Element, style Class) Authentication Unit() Login Unit(logout Uri Element, style Class) Control Unit(submit Label, cancel Label, content Class) Forgotten Password Unit(style Class) Authentication Unit() Forgotten Password Unit(style Class) Control Unit(submit Label, cancel Label, content Class) Inline Action Container() actions Inline Action(disable, requires Role, header, footer, header Class, footer Class) Inline Action(disable, requires Role, header, footer, header Class, footer Class) Named Display Element(display Label) Inline Action(disable, requires Role, header, footer, header Class, footer Class) used By Inline Action Container() Select Action() Inline Action(disable, requires Role, header, footer, header Class, footer Class) Select Action() target Selectable Unit() Delete Action(confirm Message, uri Element) Inline Action(disable, requires Role, header, footer, header Class, footer Class) Delete Action(confirm Message, uri Element) destination Page(authenticated, uri Element, top Menu Option, top Menu Rank, navigation Label, style Class) Feature Support Action(confirm Message, uri Element, file Extension) Inline Action(disable, requires Role, header, footer, header Class, footer Class) Feature Support Action(confirm Message, uri Element, file Extension) operation Business Operation(result Type, result Mime Type) Model Reference() unit Dynamic Unit(header, footer, header Class, control Class, footer Class, error Class) Feature Reference(name) feature Feature(title, collection Allow Add, collection Allow Remove, null Display Value, encode Uri Key, serialization Groups, serialization Expose, header Class, display Class, footer Class) Route Parameter Reference(name) parameter Attribute(placeholder, validation Pattern, input Class) Parameter Reference(name) parameter Selection Parameter(optional, default Value) Current User Reference() user Model Entity Or View(singleton Name, pluralised Name, table Name, auto Key Name, auto Key Persistent Type, auto Key Generation Strategy, serialization Exclude All, implements User Interface)
Label: relational, Text: Database() Model Element(name) Database() user Defined Data Types User Defined Data Type(precision, length, default Value) Database() tables Table() Database() data Types System Data Type(predefined Length, predefined Dec Places) Table() Model Element(name) Table() table F Ks Foreign Key(delete Action RHS, update Action RHS, match, inverse Referential Integrity Con) Table() table PK Primary Key Con() Table() table UQ Unique Con() Table() columns Column(default, nullable, precision, length) Table() table C Hs Check Con(check Condition) Column(default, nullable, precision, length) Model Element(name) Column(default, nullable, precision, length) column In P Kand UQ P Key And Unique() Column(default, nullable, precision, length) column In FK Foreign Key(delete Action RHS, update Action RHS, match, inverse Referential Integrity Con) Column(default, nullable, precision, length) column Data Type Data Type() Foreign Key(delete Action RHS, update Action RHS, match, inverse Referential Integrity Con) Constraints(deferrable, deferred) Foreign Key(delete Action RHS, update Action RHS, match, inverse Referential Integrity Con) rhs Key P Key And Unique() Foreign Key(delete Action RHS, update Action RHS, match, inverse Referential Integrity Con) lhs Attr Column(default, nullable, precision, length) Foreign Key(delete Action RHS, update Action RHS, match, inverse Referential Integrity Con) FK Table Table() Constraints(deferrable, deferred) Model Element(name) Check Con(check Condition) Constraints(deferrable, deferred) P Key And Unique() Constraints(deferrable, deferred) P Key And Unique() P Kand UQ Columns Column(default, nullable, precision, length) Primary Key Con() P Key And Unique() Unique Con() P Key And Unique() CASCADE() NOT DEFFERABLE() INITIALLY DEFERRED() System Data Type(predefined Length, predefined Dec Places) Data Type() Model Element(name) User Defined Data Type(precision, length, default Value) Data Type() User Defined Data Type(precision, length, default Value) data Type System Data Type(predefined Length, predefined Dec Places) Data Type() Model Element(name) FULL()
Label: automata, Text: Automaton(name) trap State State(acceptor, id) Automaton(name) tokens Token() Automaton(name) symbolic Token Parameters Symbolic Parameter(name) Automaton(name) timers Symbolic Timer(name) Token Parameter Binding() Binding() Token Parameter Binding() bound To Symbolic Token Parameter() Reset Timer Action() Timer Action() Symbolic Input Event(name) Symbolic Event() Symbolic Timer(name) timeout Event Symbolic Timeout Event() Symbolic Token Parameter() Symbolic Parameter(name) Complex Event Processor() automata Automaton(name) Complex Event Processor() symbolic Events Symbolic Input Event(name) Symbolic Event() symbolic Parameters Symbolic Parameter(name) Parameter() type Symbolic Parameter(name) State(acceptor, id) tokens Token() State(acceptor, id) outgoing Transitions Abstract Transition() Constant Binding() Binding() Constant Binding() bound To Fix Parameter(value) Symbolic Event Parameter() Symbolic Parameter(name) Free Parameter(excluded Values) Parameter() Set Timer Action(to Value) Timer Action() Symbolic Timeout Event() Symbolic Event() Symbolic Timeout Event() timer Symbolic Timer(name) Binding() binds Symbolic Event Parameter() Fix Parameter(value) Parameter() Timer Action() Action() Timer Action() timer Symbolic Timer(name) Epsilon Transition() Abstract Transition() Action() Symbolic Parameter(name) Event() type Symbolic Event() Event() parameters Fix Parameter(value) Token() on State(acceptor, id) Token() parameters Parameter() Transition() Abstract Transition() Transition() eventguard Event Guard() Event Guard() bindings Binding() Event Guard() type Symbolic Event() Abstract Transition() from State(acceptor, id) Abstract Transition() actions Action()
Label: visualization, Text: G Model Element(id, css Classes, trace, type) G Shape Element() G Model Element(id, css Classes, trace, type) G Shape Element() G Bounds Aware() G Graph() G Model Root(revision) G Graph() G Bounds Aware() G Graph() layout Options G Layout Options(padding Left, padding Right, padding Top, padding Bottom, padding Factor, resize Container, v Gap, h Gap, v Align, h Align, min Width, min Height) G Model Root(revision) G Model Element(id, css Classes, trace, type) G Model Root(revision) canvas Bounds G Bounds(x, y, width, height) G Node() G Shape Element() G Node() G Edge Layoutable() G Node() G Layouting(layout) G Edge(source Id, target Id, router Kind) target G Model Element(id, css Classes, trace, type) G Edge(source Id, target Id, router Kind) routing Points G Point(x, y) G Compartment() G Shape Element() G Compartment() G Layouting(layout) G Label(text) G Alignable() G Label(text) G Edge Layoutable() G Label(text) G Shape Element() G Issue Marker() G Shape Element() G Issue Marker() issues G Issue(severity, message) G Port() G Shape Element() G Button(enabled) G Shape Element() G Bounds Aware() position G Point(x, y) G Bounds Aware() size G Dimension(width, height) G Point(x, y) G Dimension(width, height) G Layout Options(padding Left, padding Right, padding Top, padding Bottom, padding Factor, resize Container, v Gap, h Gap, v Align, h Align, min Width, min Height) G Edge Layoutable() edge Placement G Edge Placement(position, offset, side, rotate) G Edge Placement(position, offset, side, rotate) G Layouting(layout) layout Options G Layout Options(padding Left, padding Right, padding Top, padding Bottom, padding Factor, resize Container, v Gap, h Gap, v Align, h Align, min Width, min Height) G Bounds(x, y, width, height) G Alignable() alignment G Point(x, y) G Issue(severity, message) info() G Html Root(classes) G Model Root(revision) G Pre Rendered Element(code) G Model Element(id, css Classes, trace, type)
Label: families, Text: Person(firstname, lastname, birthdate) Parent() Person(firstname, lastname, birthdate) Parent() children Child() Mother() Parent() Mother() husband Father() Father() Parent() Father() wife Mother() Child() Person(firstname, lastname, birthdate) Child() mother Mother() Child() father Father() Family() members Person(firstname, lastname, birthdate)
Label: constraints, Text: Ocl Expression() Operator Call Exp(name) Ocl Expression() Binary Operator Call Exp() Operator Call Exp(name) Binary Operator Call Exp() argument Ocl Expression() Unary Operator Call Exp() Operator Call Exp(name) Unary Operator Call Exp() source Ocl Expression() Primitive Exp() Ocl Expression() String Exp(string Symbol) Primitive Exp() Boolean Exp(boolean Symbol) Primitive Exp() Numeric Exp() Primitive Exp() Real Exp(real Symbol) Numeric Exp() Integer Exp(integer Symbol) Numeric Exp()
Label: families, Text: FEMALE() Family(name) individuals Individual(gender, name) Family(name) laboratory Laboratory() Laboratory() families Family(name) Laboratory() sequencers Sequencer(name) Individual(gender, name) family Family(name) Individual(gender, name) samples Sample(id) Sequencer(name) runs Run(name, date) Sequencer(name) laboratory Laboratory() Run(name, date) sequenced Sequenced() Run(name, date) sequencer Sequencer(name) Sample(id) individual Individual(gender, name) Sequenced() run Run(name, date) Sequenced() sample Sample(id)
Label: webapp, Text: System() dom Domain() System() arch Architecture() System() tech Technology() Domain() types Type(name) Domain() modules Module(name) Domain() relations Relation Dom() Module(name) submodules Submodule(name) Submodule(name) operations Operation(type) Operation(type) target Entity Name(name) Entity Name(name) General Entity() name Entity Name(name) General Entity() properties Property(name) Property(name) type Type(name) Type(name) Abstract Front Element() Special Entity() name Entity Name(name) Special Entity() properties Property(name) Special Entity() transactions Transaction(type) Transaction(type) operateson Operateson() Operateson() operateson Entity Name(name) Relation Dom() target Entity Name(name) Architecture() componentes Component(name) Architecture() relation Arch Relation Arch(name, source) Component(name) layer Layer(name) Layer(name) layer Segments Layer Segment(name) Layer Segment(name) relations Layer Segment Relation(layer Segment) Layer Segment(name) sublayer Segments Sublayer Segment(name) Layer Segment Relation(layer Segment) Sublayer Segment(name) Relation Arch(name, source) Technology() java Java App() Technology() react React App() Java App() jeeproject Jee Project(name) Jee Project(name) subproject Subproject(name) Subproject(name) epackage Epackage(name) Subproject(name) library Library(name, is Native) Subproject(name) descriptor Descriptor(name) Abstract Class() Eclass(name) Abstract Class() attribute Attribute(name) Abstract Class() method Class Method Back(name) Abstract Class() annotation Annotation(propertie) Abstract Class() abstract Method Abstract Method(name) Generic Class() Eclass(name) Generic Class() attribute Attribute(name) Generic Class() method Class Method Back(name) Generic Class() annotation Annotation(propertie) Generic Class() abs Abstract Class() Generic Class() imp Einterface(name) Einterface(name) attribute Attribute(name) Einterface(name) abstract Method Abstract Method(name) Native Class() Eclass(name) Native Class() attribute Attribute(name) Native Class() method Class Method Back(name) Eclass(name) Attribute(name) type Eclass(name) Epackage(name) eclass Eclass(name) Method Back(name) type Eclass(name) Abstract Method(name) type Eclass(name) Descriptor(name) Annotation(propertie) Eclass(name) Library(name, is Native) annotation Annotation(propertie) Abstract Front Element() React App() elements Abstract Front Element() React App() func Functionality(name) React App() dir Directory(name, purpose) React App() mod Js Module(name) Functionality(name) Abstract Front Element() Functionality(name) route Router Component(name) Functionality(name) wrap Container(name) Functionality(name) render Visualizer(name) Functionality(name) state State(name) Functionality(name) service Service Front(name, method) Functionality(name) type Directory(name, purpose) Router Component(name) type Abstract Front Element() Router Component(name) route UI Component() UI Component() Container(name) type Abstract Front Element() Visualizer(name) type Abstract Front Element() Visualizer(name) UI Component() Service Front(name, method) Abstract Front Element() Service Front(name, method) type Js Module(name) Directory(name, purpose) Abstract Front Element() Directory(name, purpose) file File(name, type) File(name, type) Abstract Front Element() Md() File(name, type) Js() File(name, type) Json() File(name, type) Css() File(name, type) State(name) Abstract Front Element() State(name) action Action(name) State(name) reducer Reducer(name) Action(name) Abstract Front Element() Action(name) action Creator Action Creator(name, type) Action(name) action Dispatcher Action Dispatcher(name) Action(name) dir Directory(name, purpose) Action Creator(name, type) Abstract Front Element() Action Dispatcher(name) Abstract Front Element() Action Dispatcher(name) type Action Creator(name, type) Reducer(name) type Abstract Front Element() Js Module(name) Abstract Front Element() Js Module(name) type Directory(name, purpose)
Label: petrinet, Text: Element() Petri Net(name) Element() Petri Net(name) places Place(name) Petri Net(name) transitions Transition(name) Petri Net(name) arcs Arc(weight, name) Petri Net(name) name String() Place(name) Element() Place(name) incoming Trans To Place Arc() Place(name) outgoing Place To Trans Arc() Place(name) name String() Place(name) net Petri Net(name) Transition(name) Element() Transition(name) incoming Place To Trans Arc() Transition(name) outgoing Trans To Place Arc() Transition(name) name String() Arc(weight, name) weight Integer() Arc(weight, name) name String() Place To Trans Arc() Arc(weight, name) Place To Trans Arc() source Place(name) Place To Trans Arc() target Transition(name) Trans To Place Arc() Arc(weight, name) Trans To Place Arc() source Transition(name) Trans To Place Arc() target Place(name) Non Referenced Class() Weighted Arc() Arc(weight, name) String() Integer()
Label: simple-pl, Text: Model() model Function(fun Name) Function(fun Name) def Definiton() Definiton() input Vars Input(v, v2) Definiton() command List Commands() Definiton() output Vars Output(v, v2) Input(v, v2) Output(v, v2) Commands() c Command(nom) Vars(v1, v2) Exprs() exp L Expr() Command(nom) var L Vars(v1, v2) Command(nom) exp L Exprs() Command(nom) exp2 Expr() Command(nom) c2 Commands() Expr() expr Simple Expr Simple(mot) Expr() exp Et And() Expr() exp Terminale Expr Term(term Var, term Sym) And() exp Ou2 Or() Or() exp Non2 Not(non) Not(non) exp Eq Eq() Eq() Expr Term(term Var, term Sym) Expr Simple(mot) lexpr Lexpr() Expr Simple(mot) expr Expr() Lexpr() exp Expr()
Label: gpl, Text: Annotable() Commentable(comments) Annotable() annotations Annotation Instance() Annotation Instance() Reference() Annotation Instance() Annotation Instance Or Modifier() Annotation Instance() Namespace Aware Element(namespaces) Annotation Instance() annotation Classifier() Annotation Instance() parameter Annotation Parameter() Annotation Parameter() Commentable(comments) Single Annotation Parameter() Annotation Parameter() Single Annotation Parameter() value Annotation Value() Annotation Parameter List() Annotation Parameter() Annotation Parameter List() settings Annotation Attribute Setting() Annotation Attribute Setting() Commentable(comments) Annotation Attribute Setting() attribute Interface Method() Annotation Attribute Setting() value Annotation Value() Annotation Value() Commentable(comments) Annotation Attribute() Interface Method() Annotation Attribute() default Value Expression() Array Typeable() Commentable(comments) Array Typeable() array Dimensions After Array Dimension() Array Dimension() Commentable(comments) Array Initializer() initial Values Array Initialization Value() Array Initializer() Annotation Value() Array Initialization Value() Commentable(comments) Array Instantiation By Size() sizes Expression() Array Instantiation By Size() Typed Element() Array Instantiation By Size() Array Typeable() Array Instantiation By Size() Reference() Array Instantiation By Values() Expression() Array Instantiation By Values() Typed Element() Array Instantiation By Values() Array Typeable() Array Instantiation By Values() Reference() Array Instantiation By Values() array Initializer Array Initializer() Array Selector() Commentable(comments) Array Selector() position Expression() Classifier() Type() Classifier() Referenceable Element() Concrete Classifier(full Name) Classifier() Concrete Classifier(full Name) Type Parametrizable() Concrete Classifier(full Name) Member Container() Concrete Classifier(full Name) Member() Concrete Classifier(full Name) Statement() Concrete Classifier(full Name) Annotable And Modifiable() Implementor() Commentable(comments) Implementor() implements Type Reference() Class() Concrete Classifier(full Name) Class() Implementor() Class() default Extends Type Reference() Interface() Concrete Classifier(full Name) Interface() default Extends Type Reference() Enumeration() Concrete Classifier(full Name) Enumeration() Implementor() Enumeration() constants Enum Constant() Annotation() Concrete Classifier(full Name) Anonymous Class() Type() Anonymous Class() Member Container() Commentable(comments) Named Element(name) Commentable(comments) Named Element(name) name PH T Placeholder() Namespace Aware Element(namespaces) Commentable(comments) Java Root() Named Element(name) Java Root() Namespace Aware Element(namespaces) Java Root() Importing Element() Compilation Unit() Java Root() Compilation Unit() classifiers Concrete Classifier(full Name) Package() Java Root() Package() Annotable() Package() Referenceable Element() Package() compilation Units Compilation Unit() Empty Model() Java Root() Expression List() For Loop Initializer() Expression List() expressions Expression() Expression() Array Initialization Value() Expression() Annotation Value() Assignment Expression() value Expression() Assignment Expression() child Assignment Expression Child() Assignment Expression() assignment Operator Assignment Operator() Assignment Expression Child() Expression() Conditional Expression() expression Else Assignment Expression Child() Conditional Expression() child Conditional Expression Child() Conditional Expression() expression If Expression() Conditional Expression Child() Assignment Expression Child() Conditional Or Expression() Conditional Expression Child() Conditional Or Expression() children Conditional Or Expression Child() Conditional Or Expression Child() Conditional Expression Child() Conditional And Expression() Conditional Or Expression Child() Conditional And Expression() children Conditional And Expression Child() Conditional And Expression Child() Conditional Or Expression Child() Inclusive Or Expression() Conditional And Expression Child() Inclusive Or Expression() children Inclusive Or Expression Child() Inclusive Or Expression Child() Conditional And Expression Child() Exclusive Or Expression() Inclusive Or Expression Child() Exclusive Or Expression() children Exclusive Or Expression Child() Exclusive Or Expression Child() Inclusive Or Expression Child() And Expression() Exclusive Or Expression Child() And Expression() children And Expression Child() And Expression Child() Exclusive Or Expression Child() Equality Expression() And Expression Child() Equality Expression() equality Operators Equality Operator() Equality Expression() children Equality Expression Child() Equality Expression Child() And Expression Child() Instance Of Expression() Array Typeable() Instance Of Expression() Typed Element() Instance Of Expression() Equality Expression Child() Instance Of Expression() child Instance Of Expression Child() Instance Of Expression Child() Equality Expression Child() Relation Expression() Instance Of Expression Child() Relation Expression() children Relation Expression Child() Relation Expression() relation Operators Relation Operator() Relation Expression Child() Instance Of Expression Child() Shift Expression() Relation Expression Child() Shift Expression() children Shift Expression Child() Shift Expression() shift Operators Shift Operator() Shift Expression Child() Relation Expression Child() Additive Expression() Shift Expression Child() Additive Expression() children Additive Expression Child() Additive Expression() additive Operators Additive Operator() Additive Expression Child() Shift Expression Child() Multiplicative Expression() Additive Expression Child() Multiplicative Expression() children Multiplicative Expression Child() Multiplicative Expression() multiplicative Operators Multiplicative Operator() Multiplicative Expression Child() Additive Expression Child() Unary Expression() Multiplicative Expression Child() Unary Expression() operators Unary Operator() Unary Expression() child Unary Expression Child() Unary Expression Child() Multiplicative Expression Child() Unary Modification Expression() Unary Expression Child() Unary Modification Expression() child Unary Modification Expression Child() Unary Modification Expression() operator Unary Modification Operator() Prefix Unary Modification Expression() Unary Modification Expression() Suffix Unary Modification Expression() Unary Modification Expression() Unary Modification Expression Child() Unary Expression Child() Cast Expression() Typed Element() Cast Expression() Array Typeable() Cast Expression() Unary Modification Expression Child() Cast Expression() child Multiplicative Expression Child() Primary Expression() Unary Modification Expression Child() Nested Expression() Reference() Nested Expression() expression Expression() Type Argument() Array Typeable() Type Argumentable() Commentable(comments) Type Argumentable() type Arguments Type Argument() Call Type Argumentable() Commentable(comments) Call Type Argumentable() call Type Arguments Type Argument() Type Parametrizable() Commentable(comments) Type Parametrizable() type Parameters Type Parameter() Extends Type Argument() Type Argument() Extends Type Argument() extend Types Type Reference() Qualified Type Argument() Type Argument() Qualified Type Argument() Typed Element() Super Type Argument() Type Argument() Super Type Argument() super Type Type Reference() Type Parameter() Classifier() Type Parameter() extend Types Type Reference() Unknown Type Argument() Type Argument() Import() Namespace Aware Element(namespaces) Importing Element() Commentable(comments) Importing Element() imports Import() Static Import() Import() Static Import() static Static() Classifier Import() Import() Classifier Import() classifier Concrete Classifier(full Name) Package Import() Import() Static Classifier Import() Static Import() Static Member Import() Static Import() Static Member Import() static Members Referenceable Element() Initializable() Commentable(comments) Initializable() initial Value Expression() Instantiation() Typed Element() Instantiation() Reference() Instantiation() Argumentable() Instantiation() Type Argumentable() New Constructor Call() Instantiation() New Constructor Call() Call Type Argumentable() New Constructor Call() anonymous Class Anonymous Class() Explicit Constructor Call() Instantiation() Explicit Constructor Call() call Target Self() Literal() Primary Expression() Self() Commentable(comments) Boolean Literal(value) Literal() Character Literal(value) Literal() Float Literal() Literal() Decimal Float Literal(decimal Value) Float Literal() Hex Float Literal(hex Value) Float Literal() Double Literal() Literal() Decimal Double Literal(decimal Value) Double Literal() Hex Double Literal(hex Value) Double Literal() Integer Literal() Literal() Decimal Integer Literal(decimal Value) Integer Literal() Hex Integer Literal(hex Value) Integer Literal() Octal Integer Literal(octal Value) Integer Literal() Long Literal() Literal() Decimal Long Literal(decimal Value) Long Literal() Hex Long Literal(hex Value) Long Literal() Octal Long Literal(octal Value) Long Literal() Null Literal() Literal() Super() Self() This() Self() Exception Thrower() Commentable(comments) Exception Thrower() exceptions Namespace Classifier Reference() Member() Named Element(name) Member Container() Commentable(comments) Member Container() default Members Member() Additional Field() Referenceable Element() Additional Field() Array Typeable() Additional Field() Initializable() Constructor() Member() Constructor() Statement List Container() Constructor() Parametrizable() Constructor() Type Parametrizable() Constructor() Exception Thrower() Constructor() Annotable And Modifiable() Empty Member() Member() Field() Member() Field() Initializable() Field() Variable() Field() Referenceable Element() Field() Annotable And Modifiable() Field() additional Fields Additional Field() Method() Member() Method() Typed Element() Method() Array Typeable() Method() Type Parametrizable() Method() Parametrizable() Method() Referenceable Element() Method() Exception Thrower() Method() Annotable And Modifiable() Interface Method() Method() Class Method() Method() Class Method() Statement List Container() Enum Constant() Referenceable Element() Enum Constant() Argumentable() Enum Constant() Annotable() Enum Constant() anonymous Class Anonymous Class() Modifier() Annotation Instance Or Modifier() Annotation Instance Or Modifier() Commentable(comments) Annotable And Modifiable() Commentable(comments) Annotable And Modifiable() annotations And Modifiers Annotation Instance Or Modifier() Modifiable() Commentable(comments) Modifiable() modifiers Modifier() Abstract() Modifier() Final() Modifier() Native() Modifier() Protected() Modifier() Public() Modifier() Private() Modifier() Static() Modifier() Strictfp() Modifier() Synchronized() Modifier() Transient() Modifier() Volatile() Modifier() Operator() Commentable(comments) Additive Operator() Operator() Assignment Operator() Operator() Equality Operator() Operator() Multiplicative Operator() Operator() Relation Operator() Operator() Shift Operator() Operator() Unary Operator() Operator() Unary Modification Operator() Operator() Assignment() Assignment Operator() Assignment And() Assignment Operator() Assignment Division() Assignment Operator() Assignment Exclusive Or() Assignment Operator() Assignment Minus() Assignment Operator() Assignment Modulo() Assignment Operator() Assignment Multiplication() Assignment Operator() Assignment Left Shift() Assignment Operator() Assignment Or() Assignment Operator() Assignment Plus() Assignment Operator() Assignment Right Shift() Assignment Operator() Assignment Unsigned Right Shift() Assignment Operator() Equal() Equality Operator() Not Equal() Equality Operator() Greater Than() Relation Operator() Greater Than Or Equal() Relation Operator() Less Than() Relation Operator() Less Than Or Equal() Relation Operator() Addition() Additive Operator() Addition() Unary Operator() Subtraction() Additive Operator() Subtraction() Unary Operator() Division() Multiplicative Operator() Multiplication() Multiplicative Operator() Remainder() Multiplicative Operator() Complement() Unary Operator() Minus Minus() Unary Modification Operator() Negate() Unary Operator() Plus Plus() Unary Modification Operator() Left Shift() Shift Operator() Right Shift() Shift Operator() Unsigned Right Shift() Shift Operator() Parameter() Variable() Parameter() Annotable And Modifiable() Parametrizable() Commentable(comments) Parametrizable() parameters Parameter() Ordinary Parameter() Parameter() Variable Length Parameter() Parameter() Reference() Primary Expression() Reference() Type Argumentable() Reference() array Selectors Array Selector() Argumentable() Commentable(comments) Argumentable() arguments Expression() Referenceable Element() Named Element(name) Element Reference() Reference() Element Reference() target Referenceable Element() Identifier Reference() Element Reference() Method Call() Element Reference() Method Call() Argumentable() Method Call() Call Type Argumentable() Reflective Class Reference() Reference() Primitive Type Reference() Reference() Primitive Type Reference() primitive Type Primitive Type() String Reference(value) Reference() Self Reference() Reference() Self Reference() self Self() Statement Container() Commentable(comments) Statement Container() statement Statement() Statement List Container() Commentable(comments) Statement List Container() statements Statement() Conditional() Commentable(comments) Conditional() condition Expression() For Loop Initializer() Commentable(comments) Statement() Commentable(comments) Switch Case() Statement List Container() Assert() Statement() Assert() Conditional() Assert() error Message Expression() Break() Jump() Block() Member() Block() Statement() Block() Statement List Container() Block() Modifiable() Catch Block() Statement List Container() Catch Block() parameter Ordinary Parameter() Condition() else Statement Statement() Condition() Statement Container() Condition() Conditional() Continue() Jump() Default Switch Case() Switch Case() Do While Loop() While Loop() Empty Statement() Statement() Expression Statement() Statement() Expression Statement() expression Expression() For Loop() Statement() For Loop() Statement Container() For Loop() Conditional() For Loop() init For Loop Initializer() For Loop() updates Expression() For Each Loop() Statement() For Each Loop() Statement Container() For Each Loop() next Ordinary Parameter() For Each Loop() collection Expression() Jump() Statement() Jump() target Jump Label() Jump Label() Statement() Jump Label() Statement Container() Jump Label() Named Element(name) Local Variable Statement() Statement() Local Variable Statement() variable Local Variable() Normal Switch Case() Switch Case() Normal Switch Case() Conditional() Return() Statement() Return() return Value Expression() Switch() Statement() Switch() cases Switch Case() Switch() variable Expression() Synchronized Block() Statement() Synchronized Block() Statement List Container() Synchronized Block() lock Provider Expression() Throw() Statement() Throw() throwable Expression() Try Block() Statement() Try Block() Statement List Container() Try Block() catche Blocks Catch Block() Try Block() finally Block Block() While Loop() Statement() While Loop() Statement Container() While Loop() condition Expression() Type() Commentable(comments) Typed Element() Commentable(comments) Typed Element() type Reference Type Reference() Type Reference() Commentable(comments) Classifier Reference() Type Reference() Classifier Reference() Type Argumentable() Classifier Reference() target Classifier() Namespace Classifier Reference() Type Reference() Namespace Classifier Reference() Namespace Aware Element(namespaces) Namespace Classifier Reference() classifier References Classifier Reference() Primitive Type() Type() Primitive Type() Type Reference() Boolean() Primitive Type() Byte() Primitive Type() Char() Primitive Type() Double() Primitive Type() Float() Primitive Type() Int() Primitive Type() Long() Primitive Type() Short() Primitive Type() Void() Primitive Type() Variable() Named Element(name) Variable() Typed Element() Variable() Array Typeable() Variable() Referenceable Element() Variable() Type Argumentable() Local Variable() Variable() Local Variable() Initializable() Local Variable() For Loop Initializer() Local Variable() Annotable And Modifiable() Local Variable() additional Local Variables Additional Local Variable() Additional Local Variable() Referenceable Element() Additional Local Variable() Array Typeable() Additional Local Variable() Initializable() T If() condition T Abstract Method Statement() T For() count T For Variable(name) T For Variable(name) set To Be Iterated T Abstract Method Statement() Template() template Header Template Header() Template() class Java Root() Template Header() model Imports T Model Import(name, uri) T Model Import(name, uri) T Method Call(method Name, params) T Abstract Method Statement() T For Member Container() T For() T For Member Container() Member Container() T For Member Container() Member() T For Statement List Container() T For() T For Statement List Container() Statement List Container() T For Statement List Container() Statement() T If Member Container() T If() T If Member Container() Member Container() T If Member Container() Member() T If Statement List Container() T If() T If Statement List Container() Statement List Container() T If Statement List Container() Statement() T Placeholder() method Statement T Abstract Method Statement() T Placeholder Primary Expression() T Placeholder() T Placeholder Primary Expression() Primary Expression() T Unary Operator() method Statement T Abstract Method Statement() T Unary Operator NOT() T Unary Operator() T Method Statement Impl(caller) T Abstract Method Statement() T Method Statement Impl(caller) callee T Method Call(method Name, params)
Label: metamodelling, Text: E Attribute(i D) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Attribute(i D) i D E Boolean() E Attribute(i D) e Attribute Type E Data Type(serializable) E Annotation(source) e Model Element E Model Element() E Annotation(source) source E String() E Annotation(source) details E String To String Map Entry(key, value) E Annotation(source) references E Object() E Class(abstract, interface) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Class(abstract, interface) interface E Boolean() E Class(abstract, interface) e All Operations E Operation() E Class(abstract, interface) e ID Attribute E Attribute(i D) E Class(abstract, interface) e All Containments E Reference(containment, container, resolve Proxies) E Class(abstract, interface) e Structural Features E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Class(abstract, interface) e All Generic Super Types E Generic Type() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Named Element(name) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) instance Type Name E String() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) default Value E Java Object() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) e Package E Package(ns URI, ns Prefix) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) e Type Parameters E Type Parameter() E Data Type(serializable) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Data Type(serializable) serializable E Boolean() E Enum() E Data Type(serializable) E Enum() e Literals E Enum Literal(value, instance, literal) E Enum Literal(value, instance, literal) E Named Element(name) E Enum Literal(value, instance, literal) value E Int() E Enum Literal(value, instance, literal) instance E Enumerator() E Enum Literal(value, instance, literal) literal E String() E Enum Literal(value, instance, literal) e Enum E Enum() E Factory() E Model Element() E Factory() e Package E Package(ns URI, ns Prefix) E Model Element() e Annotations E Annotation(source) E Named Element(name) E Model Element() E Named Element(name) name E String() E Object() E Operation() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Operation() e Containing Class E Class(abstract, interface) E Operation() e Type Parameters E Type Parameter() E Operation() e Parameters E Parameter() E Operation() e Exceptions E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Operation() e Generic Exceptions E Generic Type() E Package(ns URI, ns Prefix) E Named Element(name) E Package(ns URI, ns Prefix) ns Prefix E String() E Package(ns URI, ns Prefix) e Factory Instance E Factory() E Package(ns URI, ns Prefix) e Classifiers E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Parameter() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Parameter() e Operation E Operation() E Reference(containment, container, resolve Proxies) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Reference(containment, container, resolve Proxies) resolve Proxies E Boolean() E Reference(containment, container, resolve Proxies) e Reference Type E Class(abstract, interface) E Reference(containment, container, resolve Proxies) e Keys E Attribute(i D) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) derived E Boolean() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) default Value Literal E String() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) default Value E Java Object() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) e Containing Class E Class(abstract, interface) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Named Element(name) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) required E Boolean() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) upper Bound E Int() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) e Type E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) e Generic Type E Generic Type() E Big Decimal() E Big Integer() E Boolean() E Boolean Object() E Byte() E Byte Array() E Byte Object() E Char() E Character Object() E Date() E Diagnostic Chain() E Double() E Double Object() EE List() E Enumerator() E Feature Map() E Feature Map Entry() E Float() E Float Object() E Int() E Integer Object() E Java Class() E Java Object() E Long() E Long Object() E Map() E Resource() E Resource Set() E Short() E Short Object() E String() E String To String Map Entry(key, value) value E String() E Tree Iterator() E Generic Type() e Classifier E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Generic Type() e Type Parameter E Type Parameter() E Type Parameter() E Named Element(name) E Type Parameter() e Bounds E Generic Type() E Invocation Target Exception() E Memo Class(instances) E Class(abstract, interface) E Memo Class(instances) instances E Java Object()
Label: entities, Text: Model() entities Entity(name) Model() usages Usage() Entity(name) features Feature(name) Feature(name) Attribute(type) Feature(name) int() Reference() Feature(name) Reference() type Entity(name) Usage() ref Ref() Ref() Dot Expression() ref Ref() Dot Expression() tail Feature(name) Entity Ref() Ref() Entity Ref() entity Entity(name)
Label: graphicaleditor, Text: Edge() target View(visible, type, mutable) Edge() bendpoints Bendpoints() Edge() target Anchor Anchor() Node() View(visible, type, mutable) Node() layout Constraint Layout Constraint() Style() Fill Style(fill Color) Style() Line Style(line Color, line Width) Style() Font Style(font Color, font Name, font Height, bold, italic, underline, strike Through) Style() Title Style(show Title) Style() Sorting Style(sorting, sorting Keys) Style() Sorting Style(sorting, sorting Keys) sorting Keys Sort Key Map() Description Style(description) Style() Layout Constraint() Size(width, height) Layout Constraint() Location(x, y) Layout Constraint() Bounds() Location(x, y) Bounds() Size(width, height) Ratio(value) Layout Constraint() Anchor() Bendpoints() Automatic() Identity Anchor(id) Anchor() Tree() More() Above() Chamfered() Routing Style(routing, smoothness, avoid Obstructions, closest Distance, jump Link Status, jump Link Type, jump Links Reverse) Style() View(visible, type, mutable) target Edges Edge() View(visible, type, mutable) transient Children Node() View(visible, type, mutable) styles Style() View(visible, type, mutable) diagram Diagram(name, measurement Unit) Relative Bendpoints(points) Bendpoints() Relative Bendpoints(points) points Relative Bendpoint List() Diagram(name, measurement Unit) View(visible, type, mutable) Diagram(name, measurement Unit) Transient Edges Edge() Image(data) Canonical Style(canonical) Style() Shape Style() Font Style(font Color, font Name, font Height, bold, italic, underline, strike Through) Shape Style() Description Style(description) Shape Style() Fill Style(fill Color) Shape Style() Line Style(line Color, line Width) Connector Style() Routing Style(routing, smoothness, avoid Obstructions, closest Distance, jump Link Status, jump Link Type, jump Links Reverse) Connector Style() Line Style(line Color, line Width) Relative Bendpoint List() Page Style(page X, page Y, page Width, page Height) Style() Drawer Style(collapsed) Style() Guide Style() Style() Guide Style() vertical Guides Guide(position) Guide(position) node Map Node Entry(value) Node Entry(value) key Node() Bottom() Filtering Style(filtering, filtering Keys) Style() Filtering Style(filtering, filtering Keys) filtering Keys Filter Key List() Filter Key List() Sort Key Map() Descending() Diagram Style() Page Style(page X, page Y, page Width, page Height) Diagram Style() Guide Style() Diagram Style() Description Style(description) Image Style(anti Alias, maintain Aspect Ratio) Style() Image Style(anti Alias, maintain Aspect Ratio) crop Bound Bounds() Image Buffer Style() Image Style(anti Alias, maintain Aspect Ratio) Image Buffer Style() image Buffer Image(data) Pixel() Properties Set Style() Named Style(name) Properties Set Style() properties Map String To Property Value Map Entry(key) String To Property Value Map Entry(key) value Property Value(raw Value) Property Value(raw Value) String Object Converter() Single Value Style(raw Value) Data Type Style() List Value Style(raw Values List) Data Type Style() Named Style(name) Style() String Object Converter() Data Type Style() Named Style(name) Data Type Style() String Object Converter() Int Value Style(int Value) Named Style(name) Int List Value Style(int List Value) Named Style(name) Boolean Value Style(boolean Value) Named Style(name) Double Value Style(double Value) Named Style(name) Double List Value Style(double List Value) Named Style(name) String Value Style(string Value) Named Style(name) String List Value Style(string List Value) Named Style(name) E Object Value Style() Named Style(name) E Object List Value Style() Named Style(name) Byte Array Value Style(byte Array Value) Named Style(name) Boolean List Value Style(boolean List Value) Named Style(name) Hinted Diagram Link Style(hint) Diagram Link Style() Hinted Diagram Link Style(hint) Style() Diagram Link Style() Style() Diagram Link Style() diagram Link Diagram(name, measurement Unit) Multi Diagram Link Style() Style() Multi Diagram Link Style() diagram Links Diagram(name, measurement Unit) Center() Text Style(text Alignment) Style() Double() Line Type Style(line Type) Style() Solid Arrow() Arrow Style(arrow Source, arrow Target) Style()
Label: tree, Text: EDD(name) tree Objects Tree Object(index, name, type) EDD(name) tree Parents Tree Parent(index, name, type) Tree Element(index, name, type) Node() Tree Element(index, name, type) Node() leaves Leaf() Leaf() Tree Element(index, name, type) inadmissible() Tree Parent(index, name, type) tree Objects Tree Object(index, name, type) Tree Object(index, name, type) ED2(name) tree Elements Tree Element(index, name, type) Model() ed2 ED2(name)
Label: metamodelling, Text: Boolean() Integer() Library Feature() Object() Real() String() Throwable() Unlimited Natural() right() Sequence() terminate() external() Annotation() Named Element(name) Annotation() references Element() Annotation() owned Details Detail(values) Any Type() Class(instance Class Name, is Abstract, is Active, is Interface) Association Class() Class(instance Class Name, is Abstract, is Active, is Interface) Association Class() unowned Attributes Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) Association Class Call Exp() Navigation Call Exp() Association Class Call Exp() referred Association Class Association Class() Bag Type() Collection Type(is Null Free, lower, upper) Behavior() Class(instance Class Name, is Abstract, is Active, is Interface) Behavior() owning Transition Transition(kind) Boolean Literal Exp(boolean Symbol) Primitive Literal Exp() Boolean Literal Exp(boolean Symbol) boolean Symbol Boolean() Call Exp(is Implicit, is Safe) owned Source OCL Expression() Call Exp(is Implicit, is Safe) is Safe Boolean() Call Operation Action() Named Element(name) Call Operation Action() operation Operation(is Invalidating, is Typeof, is Validating) Class(instance Class Name, is Abstract, is Active, is Interface) Type() Class(instance Class Name, is Abstract, is Active, is Interface) Namespace() Class(instance Class Name, is Abstract, is Active, is Interface) Templateable Element() Class(instance Class Name, is Abstract, is Active, is Interface) extenders Stereotype Extender(is Required) Class(instance Class Name, is Abstract, is Active, is Interface) instance Class Name String() Class(instance Class Name, is Abstract, is Active, is Interface) is Interface Boolean() Class(instance Class Name, is Abstract, is Active, is Interface) owned Behaviors Behavior() Class(instance Class Name, is Abstract, is Active, is Interface) owned Invariants Constraint(is Callable) Class(instance Class Name, is Abstract, is Active, is Interface) owned Operations Operation(is Invalidating, is Typeof, is Validating) Class(instance Class Name, is Abstract, is Active, is Interface) owned Properties Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) Class(instance Class Name, is Abstract, is Active, is Interface) owning Package Package(URI, ns Prefix) Collection Item() Collection Literal Part() Collection Item() owned Item OCL Expression() Collection Literal Exp(kind) Literal Exp() Collection Literal Exp(kind) owned Parts Collection Literal Part() Collection Literal Part() Typed Element(is Many, is Required) Collection Range() Collection Literal Part() Collection Range() owned Last OCL Expression() Collection Type(is Null Free, lower, upper) Data Type(is Serializable) Collection Type(is Null Free, lower, upper) element Type Type() Collection Type(is Null Free, lower, upper) is Null Free Boolean() Collection Type(is Null Free, lower, upper) lower Integer() Collection Type(is Null Free, lower, upper) upper Unlimited Natural() Comment(body) owning Element Element() Comment(body) body String() Complete Class() Named Element(name) Complete Class() owning Complete Package Complete Package() Complete Class() partial Classes Class(instance Class Name, is Abstract, is Active, is Interface) Complete Environment() Element() Complete Environment() owned Complete Model Complete Model() Complete Environment() owned Standard Library Standard Library() Complete Model() Named Element(name) Complete Model() orphan Complete Package Orphan Complete Package() Complete Model() owned Complete Packages Complete Package() Complete Model() owning Complete Environment Complete Environment() Complete Model() partial Models Model(external URI) Complete Model() primitive Complete Package Primitive Complete Package() Complete Package() Named Element(name) Complete Package() owned Complete Classes Complete Class() Complete Package() owning Complete Model Complete Model() Complete Package() partial Packages Package(URI, ns Prefix) Connection Point Reference() Vertex() Connection Point Reference() exits Pseudostate(kind) Connection Point Reference() owning State State(is Composite, is Orthogonal, is Simple, is Submachine State) Constraint(is Callable) Named Element(name) Constraint(is Callable) constrained Elements Element() Constraint(is Callable) context Namespace() Constraint(is Callable) is Callable Boolean() Constraint(is Callable) owned Specification Language Expression(body, language) Constraint(is Callable) owning Pre Context Operation(is Invalidating, is Typeof, is Validating) Constraint(is Callable) owning State State(is Composite, is Orthogonal, is Simple, is Submachine State) Constraint(is Callable) owning Transition Transition(kind) Data Type(is Serializable) behavioral Class Class(instance Class Name, is Abstract, is Active, is Interface) Data Type(is Serializable) is Serializable Boolean() Detail(values) Named Element(name) Detail(values) values String() Dynamic Behavior() Behavior() Dynamic Behavior() Dynamic Type() Dynamic Element() Element() Dynamic Element() meta Type Type() Dynamic Property(default) Element() Dynamic Property(default) default String() Dynamic Property(default) referred Property Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) Dynamic Type() Class(instance Class Name, is Abstract, is Active, is Interface) Dynamic Type() Dynamic Element() Dynamic Type() owned Dynamic Properties Dynamic Property(default) Dynamic Value Specification() Value Specification() Element() Visitable() Element() owned Comments Comment(body) Element() owned Extensions Element Extension(is Applied, is Required) Element Extension(is Applied, is Required) Class(instance Class Name, is Abstract, is Active, is Interface) Element Extension(is Applied, is Required) base Element() Element Extension(is Applied, is Required) is Required Boolean() Element Extension(is Applied, is Required) stereotype Stereotype() Enum Literal Exp() Literal Exp() Enum Literal Exp() referred Literal Enumeration Literal(value) Enumeration() Data Type(is Serializable) Enumeration() owned Literals Enumeration Literal(value) Enumeration Literal(value) Instance Specification() Enumeration Literal(value) owning Enumeration Enumeration() Enumeration Literal(value) value Integer() Expression In OCL() Language Expression(body, language) Expression In OCL() owned Body OCL Expression() Expression In OCL() owned Result Variable(is Implicit) Feature(implementation, implementation Class, is Static) Typed Element(is Many, is Required) Feature(implementation, implementation Class, is Static) implementation Library Feature() Feature(implementation, implementation Class, is Static) implementation Class String() Feature(implementation, implementation Class, is Static) is Static Boolean() Feature Call Exp(is Pre) Call Exp(is Implicit, is Safe) Feature Call Exp(is Pre) is Pre Boolean() Final State() State(is Composite, is Orthogonal, is Simple, is Submachine State) If Exp() owned Then OCL Expression() Import() Named Element(name) Import() imported Namespace Namespace() Instance Specification() Named Element(name) Instance Specification() classes Class(instance Class Name, is Abstract, is Active, is Interface) Instance Specification() owned Slots Slot() Instance Specification() owned Specification Language Expression(body, language) Instance Specification() owning Package Package(URI, ns Prefix) Integer Literal Exp(integer Symbol) Numeric Literal Exp() Integer Literal Exp(integer Symbol) integer Symbol Integer() Invalid Literal Exp() Literal Exp() Invalid Type() Class(instance Class Name, is Abstract, is Active, is Interface) Iterate Exp() Loop Exp() Iterate Exp() Referring Element() Iterate Exp() owned Result Variable(is Implicit) Iteration() Operation(is Invalidating, is Typeof, is Validating) Iteration() owned Iterators Parameter(is Typeof) Iterator Exp() Loop Exp() Iterator Exp() Referring Element() Lambda Type() Data Type(is Serializable) Lambda Type() result Type Type() Language Expression(body, language) Value Specification() Language Expression(body, language) language String() Language Expression(body, language) owning Constraint Constraint(is Callable) Let Exp() owned In OCL Expression() Let Exp() owned Variable Variable(is Implicit) Library() Package(URI, ns Prefix) Library() owned Precedences Precedence(associativity, order) Literal Exp() OCL Expression() Loop Exp() Call Exp(is Implicit, is Safe) Loop Exp() owned Body OCL Expression() Loop Exp() owned Iterators Variable(is Implicit) Loop Exp() referred Iteration Iteration() Map Literal Exp() Literal Exp() Map Literal Exp() owned Parts Map Literal Part() Map Literal Part() Element() Map Literal Part() owned Value OCL Expression() Map Type() Data Type(is Serializable) Map Type() value Type Type() Message Exp() owned Target OCL Expression() Message Exp() owned Called Operation Call Operation Action() Message Exp() owned Sent Signal Send Signal Action() Message Type() Class(instance Class Name, is Abstract, is Active, is Interface) Message Type() referred Operation Operation(is Invalidating, is Typeof, is Validating) Message Type() referred Signal Signal() Model(external URI) Namespace() Model(external URI) external URI String() Model(external URI) owned Imports Import() Model(external URI) owned Packages Package(URI, ns Prefix) More Pivotable() Nameable() Named Element(name) Element() Named Element(name) Nameable() Named Element(name) name String() Namespace() Named Element(name) Namespace() owned Constraints Constraint(is Callable) Navigation Call Exp() Feature Call Exp(is Pre) Navigation Call Exp() navigation Source Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) Navigation Call Exp() qualifiers OCL Expression() Null Literal Exp() Primitive Literal Exp() Numeric Literal Exp() Primitive Literal Exp() OCL Expression() Typed Element(is Many, is Required) OCL Expression() type Value Type() Operation(is Invalidating, is Typeof, is Validating) Feature(implementation, implementation Class, is Static) Operation(is Invalidating, is Typeof, is Validating) Namespace() Operation(is Invalidating, is Typeof, is Validating) Templateable Element() Operation(is Invalidating, is Typeof, is Validating) body Expression Language Expression(body, language) Operation(is Invalidating, is Typeof, is Validating) is Validating Boolean() Operation(is Invalidating, is Typeof, is Validating) owned Parameters Parameter(is Typeof) Operation(is Invalidating, is Typeof, is Validating) owned Preconditions Constraint(is Callable) Operation(is Invalidating, is Typeof, is Validating) owning Class Class(instance Class Name, is Abstract, is Active, is Interface) Operation(is Invalidating, is Typeof, is Validating) precedence Precedence(associativity, order) Operation(is Invalidating, is Typeof, is Validating) raised Exceptions Type() Operation Call Exp(is Virtual) Feature Call Exp(is Pre) Operation Call Exp(is Virtual) Referring Element() Operation Call Exp(is Virtual) is Virtual Boolean() Operation Call Exp(is Virtual) owned Arguments OCL Expression() Operation Call Exp(is Virtual) referred Operation Operation(is Invalidating, is Typeof, is Validating) Opposite Property Call Exp() Navigation Call Exp() Opposite Property Call Exp() referred Property Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) Ordered Set Type() Collection Type(is Null Free, lower, upper) Orphan Complete Package() Complete Package() Package(URI, ns Prefix) Namespace() Package(URI, ns Prefix) ns Prefix String() Package(URI, ns Prefix) owned Classes Class(instance Class Name, is Abstract, is Active, is Interface) Package(URI, ns Prefix) owned Instances Instance Specification() Package(URI, ns Prefix) owned Profile Applications Profile Application(is Strict) Parameter(is Typeof) Variable Declaration() Parameter(is Typeof) is Typeof Boolean() Parameter(is Typeof) owning Operation Operation(is Invalidating, is Typeof, is Validating) Pivotable() Precedence(associativity, order) Named Element(name) Precedence(associativity, order) order Integer() Primitive Complete Package() Complete Package() Primitive Literal Exp() Literal Exp() Primitive Type() Data Type(is Serializable) Primitive Type() coercions Operation(is Invalidating, is Typeof, is Validating) Profile() Package(URI, ns Prefix) Profile() profile Applications Profile Application(is Strict) Profile Application(is Strict) Element() Profile Application(is Strict) applied Profile Profile() Profile Application(is Strict) is Strict Boolean() Profile Application(is Strict) owning Package Package(URI, ns Prefix) Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) Feature(implementation, implementation Class, is Static) Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) association Class Association Class() Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) default Value Object() Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) default Value String String() Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) is Volatile Boolean() Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) owned Expression Language Expression(body, language) Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) owning Class Class(instance Class Name, is Abstract, is Active, is Interface) Property Call Exp() Navigation Call Exp() Property Call Exp() Referring Element() Property Call Exp() referred Property Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) Pseudostate(kind) Vertex() Pseudostate(kind) owning State State(is Composite, is Orthogonal, is Simple, is Submachine State) Pseudostate(kind) owning State Machine State Machine() Real Literal Exp(real Symbol) Numeric Literal Exp() Real Literal Exp(real Symbol) real Symbol Real() Referring Element() Region() Namespace() Region() owned Subvertexes Vertex() Region() owned Transitions Transition(kind) Region() owning State State(is Composite, is Orthogonal, is Simple, is Submachine State) Region() owning State Machine State Machine() Self Type() Class(instance Class Name, is Abstract, is Active, is Interface) Send Signal Action() Named Element(name) Send Signal Action() signal Signal() Sequence Type() Collection Type(is Null Free, lower, upper) Set Type() Collection Type(is Null Free, lower, upper) Shadow Exp(value) OCL Expression() Shadow Exp(value) owned Parts Shadow Part() Shadow Exp(value) value String() Shadow Part() Typed Element(is Many, is Required) Shadow Part() owned Init OCL Expression() Shadow Part() referred Property Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) Signal() Class(instance Class Name, is Abstract, is Active, is Interface) Slot() Element() Slot() defining Property Property(default Value, default Value String, is Composite, is Derived, is ID, is Implicit, is Read Only, is Resolve Proxies, is Transient, is Unsettable, is Volatile) Slot() owned Values Value Specification() Slot() owning Instance Instance Specification() Standard Library() Element() Standard Library() owning Complete Environment Complete Environment() State(is Composite, is Orthogonal, is Simple, is Submachine State) Namespace() State(is Composite, is Orthogonal, is Simple, is Submachine State) Vertex() State(is Composite, is Orthogonal, is Simple, is Submachine State) is Submachine State Boolean() State(is Composite, is Orthogonal, is Simple, is Submachine State) owned Connection Points Pseudostate(kind) State(is Composite, is Orthogonal, is Simple, is Submachine State) owned Connections Connection Point Reference() State(is Composite, is Orthogonal, is Simple, is Submachine State) owned Deferrable Triggers Trigger() State(is Composite, is Orthogonal, is Simple, is Submachine State) owned Exit Behavior() State(is Composite, is Orthogonal, is Simple, is Submachine State) owned Regions Region() State(is Composite, is Orthogonal, is Simple, is Submachine State) owned State Invariant Constraint(is Callable) State(is Composite, is Orthogonal, is Simple, is Submachine State) submachines State Machine() State Exp() OCL Expression() State Exp() referred State State(is Composite, is Orthogonal, is Simple, is Submachine State) State Machine() Behavior() State Machine() owned Connection Points Pseudostate(kind) State Machine() owned Regions Region() State Machine() submachine States State(is Composite, is Orthogonal, is Simple, is Submachine State) Stereotype() Class(instance Class Name, is Abstract, is Active, is Interface) Stereotype() owned Extenders Stereotype Extender(is Required) Stereotype Extender(is Required) Element() Stereotype Extender(is Required) class Class(instance Class Name, is Abstract, is Active, is Interface) Stereotype Extender(is Required) is Required Boolean() Stereotype Extender(is Required) owning Stereotype Stereotype() String Literal Exp(string Symbol) Primitive Literal Exp() String Literal Exp(string Symbol) string Symbol String() Template Binding() Element() Template Binding() owned Substitutions Template Parameter Substitution() Template Binding() owning Element Templateable Element() Template Binding() template Signature Template Signature() Template Parameter() Type() Template Parameter() constraining Classes Class(instance Class Name, is Abstract, is Active, is Interface) Template Parameter() owning Signature Template Signature() Template Parameter Substitution() Element() Template Parameter Substitution() actual Type() Template Parameter Substitution() formal Template Parameter() Template Parameter Substitution() owned Wildcard Wildcard Type() Template Parameter Substitution() owning Binding Template Binding() Template Signature() Element() Template Signature() owned Parameters Template Parameter() Template Signature() owning Element Templateable Element() Templateable Element() Element() Templateable Element() owned Bindings Template Binding() Templateable Element() owned Signature Template Signature() Transition(kind) Namespace() Transition(kind) owned Effect Behavior() Transition(kind) owned Guard Constraint(is Callable) Transition(kind) owned Triggers Trigger() Transition(kind) owning Region Region() Transition(kind) target Vertex() Trigger() Named Element(name) Trigger() owning State State(is Composite, is Orthogonal, is Simple, is Submachine State) Trigger() owning Transition Transition(kind) Tuple Literal Exp() Literal Exp() Tuple Literal Exp() owned Parts Tuple Literal Part() Tuple Literal Part() Variable Declaration() Tuple Literal Part() owned Init OCL Expression() Tuple Type() Data Type(is Serializable) Type() Named Element(name) Type Exp() OCL Expression() Type Exp() Referring Element() Type Exp() referred Type Type() Typed Element(is Many, is Required) Named Element(name) Typed Element(is Many, is Required) is Required Boolean() Typed Element(is Many, is Required) type Type() Unlimited Natural Literal Exp(unlimited Natural Symbol) Numeric Literal Exp() Unlimited Natural Literal Exp(unlimited Natural Symbol) unlimited Natural Symbol Unlimited Natural() Unspecified Value Exp() OCL Expression() Value Specification() Typed Element(is Many, is Required) Variable(is Implicit) Variable Declaration() Variable(is Implicit) is Implicit Boolean() Variable(is Implicit) owned Init OCL Expression() Variable(is Implicit) represented Parameter Parameter(is Typeof) Variable Declaration() Typed Element(is Many, is Required) Variable Declaration() type Value Type() Variable Exp(is Implicit) OCL Expression() Variable Exp(is Implicit) Referring Element() Variable Exp(is Implicit) is Implicit Boolean() Variable Exp(is Implicit) referred Variable Variable Declaration() Vertex() Named Element(name) Vertex() outgoing Transitions Transition(kind) Vertex() owning Region Region() Visitable() Void Type() Class(instance Class Name, is Abstract, is Active, is Interface) Wildcard Type() Class(instance Class Name, is Abstract, is Active, is Interface) Wildcard Type() upper Bound Type()
Label: company, Text: Person(firstname, lastname, position) assigned To Project(name, budget) Person(firstname, lastname, position) employed Service Line() client() Company(name) persons Person(firstname, lastname, position) Company(name) projects Project(name, budget) Company(name) address Address(city, complete Address) Company(name) lines Division(name) Project(name, budget) related Category(name) Address(city, complete Address) Category(name) topics Topic(id) Topic(id) category Category(name) Company Model() company Company(name) Company Model() categories Category(name) Company Model() topics Topic(id) Company Model() address Address(city, complete Address) Company Model() division Division(name) Unit() Division(name) Service Line() Division(name) Division(name)
Label: modelling, Text: return() Parameter(direction) Typed Element() Interface() Classifier() Actor() Classifier() Activity Parameter Node() Object Node() Node() Class() Structured Classifier() Classifier() Information Item() Classifier() Property() Structural Feature() Component() Class() Deployment Specification() Artifact() Activity() Behavior() Time Interval() Interval() Literal Boolean() Literal Specification() Artifact() Classifier() Expansion Node() Object Node() Opaque Expression() Value Specification() Enumeration() Data Type() Signal() Classifier() Pin() Object Node() Extension() Association() State Machine() Behavior() Instance Value() Value Specification() Data Type() Classifier() Behavior() Class() Literal Specification() Value Specification() Output Pin() Pin() Structural Feature() Typed Element() Value Pin() Input Pin() Central Buffer Node() Object Node() Interaction() Behavior() Parameterable Classifier() Classifier() Encapsulated Classifier() Structured Classifier() Primitive Type() Data Type() Literal Integer() Literal Specification() Extension End() Property() Duration() Value Specification() Typed Element() type Type() Use Case() Behaviored Classifier() Literal Unlimited Natural() Literal Specification() Data Store Node() Central Buffer Node() Literal Null() Literal Specification() Literal String() Literal Specification() Class() Behaviored Classifier() Class() Encapsulated Classifier() Interval() Value Specification() Device() Node() Communication Path() Association() Type() Stereotype() Class() Input Pin() Pin() Time Expression() Value Specification() Association() Classifier() Operation() Typed Element() Operation() owned Parameter Parameter(direction) Protocol State Machine() State Machine() Collaboration() Behaviored Classifier() Collaboration() Structured Classifier() Templateable Classifier() Classifier() Association Class() Class() Association Class() Association() Value Specification() Typed Element() Port() Property() Expression() Opaque Expression() Classifier() Type() Object Node() Typed Element() Duration Interval() Interval() Variable() Typed Element() Execution Environment() Node() Behaviored Classifier() Classifier()
Label: gpl, Text: Compilation Unit() using Directives Using Directive() Compilation Unit() global Att Global Attributes() Compilation Unit() name Spaces Namespace Member Declaration() Identifier() Using Directive() name Identifier() Using Directive() usings Qualified Identifier() Array Type() Global Attributes() global Att Sections Global Attribute Section() Global Attribute Section() attributes Attribute List() Attributes() attributes Attribute Section() Attribute Section() Attribute List() Attribute Section() Attribute List() attributes Attribute() Attribute() name Attribute Name() Attribute() att Arguments Attribute Arguments() Attribute Arguments() expresion List Expression List() Expression List() expressions Expression() Expression() Variable Initializer() Expression() Argument() Expression() Resource Aquisition() Expression() unary Unary Expression(exp Unary Operator) Expression() exp2 Expression2() Expression2() mod Exp Expression() Expression2() build In Type Built In Type() Unary Expression(exp Unary Operator) type Type() Unary Expression(exp Unary Operator) primary Exp Primary Expression(rank Specifier, literal, predefined Type) Primary Expression(rank Specifier, literal, predefined Type) non Array Type Non Array Type() Primary Expression(rank Specifier, literal, predefined Type) expression List Expression List() Primary Expression(rank Specifier, literal, predefined Type) array Initializer2 Array Initializer() Primary Expression(rank Specifier, literal, predefined Type) array Type Array Type() Primary Expression(rank Specifier, literal, predefined Type) tipo Type() Primary Expression(rank Specifier, literal, predefined Type) argument List Argument List() Primary Expression(rank Specifier, literal, predefined Type) id Identifier() Primary Expression(rank Specifier, literal, predefined Type) expression Expression() Primary Expression(rank Specifier, literal, predefined Type) type Or Void Type Or Void() Primary Expression(rank Specifier, literal, predefined Type) primary Exoression2 Primary Expression2(incremente Decrement) Primary Expression2(incremente Decrement) id Identifier() Primary Expression2(incremente Decrement) argument List Argument List() Primary Expression2(incremente Decrement) expression List Expression List() Array Initializer() variable Initalizers Variable Initializer() Variable Initializer() Attribute Name() qualified Id Qualified Identifier() Type() Event Declaration() Type() Property Declaration() Type() Field Declaration() Type() Constant Declaration() Type() non Array Non Array Type() Type() variables Variable Declarator() Type() qualified Id Qualified Identifier() Type() event Accessor Declarations Event Accessor Declarations() Type() acc Declarate Accessor Declarations() Type() const Declarators Constant Declarator() Integral Type() Built In Type() Non Array Type() Array Type() Non Array Type() built Type Built In Type() Non Array Type() qualified Qualified Identifier() Built In Type() Built In Class Type() Built In Type() Built In Class Type() Class Base() Built In Class Type() q ID2 Qualified Identifier List() Qualified Identifier() ids Identifier() Namespace Member Declaration() name Declaretion Namespace Declaration() Namespace Member Declaration() type Declaration Type Declaration() Namespace Declaration() q Id Qualified Identifier() Namespace Declaration() name Body Namespace Body() Namespace Body() using Directives Using Directive() Namespace Body() name Spaces Namespace Member Declaration() Type Declaration() class Declaration Class Declaration(class Modifier) Type Declaration() interface Declaration Interface Declaration() Type Declaration() enum Declaration Enum Declaration() Type Declaration() delegate Declaration Delegate Declaration() Delegate Declaration() Enum Declaration() name Identifier() Enum Declaration() int Type Integral Type() Enum Declaration() enum Body Enum Body() Enum Body() enum Declarations Enum Member Declaration() Enum Member Declaration() att Attributes() Enum Member Declaration() name Identifier() Enum Member Declaration() exp Expression() Interface Declaration() name Identifier() Interface Declaration() q Identifiers Qualified Identifier List() Interface Declaration() inter Body Interface Body() Interface Body() interface Member Declarations Interface Member Declaration() Interface Member Declaration() intermethod Declaration Interface Method Declaration() Interface Member Declaration() inter Event Declaration Interface Event Declaration() Interface Member Declaration() type1 Type() Interface Member Declaration() interface Indexer Decla Interface Indexer Declaration() Interface Member Declaration() inter Property Interface Property Declaration() Interface Indexer Declaration() parameter List Formal Parameter List() Interface Indexer Declaration() inter Accessors Interface Accessors() Interface Event Declaration() type Type() Interface Event Declaration() name Identifier() Interface Property Declaration() name Identifier() Interface Property Declaration() inter Accessor Interface Accessors() Interface Accessors() other Att Attributes() Interface Method Declaration() type Type Or Void() Interface Method Declaration() name Identifier() Interface Method Declaration() parameter List Formal Parameter List() Class Declaration(class Modifier) class Name Identifier() Class Declaration(class Modifier) class Base Class Base() Class Declaration(class Modifier) class Body Class Body() Class Body() class Att Attributes() Class Body() class Declaration Class Member Declaration() Class Member Declaration() field Declaration Field Declaration() Class Member Declaration() method Declaration Method Declaration() Class Member Declaration() const Declaration Constant Declaration() Class Member Declaration() property Declaration Property Declaration() Class Member Declaration() event Declaration Event Declaration() Class Member Declaration() index Declaration Indexer Declaration(id Modifier) Class Member Declaration() type Declaration Type Declaration() Class Member Declaration() op Declaration Operator Declaration(op Modifier) Class Member Declaration() constructor Declaration Constructor Declaration(const Modifier) Class Member Declaration() destructor Declaration Destructor Declaration() Class Member Declaration() static Declaration Static Constructor Declaration(static Cosnt Modifier) Static Constructor Declaration(static Cosnt Modifier) name Identifier() Static Constructor Declaration(static Cosnt Modifier) empty Block Maybe Empty Block() Destructor Declaration() name Identifier() Destructor Declaration() empty Block Maybe Empty Block() Constructor Declaration(const Modifier) constr Declarator Constructor Declarator() Constructor Declaration(const Modifier) empty Block Maybe Empty Block() Constructor Declarator() class Name Identifier() Constructor Declarator() formal List Formal Parameter List() Constructor Declarator() const Initializer Constructor Initializer() Constructor Initializer() Argument List() Constructor Initializer() Argument List() args Argument() Argument() Operator Declaration(op Modifier) op Declarator Operator Declarator() Operator Declaration(op Modifier) empty Block Maybe Empty Block() Operator Declarator() type Type() Conversion Operator Declarator() Operator Declarator() Conversion Operator Declarator() first Type Type() Conversion Operator Declarator() conversion Name Identifier() Binary Operator Declarator(over Bin Operator) Operator Declarator() Binary Operator Declarator(over Bin Operator) second Type Type() Binary Operator Declarator(over Bin Operator) second Name Identifier() Unary Operator Declarator() Operator Declarator() Unary Operator Declarator() other Type Type() Unary Operator Declarator() name Identifier() Indexer Declaration(id Modifier) indexer Declarator Indexer Declarator() Indexer Declaration(id Modifier) acc Declaration Accessor Declarations() Indexer Declarator() type Type() Indexer Declarator() formal List Formal Parameter List() Indexer Declarator() qualified Id Qualified Identifier() Event Declaration() Event Accessor Declarations() att Attributes() Event Accessor Declarations() add Accessor Add Accessor Declaration() Event Accessor Declarations() remov Accessor Remove Accessor Declaration() Remove Accessor Declaration() Add Accessor Declaration() Property Declaration() Accessor Declarations() att2 Attributes() Accessor Declarations() get Acc Get Accessor Declaration() Accessor Declarations() set Acc Set Accessor Declaration() Set Accessor Declaration() Get Accessor Declaration() Method Declaration() method Header Method Header(modifier) Method Declaration() maybe Empty Maybe Empty Block() Method Header(modifier) type Or Void Type Or Void() Method Header(modifier) qualified Identifier Qualified Identifier() Method Header(modifier) formal Parameters Formal Parameter List() Formal Parameter List() parameter Array Parameter Array() Parameter Array() att Attributes() Parameter Array() array Array Type() Parameter Array() name Identifier() Fixed Parameters() Formal Parameter List() Fixed Parameters() fix Parameters Fixed Parameter() Fixed Parameter() Att Attributes() Fixed Parameter() type Type() Fixed Parameter() name Identifier() Type Or Void() Delegate Declaration() Type Or Void() name Identifier() Type Or Void() formal Parameters Formal Parameter List() Type Or Void() type Type() Field Declaration() Variable Declarator() variable Name Identifier() Variable Declarator() variable Variable Initializer() Constant Declaration() Constant Declarator() name Identifier() Constant Declarator() exp Expression() Class Base() q I Ds Qualified Identifier List() Qualified Identifier List() ids Qualified Identifier() Statement() label Stat Labeled Statement() Statement() declare Stat Declaration Statment() Statement() embedded Stat Embedded Statement() Declaration Statment() local Variable Declaration Local Variable Declaration() Declaration Statment() local C Onstant Localconstant Declaration() Localconstant Declaration() tipo Type() Localconstant Declaration() const Declarators Constant Declarator() Labeled Statement() id Identifier() Labeled Statement() stat Statement() Embedded Statement() maybe Empty Maybe Empty Block() Embedded Statement() stat Exp Statement Expression(incriment Decrement, assignement Operator) Embedded Statement() selection Stat Selection Statement() Embedded Statement() iteration Stat Iteration Statement() Embedded Statement() jump Stat Jump Statement() Embedded Statement() try Stat Try Statement() Embedded Statement() block Block() Embedded Statement() lock Stat Lock Statement() Embedded Statement() using Stat Using Statement() Using Statement() resourc Aquisition Resource Aquisition() Using Statement() embedded Stat Embedded Statement() Resource Aquisition() Local Variable Declaration() Resource Aquisition() Local Variable Declaration() tipo Type() Local Variable Declaration() variables Variable Declarator() Lock Statement() exp Expression() Lock Statement() embedded Stat Embedded Statement() Try Statement() block Block() Try Statement() catch Clauses Catch Clauses() Try Statement() finally Clause Finally Clause() Finally Clause() block Block() Catch Clauses() spec Catch Clause Specific Catch Clause() Catch Clauses() gen Catch Clause General Catchclause() General Catchclause() block Block() Specific Catch Clause() class Type Built In Class Type() Specific Catch Clause() quali Id Qualified Identifier() Specific Catch Clause() id Identifier() Specific Catch Clause() block Block() Jump Statement() break Stat Break Statement() Jump Statement() continue Stat Continue Statement() Jump Statement() goto Stat Goto Statement() Jump Statement() return Stat Return Statement() Jump Statement() throw Stat Throw Statement() Throw Statement() expression Expression() Return Statement() expression Expression() Goto Statement() id Identifier() Goto Statement() expression Expression() Continue Statement() Break Statement() Iteration Statement() while Statement While Statement() Iteration Statement() do Statement Do Statement() Iteration Statement() for Statement For Statement() Iteration Statement() foreach Statement Foreach Statement() Foreach Statement() tipo Type() Foreach Statement() id Identifier() Foreach Statement() expression Expression() Foreach Statement() embedded Statement Embedded Statement() For Statement() for Initializer For Initializer() For Statement() expression Expression() For Statement() statement Expression List Statement Expression List() For Statement() embedded Statement Embedded Statement() For Initializer() local Variable Declaration Local Variable Declaration() For Initializer() statement Expression List Statement Expression List() Statement Expression List() lists Statement Expression(incriment Decrement, assignement Operator) Statement Expression(incriment Decrement, assignement Operator) tipo Type() Statement Expression(incriment Decrement, assignement Operator) argument List Argument List() Statement Expression(incriment Decrement, assignement Operator) primary Expression Primary Expression(rank Specifier, literal, predefined Type) Statement Expression(incriment Decrement, assignement Operator) unary Expression Unary Expression(exp Unary Operator) Statement Expression(incriment Decrement, assignement Operator) expression Expression() Do Statement() embedded Statement Embedded Statement() Do Statement() expression Expression() While Statement() expression Expression() While Statement() embedded Statement Embedded Statement() Selection Statement() if Statement If Statement() Selection Statement() switch Statement Switch Statement() Switch Statement() expression Expression() Switch Statement() switch Section Switch Section() Switch Section() switchlabel Switch Label() Switch Section() statement Statement() Switch Label() expression Expression() If Statement() expression Expression() If Statement() embedded Statement Embedded Statement() If Statement() else Part Else Part() Else Part() embedded Statement Embedded Statement() Block() Remove Accessor Declaration() Block() Add Accessor Declaration() Block() Maybe Empty Block() Block() statement Statement() Maybe Empty Block() Set Accessor Declaration() Maybe Empty Block() Get Accessor Declaration() S Byte() Integral Type() Byte() Integral Type() Short() Integral Type() U Short() Integral Type() Int() Integral Type() U Int() Integral Type() Long() Integral Type() U Long() Integral Type() Char() Integral Type() Bool() Built In Type() Decimal() Built In Type() Float() Built In Type() Double() Built In Type() Object() Built In Class Type() String() Built In Class Type() Void() Type Or Void()
Label: statemachine, Text: addattribute() Assign Type Datatype Object() late() Binding Datatype Object() false() Boolean Datatype Object() Cond Lang Datatype() Document Root(mixed) assign Scxml Assign Type(mixed, any, attr, expr, location, type, any Attribute) Document Root(mixed) cancel Scxml Cancel Type(scxml Extra Content, any, sendid, sendidexpr, any Attribute) Document Root(mixed) content Scxml Content Type(mixed, any, expr, any Attribute) Document Root(mixed) data Scxml Data Type(mixed, any, expr, id, src, any Attribute) Document Root(mixed) datamodel Scxml Datamodel Type(scxml Extra Content, any, any Attribute) Document Root(mixed) donedata Scxml Donedata Type(any Attribute) Document Root(mixed) else Scxml Else Type(any Attribute) Document Root(mixed) elseif Scxml Elseif Type(cond, any Attribute) Document Root(mixed) final Scxml Final Type(scxml Final Mix, any, id, any Attribute) Document Root(mixed) finalize Scxml Finalize Type(scxml Core Executablecontent, any, any Attribute) Document Root(mixed) foreach Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) Document Root(mixed) history Scxml History Type(scxml Extra Content, any, scxml Extra Content1, any1, id, type, any Attribute) Document Root(mixed) if Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) Document Root(mixed) initial Scxml Initial Type(scxml Extra Content, any, scxml Extra Content1, any1, any Attribute) Document Root(mixed) invoke Scxml Invoke Type(scxml Invoke Mix, any, autoforward, id, idlocation, namelist, src, srcexpr, type, typeexpr, any Attribute) Document Root(mixed) log Scxml Log Type(scxml Extra Content, any, expr, label, any Attribute) Document Root(mixed) onentry Scxml Onentry Type(scxml Core Executablecontent, any, any Attribute) Document Root(mixed) onexit Scxml Onexit Type(scxml Core Executablecontent, any, any Attribute) Document Root(mixed) parallel Scxml Parallel Type(scxml Parallel Mix, any, id, any Attribute) Document Root(mixed) param Scxml Param Type(scxml Extra Content, any, expr, location, name, any Attribute) Document Root(mixed) raise Scxml Raise Type(event, any Attribute) Document Root(mixed) script Scxml Script Type(mixed, scxml Extra Content, any, src, any Attribute) Document Root(mixed) scxml Scxml Scxml Type(scxml Scxml Mix, any, binding, datamodel1, exmode, initial, name, version, any Attribute) Document Root(mixed) send Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) Document Root(mixed) state Scxml State Type(scxml State Mix, any, id, initial1, any Attribute) Document Root(mixed) transition Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) Duration Datatype() Event Type Datatype() Event Types Datatype() strict() Exmode Datatype Object() deep() History Type Datatype Object() Integer Datatype() Loc Lang Datatype() Scxml Assign Type(mixed, any, attr, expr, location, type, any Attribute) expr Value Lang Datatype() Scxml Assign Type(mixed, any, attr, expr, location, type, any Attribute) location Loc Lang Datatype() Scxml Cancel Type(scxml Extra Content, any, sendid, sendidexpr, any Attribute) sendidexpr Value Lang Datatype() Scxml Content Type(mixed, any, expr, any Attribute) expr Value Lang Datatype() Scxml Datamodel Type(scxml Extra Content, any, any Attribute) data Scxml Data Type(mixed, any, expr, id, src, any Attribute) Scxml Data Type(mixed, any, expr, id, src, any Attribute) expr Value Lang Datatype() Scxml Data Type(mixed, any, expr, id, src, any Attribute) src URI Datatype() Scxml Donedata Type(any Attribute) content Scxml Content Type(mixed, any, expr, any Attribute) Scxml Donedata Type(any Attribute) param Scxml Param Type(scxml Extra Content, any, expr, location, name, any Attribute) Scxml Elseif Type(cond, any Attribute) cond Cond Lang Datatype() Scxml Else Type(any Attribute) Scxml Finalize Type(scxml Core Executablecontent, any, any Attribute) raise Scxml Raise Type(event, any Attribute) Scxml Finalize Type(scxml Core Executablecontent, any, any Attribute) if Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) Scxml Finalize Type(scxml Core Executablecontent, any, any Attribute) foreach Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) Scxml Finalize Type(scxml Core Executablecontent, any, any Attribute) send Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) Scxml Finalize Type(scxml Core Executablecontent, any, any Attribute) script Scxml Script Type(mixed, scxml Extra Content, any, src, any Attribute) Scxml Finalize Type(scxml Core Executablecontent, any, any Attribute) assign Scxml Assign Type(mixed, any, attr, expr, location, type, any Attribute) Scxml Finalize Type(scxml Core Executablecontent, any, any Attribute) log Scxml Log Type(scxml Extra Content, any, expr, label, any Attribute) Scxml Finalize Type(scxml Core Executablecontent, any, any Attribute) cancel Scxml Cancel Type(scxml Extra Content, any, sendid, sendidexpr, any Attribute) Scxml Final Type(scxml Final Mix, any, id, any Attribute) onentry Scxml Onentry Type(scxml Core Executablecontent, any, any Attribute) Scxml Final Type(scxml Final Mix, any, id, any Attribute) onexit Scxml Onexit Type(scxml Core Executablecontent, any, any Attribute) Scxml Final Type(scxml Final Mix, any, id, any Attribute) donedata Scxml Donedata Type(any Attribute) Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) raise Scxml Raise Type(event, any Attribute) Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) if Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) send Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) script Scxml Script Type(mixed, scxml Extra Content, any, src, any Attribute) Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) assign Scxml Assign Type(mixed, any, attr, expr, location, type, any Attribute) Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) log Scxml Log Type(scxml Extra Content, any, expr, label, any Attribute) Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) cancel Scxml Cancel Type(scxml Extra Content, any, sendid, sendidexpr, any Attribute) Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) array Value Lang Datatype() Scxml History Type(scxml Extra Content, any, scxml Extra Content1, any1, id, type, any Attribute) transition Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) raise2 Scxml Raise Type(event, any Attribute) Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) foreach2 Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) send2 Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) script2 Scxml Script Type(mixed, scxml Extra Content, any, src, any Attribute) Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) assign2 Scxml Assign Type(mixed, any, attr, expr, location, type, any Attribute) Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) log2 Scxml Log Type(scxml Extra Content, any, expr, label, any Attribute) Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) cancel2 Scxml Cancel Type(scxml Extra Content, any, sendid, sendidexpr, any Attribute) Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) elseif Scxml Elseif Type(cond, any Attribute) Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) else Scxml Else Type(any Attribute) Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) cond Cond Lang Datatype() Scxml Initial Type(scxml Extra Content, any, scxml Extra Content1, any1, any Attribute) transition Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) Scxml Invoke Type(scxml Invoke Mix, any, autoforward, id, idlocation, namelist, src, srcexpr, type, typeexpr, any Attribute) content Scxml Content Type(mixed, any, expr, any Attribute) Scxml Invoke Type(scxml Invoke Mix, any, autoforward, id, idlocation, namelist, src, srcexpr, type, typeexpr, any Attribute) param Scxml Param Type(scxml Extra Content, any, expr, location, name, any Attribute) Scxml Invoke Type(scxml Invoke Mix, any, autoforward, id, idlocation, namelist, src, srcexpr, type, typeexpr, any Attribute) finalize Scxml Finalize Type(scxml Core Executablecontent, any, any Attribute) Scxml Invoke Type(scxml Invoke Mix, any, autoforward, id, idlocation, namelist, src, srcexpr, type, typeexpr, any Attribute) idlocation Loc Lang Datatype() Scxml Invoke Type(scxml Invoke Mix, any, autoforward, id, idlocation, namelist, src, srcexpr, type, typeexpr, any Attribute) src URI Datatype() Scxml Invoke Type(scxml Invoke Mix, any, autoforward, id, idlocation, namelist, src, srcexpr, type, typeexpr, any Attribute) typeexpr Value Lang Datatype() Scxml Log Type(scxml Extra Content, any, expr, label, any Attribute) expr Value Lang Datatype() Scxml Onentry Type(scxml Core Executablecontent, any, any Attribute) raise Scxml Raise Type(event, any Attribute) Scxml Onentry Type(scxml Core Executablecontent, any, any Attribute) if Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) Scxml Onentry Type(scxml Core Executablecontent, any, any Attribute) foreach Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) Scxml Onentry Type(scxml Core Executablecontent, any, any Attribute) send Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) Scxml Onentry Type(scxml Core Executablecontent, any, any Attribute) script Scxml Script Type(mixed, scxml Extra Content, any, src, any Attribute) Scxml Onentry Type(scxml Core Executablecontent, any, any Attribute) assign Scxml Assign Type(mixed, any, attr, expr, location, type, any Attribute) Scxml Onentry Type(scxml Core Executablecontent, any, any Attribute) log Scxml Log Type(scxml Extra Content, any, expr, label, any Attribute) Scxml Onentry Type(scxml Core Executablecontent, any, any Attribute) cancel Scxml Cancel Type(scxml Extra Content, any, sendid, sendidexpr, any Attribute) Scxml Onexit Type(scxml Core Executablecontent, any, any Attribute) raise Scxml Raise Type(event, any Attribute) Scxml Onexit Type(scxml Core Executablecontent, any, any Attribute) if Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) Scxml Onexit Type(scxml Core Executablecontent, any, any Attribute) foreach Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) Scxml Onexit Type(scxml Core Executablecontent, any, any Attribute) send Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) Scxml Onexit Type(scxml Core Executablecontent, any, any Attribute) script Scxml Script Type(mixed, scxml Extra Content, any, src, any Attribute) Scxml Onexit Type(scxml Core Executablecontent, any, any Attribute) assign Scxml Assign Type(mixed, any, attr, expr, location, type, any Attribute) Scxml Onexit Type(scxml Core Executablecontent, any, any Attribute) log Scxml Log Type(scxml Extra Content, any, expr, label, any Attribute) Scxml Onexit Type(scxml Core Executablecontent, any, any Attribute) cancel Scxml Cancel Type(scxml Extra Content, any, sendid, sendidexpr, any Attribute) Scxml Parallel Type(scxml Parallel Mix, any, id, any Attribute) onentry Scxml Onentry Type(scxml Core Executablecontent, any, any Attribute) Scxml Parallel Type(scxml Parallel Mix, any, id, any Attribute) onexit Scxml Onexit Type(scxml Core Executablecontent, any, any Attribute) Scxml Parallel Type(scxml Parallel Mix, any, id, any Attribute) transition Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) Scxml Parallel Type(scxml Parallel Mix, any, id, any Attribute) state Scxml State Type(scxml State Mix, any, id, initial1, any Attribute) Scxml Parallel Type(scxml Parallel Mix, any, id, any Attribute) history Scxml History Type(scxml Extra Content, any, scxml Extra Content1, any1, id, type, any Attribute) Scxml Parallel Type(scxml Parallel Mix, any, id, any Attribute) datamodel Scxml Datamodel Type(scxml Extra Content, any, any Attribute) Scxml Parallel Type(scxml Parallel Mix, any, id, any Attribute) invoke Scxml Invoke Type(scxml Invoke Mix, any, autoforward, id, idlocation, namelist, src, srcexpr, type, typeexpr, any Attribute) Scxml Param Type(scxml Extra Content, any, expr, location, name, any Attribute) expr Value Lang Datatype() Scxml Param Type(scxml Extra Content, any, expr, location, name, any Attribute) location Loc Lang Datatype() Scxml Raise Type(event, any Attribute) Scxml Script Type(mixed, scxml Extra Content, any, src, any Attribute) src URI Datatype() Scxml Scxml Type(scxml Scxml Mix, any, binding, datamodel1, exmode, initial, name, version, any Attribute) state Scxml State Type(scxml State Mix, any, id, initial1, any Attribute) Scxml Scxml Type(scxml Scxml Mix, any, binding, datamodel1, exmode, initial, name, version, any Attribute) parallel Scxml Parallel Type(scxml Parallel Mix, any, id, any Attribute) Scxml Scxml Type(scxml Scxml Mix, any, binding, datamodel1, exmode, initial, name, version, any Attribute) final Scxml Final Type(scxml Final Mix, any, id, any Attribute) Scxml Scxml Type(scxml Scxml Mix, any, binding, datamodel1, exmode, initial, name, version, any Attribute) datamodel Scxml Datamodel Type(scxml Extra Content, any, any Attribute) Scxml Scxml Type(scxml Scxml Mix, any, binding, datamodel1, exmode, initial, name, version, any Attribute) script Scxml Script Type(mixed, scxml Extra Content, any, src, any Attribute) Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) content Scxml Content Type(mixed, any, expr, any Attribute) Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) param Scxml Param Type(scxml Extra Content, any, expr, location, name, any Attribute) Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) delay Duration Datatype() Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) typeexpr Value Lang Datatype() Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) event Event Type Datatype() Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) idlocation Loc Lang Datatype() Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) target URI Datatype() Scxml State Type(scxml State Mix, any, id, initial1, any Attribute) onentry Scxml Onentry Type(scxml Core Executablecontent, any, any Attribute) Scxml State Type(scxml State Mix, any, id, initial1, any Attribute) onexit Scxml Onexit Type(scxml Core Executablecontent, any, any Attribute) Scxml State Type(scxml State Mix, any, id, initial1, any Attribute) transition Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) Scxml State Type(scxml State Mix, any, id, initial1, any Attribute) initial Scxml Initial Type(scxml Extra Content, any, scxml Extra Content1, any1, any Attribute) Scxml State Type(scxml State Mix, any, id, initial1, any Attribute) parallel Scxml Parallel Type(scxml Parallel Mix, any, id, any Attribute) Scxml State Type(scxml State Mix, any, id, initial1, any Attribute) final Scxml Final Type(scxml Final Mix, any, id, any Attribute) Scxml State Type(scxml State Mix, any, id, initial1, any Attribute) history Scxml History Type(scxml Extra Content, any, scxml Extra Content1, any1, id, type, any Attribute) Scxml State Type(scxml State Mix, any, id, initial1, any Attribute) datamodel Scxml Datamodel Type(scxml Extra Content, any, any Attribute) Scxml State Type(scxml State Mix, any, id, initial1, any Attribute) invoke Scxml Invoke Type(scxml Invoke Mix, any, autoforward, id, idlocation, namelist, src, srcexpr, type, typeexpr, any Attribute) Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) raise Scxml Raise Type(event, any Attribute) Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) if Scxml If Type(scxml Core Executablecontent, any, scxml Core Executablecontent1, any1, scxml Core Executablecontent2, any2, cond, any Attribute) Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) foreach Scxml Foreach Type(scxml Core Executablecontent, any, array, index, item, any Attribute) Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) send Scxml Send Type(scxml Send Mix, any, delay, delayexpr, event, eventexpr, id, idlocation, namelist, target, targetexpr, type, typeexpr, any Attribute) Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) script Scxml Script Type(mixed, scxml Extra Content, any, src, any Attribute) Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) assign Scxml Assign Type(mixed, any, attr, expr, location, type, any Attribute) Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) log Scxml Log Type(scxml Extra Content, any, expr, label, any Attribute) Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) cancel Scxml Cancel Type(scxml Extra Content, any, sendid, sendidexpr, any Attribute) Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) cond Cond Lang Datatype() Scxml Transition Type(scxml Core Executablecontent, any, cond, event, target, type, any Attribute) event Event Types Datatype() external() Transition Type Datatype Object() URI Datatype() Value Lang Datatype()
Label: education, Text: Course(code, name, credtis, semesters, level, type) Programme(name, years) specializations Specialization(name, specialization Choice Point Semester) Programme(name, years) semesters Semester(type, year) Specialization(name, specialization Choice Point Semester) programme Programme(name, years) Specialization(name, specialization Choice Point Semester) courses Course(code, name, credtis, semesters, level, type) Specialization(name, specialization Choice Point Semester) semesters Semester(type, year) Semester(type, year) possible Courses Course(code, name, credtis, semesters, level, type) Semester(type, year) programme Programme(name, years) Chosen Semester() semester Semester(type, year) Chosen Semester() courses Course(code, name, credtis, semesters, level, type) Study Plan() programme Programme(name, years) Study Plan() specializations Specialization(name, specialization Choice Point Semester) Study Plan() chosen Semesters Chosen Semester() spring() Department(name, short Name) courses Course(code, name, credtis, semesters, level, type) Department(name, short Name) programmes Programme(name, years) high() elective()
Label: simple-pl, Text: Integer() Boolean() String() Instruction() Primitive() Instruction() Back() Primitive() Back() steps Expression() Forward() Primitive() Forward() steps Expression() Left() Primitive() Left() angle Expression() Right() Primitive() Right() angle Expression() Pen Down() Primitive() Pen Up() Primitive() Clear() Primitive() Expression() Instruction() Binary Exp() rhs Expression() Unary Expression() expression Expression() Constant(value) Expression() Proc Call() actual Args Expression() Proc Call() declaration Proc Declaration(name) Proc Declaration(name) instructions Instruction() Proc Declaration(name) name String() Proc Declaration(name) args Parameter(name) Proc Declaration(name) proc Call Proc Call() Block() instructions Instruction() If() Control Structure() If() else Part Block() Control Structure() Instruction() Control Structure() condition Expression() Repeat() Control Structure() Repeat() block Block() While() Control Structure() While() block Block() Parameter(name) name String() Parameter Call() Expression() Parameter Call() parameter Parameter(name) Plus() Binary Exp() Minus() Binary Exp() Mult() Binary Exp() Div() Binary Exp() Equals() Binary Exp() Greater() Binary Exp() Lower() Binary Exp() Cos() Unary Expression() Sin() Unary Expression() Tan() Unary Expression() Logo Program() instructions Instruction() Turtle(heading, pen Up) position Point(x, y) Turtle(heading, pen Up) drawings Segment() Turtle(heading, pen Up) call Stack Call Stack() Point(x, y) Segment() end Point(x, y) Call Stack() frames Stack Frame() Stack Frame() variables Variable(name, value) Variable(name, value)
Label: metamodelling, Text: E Annotation(source) e Model Element E Model Element() E Annotation(source) source E String() E Annotation(source) details E String To String Map Entry(key, value) E Annotation(source) references E Object() E String() E String To String Map Entry(key, value) value E String() E Object() E Class(abstract, interface) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Class(abstract, interface) interface E Boolean() E Class(abstract, interface) e All Operations E Operation() E Class(abstract, interface) eid Attribute E Attribute(id) E Class(abstract, interface) e All Structural Features E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Class(abstract, interface) e All Containments E Reference(containment, container, resolve Proxies) E Class(abstract, interface) e All Generic Super Types E Generic Type() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Named Element(name) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) instance Type Name E String() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) instance Class E Classifier E Java Class Wildcard() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) default Value E Java Object() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) e Package E Package(ns Uri, ns Prefix) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) e Type Parameters E Type Parameter() E Named Element(name) E Model Element() E Named Element(name) name E String() E Classifier E Java Class Wildcard() E Java Object() E Package(ns Uri, ns Prefix) E Named Element(name) E Package(ns Uri, ns Prefix) ns Prefix E String() E Package(ns Uri, ns Prefix) e Factory Instance E Factory() E Package(ns Uri, ns Prefix) e Classifiers E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Factory() E Model Element() E Factory() e Package E Package(ns Uri, ns Prefix) E Data Type(serializable) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Data Type(serializable) serializable E Boolean() E Boolean() E Type Parameter() E Named Element(name) E Type Parameter() e Bounds E Generic Type() E Generic Type() E Object() E Generic Type() e Classifier E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Generic Type() e Type Parameter E Type Parameter() E Int() E Classifier Wildcard() E Operation() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Operation() e Type Parameters E Type Parameter() E Operation() e Parameters E Parameter() E Operation() e Exceptions E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Operation() e Generic Exceptions E Generic Type() E Operation() e Containing Class E Class(abstract, interface) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Named Element(name) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) required E Boolean() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) upper Bound E Int() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) e Type E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) e Generic Type E Generic Type() E Parameter() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Parameter() e Operation E Operation() E Attribute(id) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Attribute(id) id E Boolean() E Attribute(id) e Attribute Type E Data Type(serializable) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) e Containing Class E Class(abstract, interface) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) derived E Boolean() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) default Value Literal E String() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) default Value E Java Object() E Structural Feature E Java Class Wildcard() E Structural Feature Wildcard() E Reference(containment, container, resolve Proxies) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Reference(containment, container, resolve Proxies) resolve Proxies E Boolean() E Reference(containment, container, resolve Proxies) e Reference Type E Class(abstract, interface) E Reference(containment, container, resolve Proxies) e Keys E Attribute(id) E Resource() E Object Ee List E Object() E Object E Tree Iterator E Object() E Enum() E Data Type(serializable) E Enum() e Literals E Enum Literal(value, instance, literal) E Enum Literal(value, instance, literal) E Named Element(name) E Enum Literal(value, instance, literal) value E Int() E Enum Literal(value, instance, literal) instance E Enumerator() E Enum Literal(value, instance, literal) literal E String() E Enum Literal(value, instance, literal) e Enum E Enum() E Enumerator() E Big Decimal() E Big Integer() E Boolean Object() E Byte() E Byte Array() E Byte Object() E Char() E Character Object() E Date() E Diagnostic Chain() E Double() E Double Object() Ee List() E Feature Map() E Feature Map Entry() E Float() E Float Object() E Integer Object() E Java Class() E Long() E Long Object() E Map() E Resource Set() E Short() E Short Object() E Tree Iterator() E Invocation Target Exception() E Model Element() E Object() E Model Element() e Annotations E Annotation(source)
Label: petrinet, Text: Petri Net Doc() net Petri Net() Petri Net() ID(id) Petri Net() type Petri Net Type() Petri Net() name Name(text) Petri Net() page Page() Petri Net() toolspecific Tool Info(tool, version) Page() Node() Page() object Object() Page() page Label Proxy Page Label Proxy(text) Page() labelproxy Label Proxy(text) Object() ID(id) Object() name Name(text) Object() toolspecific Tool Info(tool, version) Object() graphics Graphics() Label Proxy(text) label Label() Label Proxy(text) object Object() Graphics() Node() Object() Node() in Arc() Arc() Object() Arc() target Node() Place Node() Node() Transition Node() Node() Place() Place Node() Ref Place() ref Place Node() Ref Transition() ref Transition Node() Transition() Transition Node() Name(text) Label() Label() toolspecific Tool Info(tool, version) Label() graphics Graphics() Arc Graphics() Graphics() Arc Graphics() line Line(shape, color, width, style) Arc Graphics() position Coordinate(x, y) Node Graphics() Graphics() Node Graphics() dimension Coordinate(x, y) Node Graphics() line Line(shape, color, width, style) Node Graphics() fill Fill(color, image, gradient Color, gradientrotation) Annotation Graphics() Graphics() Annotation Graphics() fill Fill(color, image, gradient Color, gradientrotation) Annotation Graphics() line Line(shape, color, width, style) Annotation Graphics() offset Coordinate(x, y) Annotation Graphics() font Font(family, style, weight, size, decoration, align, rotation) Line(shape, color, width, style) color Color() Line(shape, color, width, style) style Line Style() Color() Line Style() Coordinate(x, y) Fill(color, image, gradient Color, gradientrotation) gradient Color Color() Fill(color, image, gradient Color, gradientrotation) image URI() Fill(color, image, gradient Color, gradientrotation) gradientrotation Gradient Rotation() URI() Gradient Rotation() Font(family, style, weight, size, decoration, align, rotation) family Font Family() Font(family, style, weight, size, decoration, align, rotation) style Font Style() Font(family, style, weight, size, decoration, align, rotation) weight Font Weight() Font(family, style, weight, size, decoration, align, rotation) size Font Size() Font(family, style, weight, size, decoration, align, rotation) decoration Font Decoration() Font(family, style, weight, size, decoration, align, rotation) align Font Align() Font Family() Font Style() Font Weight() Font Decoration() Font Size() Font Align() Petri Net Type() Empty Type() Petri Net Type() Tool Info Text(info) Tool Info(tool, version) Tool Info(tool, version) ID(id) Page Label Proxy(text) label Label() Attribute() Label() curve()
Label: relational, Text: Data Base() tables Table(storage Engine, collation) Table(storage Engine, collation) Named Element(name) Table(storage Engine, collation) data Base Data Base() Table(storage Engine, collation) columns Column(type, nullable, default, length, collation) Table(storage Engine, collation) indexes Index() Table(storage Engine, collation) primary Key Primary Key() Table(storage Engine, collation) uniques Unique() Column(type, nullable, default, length, collation) Named Element(name) Primary Key() Index() Index() Named Element(name) Index() columns Column(type, nullable, default, length, collation) Unique() Index() Named Element(name)
Label: modelling, Text: Property() Element(ID) Communication Path() Association() Communication Path() Element(ID) Structured Classifier() Classifier() Structured Classifier() Element(ID) Deployment Specification() Artifact() Deployment Specification() Element(ID) Interface() Classifier() Interface() Element(ID) Component() Class() Component() Element(ID) Extension() Association() Extension() Element(ID) Stereotype() Class() Stereotype() Element(ID) Parameterable Classifier() Classifier() Parameterable Classifier() Element(ID) Interaction() Behavior() Interaction() Element(ID) Association Class() Class() Association Class() Association() Association Class() Element(ID) Behaviored Classifier() Classifier() Behaviored Classifier() Element(ID) Artifact() Classifier() Artifact() Element(ID) Port() Property() Port() Element(ID) Behavior() Class() Behavior() Element(ID) Device() Node() Device() Element(ID) Templateable Classifier() Classifier() Templateable Classifier() Element(ID) Generalization() Element(ID) Generalization() general Classifier() Primitive Type() Data Type() Primitive Type() Element(ID) Protocol State Machine() State Machine() Protocol State Machine() Element(ID) Collaboration() Behaviored Classifier() Collaboration() Structured Classifier() Collaboration() Element(ID) Encapsulated Classifier() Structured Classifier() Encapsulated Classifier() Element(ID) Data Type() Classifier() Data Type() Element(ID) Extension End() Property() Extension End() Element(ID) Enumeration() Data Type() Enumeration() Element(ID) Activity() Behavior() Activity() Element(ID) Information Item() Classifier() Information Item() Element(ID) Node() Class() Node() Element(ID) Association() Classifier() Association() Element(ID) Association() member End Property() Actor() Classifier() Actor() Element(ID) Execution Environment() Node() Execution Environment() Element(ID) Class() Behaviored Classifier() Class() Encapsulated Classifier() Class() Element(ID) Classifier() Element(ID) Classifier() generalization Generalization() State Machine() Behavior() State Machine() Element(ID) Signal() Classifier() Signal() Element(ID) Use Case() Behaviored Classifier() Use Case() Element(ID) Element(ID)
Label: families, Text: Family Register() Model Element() Family Register() a Family Register() Family Register() families a Family() Family(name) Model Element() Family(name) a Family() Family(name) daughters a Family Member() Family(name) families Inverse a Family Register() Family Member(name) Model Element() Family Member(name) a Family Member() Family Member(name) daughters Inverse a Family() Model Element() U Data(name, utype) OR() u Family Register() a Family Register() u Family Register() U Data(name, utype) u Family Register() uright Family Register() a Family Register() u Family() a Family() u Family() U Data(name, utype) u Family() uright Family(name) a Family() u Family Member() a Family Member() u Family Member() U Data(name, utype) u Family Member() uright Family Member(name) a Family Member()
Label: gpl, Text: pascal() program program() program() head program Heading() program() block block() program Heading() identifer identifier(identifier) program Heading() identifier List identifier List() identifier List() identifier List1 identifier(identifier) identifier(identifier) block() label label declaration part() block() constant Definition Parts constant Definition Part() block() type Definition Parts type Definition Part() block() variable Declaration Parts variable Declaration Part() block() procedure And Function Declaration Parts procedure And Function Declaration Part() block() uses Units Parts uses Units Part() block() compound Statement compound Statement() label declaration part() label() label declaration part() label() statement() label() unsigned Integer unsigned Integer(number) label() identifier identifier(identifier) unsigned Integer(number) constant Definition Part() constant Definition constant Definition() constant Definition() identifier identifier(identifier) constant Definition() constant constant(sign, string, bool) constant(sign, string, bool) variant() constant(sign, string, bool) unsigned Number unsigned Number(unsigned Real) constant(sign, string, bool) identifier identifier(identifier) constant(sign, string, bool) constant Chr constant Chr() constant(sign, string, bool) field List field List() constant Chr() unsigned Integer unsigned Integer(number) unsigned Number(unsigned Real) unsigned Integer unsigned Integer(number) uses Units Part() identifier List identifier List() type Definition Part() type Definition1 type Definition() type Definition() identifier identifier(identifier) type Definition() type type() type Definition() function Type function Type() type Definition() procedure Type procedure Type() function Type() formal Parameter List formal Parameter List() function Type() type Identifier type Identifier(char, boolean, integer, real, string) formal Parameter List() formal Parameter Section2 formal Parameter Section() formal Parameter Section() parameter Group4 parameter Group() parameter Group() identifier List identifier List() parameter Group() type Identifier type Identifier(char, boolean, integer, real, string) type Identifier(char, boolean, integer, real, string) identifier identifier(identifier) procedure Type() formal Parameter List formal Parameter List() type() simple Type simple Type() type() structured Type structured Type() type() pointer Type pointer Type() pointer Type() type Identifier type Identifier(char, boolean, integer, real, string) simple Type() scalar Type scalar Type() simple Type() subrange Type subrange Type() simple Type() type Identifier type Identifier(char, boolean, integer, real, string) simple Type() stringtype stringtype() scalar Type() identifier List identifier List() subrange Type() constant2 constant(sign, string, bool) structured Type() unpacked Structured Type1 unpacked Structured Type() unpacked Structured Type() record Type record Type() stringtype() identifier identifier(identifier) stringtype() unsigned Number unsigned Number(unsigned Real) record Type() field List field List() field List() fixed Part fixed Part() field List() variant Part1 variant Part() fixed Part() record Section1 record Section() record Section() identifier List identifier List() record Section() type type() variant Part() tag tag() variant Part() variant1 variant() tag() identifier identifier(identifier) tag() type Identifier1 type Identifier(char, boolean, integer, real, string) variant() const List() constant1 constant(sign, string, bool) variable Declaration Part() variable Declaration1 variable Declaration() variable Declaration() identifier List identifier List() variable Declaration() type type() variable Declaration() expression expression(relationaloperator) procedure And Function Declaration Part() procedure Or Function Declaration procedure Or Function Declaration() procedure Or Function Declaration() procedure Declaration procedure Declaration() procedure Or Function Declaration() function Declaration function Declaration() procedure Declaration() identifier identifier(identifier) procedure Declaration() formal Parameter List formal Parameter List() procedure Declaration() block block() function Declaration() identifier identifier(identifier) function Declaration() formal Parameter List formal Parameter List() function Declaration() type Identifier type Identifier(char, boolean, integer, real, string) function Declaration() block block() statement() unlabelled Statement unlabelled Statement() unlabelled Statement() simple Statement simple Statement() unlabelled Statement() structured Statement structured Statement() unlabelled Statement() identifier identifier(identifier) unlabelled Statement() parameter List parameter List() simple Statement() goto Statement goto Statement() simple Statement() assignment Statement assignment Statement() assignment Statement() variable variable() assignment Statement() expression expression(relationaloperator) variable() identifier identifier(identifier) expression(relationaloperator) simple Expression simple Expression(additiveoperator) simple Expression(additiveoperator) term term(multiplicativeoperator) term(multiplicativeoperator) signed Factor signed Factor() signed Factor() factor factor(bool) factor(bool) expression expression(relationaloperator) factor(bool) unsigned Constant unsigned Constant(string literal) factor(bool) function Designator function Designator() factor(bool) variable variable() unsigned Constant(string literal) unsigned Number unsigned Number(unsigned Real) unsigned Constant(string literal) constant Chr constant Chr() function Designator() identifier identifier(identifier) function Designator() parameter List parameter List() parameter List() actual Parameter() parameter List() actual Parameter() expression expression(relationaloperator) goto Statement() label label() structured Statement() compound Statement compound Statement() structured Statement() conditional Statement conditional Statement() compound Statement() statements statements() statements() statement statement() conditional Statement() case Statement case Statement() case Statement() expression expression(relationaloperator) case Statement() case List Element1 case List Element() case Statement() statements statements() case List Element() const List const List() case List Element() statement statement()
Label: graphicaleditor, Text: D Diagram(synchronized, is In Layouting Mode, header Height) Drag And Drop Target() D Diagram(synchronized, is In Layouting Mode, header Height) hidden Elements D Diagram Element(visible, tooltip Text) D Diagram(synchronized, is In Layouting Mode, header Height) description Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) D Diagram(synchronized, is In Layouting Mode, header Height) edges D Edge(size, routing Style, is Fold, is Mock Edge, arrange Constraints, begin Label, end Label) D Diagram(synchronized, is In Layouting Mode, header Height) nodes D Node(width, height, label Position, resize Kind) D Diagram(synchronized, is In Layouting Mode, header Height) node List Elements D Node List Element() D Diagram(synchronized, is In Layouting Mode, header Height) containers D Diagram Element Container(width, height) D Diagram(synchronized, is In Layouting Mode, header Height) current Concern Concern Description() D Diagram(synchronized, is In Layouting Mode, header Height) all Filters Filter Description() D Diagram(synchronized, is In Layouting Mode, header Height) activate Behaviors Behavior Tool(domain Class) D Diagram(synchronized, is In Layouting Mode, header Height) filter Variable History Filter Variable History() D Diagram(synchronized, is In Layouting Mode, header Height) activated Layers Layer(icon) D Semantic Diagram() D Diagram(synchronized, is In Layouting Mode, header Height) D Diagram Element(visible, tooltip Text) parent Layers Layer(icon) D Diagram Element(visible, tooltip Text) diagram Element Mapping Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) D Diagram Element(visible, tooltip Text) graphical Filters Graphical Filter() Graphical Filter() Hide Filter() Graphical Filter() Hide Label Filter() Graphical Filter() Folding Point Filter() Graphical Filter() Folding Filter() Graphical Filter() Applied Composite Filters() Graphical Filter() Applied Composite Filters() composite Filter Descriptions Composite Filter Description() Absolute Bounds Filter(x, y, height, width) Graphical Filter() Abstract D Node(arrange Constraints) D Diagram Element(visible, tooltip Text) Abstract D Node(arrange Constraints) owned Bordered Nodes D Node(width, height, label Position, resize Kind) D Node(width, height, label Position, resize Kind) Abstract D Node(arrange Constraints) D Node(width, height, label Position, resize Kind) Edge Target() D Node(width, height, label Position, resize Kind) Drag And Drop Target() D Node(width, height, label Position, resize Kind) owned Style Node Style(label Position, hide Label By Default) D Node(width, height, label Position, resize Kind) candidates Mapping Node Mapping() D Diagram Element Container(width, height) Abstract D Node(arrange Constraints) D Diagram Element Container(width, height) Edge Target() D Diagram Element Container(width, height) Drag And Drop Target() D Diagram Element Container(width, height) nodes D Node(width, height, label Position, resize Kind) D Diagram Element Container(width, height) elements D Diagram Element(visible, tooltip Text) D Diagram Element Container(width, height) owned Style Container Style() D Diagram Element Container(width, height) candidates Mapping Container Mapping(children Presentation) D Node Container(children Presentation) D Diagram Element Container(width, height) D Node Container(children Presentation) owned Diagram Elements D Diagram Element(visible, tooltip Text) Vertical Stack() D Node List(line Width) D Diagram Element Container(width, height) D Node List(line Width) owned Elements D Node List Element() D Node List Element() Abstract D Node(arrange Constraints) D Node List Element() owned Style Node Style(label Position, hide Label By Default) D Node List Element() candidates Mapping Node Mapping() D Edge(size, routing Style, is Fold, is Mock Edge, arrange Constraints, begin Label, end Label) D Diagram Element(visible, tooltip Text) D Edge(size, routing Style, is Fold, is Mock Edge, arrange Constraints, begin Label, end Label) path Edge Target() D Edge(size, routing Style, is Fold, is Mock Edge, arrange Constraints, begin Label, end Label) owned Style Edge Style(line Style, source Arrow, target Arrow, folding Style, size, routing Style) D Edge(size, routing Style, is Fold, is Mock Edge, arrange Constraints, begin Label, end Label) actual Mapping I Edge Mapping() node() Node Style(label Position, hide Label By Default) Bordered Style(border Size, border Size Computation Expression) Dot(stroke Size Computation Expression) Node Style(label Position, hide Label By Default) Gauge Section(min, max, value, label) Container Style() Bordered Style(border Size, border Size Computation Expression) Flat Container Style(background Style) Container Style() Shape Container Style(shape) Container Style() parallelogram() Gradient Top To Bottom() Square(width, height) Node Style(label Position, hide Label By Default) Ellipse(horizontal Diameter, vertical Diameter) Node Style(label Position, hide Label By Default) Lozenge(width, height) Node Style(label Position, hide Label By Default) Bundled Image(shape) Node Style(label Position, hide Label By Default) Workspace Image(workspace Path) Node Style(label Position, hide Label By Default) Workspace Image(workspace Path) Container Style() Custom Style(id) Node Style(label Position, hide Label By Default) ring() Edge Target() incoming Edges D Edge(size, routing Style, is Fold, is Mock Edge, arrange Constraints, begin Label, end Label) Edge Style(line Style, source Arrow, target Arrow, folding Style, size, routing Style) begin Label Style Begin Label Style() Edge Style(line Style, source Arrow, target Arrow, folding Style, size, routing Style) center Label Style Center Label Style() Edge Style(line Style, source Arrow, target Arrow, folding Style, size, routing Style) end Label Style End Label Style() dash dot() Input Arrow With Fill Diamond() tree() Gauge Composite Style(alignment) Node Style(label Position, hide Label By Default) Gauge Composite Style(alignment) sections Gauge Section(min, max, value, label) SQUARE() Bordered Style(border Size, border Size Computation Expression) Note() Node Style(label Position, hide Label By Default) Filter Variable History() owned Values Filter Variable Value() Filter Variable Value() variable Definition Filter Variable(name) EAST WEST() KEEP RATIO() Collapse Filter(width, height) Graphical Filter() Indirectly Collapse Filter() Collapse Filter(width, height) Begin Label Style() Center Label Style() End Label Style() Bracket Edge Style() Edge Style(line Style, source Arrow, target Arrow, folding Style, size, routing Style) Computed Style Description Registry() cache Diagram Element Mapping2Model Element() Diagram Element Mapping2Model Element() key Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) Diagram Element Mapping2Model Element() value Model Element2View Variable() Model Element2View Variable() value View Variable2Container Variable() View Variable2Container Variable() value Container Variable2Style Description() Container Variable2Style Description() Drag And Drop Target() Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) Drag And Drop Target Description() Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) filters Filter Description() Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) edge Mappings Edge Mapping(target Finder Expression, source Finder Expression, target Expression, domain Class, use Domain Element, path Expression) Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) node Mappings Node Mapping() Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) container Mappings Container Mapping(children Presentation) Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) concerns Concern Set() Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) default Concern Concern Description() Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) layout Layout() Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) all Layers Layer(icon) Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) additional Layers Additional Layer(active By Default, optional) Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) edge Mapping Imports Edge Mapping Import(inherits Ancestor Filters) Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) reused Mappings Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) tool Section Tool Section(icon) Diagram Import Description() imported Diagram Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) Diagram Extension Description() layers Additional Layer(active By Default, optional) Diagram Extension Description() concerns Concern Set() Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) deletion Description Delete Element Description() Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) label Direct Edit Direct Edit Label(input Label Expression) Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) double Click Description Double Click Description() Abstract Node Mapping(domain Class) Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) Abstract Node Mapping(domain Class) reused Bordered Node Mappings Node Mapping() Node Mapping() Abstract Node Mapping(domain Class) Node Mapping() Drag And Drop Target Description() Node Mapping() style Node Style Description(size Computation Expression, label Position, hide Label By Default, resize Kind) Node Mapping() conditionnal Styles Conditional Node Style Description() Container Mapping(children Presentation) Abstract Node Mapping(domain Class) Container Mapping(children Presentation) Drag And Drop Target Description() Container Mapping(children Presentation) reused Node Mappings Node Mapping() Container Mapping(children Presentation) style Container Style Description(rounded Corner) Container Mapping(children Presentation) conditionnal Styles Conditional Container Style Description() Node Mapping Import() imported Mapping Node Mapping() Container Mapping Import() imported Mapping Container Mapping(children Presentation) Edge Mapping(target Finder Expression, source Finder Expression, target Expression, domain Class, use Domain Element, path Expression) target Mapping Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) Edge Mapping(target Finder Expression, source Finder Expression, target Expression, domain Class, use Domain Element, path Expression) I Edge Mapping() Edge Mapping(target Finder Expression, source Finder Expression, target Expression, domain Class, use Domain Element, path Expression) style Edge Style Description(line Style, source Arrow, target Arrow, size Computation Expression, routing Style, folding Style) Edge Mapping(target Finder Expression, source Finder Expression, target Expression, domain Class, use Domain Element, path Expression) conditionnal Styles Conditional Edge Style Description() Edge Mapping(target Finder Expression, source Finder Expression, target Expression, domain Class, use Domain Element, path Expression) reconnections Reconnect Edge Description(reconnection Kind) Edge Mapping(target Finder Expression, source Finder Expression, target Expression, domain Class, use Domain Element, path Expression) path Node Mapping Abstract Node Mapping(domain Class) I Edge Mapping() Edge Mapping Import(inherits Ancestor Filters) imported Mapping I Edge Mapping() Edge Mapping Import(inherits Ancestor Filters) conditionnal Styles Conditional Edge Style Description() Conditional Node Style Description() style Node Style Description(size Computation Expression, label Position, hide Label By Default, resize Kind) Conditional Edge Style Description() style Edge Style Description(line Style, source Arrow, target Arrow, size Computation Expression, routing Style, folding Style) Conditional Container Style Description() style Container Style Description(rounded Corner) TARGET() Layout() Ordered Tree Layout(children Expression) Layout() Ordered Tree Layout(children Expression) node Mapping Abstract Node Mapping(domain Class) Composite Layout(padding, direction) Layout() Bottom To Top() Mapping Based Decoration() mappings Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) Layer(icon) node Mappings Node Mapping() Layer(icon) all Edge Mappings Edge Mapping(target Finder Expression, source Finder Expression, target Expression, domain Class, use Domain Element, path Expression) Layer(icon) edge Mapping Imports Edge Mapping Import(inherits Ancestor Filters) Layer(icon) container Mappings Container Mapping(children Presentation) Layer(icon) reused Mappings Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) Layer(icon) tool Sections Tool Section(icon) Additional Layer(active By Default, optional) Layer(icon) Drag And Drop Target Description() drop Descriptions Container Drop Description(drag Source, move Edges) Bordered Style Description(border Size Computation Expression) Node Style Description(size Computation Expression, label Position, hide Label By Default, resize Kind) Bordered Style Description(border Size Computation Expression) Custom Style Description(id) Node Style Description(size Computation Expression, label Position, hide Label By Default, resize Kind) Square Description(width, height) Node Style Description(size Computation Expression, label Position, hide Label By Default, resize Kind) Lozenge Node Description(width Computation Expression, height Computation Expression) Node Style Description(size Computation Expression, label Position, hide Label By Default, resize Kind) Ellipse Node Description(horizontal Diameter Computation Expression, vertical Diameter Computation Expression) Node Style Description(size Computation Expression, label Position, hide Label By Default, resize Kind) Bundled Image Description(shape) Node Style Description(size Computation Expression, label Position, hide Label By Default, resize Kind) Note Description() Node Style Description(size Computation Expression, label Position, hide Label By Default, resize Kind) Dot Description(stroke Size Computation Expression) Node Style Description(size Computation Expression, label Position, hide Label By Default, resize Kind) Gauge Composite Style Description(alignment) Node Style Description(size Computation Expression, label Position, hide Label By Default, resize Kind) Gauge Composite Style Description(alignment) sections Gauge Section Description(min Value Expression, max Value Expression, value Expression, label) Gauge Section Description(min Value Expression, max Value Expression, value Expression, label) Size Computation Container Style Description(width Computation Expression, height Computation Expression) Rounded Corner Style Description(arc Width, arc Height) Container Style Description(rounded Corner) Rounded Corner Style Description(arc Width, arc Height) Container Style Description(rounded Corner) Bordered Style Description(border Size Computation Expression) Flat Container Style Description(background Style) Container Style Description(rounded Corner) Flat Container Style Description(background Style) Size Computation Container Style Description(width Computation Expression, height Computation Expression) Shape Container Style Description(shape) Container Style Description(rounded Corner) Shape Container Style Description(shape) Size Computation Container Style Description(width Computation Expression, height Computation Expression) Workspace Image Description(workspace Path) Node Style Description(size Computation Expression, label Position, hide Label By Default, resize Kind) Workspace Image Description(workspace Path) Container Style Description(rounded Corner) Edge Style Description(line Style, source Arrow, target Arrow, size Computation Expression, routing Style, folding Style) begin Label Style Description Begin Label Style Description() Edge Style Description(line Style, source Arrow, target Arrow, size Computation Expression, routing Style, folding Style) center Label Style Description Center Label Style Description() Edge Style Description(line Style, source Arrow, target Arrow, size Computation Expression, routing Style, folding Style) end Label Style Description End Label Style Description() Begin Label Style Description() Center Label Style Description() End Label Style Description() Bracket Edge Style Description() Edge Style Description(line Style, source Arrow, target Arrow, size Computation Expression, routing Style, folding Style) Tool Section(icon) group Extensions Tool Group Extension() Tool Group() Tool Group Extension() group Tool Group() Node Creation Description(icon Path) node Mappings Node Mapping() Node Creation Description(icon Path) variable Node Creation Variable() Node Creation Description(icon Path) extra Mappings Abstract Node Mapping(domain Class) Edge Creation Description(icon Path, connection Start Precondition) edge Mappings Edge Mapping(target Finder Expression, source Finder Expression, target Expression, domain Class, use Domain Element, path Expression) Edge Creation Description(icon Path, connection Start Precondition) source Variable Source Edge Creation Variable() Edge Creation Description(icon Path, connection Start Precondition) target Variable Target Edge Creation Variable() Edge Creation Description(icon Path, connection Start Precondition) source View Variable Source Edge View Creation Variable() Edge Creation Description(icon Path, connection Start Precondition) target View Variable Target Edge View Creation Variable() Edge Creation Description(icon Path, connection Start Precondition) extra Target Mappings Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) Container Creation Description(icon Path) container Mappings Container Mapping(children Presentation) Container Creation Description(icon Path) variable Node Creation Variable() Container Creation Description(icon Path) extra Mappings Abstract Node Mapping(domain Class) Delete Element Description() hook Delete Hook(id) Double Click Description() mappings Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) Double Click Description() element View Element Double Click Variable() Delete Hook(id) parameters Delete Hook Parameter(name, value) Delete Hook Parameter(name, value) Reconnect Edge Description(reconnection Kind) source Source Edge Creation Variable() Reconnect Edge Description(reconnection Kind) target Target Edge Creation Variable() Reconnect Edge Description(reconnection Kind) source View Source Edge View Creation Variable() Reconnect Edge Description(reconnection Kind) target View Target Edge View Creation Variable() RECONNECT BOTH() Request Description(type) Direct Edit Label(input Label Expression) Behavior Tool(domain Class) Source Edge Creation Variable() Source Edge View Creation Variable() Target Edge Creation Variable() Target Edge View Creation Variable() Element Double Click Variable() Node Creation Variable() Create View(container View Expression, variable Name) mapping Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) Create Edge View(source Expression, target Expression) Create View(container View Expression, variable Name) Navigation(create If Not Existent) diagram Description Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) Diagram Creation Description() diagram Description Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) Diagram Navigation Description() diagram Description Diagram Description(domain Class, precondition Expression, root Expression, enable Popup Bars) Container Drop Description(drag Source, move Edges) mappings Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) Filter Description() Filter(filter Kind) Mapping Filter(semantic Condition Expression, view Condition Expression) Filter(filter Kind) Mapping Filter(semantic Condition Expression, view Condition Expression) mappings Diagram Element Mapping(precondition Expression, semantic Candidates Expression, create Elements, semantic Elements, synchronization Lock) Composite Filter Description() Filter Description() Composite Filter Description() filters Filter(filter Kind) Variable Filter(semantic Condition Expression) Filter(filter Kind) Variable Filter(semantic Condition Expression) owned Variables Filter Variable(name) Filter Variable(name) COLLAPSE() Concern Set() owned Concern Descriptions Concern Description() Concern Description() filters Filter Description() Concern Description() behaviors Behavior Tool(domain Class)
Label: statemachine, Text: Action Type(mixed, any, accept Propagated Events, async, class, config Type, expression, name, ref Name) Assignment Type(actor Id, expression, pooled Actors) Delegation(mixed, any, class, config Type) off() Boolean Type Object() Cancel Timer Type(name) Condition Type(mixed, group, any, expression) configuration Property() Config Type Object() Config Type Type Object() Config Type Type Object1() Create Timer Type(duedate, name, repeat, transition) action Action Type(mixed, any, accept Propagated Events, async, class, config Type, expression, name, ref Name) Create Timer Type(duedate, name, repeat, transition) script Script Type(mixed, any, accept Propagated Events, name) Decision Type(group, async, expression, name) handler Delegation(mixed, any, class, config Type) Decision Type(group, async, expression, name) event Event Type(action Elements, type) Decision Type(group, async, expression, name) exception Handler Exception Handler Type(group, exception Class) Decision Type(group, async, expression, name) transition Transition Type1(group, name, to) Delegation(mixed, any, class, config Type) Document Root(mixed) action Action Type(mixed, any, accept Propagated Events, async, class, config Type, expression, name, ref Name) Document Root(mixed) assignment Assignment Type(actor Id, expression, pooled Actors) Document Root(mixed) cancel Timer Cancel Timer Type(name) Document Root(mixed) controller Delegation(mixed, any, class, config Type) Document Root(mixed) create Timer Create Timer Type(duedate, name, repeat, transition) Document Root(mixed) decision Decision Type(group, async, expression, name) Document Root(mixed) end State End State Type(group, name) Document Root(mixed) event Event Type(action Elements, type) Document Root(mixed) exception Handler Exception Handler Type(group, exception Class) Document Root(mixed) fork Fork Type(group, async, name) Document Root(mixed) join Join Type(node Content Elements, async, name) Document Root(mixed) node Node Type(node Content Elements, async, name) Document Root(mixed) process Definition Process Definition Type(group, name) Document Root(mixed) process State Process State Type(group, async, name) Document Root(mixed) script Script Type(mixed, any, accept Propagated Events, name) Document Root(mixed) start State Start State Type(group, name) Document Root(mixed) state State Type(node Content Elements, async, name) Document Root(mixed) super State Super State Type(group, async, name) Document Root(mixed) swimlane Swimlane Type(name) Document Root(mixed) task Task Type(group, blocking, description, duedate, name, priority, signalling, swimlane) Document Root(mixed) task Node Task Node Type(group, async, create Tasks, end Tasks, name, signal) Document Root(mixed) timer Timer Type(duedate, name, repeat, transition) Document Root(mixed) transition Transition Type(group, name, to) Document Root(mixed) variable Variable Type(any, access, mapped Name, name) End State Type(group, name) event Event Type(action Elements, type) End State Type(group, name) exception Handler Exception Handler Type(group, exception Class) Event Type(action Elements, type) action Action Type(mixed, any, accept Propagated Events, async, class, config Type, expression, name, ref Name) Event Type(action Elements, type) script Script Type(mixed, any, accept Propagated Events, name) Event Type(action Elements, type) create Timer Create Timer Type(duedate, name, repeat, transition) Event Type(action Elements, type) cancel Timer Cancel Timer Type(name) Event Type(action Elements, type) type Type Type() Exception Handler Type(group, exception Class) action Action Type(mixed, any, accept Propagated Events, async, class, config Type, expression, name, ref Name) Exception Handler Type(group, exception Class) script Script Type(mixed, any, accept Propagated Events, name) Fork Type(group, async, name) script Script Type(mixed, any, accept Propagated Events, name) Fork Type(group, async, name) event Event Type(action Elements, type) Fork Type(group, async, name) exception Handler Exception Handler Type(group, exception Class) Fork Type(group, async, name) timer Timer Type(duedate, name, repeat, transition) Fork Type(group, async, name) transition Transition Type(group, name, to) Join Type(node Content Elements, async, name) event Event Type(action Elements, type) Join Type(node Content Elements, async, name) exception Handler Exception Handler Type(group, exception Class) Join Type(node Content Elements, async, name) timer Timer Type(duedate, name, repeat, transition) Join Type(node Content Elements, async, name) transition Transition Type(group, name, to) Node Type(node Content Elements, async, name) action Action Type(mixed, any, accept Propagated Events, async, class, config Type, expression, name, ref Name) Node Type(node Content Elements, async, name) script Script Type(mixed, any, accept Propagated Events, name) Node Type(node Content Elements, async, name) create Timer Create Timer Type(duedate, name, repeat, transition) Node Type(node Content Elements, async, name) cancel Timer Cancel Timer Type(name) Node Type(node Content Elements, async, name) event Event Type(action Elements, type) Node Type(node Content Elements, async, name) exception Handler Exception Handler Type(group, exception Class) Node Type(node Content Elements, async, name) timer Timer Type(duedate, name, repeat, transition) Node Type(node Content Elements, async, name) transition Transition Type(group, name, to) Priority Type() lowest() Priority Type Member0Object() Priority Type Member1() Priority Type Member1Object() Process Definition Type(group, name) swimlane Swimlane Type(name) Process Definition Type(group, name) start State Start State Type(group, name) Process Definition Type(group, name) node Node Type(node Content Elements, async, name) Process Definition Type(group, name) state State Type(node Content Elements, async, name) Process Definition Type(group, name) task Node Task Node Type(group, async, create Tasks, end Tasks, name, signal) Process Definition Type(group, name) super State Super State Type(group, async, name) Process Definition Type(group, name) process State Process State Type(group, async, name) Process Definition Type(group, name) fork Fork Type(group, async, name) Process Definition Type(group, name) join Join Type(node Content Elements, async, name) Process Definition Type(group, name) decision Decision Type(group, async, expression, name) Process Definition Type(group, name) end State End State Type(group, name) Process Definition Type(group, name) action Action Type(mixed, any, accept Propagated Events, async, class, config Type, expression, name, ref Name) Process Definition Type(group, name) script Script Type(mixed, any, accept Propagated Events, name) Process Definition Type(group, name) create Timer Create Timer Type(duedate, name, repeat, transition) Process Definition Type(group, name) cancel Timer Cancel Timer Type(name) Process Definition Type(group, name) event Event Type(action Elements, type) Process Definition Type(group, name) exception Handler Exception Handler Type(group, exception Class) Process Definition Type(group, name) task Task Type(group, blocking, description, duedate, name, priority, signalling, swimlane) Process State Type(group, async, name) sub Process Sub Process Type(name, version) Process State Type(group, async, name) variable Variable Type(any, access, mapped Name, name) Process State Type(group, async, name) event Event Type(action Elements, type) Process State Type(group, async, name) exception Handler Exception Handler Type(group, exception Class) Process State Type(group, async, name) timer Timer Type(duedate, name, repeat, transition) Process State Type(group, async, name) transition Transition Type(group, name, to) Script Type(mixed, any, accept Propagated Events, name) last Wait() Signal Type Object() Start State Type(group, name) task Task Type(group, blocking, description, duedate, name, priority, signalling, swimlane) Start State Type(group, name) transition Transition Type(group, name, to) Start State Type(group, name) event Event Type(action Elements, type) Start State Type(group, name) exception Handler Exception Handler Type(group, exception Class) State Type(node Content Elements, async, name) event Event Type(action Elements, type) State Type(node Content Elements, async, name) exception Handler Exception Handler Type(group, exception Class) State Type(node Content Elements, async, name) timer Timer Type(duedate, name, repeat, transition) State Type(node Content Elements, async, name) transition Transition Type(group, name, to) Sub Process Type(name, version) Super State Type(group, async, name) node Node Type(node Content Elements, async, name) Super State Type(group, async, name) state State Type(node Content Elements, async, name) Super State Type(group, async, name) task Node Task Node Type(group, async, create Tasks, end Tasks, name, signal) Super State Type(group, async, name) process State Process State Type(group, async, name) Super State Type(group, async, name) fork Fork Type(group, async, name) Super State Type(group, async, name) join Join Type(node Content Elements, async, name) Super State Type(group, async, name) decision Decision Type(group, async, expression, name) Super State Type(group, async, name) end State End State Type(group, name) Super State Type(group, async, name) event Event Type(action Elements, type) Super State Type(group, async, name) exception Handler Exception Handler Type(group, exception Class) Super State Type(group, async, name) timer Timer Type(duedate, name, repeat, transition) Super State Type(group, async, name) transition Transition Type(group, name, to) Swimlane Type(name) assignment Assignment Type(actor Id, expression, pooled Actors) Task Node Type(group, async, create Tasks, end Tasks, name, signal) task Task Type(group, blocking, description, duedate, name, priority, signalling, swimlane) Task Node Type(group, async, create Tasks, end Tasks, name, signal) event Event Type(action Elements, type) Task Node Type(group, async, create Tasks, end Tasks, name, signal) exception Handler Exception Handler Type(group, exception Class) Task Node Type(group, async, create Tasks, end Tasks, name, signal) timer Timer Type(duedate, name, repeat, transition) Task Node Type(group, async, create Tasks, end Tasks, name, signal) transition Transition Type(group, name, to) Task Type(group, blocking, description, duedate, name, priority, signalling, swimlane) assignment Assignment Type(actor Id, expression, pooled Actors) Task Type(group, blocking, description, duedate, name, priority, signalling, swimlane) controller Delegation(mixed, any, class, config Type) Task Type(group, blocking, description, duedate, name, priority, signalling, swimlane) event Event Type(action Elements, type) Task Type(group, blocking, description, duedate, name, priority, signalling, swimlane) timer Timer Type(duedate, name, repeat, transition) Task Type(group, blocking, description, duedate, name, priority, signalling, swimlane) priority Priority Type() Timer Type(duedate, name, repeat, transition) action Action Type(mixed, any, accept Propagated Events, async, class, config Type, expression, name, ref Name) Timer Type(duedate, name, repeat, transition) script Script Type(mixed, any, accept Propagated Events, name) Transition Type(group, name, to) action Action Type(mixed, any, accept Propagated Events, async, class, config Type, expression, name, ref Name) Transition Type(group, name, to) script Script Type(mixed, any, accept Propagated Events, name) Transition Type(group, name, to) create Timer Create Timer Type(duedate, name, repeat, transition) Transition Type(group, name, to) cancel Timer Cancel Timer Type(name) Transition Type(group, name, to) exception Handler Exception Handler Type(group, exception Class) Transition Type1(group, name, to) condition Condition Type(mixed, group, any, expression) Transition Type1(group, name, to) action Action Type(mixed, any, accept Propagated Events, async, class, config Type, expression, name, ref Name) Transition Type1(group, name, to) script Script Type(mixed, any, accept Propagated Events, name) Transition Type1(group, name, to) create Timer Create Timer Type(duedate, name, repeat, transition) Transition Type1(group, name, to) cancel Timer Cancel Timer Type(name) Transition Type1(group, name, to) exception Handler Exception Handler Type(group, exception Class) Type Type() Type Type Member0() subprocess End() Type Type Member1Object() Variable Type(any, access, mapped Name, name)
Label: statemachine, Text: Named Element() datamodel Data Model(schema) Named Element() transition Transition(event, cond, anchor) State(id) Named Element() State(id) onentry On Entry() State(id) onexit On Exit() State(id) initial Initial State() State(id) final Final State(id) State(id) parallel Parallel(id) State(id) history History State(id, type) State(id) anchor Anchor(type, snapshot) State(id) invoke Invoke(type, typeexpr, src, srcexpr, id, idlocation, namelist, autoforward) Transition(event, cond, anchor) source Named Element() Assign(location, dataid, expr) Service Template(name, xmlns, version, profile, exmode) transition Transition(event, cond, anchor) Service Template(name, xmlns, version, profile, exmode) state State(id) Service Template(name, xmlns, version, profile, exmode) initial Initial State() Service Template(name, xmlns, version, profile, exmode) final Final State(id) Service Template(name, xmlns, version, profile, exmode) parallel Parallel(id) Service Template(name, xmlns, version, profile, exmode) datamodel Data Model(schema) Service Template(name, xmlns, version, profile, exmode) script Script() On Entry() script Script() On Entry() assign Assign(location, dataid, expr) On Entry() cancel Cancel(sendid, sendidexpr) On Entry() if If(cond) On Entry() log Log(label, expr, level) On Entry() param Param(name, expr) On Entry() raise Raise(event) On Entry() send Send(event, eventexpr, target, targetexpr, type, typeexpr, id, idlocation, delay, delayexpr, namelist, hints, hintsexpr) On Entry() validate Validate(location, schema) On Exit() script Script() On Exit() assign Assign(location, dataid, expr) On Exit() cancel Cancel(sendid, sendidexpr) On Exit() if If(cond) On Exit() log Log(label, expr, level) On Exit() param Param(name, expr) On Exit() raise Raise(event) On Exit() send Send(event, eventexpr, target, targetexpr, type, typeexpr, id, idlocation, delay, delayexpr, namelist, hints, hintsexpr) On Exit() validate Validate(location, schema) Initial State() Named Element() Final State(id) Named Element() Final State(id) onentry On Entry() Final State(id) onexit On Exit() Final State(id) donedata Donedata() Parallel(id) Named Element() Parallel(id) onentry On Entry() Parallel(id) onexit On Exit() Parallel(id) state State(id) Parallel(id) history History State(id, type) Parallel(id) anchor Anchor(type, snapshot) History State(id, type) Named Element() Raise(event) If(cond) elseif Else If(cond) If(cond) else Else() If(cond) assign Assign(location, dataid, expr) If(cond) cancel Cancel(sendid, sendidexpr) If(cond) log Log(label, expr, level) If(cond) param Param(name, expr) If(cond) raise Raise(event) If(cond) send Send(event, eventexpr, target, targetexpr, type, typeexpr, id, idlocation, delay, delayexpr, namelist, hints, hintsexpr) If(cond) validate Validate(location, schema) Else If(cond) Else() Log(label, expr, level) Data Model(schema) data Data(id, src, expr) Data(id, src, expr) content Content() Validate(location, schema) Param(name, expr) Script() Anchor(type, snapshot) Send(event, eventexpr, target, targetexpr, type, typeexpr, id, idlocation, delay, delayexpr, namelist, hints, hintsexpr) param Param(name, expr) Send(event, eventexpr, target, targetexpr, type, typeexpr, id, idlocation, delay, delayexpr, namelist, hints, hintsexpr) content Content() Cancel(sendid, sendidexpr) Content() Donedata() content Content() Donedata() param Param(name, expr) Invoke(type, typeexpr, src, srcexpr, id, idlocation, namelist, autoforward) content Content() Invoke(type, typeexpr, src, srcexpr, id, idlocation, namelist, autoforward) param Param(name, expr) Invoke(type, typeexpr, src, srcexpr, id, idlocation, namelist, autoforward) finalize Finalize() Finalize() assign Assign(location, dataid, expr) Finalize() cancel Cancel(sendid, sendidexpr) Finalize() if If(cond) Finalize() log Log(label, expr, level) Finalize() param Param(name, expr) Finalize() raise Raise(event) Finalize() send Send(event, eventexpr, target, targetexpr, type, typeexpr, id, idlocation, delay, delayexpr, namelist, hints, hintsexpr) Finalize() validate Validate(location, schema)
Label: simple-pl, Text: Wh() elements Program() Program() functions Function(name) Function(name) definition Definition() Definition() input Input(vars) Definition() commands Commands() Definition() output Output(vars) Input(vars) Output(vars) Commands() commands Command() Command() If() expr Expr() If() commands2 Commands() Nop(nop) Affect(vars) exprs Expr() For() expr Expr() For() cmds Commands() While() expr Expr() While() cmds Commands() Expr() Expr Simple(str, var Simple, sym) Expr() Expr And() arg2 Expr() Expr And() arg1 Expr Simple(str, var Simple, sym) Expr Or() arg2 Expr() Expr Or() arg1 Expr Simple(str, var Simple, sym) Expr Cons() arg Expr() Expr List() arg Expr() Expr Hd() arg Expr() Expr Tl() arg Expr() Expr Sym(arg1) arg2 Expr() Expr Not() Expr() Expr Not() arg1 Expr Eq() Expr Eq() Expr() Expr Eq() arg2 Expr Simple(str, var Simple, sym)
Label: petrinet, Text: PT Marking(text) Annotation() PT Marking(text) text Natural() PT Marking(text) container Place Place() PT Arc Annotation(text) Annotation() PT Arc Annotation(text) text Positive Integer() PT Arc Annotation(text) container Arc Arc() Positive Integer() Natural() Petri Net Doc(xmlns) nets Petri Net(id, type) Petri Net(id, type) pages Page() Petri Net(id, type) name Name(text) Petri Net(id, type) toolspecifics Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) Petri Net(id, type) container Petri Net Doc Petri Net Doc(xmlns) HLPN() Page() objects Pn Object(id) Page() container Petri Net Petri Net(id, type) Page() nodegraphics Node Graphics() Pn Object(id) name Name(text) Pn Object(id) toolspecifics Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) Pn Object(id) container Page Page() Name(text) Annotation() Name(text) container Name Petri Net Petri Net(id, type) Name(text) container Name Pn Object Pn Object(id) Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) formatted XML Buffer Long String() Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) tool Info Grammar URI URI() Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) container Petri Net Petri Net(id, type) Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) container Pn Object Pn Object(id) Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) container Label Label() Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) tool Info Model Any Object() Label() toolspecifics Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI) Node Graphics() Graphics() Node Graphics() position Position() Node Graphics() dimension Dimension() Node Graphics() fill Fill(color, gradientcolor, gradientrotation, image) Node Graphics() line Line(color, shape, width, style) Node Graphics() container Node Node() Node Graphics() container Page Page() Graphics() Coordinate(x, y) Position() Coordinate(x, y) Position() container Arc Graphics Arc Graphics() Position() container P Node Graphics Node Graphics() Offset() Coordinate(x, y) Offset() container Annotation Graphics Annotation Graphics() Dimension() Coordinate(x, y) Dimension() container D Node Graphics Node Graphics() Annotation Graphics() Graphics() Annotation Graphics() offset Offset() Annotation Graphics() fill Fill(color, gradientcolor, gradientrotation, image) Annotation Graphics() line Line(color, shape, width, style) Annotation Graphics() font Font(align, decoration, family, rotation, size, style, weight) Annotation Graphics() container Annotation Annotation() Fill(color, gradientcolor, gradientrotation, image) image URI() Fill(color, gradientcolor, gradientrotation, image) container Node Graphics Node Graphics() Fill(color, gradientcolor, gradientrotation, image) container Annotation Graphics Annotation Graphics() YELLOW() DIAGONAL() Line(color, shape, width, style) container Node Graphics Node Graphics() Line(color, shape, width, style) container Arc Graphics Arc Graphics() Line(color, shape, width, style) container Annotation Graphics Annotation Graphics() CURVE() Arc Graphics() Graphics() Arc Graphics() positions Position() Arc Graphics() line Line(color, shape, width, style) Arc Graphics() container Arc Arc() Arc() Pn Object(id) Arc() target Node() Arc() arcgraphics Arc Graphics() Arc() inscription PT Arc Annotation(text) Node() Pn Object(id) Node() Out Arcs Arc() Node() nodegraphics Node Graphics() Font(align, decoration, family, rotation, size, style, weight) container Annotation Graphics Annotation Graphics() RIGHT() LINETHROUGH() TREBUCHET() XXLARGE() OBLIQUE() LIGHTER() Place Node() Node() Place Node() referencing Places Ref Place() Transition Node() Node() Transition Node() referencing Transitions Ref Transition() Place() Place Node() Place() initial Marking PT Marking(text) Ref Transition() ref Transition Node() Transition() Transition Node() Ref Place() ref Place Node() Attribute() Label() DOT() Annotation() Label() Annotation() annotationgraphics Annotation Graphics() URI() Long String() Any Object() container Tool Info Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI)
Label: education, Text: Program(code, name) semesters Semester(name, season, year) Program(code, name) specializations Specialization(name) Program(code, name) department Department(name) Semester(name, season, year) courses Semester Course(status) Specialization(name) semesters Semester(name, season, year) Course(code, name, credits) department Department(name) ELECTIVE() Semester Course(status) course Course(code, name, credits) Department(name) courses Course(code, name, credits) Department(name) programs Program(code, name) FALL()
Label: calculator, Text: Solution() variables Variable(name) Solution() expression Expression() Variable(name) value Expression() Expression() exp Plus Or Minus(operator) Plus Or Minus(operator) right Multiply Or Divide(operator) Multiply Or Divide(operator) right Primary() Primary() Plus() Plus Or Minus(operator) Minus() Plus Or Minus(operator) Multiply() Multiply Or Divide(operator) Divide() Multiply Or Divide(operator) Num(value) Primary() Variable Ref() Primary() Variable Ref() value Variable(name) Bracket() Primary() Bracket() value Expression()
Label: types, Text: Type() constraint Type Constraint(value) Feature() Typed Element() Feature() owning Type Complex Type() Operation() Feature() Operation() parameters Parameter() Property() Feature() Parameter() Typed Element() Parameter() owning Operation Operation() Typed Element() type Type() Event() Feature() Enumeration Type() Primitive Type() Enumeration Type() enumerator Enumerator(literal Value) Primitive Type() Type() Complex Type() Type() Complex Type() features Feature() Enumerator(literal Value) owning Enumeration Enumeration Type() Type Constraint(value)
Label: robots, Text: Package(name, author, author email, description, depends) node Node(name, frequency) Package(name, author, author email, description, depends) topic Topic(name) Package(name, author, author email, description, depends) message Message(name) Package(name, author, author email, description, depends) servicetype Service Type(name) Package(name, author, author email, description, depends) actionmessage Action Message(name) Node(name, frequency) publisher Publisher(name, queue size, msg) Node(name, frequency) subscriber Subscriber(name, queue size, msg) Node(name, frequency) serviceclient Service Client(name) Node(name, frequency) serviceserver Service Server(name) Node(name, frequency) actionclient Action Client(name) Node(name, frequency) actionserver Action Server(name) Node(name, frequency) state State(name) Node(name, frequency) transition Transition(name) Node(name, frequency) action Action(name) Node(name, frequency) event Event(name) Publisher(name, queue size, msg) target Topic(name) Subscriber(name, queue size, msg) source Topic(name) Topic(name) Message(name) field Field(name, type) Field(name, type) msg() Service Type(name) response Field(name, type) Service Server(name) servicetype Service Type(name) Service Client(name) servicetype Service Type(name) Action Message(name) feedback Field(name, type) Action Server(name) actionmessage Action Message(name) Action Client(name) actionmessage Action Message(name) State(name) transition Transition(name) State(name) exitaction Action(name) State(name) event Event(name) Transition(name) target State(name) Transition(name) guard Action(name) Action(name) Event(name) transition Transition(name)
Label: statemachine, Text: State Machine() declarations Declaration() State Machine() machine Variables State Machine Variable(type, name) Declaration() Transition(label, source Label, target Label, guard Label, action Label, guard Expression, action Statement) Declaration() Transition(label, source Label, target Label, guard Label, action Label, guard Expression, action Statement) to state State(label, id) State(label, id) Declaration() State(label, id) to transitions Transition(label, source Label, target Label, guard Label, action Label, guard Expression, action Statement) Action(action Label, action Statement) State Machine Variable(type, name) Normal State() State(label, id) Normal State() entry Action(action Label, action Statement) Initial State() State(label, id) Final State() State(label, id)
Label: components, Text: Abstract Component(name) content Content(class, language) Abstract Component(name) attributes Attributes(signature) Abstract Component(name) output Output(format) Abstract Component(name) controller Controller(language, descriptor) Abstract Component(name) required Interfaces Required() Abstract Component(name) provided Interfaces Provided() Interface(name, signature, contingency, cardinality, start Property) bindings Binding() Binding() to Interface(name, signature, contingency, cardinality, start Property) Content(class, language) content Parent Abstract Component(name) Content(class, language) includes Include(file) Content(class, language) ldflags Ldflag(value) Attributes(signature) attributes Attribute(name, value) Attribute(name, value) Controller(language, descriptor) Ldflag(value) Include(file) Output(format) Required() Interface(name, signature, contingency, cardinality, start Property) Provided() Interface(name, signature, contingency, cardinality, start Property) Component() Abstract Component(name)
Label: simple-pl, Text: Ast Entity(package, name) imports Import(imported Namespace) Ast Entity(package, name) annotations Ast Annotation(name) Ast Entity(package, name) actor Ast Actor() Ast Entity(package, name) unit Ast Unit() Import(imported Namespace) Ast Unit() functions Function(name) Ast Unit() procedures Ast Procedure(name) Ast Unit() variables Variable(constant, name) Variable(constant, name) dimensions Ast Expression() Variable(constant, name) annotations Ast Annotation(name) Variable(constant, name) type Ast Type() Ast Actor() state Variables Variable(constant, name) Ast Actor() outputs Ast Port(name) Ast Actor() functions Function(name) Ast Actor() procedures Ast Procedure(name) Ast Actor() initializes Ast Action() Ast Actor() local Fsms Local Fsm(name) Ast Actor() schedule Fsm Schedule Fsm() Ast Actor() schedule Reg Exp Reg Exp() Ast Actor() priorities Priority() Ast Port(name) annotations Ast Annotation(name) Ast Port(name) type Ast Type() Function(name) annotations Ast Annotation(name) Function(name) variables Variable(constant, name) Function(name) type Ast Type() Function(name) expression Ast Expression() Ast Procedure(name) annotations Ast Annotation(name) Ast Procedure(name) variables Variable(constant, name) Ast Procedure(name) statements Statement() Ast Tag(identifiers) Inequality() tags Ast Tag(identifiers) Priority() inequalities Inequality() Schedule Fsm() initial State Ast State(name, node) Schedule Fsm() contents Fsm() Fsm() transitions Ast Transition() Fsm() states Ast State(name, node) Ast Transition() target Ast State(name, node) Ast Transition() tag Ast Tag(identifiers) Ast Transition() external Target External Target() External Target() fsm Local Fsm(name) External Target() to Ast State(name, node) Ast State(name, node) Reg Exp() Local Fsm(name) contents Fsm() Ast Action() annotations Ast Annotation(name) Ast Action() tag Ast Tag(identifiers) Ast Action() inputs Input Pattern() Ast Action() outputs Output Pattern() Ast Action() guard Guard() Ast Action() variables Variable(constant, name) Ast Action() statements Statement() Input Pattern() port Ast Port(name) Input Pattern() tokens Variable(constant, name) Input Pattern() repeat Ast Expression() Output Pattern() port Ast Port(name) Output Pattern() repeat Ast Expression() Guard() expressions Ast Expression() Statement Assign() Statement() Statement Assign() target Variable Reference() Statement Assign() value Ast Expression() Statement Call() Statement() Statement Call() procedure Ast Procedure(name) Statement Call() arguments Ast Expression() Statement Foreach() statements Statement() Statement Foreach() variable Variable(constant, name) Statement Foreach() higher Ast Expression() Statement If() else Statement() Statement If() condition Ast Expression() Statement If() elsifs Statement Elsif() Statement Elsif() condition Ast Expression() Statement Elsif() then Statement() Statement While() statements Statement() Statement While() condition Ast Expression() Statement() annotations Ast Annotation(name) Ast Expression() Expression Call() parameters Ast Expression() Expression Call() annotations Ast Annotation(name) Expression Call() function Function(name) Expression Index() indexes Ast Expression() Expression Index() source Variable Reference() Expression If() else Ast Expression() Expression If() elsifs Expression Elsif() Expression Elsif() then Ast Expression() Expression List() expressions Ast Expression() Expression List() generators Generator() Generator() variable Variable(constant, name) Generator() higher Ast Expression() Expression Variable() Ast Expression() Expression Variable() value Variable Reference() Expression Literal() Ast Expression() Expression Boolean(value) Expression Literal() Expression Float(value) Expression Literal() Expression Integer(value) Expression Literal() Expression String(value) Expression Literal() Ast Type() Ast Type Bool() Ast Type() Ast Type Float() Ast Type() Ast Type Half() Ast Type() Ast Type Double() Ast Type() Ast Type Int() Ast Type() Ast Type Int() size Ast Expression() Ast Type List() type Ast Type() Ast Type List() size Ast Expression() Ast Type String() Ast Type() Ast Type Uint() Ast Type() Ast Type Uint() size Ast Expression() Variable Reference() variable Variable(constant, name) Ast Annotation(name) arguments Annotation Argument(name, value) Annotation Argument(name, value) Reg Exp Binary(operator) right Reg Exp() Reg Exp Unary(unary Operator) child Reg Exp() Reg Exp Tag() Reg Exp() Reg Exp Tag() tag Ast Tag(identifiers) Expression Binary(operator) right Ast Expression() Expression Unary(unary Operator) expression Ast Expression()
Label: gui, Text: Screen(theme, min Version) Widget Container() Screen(theme, min Version) Note Support(note) Screen(theme, min Version) Name Support(name) Screen(theme, min Version) v Ruler Screen Ruler() Screen(theme, min Version) font Screen Font(name, size, bold, italic, available) Screen(theme, min Version) min Version Version Data Type() Screen Ruler() guides Ruler Guide(position) Ruler Guide(position) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Note Support(note) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Name Support(name) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Visible Support(visible) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) container Widget Container() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) descriptor Widget Descriptor(type Name, resize Mode, text Editable, text Wrappable, text Lines, text Centered) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) layout Params Layout Params Data Type() Button(style) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Button(style) State Support(state) Button(style) Color Background Support(background) Button(style) Font Support() Button(style) Icon Support(icon, icon Rotation) Button(style) Link Support(link) Button(style) Text Alignment Support(text Alignment) Button(style) Skin Support(skin) Button(style) Click Support() Checkbox() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Checkbox() Boolean Selection Support(selected) Checkbox() State Support(state) Checkbox() Link Support(link) Checkbox() Font Support() Checkbox() Skin Support(skin) Combo() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Combo() State Support(state) Combo() Font Support() Combo() Color Border Support(border Color) Combo() Color Background Support(background) Combo() Color Alpha Support(alpha) Combo() Link Support(link) Combo() Skin Support(skin) Combo() Selection Support(selection) Label() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Label() Font Support() Label() Text Alignment Support(text Alignment) Label() Color Foreground Support(foreground) Label() State Support(state) Label() Icon Support(icon, icon Rotation) Label() Icon Position Support(icon Position) Label() Link Support(link) Label() Rotation Support(rotation) Label() Text Links Support() Link() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Link() Font Support() Link() State Support(state) Link() Link Support(link) Link() Skin Support(skin) Placeholder() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Placeholder() Link Support(link) Placeholder() Skin Support(skin) Radio Button() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Radio Button() Boolean Selection Support(selected) Radio Button() State Support(state) Radio Button() Link Support(link) Radio Button() Font Support() Radio Button() Skin Support(skin) Text Field() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Text Field() State Support(state) Text Field() Font Support() Text Field() Text Alignment Support(text Alignment) Text Field() Color Background Support(background) Text Field() Color Alpha Support(alpha) Text Field() Color Border Support(border Color) Text Field() Skin Support(skin) Text Field() Text Input Support() Spinner() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Spinner() State Support(state) Spinner() Font Support() Spinner() Color Border Support(border Color) Spinner() Color Background Support(background) Spinner() Color Alpha Support(alpha) Spinner() Skin Support(skin) Window(close Button, minimize Button, maximize Button) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Window(close Button, minimize Button, maximize Button) Vertical Scrollbar Support(vertical Scrollbar) Window(close Button, minimize Button, maximize Button) Skin Support(skin) Window(close Button, minimize Button, maximize Button) Color Background Support(background) Window(close Button, minimize Button, maximize Button) Color Alpha Support(alpha) Browser() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Browser() Vertical Scrollbar Support(vertical Scrollbar) Browser() Color Background Support(background) Browser() Skin Support(skin) Browser() Color Alpha Support(alpha) Browser() Font Support() Text(dummy Text) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Text(dummy Text) Font Support() Text(dummy Text) Text Alignment Support(text Alignment) Text(dummy Text) Color Foreground Support(foreground) Text(dummy Text) Link Support(link) Text(dummy Text) Line Height Support(line Height) Text(dummy Text) Text Links Support() Area() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Panel(id, x, y) screen Screen(theme, min Version) Panel(id, x, y) story Storyboard() Group() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Group() Vertical Scrollbar Support(vertical Scrollbar) Group() Color Background Support(background) Group() Color Alpha Support(alpha) Group() Font Support() Group() Skin Support(skin) List(header) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) List(header) Selection Support(selection) List(header) Border Support(border) List(header) Vertical Scrollbar Support(vertical Scrollbar) List(header) Color Background Support(background) List(header) Color Alpha Support(alpha) List(header) List Support(row Height, horizontal Lines) List(header) Font Support() List(header) Item Support() List(header) Color Alternative Support(alternative) Popup() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Popup() Selection Support(selection) Popup() Item Support() Menu() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Menu() Selection Support(selection) Menu() Icon Support(icon, icon Rotation) Menu() Item Support() Menu() Skin Support(skin) Table(vertical Lines, header) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Table(vertical Lines, header) Selection Support(selection) Table(vertical Lines, header) Border Support(border) Table(vertical Lines, header) Vertical Scrollbar Support(vertical Scrollbar) Table(vertical Lines, header) Color Background Support(background) Table(vertical Lines, header) Color Alpha Support(alpha) Table(vertical Lines, header) List Support(row Height, horizontal Lines) Table(vertical Lines, header) Font Support() Table(vertical Lines, header) Text Alignment Support(text Alignment) Table(vertical Lines, header) Color Alternative Support(alternative) Table(vertical Lines, header) Text Links Support() Table(vertical Lines, header) Click Support() Table(vertical Lines, header) Double Click Support() Table(vertical Lines, header) Text Input Support() Tree() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Tree() Border Support(border) Tree() Vertical Scrollbar Support(vertical Scrollbar) Tree() Color Background Support(background) Tree() Color Alpha Support(alpha) Tree() Selection Support(selection) Tree() Item Support() Tree() Font Support() Icon() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Icon() Color Foreground Support(foreground) Icon() Icon Support(icon, icon Rotation) Icon() Link Support(link) Text Area() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Text Area() State Support(state) Text Area() Vertical Scrollbar Support(vertical Scrollbar) Text Area() Font Support() Text Area() Text Alignment Support(text Alignment) Text Area() Color Background Support(background) Text Area() Color Alpha Support(alpha) Text Area() Color Border Support(border Color) Text Area() Skin Support(skin) Text Area() Line Height Support(line Height) Text Area() Text Links Support() H Scrollbar() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) H Scrollbar() Value Support(value) H Scrollbar() Skin Support(skin) V Scrollbar() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) V Scrollbar() Value Support(value) V Scrollbar() Skin Support(skin) H Line() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) H Line() Color Foreground Support(foreground) H Line() Line Style Support(line Style) H Line() Skin Support(skin) V Line() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) V Line() Color Foreground Support(foreground) V Line() Line Style Support(line Style) V Line() Skin Support(skin) H Slider() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) H Slider() Value Support(value) H Slider() State Support(state) H Slider() Color Background Support(background) H Slider() Skin Support(skin) V Slider() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) V Slider() Value Support(value) V Slider() State Support(state) V Slider() Color Background Support(background) V Slider() Skin Support(skin) Tabs() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Tabs() Selection Support(selection) Tabs() Item Support() Tabs() Font Support() Tabs() Skin Support(skin) None() Widget Descriptor(type Name, resize Mode, text Editable, text Wrappable, text Lines, text Centered) Right() Icon Data Type() Custom() Font Size Data Type() Font(size, bold, italic, underline) size Font Size Data Type() Widget Container() widgets Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Widget Group() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Widget Group() Widget Container() Widget Group() Link Support(link) Widget Group() Name Support(name) Master(dimmed) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Master(dimmed) Link Support(link) Master(dimmed) instance Widget Container() Master(dimmed) overrides Overrides() Image(src, grayscale) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Image(src, grayscale) Link Support(link) Image(src, grayscale) Rotation Support(rotation) Image(src, grayscale) Flip Support(h Flip, v Flip) Image(src, grayscale) Border Support(border) Image(src, grayscale) src URI Data Type() Screen Font(name, size, bold, italic, available) size Font Size Data Type() Font Support() font Font(size, bold, italic, underline) Color Data Type() Color Foreground Support(foreground) foreground Color Data Type() Color Background Support(background) background Color Data Type() Color Border Support(border Color) border Color Color Data Type() Color Alpha Support(alpha) Selection Support(selection) selection Selection Data Type() Text Alignment Support(text Alignment) Boolean Selection Support(selected) Note() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Note() Font Support() Note() Text Alignment Support(text Alignment) Note() Color Background Support(background) Note() Color Alpha Support(alpha) Note() Link Support(link) Note() Skin Support(skin) Note() Annotation Support() Note() Text Links Support() Progress Bar() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Progress Bar() Value Support(value) Progress Bar() Color Background Support(background) Progress Bar() Skin Support(skin) Callout() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Callout() Font Support() Callout() Color Background Support(background) Callout() Color Alpha Support(alpha) Callout() Link Support(link) Callout() Skin Support(skin) Callout() Annotation Support() Search Field() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Search Field() Font Support() Search Field() State Support(state) Search Field() Color Border Support(border Color) Search Field() Link Support(link) Search Field() Skin Support(skin) Link Bar() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Link Bar() Font Support() Link Bar() Selection Support(selection) Link Bar() Item Support() Link Bar() Skin Support(skin) Tooltip(position) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Tooltip(position) Font Support() Tooltip(position) Text Alignment Support(text Alignment) Tooltip(position) Color Background Support(background) Tooltip(position) Skin Support(skin) Tooltip(position) Text Links Support() Scratch Out() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Scratch Out() Color Foreground Support(foreground) Scratch Out() Color Alpha Support(alpha) Scratch Out() Skin Support(skin) Scratch Out() Annotation Support() Border Support(border) State Support(state) Focused() Breadcrumbs() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Breadcrumbs() Font Support() Breadcrumbs() Item Support() Breadcrumbs() Skin Support(skin) Accordion() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Accordion() Selection Support(selection) Accordion() Vertical Scrollbar Support(vertical Scrollbar) Accordion() Item Support() Accordion() Font Support() Vertical Scrollbar Support(vertical Scrollbar) Value Support(value) Date Field() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Date Field() State Support(state) Date Field() Color Border Support(border Color) Date Field() Color Background Support(background) Date Field() Color Alpha Support(alpha) Date Field() Skin Support(skin) Video Player() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Video Player() Skin Support(skin) Map() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Map() Skin Support(skin) Cover Flow() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Cover Flow() Skin Support(skin) Tabbed Pane(position) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Tabbed Pane(position) Selection Support(selection) Tabbed Pane(position) Vertical Scrollbar Support(vertical Scrollbar) Tabbed Pane(position) Color Background Support(background) Tabbed Pane(position) Color Alpha Support(alpha) Tabbed Pane(position) Item Support() Tabbed Pane(position) Font Support() Tabbed Pane(position) Skin Support(skin) Bottom Right() Icon Support(icon, icon Rotation) icon Icon Data Type() H Splitter() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) H Splitter() Skin Support(skin) V Splitter() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) V Splitter() Skin Support(skin) Value Support(value) Color Picker() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Color Picker() Color Background Support(background) Color Picker() Skin Support(skin) Arrow(left, right, direction) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Arrow(left, right, direction) Color Foreground Support(foreground) Arrow(left, right, direction) Line Style Support(line Style) Arrow(left, right, direction) Annotation Support() Curly Brace(position) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Curly Brace(position) Font Support() Curly Brace(position) Color Foreground Support(foreground) Curly Brace(position) Skin Support(skin) Curly Brace(position) Annotation Support() Curly Brace(position) Text Links Support() Button Bar() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Button Bar() Selection Support(selection) Button Bar() Font Support() Button Bar() Color Background Support(background) Button Bar() Item Support() Button Bar() Skin Support(skin) Border Style Support(border) Dashed Rounded() Point Right() Circle() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Circle() Color Background Support(background) Circle() Color Alpha Support(alpha) Circle() Color Foreground Support(foreground) Circle() Border Support(border) Circle() Icon Support(icon, icon Rotation) Circle() Icon Position Support(icon Position) Circle() Font Support() Circle() Link Support(link) Circle() Text Alignment Support(text Alignment) Circle() Line Style Support(line Style) Rectangle() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Rectangle() Color Background Support(background) Rectangle() Color Alpha Support(alpha) Rectangle() Color Foreground Support(foreground) Rectangle() Border Style Support(border) Rectangle() Icon Support(icon, icon Rotation) Rectangle() Icon Position Support(icon Position) Rectangle() Font Support() Rectangle() Link Support(link) Rectangle() Text Alignment Support(text Alignment) Icon Position Support(icon Position) Icon Support(icon, icon Rotation) List Support(row Height, horizontal Lines) Chart(chart Type) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Chart(chart Type) Skin Support(skin) Column() Cross Out() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Cross Out() Color Foreground Support(foreground) Cross Out() Color Alpha Support(alpha) Cross Out() Skin Support(skin) Cross Out() Annotation Support() Item(x, y, width, height, text) Click Support() Item(x, y, width, height, text) Link Support(link) Item(x, y, width, height, text) Visible Support(visible) Item Support() items Item(x, y, width, height, text) Link Support(link) link URI Data Type() URI Data Type() Hotspot() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Hotspot() Link Support(link) Name Support(name) Sketch() Color Alternative Support(alternative) alternative Color Data Type() Dashed() Line Style Support(line Style) Rotation Support(rotation) Flip Support(h Flip, v Flip) SVG Image(src) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) SVG Image(src) Link Support(link) SVG Image(src) Color Background Support(background) SVG Image(src) Color Foreground Support(foreground) SVG Image(src) Color Alpha Support(alpha) SVG Image(src) Rotation Support(rotation) SVG Image(src) Flip Support(h Flip, v Flip) SVG Image(src) src URI Data Type() 270() Skin Support(skin) skin URI Data Type() Selection Data Type() Shape(shape Type) Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Shape(shape Type) Color Background Support(background) Shape(shape Type) Color Alpha Support(alpha) Shape(shape Type) Color Foreground Support(foreground) Shape(shape Type) Border Support(border) Shape(shape Type) Icon Support(icon, icon Rotation) Shape(shape Type) Icon Position Support(icon Position) Shape(shape Type) Font Support() Shape(shape Type) Link Support(link) Shape(shape Type) Text Alignment Support(text Alignment) Shape(shape Type) Line Style Support(line Style) Shape(shape Type) Skin Support(skin) Shape(shape Type) Rotation Support(rotation) Version Data Type() Right Triangle() Alert() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Alert() Icon Support(icon, icon Rotation) Alert() Item Support() Alert() Font Support() Alert() Skin Support(skin) Switch() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) Switch() Boolean Selection Support(selected) Switch() Color Background Support(background) Switch() Font Support() Switch() Link Support(link) Switch() State Support(state) Switch() Skin Support(skin) Line Height Data Type() Line Height Support(line Height) line Height Line Height Data Type() Layout Params Data Type() Click Support() Name Support(name) Text Input Support() Name Support(name) Double Click Support() Name Support(name) Visible Support(visible) Frame() Panel(id, x, y) V Button Bar() Widget(id, x, y, width, height, text, locked, measured Width, measured Height, custom Id, custom Data, annotation, layout Params) V Button Bar() Selection Support(selection) V Button Bar() Font Support() V Button Bar() Text Alignment Support(text Alignment) V Button Bar() Color Background Support(background) V Button Bar() Item Support() V Button Bar() Skin Support(skin) Annotation Support() Text Links Support() Item Support() Note Support(note) Storyboard() panels Panel(id, x, y) Overrides() Widget Container Overrides() Overrides() widgets Widget Overrides(x, y, width, height, text, no Text, link, no Link, src) Widget Overrides(x, y, width, height, text, no Text, link, no Link, src) Widget Container Overrides() Widget Overrides(x, y, width, height, text, no Text, link, no Link, src) Reference(ref) Widget Overrides(x, y, width, height, text, no Text, link, no Link, src) src URI Data Type() Widget Overrides(x, y, width, height, text, no Text, link, no Link, src) attributes String To String Map(key, value) Widget Overrides(x, y, width, height, text, no Text, link, no Link, src) font Font Overrides(size, bold, italic, underline) Widget Overrides(x, y, width, height, text, no Text, link, no Link, src) items Item Overrides(text, link, no Link) Widget Overrides(x, y, width, height, text, no Text, link, no Link, src) item Changes Operation() Font Overrides(size, bold, italic, underline) size Font Size Data Type() Item Overrides(text, link, no Link) Reference(ref) Item Overrides(text, link, no Link) link URI Data Type() String To String Map(key, value) Operation() Move(new Index) Operation() Move(new Index) Reference(ref) Delete() Operation() Delete() Reference(ref) Insert(new Index) Operation() Reference(ref) Widget Container Overrides() widget Changes Operation()
Label: hotels, Text: Data Service() Admin Key Card Manager() Key Card Manager() Key Card Manager() Key Card(id) Admin Room Manager() Room Manager() Room Manager() Room Type(name, description, room Approvals, price) room Approvals Room Approval() Room Approval() Room(floor, room Number, is Operational, is Being Cleaned, description, photos, disability Approvals) allowed Key Cards Key Card(id) Room(floor, room Number, is Operational, is Being Cleaned, description, photos, disability Approvals) room Type Room Type(name, description, room Approvals, price) Room(floor, room Number, is Operational, is Being Cleaned, description, photos, disability Approvals) disability Approvals Disability Approval() Disability Approval() Guest Room(number Of Beds, number Of Extrabeds) Room(floor, room Number, is Operational, is Being Cleaned, description, photos, disability Approvals) Conference Room(number Of Seats, equipment) Room(floor, room Number, is Operational, is Being Cleaned, description, photos, disability Approvals) Room Manager Impl() Room Manager() Room Manager Impl() room Data Service Room Data Service() Room Manager Impl() room Type Data Service Room Type Data Service() Room Manager Impl() key Card Manager Key Card Manager() Room Data Service() Room Type Data Service() Key Card Manager Impl() Key Card Manager() Key Card Manager Impl() key Card Data Service Key Card Data Service() Key Card Data Service() Admin Room Manager Impl() Room Manager Impl() Admin Room Manager Impl() Admin Room Manager() Admin Key Card Manager Impl() Key Card Manager Impl() Admin Key Card Manager Impl() Admin Key Card Manager() Discount Manager() Discount(code, name) discount Limit Discount Limit(id, start Date, end Date, times Left To Use) Discount Limit(id, start Date, end Date, times Left To Use) allowed Users Legal Entity(phone, email, id) Sum Discount(discount Sum) Discount(code, name) Percentage Discount(percentage) Discount(code, name) Discount Data Service() Discount Manager Impl() Discount Manager() Discount Manager Impl() discount Data Service Discount Data Service() Bill(id, date, is Published, is Paid) purchases Purchase(id, quantity, price) Bill(id, date, is Published, is Paid) used Discounts Discount(code, name) Bill(id, date, is Published, is Paid) customer Legal Entity(phone, email, id) Purchase(id, quantity, price) service Service(id, price, name) Service(id, price, name) Booking Bill() Bill(id, date, is Published, is Paid) Booking Bill() booking Booking(id, start Date, end Date, special Request, price, is Canceled) Bill Manager() Banking Manager() Credit Card Manager() Credit Card Information(card Number, expiration Date, ccv, first Name, last Name) legal Entity Legal Entity(phone, email, id) Bill Manager Impl() Bill Manager() Bill Manager Impl() bill Data Service Bill Data Service() Bill Manager Impl() booking Manager Booking Manager() Bill Data Service() Banking Manager Impl() Banking Manager() Credit Card Information Data Service() Credit Card Manager Impl() Credit Card Manager() Credit Card Manager Impl() credit Card Information Data Service Credit Card Information Data Service() Service Manager Impl() Service Manager() Service Manager Impl() service Data Service Service Data Service() Service Manager() Service Data Service() Admin Service Manager() Service Manager() Admin Service Manager Impl() Service Manager Impl() Admin Service Manager Impl() Admin Service Manager() Admin Discount Manager() Discount Manager() Admin Discount Manager Impl() Discount Manager Impl() Admin Discount Manager Impl() Admin Discount Manager() Organization(name, organization Number) Legal Entity(phone, email, id) Person(firstname, lastname, social Security Number) Legal Entity(phone, email, id) Booking(id, start Date, end Date, special Request, price, is Canceled) room Type Room Type(name, description, room Approvals, price) Booking(id, start Date, end Date, special Request, price, is Canceled) travel Information Travel Information(id, tracking Id, comment) Booking(id, start Date, end Date, special Request, price, is Canceled) responsible Legal Entity(phone, email, id) Booking(id, start Date, end Date, special Request, price, is Canceled) room Stay Room Stay(active, id) Travel Information(id, tracking Id, comment) Room Stay(active, id) stay Request Stay Request(text, time Stamp, id) Room Stay(active, id) registered Persons Person(firstname, lastname, social Security Number) Room Stay(active, id) room Room(floor, room Number, is Operational, is Being Cleaned, description, photos, disability Approvals) Stay Request(text, time Stamp, id) Booking Manager() Booking Manager Impl() Booking Manager() Booking Manager Impl() booking Data Service Booking Data Service() Booking Manager Impl() room Manager Room Manager() Booking Data Service() Legal Entity Manager() Legal Entity Manager Impl() Legal Entity Manager() Legal Entity Manager Impl() legal Entity Data Service Legal Entity Data Service() Legal Entity Data Service() Legal Entity(phone, email, id)
Label: graphicaleditor, Text: Diagram Element() owning Diagram Diagram(name, documentation, resolution) Diagram Element() style Style() Diagram(name, documentation, resolution) owned Style Style() Diagram(name, documentation, resolution) root Element Diagram Element() Style() Node() Diagram Element() Edge() target Diagram Element() Shape() Node() Labeled Edge() Edge() Labeled Edge() owned Label Label() Label() Node() Labeled Shape() Shape() Labeled Shape() owned Label Label() Plane() Node() Plane() plane Element Diagram Element()
Label: transformation, Text: Located Element(location, comments Before, comments After) comments After String() Unit(name) Located Element(location, comments Before, comments After) Unit(name) libraries Library Ref(name) Unit(name) name String() Library() Unit(name) Library() helpers Helper() Query() Unit(name) Query() body Ocl Expression() Query() helpers Helper() Module(is Refining) Unit(name) Module(is Refining) is Refining Boolean() Module(is Refining) out Models Ocl Model(name) Module(is Refining) elements Module Element() Module Element() Located Element(location, comments Before, comments After) Module Element() module Module(is Refining) Helper() Module Element() Helper() query Query() Helper() library Library() Helper() definition Ocl Feature Definition() Rule(name) Module Element() Rule(name) out Pattern Out Pattern() Rule(name) action Block Action Block() Rule(name) variables Rule Variable Declaration() Rule(name) name String() Matched Rule(is Abstract, is Refining, is No Default) Rule(name) Matched Rule(is Abstract, is Refining, is No Default) in Pattern In Pattern() Matched Rule(is Abstract, is Refining, is No Default) is No Default Boolean() Lazy Matched Rule(is Unique) Matched Rule(is Abstract, is Refining, is No Default) Lazy Matched Rule(is Unique) is Unique Boolean() Called Rule(is Entrypoint, is Endpoint) Rule(name) Called Rule(is Entrypoint, is Endpoint) parameters Parameter() Called Rule(is Entrypoint, is Endpoint) is Endpoint Boolean() In Pattern() Located Element(location, comments Before, comments After) In Pattern() elements In Pattern Element() In Pattern() rule Matched Rule(is Abstract, is Refining, is No Default) In Pattern() filter Ocl Expression() Out Pattern() Located Element(location, comments Before, comments After) Out Pattern() rule Rule(name) Out Pattern() elements Out Pattern Element() Pattern Element() Variable Declaration(id, var Name) In Pattern Element() Pattern Element() In Pattern Element() maps To Out Pattern Element() In Pattern Element() in Pattern In Pattern() In Pattern Element() models Ocl Model(name) Simple In Pattern Element() In Pattern Element() Out Pattern Element() Pattern Element() Out Pattern Element() out Pattern Out Pattern() Out Pattern Element() source Element In Pattern Element() Out Pattern Element() bindings Binding(property Name, is Assignment) Out Pattern Element() model Ocl Model(name) Simple Out Pattern Element() Out Pattern Element() Simple Out Pattern Element() reverse Bindings Ocl Expression() For Each Out Pattern Element() Out Pattern Element() For Each Out Pattern Element() collection Ocl Expression() For Each Out Pattern Element() iterator Iterator() Binding(property Name, is Assignment) Located Element(location, comments Before, comments After) Binding(property Name, is Assignment) value Ocl Expression() Binding(property Name, is Assignment) out Pattern Element Out Pattern Element() Binding(property Name, is Assignment) property Name String() Binding(property Name, is Assignment) is Assignment Boolean() Rule Variable Declaration() Variable Declaration(id, var Name) Rule Variable Declaration() rule Rule(name) Library Ref(name) Located Element(location, comments Before, comments After) Library Ref(name) unit Unit(name) Library Ref(name) name String() Action Block() Located Element(location, comments Before, comments After) Action Block() rule Rule(name) Action Block() statements Statement() Statement() Located Element(location, comments Before, comments After) Expression Stat() Statement() Expression Stat() expression Ocl Expression() Binding Stat(property Name, is Assignment) Statement() Binding Stat(property Name, is Assignment) value Ocl Expression() Binding Stat(property Name, is Assignment) property Name String() Binding Stat(property Name, is Assignment) is Assignment Boolean() If Stat() else Statements Statement() If Stat() condition Ocl Expression() For Stat() statements Statement() For Stat() iterator Iterator() For Stat() collection Ocl Expression() Ocl Expression() Located Element(location, comments Before, comments After) Ocl Expression() type Ocl Type(name) Ocl Expression() if Exp1 If Exp() Ocl Expression() applied Property Property Call Exp() Ocl Expression() collection Collection Exp() Ocl Expression() let Exp Let Exp() Ocl Expression() loop Exp Loop Exp() Ocl Expression() parent Operation Operation Call Exp(operation Name) Ocl Expression() initialized Variable Variable Declaration(id, var Name) Ocl Expression() owning Operation Operation(name) Ocl Expression() owning Attribute Attribute(name) Variable Exp() Ocl Expression() Variable Exp() referred Variable Variable Declaration(id, var Name) Super Exp() Ocl Expression() Primitive Exp() Ocl Expression() String Exp(string Symbol) Primitive Exp() String Exp(string Symbol) string Symbol String() Boolean Exp(boolean Symbol) Primitive Exp() Boolean Exp(boolean Symbol) boolean Symbol Boolean() Numeric Exp() Primitive Exp() Real Exp(real Symbol) Numeric Exp() Real Exp(real Symbol) real Symbol Double() Integer Exp(integer Symbol) Numeric Exp() Integer Exp(integer Symbol) integer Symbol Integer() Collection Exp() elements Ocl Expression() Bag Exp() Collection Exp() Ordered Set Exp() Collection Exp() Sequence Exp() Collection Exp() Set Exp() Collection Exp() Tuple Exp() Ocl Expression() Tuple Exp() tuple Part Tuple Part() Tuple Part() Variable Declaration(id, var Name) Tuple Part() tuple Tuple Exp() Map Exp() Ocl Expression() Map Exp() elements Map Element() Map Element() Located Element(location, comments Before, comments After) Map Element() map Map Exp() Map Element() value Ocl Expression() Enum Literal Exp(name) Ocl Expression() Enum Literal Exp(name) name String() Ocl Undefined Exp() Ocl Expression() Property Call Exp() source Ocl Expression() Navigation Or Attribute Call Exp(name) Property Call Exp() Navigation Or Attribute Call Exp(name) name String() Operation Call Exp(operation Name) Property Call Exp() Operation Call Exp(operation Name) arguments Ocl Expression() Operation Call Exp(operation Name) operation Name String() Operator Call Exp() Operation Call Exp(operation Name) Collection Operation Call Exp() Operation Call Exp(operation Name) Loop Exp() Property Call Exp() Loop Exp() body Ocl Expression() Loop Exp() iterators Iterator() Iterate Exp() Loop Exp() Iterate Exp() result Variable Declaration(id, var Name) Iterator Exp(name) Loop Exp() Iterator Exp(name) name String() Let Exp() in Ocl Expression() Let Exp() variable Variable Declaration(id, var Name) If Exp() else Expression Ocl Expression() Variable Declaration(id, var Name) Located Element(location, comments Before, comments After) Variable Declaration(id, var Name) var Name String() Variable Declaration(id, var Name) type Ocl Type(name) Variable Declaration(id, var Name) init Expression Ocl Expression() Variable Declaration(id, var Name) let Exp Let Exp() Variable Declaration(id, var Name) base Exp Iterate Exp() Variable Declaration(id, var Name) variable Exp Variable Exp() Iterator() Variable Declaration(id, var Name) Iterator() loop Expr Loop Exp() Parameter() Variable Declaration(id, var Name) Parameter() operation Operation(name) Collection Type() element Type Ocl Type(name) Ocl Type(name) ocl Expression Ocl Expression() Ocl Type(name) name String() Ocl Type(name) definitions Ocl Context Definition() Ocl Type(name) operation Operation(name) Ocl Type(name) map Type Map Type() Ocl Type(name) attribute Attribute(name) Ocl Type(name) collection Types Collection Type() Ocl Type(name) tuple Type Attribute Tuple Type Attribute(name) Ocl Type(name) variable Declaration Variable Declaration(id, var Name) Primitive() Ocl Type(name) String Type() Primitive() Boolean Type() Primitive() Numeric Type() Primitive() Integer Type() Numeric Type() Real Type() Numeric Type() Bag Type() Collection Type() Ordered Set Type() Collection Type() Sequence Type() Collection Type() Set Type() Collection Type() Ocl Any Type() Ocl Type(name) Tuple Type() Ocl Type(name) Tuple Type() attributes Tuple Type Attribute(name) Tuple Type Attribute(name) Located Element(location, comments Before, comments After) Tuple Type Attribute(name) type Ocl Type(name) Tuple Type Attribute(name) tuple Type Tuple Type() Tuple Type Attribute(name) name String() Ocl Model Element() Ocl Type(name) Ocl Model Element() model Ocl Model(name) Map Type() key Type Ocl Type(name) Ocl Feature Definition() Located Element(location, comments Before, comments After) Ocl Feature Definition() feature Ocl Feature() Ocl Feature Definition() context Ocl Context Definition() Ocl Context Definition() Located Element(location, comments Before, comments After) Ocl Context Definition() definition Ocl Feature Definition() Ocl Context Definition() context Ocl Type(name) Ocl Feature() Located Element(location, comments Before, comments After) Ocl Feature() definition Ocl Feature Definition() Attribute(name) Ocl Feature() Attribute(name) name String() Attribute(name) init Expression Ocl Expression() Attribute(name) type Ocl Type(name) Operation(name) Ocl Feature() Operation(name) name String() Operation(name) parameters Parameter() Operation(name) return Type Ocl Type(name) Operation(name) body Ocl Expression() Ocl Model(name) Located Element(location, comments Before, comments After) Ocl Model(name) name String() Ocl Model(name) elements Ocl Model Element() Boolean() Double() Integer() String()
Label: types, Text: Package() member Package Member(id) Package() domain Domain(domain ID) Type(abstract, visible) Package Member(id) Type(abstract, visible) constraint Type Constraint(value) Declaration() Typed Element() Declaration() Package Member(id) Operation() Declaration() Operation() parameters Parameter() Property(const, readonly, external) Declaration() Parameter() Typed Element() Parameter() Annotatable Element() Parameter() owning Operation Operation() Typed Element() type Type(abstract, visible) Typed Element() type Specifier Type Specifier() Type Specifier() type Type(abstract, visible) Event(direction) Declaration() OUT() Enumeration Type() Primitive Type() Enumeration Type() enumerator Enumerator(literal Value) Primitive Type() Type(abstract, visible) Complex Type() Parameterized Type() Complex Type() features Declaration() Enumerator(literal Value) Declaration() Enumerator(literal Value) owning Enumeration Enumeration Type() Type Constraint(value) Type Parameter() bound Type(abstract, visible) Parameterized Type() Type(abstract, visible) Parameterized Type() parameter Type Parameter() Package Member(id) Annotatable Element() Range Constraint(lower Bound, upper Bound) Type Constraint(value) Domain(domain ID) Type Alias() Typed Element() Type Alias() Type(abstract, visible) Annotation() Package Member(id) Annotation() properties Property(const, readonly, external) Annotatable Element() annotations Annotation() Array Type Specifier(size) Type Specifier()
Label: simple-pl, Text: Compilation Unit() Declaration Declaration(Name, Is Parameter Declaration, Type) Compilation Unit() Main Procedure Procedure Declaration(Return Type) Statement() Procedure In Context Procedure Declaration(Return Type) Block() Statement Statement() Block() Is Procedure Body Procedure Declaration(Return Type) If() Statement() If() Condition Expression(Type) If() Alternative Block() While() Statement() While() Condition Expression(Type) While() Body Block() Variable Assignment(Type) Statement() Variable Assignment(Type) R Value Expression(Type) Variable Assignment(Type) Type Type() Procedure Return(Type) Statement() Procedure Return(Type) Expression Expression(Type) Procedure Return(Type) Type Type() Write(Type) Statement() Write(Type) Expression Expression(Type) Write(Type) Type Type() Read(Type) Statement() Read(Type) Expression Expression(Type) Read(Type) Type Type() Declaration(Name, Is Parameter Declaration, Type) Statement() Declaration(Name, Is Parameter Declaration, Type) Type Type() Variable Declaration(Declared Type) Declaration(Name, Is Parameter Declaration, Type) Variable Declaration(Declared Type) Declared Type Type() Procedure Declaration(Return Type) Declaration(Name, Is Parameter Declaration, Type) Procedure Declaration(Return Type) Parameter Variable Declaration(Declared Type) Procedure Declaration(Return Type) Return Type Type() Procedure Declaration(Return Type) Body Block() Expression(Type) Statement() Expression(Type) Type Type() Constant(Lexem, As Boolean, As Integer, As Real) Expression(Type) Reference(Name) Expression(Type) Reference(Name) Declaration Declaration(Name, Is Parameter Declaration, Type) Procedure Call() Argument Expression(Type) Procedure Call() Declaration Procedure Declaration(Return Type) Nested Expression() Expression Expression(Type) Unary Expression() Operand Expression(Type) Not() Unary Expression() U Minus() Unary Expression() Real Coercion() Unary Expression() Dereference() Unary Expression() Binary Expression() Operand2 Expression(Type) Logic Expression() Binary Expression() And() Logic Expression() Or() Logic Expression() Equality Expression() Binary Expression() Equal() Equality Expression() Greater Than() Equality Expression() Lesser Than() Equality Expression() Greater Than Equal() Equality Expression() Lesser Than Equal() Equality Expression() Arithmetic Expression() Binary Expression() Addition() Arithmetic Expression() Subtraction() Arithmetic Expression() Multiplication() Arithmetic Expression() Division() Arithmetic Expression() Type() State()
Label: relational, Text: String() Data Type() Data Type() Boolean() Data Type() Real() Data Type() Date() Data Type() Time Stamp() Date() Integer() Data Type() Float() Data Type() Double() Data Type() Select Expression() parameter Select Parameter() Select Expression() columns Column Expression() Select Expression() from From Expression() Select Expression() where Where Expression() Select Expression() group By Group By Expression() Select Expression() having Having Expression() Select Expression() set Set Expression() Select Expression() order By Order By Expression() Select Expression() limit Limit Expression(limit, offset) Select Parameter() Select Parameter All() Select Parameter() Select Parameter Distinct() Select Parameter() Column Expression() column Expressions Single Column Expression(alias) Single Column Expression(alias) expression Expression() Single Column Expression(alias) operation Column Operation() Single Column Expression(alias) parameter Select Parameter() Column Operation() Column Operation Count() Column Operation() Column Operation Min() Column Operation() Column Operation Max() Column Operation() Column Operation Sum() Column Operation() Column Operation Avg() Column Operation() Column Operation Every() Column Operation() Column Operation Some() Column Operation() Column(name) From Expression() tables Table List Expression() Table Expression(label) select Expression Select Expression() Table Expression(label) table Table(name) Table(name) Table List Expression() table Table Expression(label) Table List Expression() join Table Join Table Expression() Join Table Expression() join Join Operation() Join Table Expression() join Table Table Expression(label) Join Table Expression() expression Expression() Join Operation() Join Operation Inner() Join Operation() Join Operation Left() Join Operation() Join Operation Right() Join Operation() Join Operation Outer() Join Operation() Where Expression() expression Expression() Order By Expression() parameter Order By Parameter() Order By Column Expression() Order By Expression() Order By Column Expression() column Reference Column(name) Order By Alias Expression(alias) Order By Expression() Order By Select Expression() Order By Expression() Order By Select Expression() select Expression Select Expression() Order By Parameter() Order By Parameter Asc() Order By Parameter() Order By Parameter Desc() Order By Parameter() Group By Expression() expression Expression() Having Expression() expression Expression() Set Expression() select Expression Select Expression() Set Expression() set Operation Set Operation() Set Operation() Set Operation Union() Set Operation() Set Operation Union() select Parameter Select Parameter() Set Operation Minus() Set Operation() Set Operation Minus() select Parameter Select Parameter Distinct() Set Operation Except() Set Operation() Set Operation Except() select Parameter Select Parameter Distinct() Set Operation Intersect() Set Operation() Set Operation Intersect() select Parameter Select Parameter Distinct() Limit Expression(limit, offset) Expression() Simple Expression() Expression() Simple Expression() operations And Or Expression Operation() Simple Expression() conditions Condition() Simple Expression() not Operation Expression Operation Not() Expression Operation() And Or Expression Operation() Expression Operation() Expression Operation Not() Expression Operation() Expression Operation And() And Or Expression Operation() Expression Operation Or() And Or Expression Operation() Condition() Simple Condition() Condition() Simple Condition() values Value() Operation Condition() Simple Condition() Operation Condition() operation Condition Operation() Is Null Condition() Simple Condition() Is Null Condition() operation Not Expression Operation Not() Exists Condition() Simple Condition() Exists Condition() select Expression Select Expression() Between Condition() Simple Condition() In Condition() Simple Condition() In Condition() select Expression Select Expression() In Condition() operation Not Expression Operation Not() Like Condition() Simple Condition() Like Condition() operation Not Expression Operation Not() Condition Operation() Condition Operation Equal() Condition Operation() Condition Operation Lesser() Condition Operation() Condition Operation Less Equal() Condition Operation() Condition Operation Greater() Condition Operation() Condition Operation Great Equal() Condition Operation() Condition Operation Un Equal() Condition Operation() Condition Operation Un Equal2() Condition Operation() Value() Value Front Operation() Value Operation() Value Front Operation Plus() Value Front Operation() Value Front Operation Minus() Value Front Operation() Value Operation() Value Operation Multiply() Value Operation() Value Operation Divide() Value Operation() Value Operation Parallel() Value Operation() Simple Value() Value() Simple Value() terms Term() Simple Value() operations Value Operation() Simple Value() front Operation Value Front Operation() Condition Value() Value() Condition Value() condition Condition() Function Value(function Name) parameters Value() Term() Boolean Term() Term() Boolean Term True() Boolean Term() Boolean Term False() Boolean Term() Null Term() Term() Column Term() Term() Column Term() table Reference Table(name) Column Term() column Reference Column(name) Simple Term(value) Term() Simple Term String() Simple Term(value) Simple Term Float() Simple Term(value) Simple Term Integer() Simple Term(value) Simple Term Char() Simple Term(value) Count Star Term() Term() Star Term() Term()
Label: graphicaleditor, Text: X Diagram() metamodel Meta Model(plugin, ecore Path) X Diagram() diagram Diagram() X Diagram() custom Colors Colors() X Diagram() elements Diagram Element() X Diagram() figures Custom Figure(name) Meta Model(plugin, ecore Path) Import Statement(imported Namespace) Diagram() contains Contains() Diagram Element() Feature() conditional Feature Conditional(operator) Feature Container() features Feature() Feature Conditional(operator) value Value() Node() Diagram Element() Node() root Figure Connectable Element() Link(reference, complex) Diagram Element() Link(reference, complex) Feature Container() Link(reference, complex) decorators Decorator() Decorator() element Feature Container() Anchor(direction, max) Feature() OUTGOING() Colors() colors Custom Color(name, R, G, B) Custom Color(name, R, G, B) Color(default) custom Custom Color(name, R, G, B) PURPLE() Connectable Element() children Feature Container() Custom Figure(name) element Connectable Element() Custom() Connectable Element() Custom() figure Custom Figure(name) Rectangle(rectangle, square) Connectable Element() Rhombus() Connectable Element() Ellipse(ellipse, circle) Connectable Element() Polyline(polygon, polyline) Connectable Element() Triangle() Connectable Element() Line(horizontal, vertical) Feature Container() Arrow() Feature Container() Contains() Feature() DIFFERENT() Value() Int Value(value) Value() Double Value(value Int, value Decimal) Value() String Value(null, value) Value() Boolean Value(value) Value() FALSE() Enum Value(name) Value() Label() Connectable Element() Image(image Id) Connectable Element() Invisible() Connectable Element() Color Feature(type) Feature() Color Feature(type) color Color(default) Transparency(percent) Feature() Size(width, width Relative, height, height Relative, resizable) Feature() Point(x, y) Feature() Position(x, x Relative, y, y Relative) Feature() Corner(angle) Feature() Layout(vertical, horizontal, margin) Feature() Visible() Feature() Text Value() Feature() Text Value() parts Text Part(text, editable) Text Part(text, editable) Font Properties(face, size, bold, italics) Feature() Text Align(value) Feature() RIGHT() Line Style(style, manhattan) Feature() DOT() Line Width(width) Feature()
Label: modelmanagement, Text: Statement() Expression Statement() Statement() Expression Statement() expr Expression() Switch Statement() Statement() Switch Statement() expr Expression() Switch Statement() cases Switch Case Expression Statement() Switch Statement() default Switch Case Default Statement() Switch Case Statement() Statement() Switch Case Statement() body Expression Or Statement Block() Switch Case Default Statement() Switch Case Statement() Switch Case Expression Statement() Switch Case Statement() Switch Case Expression Statement() expr Expression() If Statement() Statement() If Statement() condition Expression() If Statement() else Body Expression Or Statement Block() For Statement() Statement() For Statement() iterator Formal Parameter Expression() For Statement() condition Expression() For Statement() body Expression Or Statement Block() While Statement() Statement() While Statement() condition Expression() While Statement() body Expression Or Statement Block() Return Statement() Statement() Return Statement() expr Expression() Throw Statement() Statement() Throw Statement() expr Expression() Delete Statement() Statement() Delete Statement() expr Expression() Assignment Statement() Statement() Assignment Statement() rhs Expression() Special Assignment Statement() Assignment Statement() Continue Statement() Statement() Abort Statement() Statement() Break Statement() Statement() Break All Statement() Statement() Annotation Statement() Statement() Annotation Statement() name Name Expression() Simple Annotation Statement() Annotation Statement() Simple Annotation Statement() values String Expression() Executable Annotation Statement() Annotation Statement() Executable Annotation Statement() expr Expression() Model Declaration Statement() Statement() Model Declaration Statement() aliases Variable Declaration Expression() Model Declaration Statement() driver Name Expression() Model Declaration Statement() parameters Model Declaration Parameter() Expression() Expression Or Statement Block() Variable Declaration Expression() Expression() Name Expression() Expression() Model Declaration Parameter() Formal Parameter Expression() String Expression()
Label: enterprisearchitecture, Text: File() Adapter() Identifier(id) Property(key, value) Properties() properties Property(key, value) Metadata() entries Property(key, value) Nameable(name) Text Content(content) Documentable(documentation) Cloneable() implementation migration() Folder Container() folders Folder(type) Folder(type) Archimate Model Object() Folder(type) Folder Container() Folder(type) Documentable(documentation) Folder(type) Properties() Archimate Model Object() Adapter() Archimate Model Object() Nameable(name) Archimate Model Object() Identifier(id) Archimate Concept() Archimate Model Object() Archimate Concept() Cloneable() Archimate Concept() Documentable(documentation) Archimate Concept() Properties() Archimate Element() Archimate Concept() Archimate Relationship() target Archimate Concept() Junction Element() Archimate Element() Strategy Element() Archimate Element() Business Element() Archimate Element() Application Element() Archimate Element() Technology Element() Archimate Element() Technology Object() Technology Element() Technology Object() Passive Structure Element() Physical Element() Archimate Element() Motivation Element() Archimate Element() Implementation Migration Element() Archimate Element() Composite Element() Archimate Element() Behavior Element() Archimate Element() Structure Element() Archimate Element() Active Structure Element() Structure Element() Passive Structure Element() Structure Element() Structural Relationship() Archimate Relationship() Dependendency Relationship() Archimate Relationship() Dynamic Relationship() Archimate Relationship() Other Relationship() Archimate Relationship() Archimate Model(purpose, file, version) Folder Container() Archimate Model(purpose, file, version) Archimate Model Object() Archimate Model(purpose, file, version) Properties() Archimate Model(purpose, file, version) file File() Archimate Model(purpose, file, version) metadata Metadata() And Junction() Junction Element() Application Collaboration() Application Element() Application Collaboration() Active Structure Element() Application Component() Application Element() Application Component() Active Structure Element() Application Event() Application Element() Application Event() Behavior Element() Application Function() Application Element() Application Function() Behavior Element() Application Interaction() Application Element() Application Interaction() Behavior Element() Application Interface() Application Element() Application Interface() Active Structure Element() Application Process() Application Element() Application Process() Behavior Element() Application Service() Application Element() Application Service() Behavior Element() Artifact() Technology Object() Assessment() Motivation Element() Business Actor() Business Element() Business Actor() Active Structure Element() Business Collaboration() Business Element() Business Collaboration() Active Structure Element() Business Event() Business Element() Business Event() Behavior Element() Business Function() Business Element() Business Function() Behavior Element() Business Interaction() Business Element() Business Interaction() Behavior Element() Business Interface() Business Element() Business Interface() Active Structure Element() Business Object() Business Element() Business Object() Passive Structure Element() Business Process() Business Element() Business Process() Behavior Element() Business Role() Business Element() Business Role() Active Structure Element() Business Service() Business Element() Business Service() Behavior Element() Capability() Strategy Element() Capability() Behavior Element() Communication Network() Technology Element() Communication Network() Active Structure Element() Contract() Business Element() Contract() Passive Structure Element() Constraint() Motivation Element() Course Of Action() Strategy Element() Course Of Action() Behavior Element() Data Object() Application Element() Data Object() Passive Structure Element() Deliverable() Implementation Migration Element() Deliverable() Passive Structure Element() Device() Technology Element() Device() Active Structure Element() Distribution Network() Physical Element() Distribution Network() Active Structure Element() Driver() Motivation Element() Equipment() Physical Element() Equipment() Active Structure Element() Facility() Physical Element() Facility() Active Structure Element() Gap() Implementation Migration Element() Gap() Passive Structure Element() Goal() Motivation Element() Grouping() Composite Element() Implementation Event() Implementation Migration Element() Location() Composite Element() Material() Physical Element() Material() Passive Structure Element() Meaning() Motivation Element() Node() Technology Element() Node() Active Structure Element() Outcome() Motivation Element() Or Junction() Junction Element() Path() Technology Element() Plateau() Implementation Migration Element() Plateau() Composite Element() Principle() Motivation Element() Product() Business Element() Product() Composite Element() Representation() Business Element() Representation() Passive Structure Element() Resource() Strategy Element() Resource() Structure Element() Requirement() Motivation Element() Stakeholder() Motivation Element() Stakeholder() Active Structure Element() System Software() Technology Element() System Software() Active Structure Element() Technology Collaboration() Technology Element() Technology Collaboration() Active Structure Element() Technology Event() Technology Element() Technology Event() Behavior Element() Technology Function() Technology Element() Technology Function() Behavior Element() Technology Interface() Technology Element() Technology Interface() Active Structure Element() Technology Interaction() Technology Element() Technology Interaction() Behavior Element() Technology Process() Technology Element() Technology Process() Behavior Element() Technology Service() Technology Element() Technology Service() Behavior Element() Value() Motivation Element() Work Package() Implementation Migration Element() Work Package() Behavior Element() Access Relationship(access Type) Dependendency Relationship() Aggregation Relationship() Structural Relationship() Assignment Relationship() Structural Relationship() Association Relationship() Other Relationship() Composition Relationship() Structural Relationship() Flow Relationship() Dynamic Relationship() Influence Relationship(strength) Dependendency Relationship() Realization Relationship() Structural Relationship() Serving Relationship() Dependendency Relationship() Specialization Relationship() Other Relationship() Triggering Relationship() Dynamic Relationship() Diagram Model Component() Identifier(id) Diagram Model Component() Cloneable() Diagram Model Component() Adapter() Diagram Model Component() Nameable(name) Connectable() Diagram Model Component() Connectable() target Connections Diagram Model Connection(text, text Position, type) Diagram Model Container() Diagram Model Component() Diagram Model Container() children Diagram Model Object(fill Color) Diagram Model(connection Router Type) Archimate Model Object() Diagram Model(connection Router Type) Diagram Model Container() Diagram Model(connection Router Type) Documentable(documentation) Diagram Model(connection Router Type) Properties() Diagram Model Reference() Diagram Model Object(fill Color) Diagram Model Reference() Text Position(text Position) Diagram Model Reference() referenced Model Diagram Model(connection Router Type) Diagram Model Object(fill Color) Connectable() Diagram Model Object(fill Color) Font Attribute(font, font Color) Diagram Model Object(fill Color) Line Object(line Width, line Color) Diagram Model Object(fill Color) Text Alignment(text Alignment) Diagram Model Object(fill Color) bounds Bounds(x, y, width, height) Diagram Model Group() Diagram Model Object(fill Color) Diagram Model Group() Diagram Model Container() Diagram Model Group() Documentable(documentation) Diagram Model Group() Properties() Diagram Model Note(border Type) Diagram Model Object(fill Color) Diagram Model Note(border Type) Text Content(content) Diagram Model Note(border Type) Text Position(text Position) Diagram Model Image() Diagram Model Object(fill Color) Diagram Model Image() Border Object(border Color) Diagram Model Image() Diagram Model Image Provider(image Path) Diagram Model Connection(text, text Position, type) target Connectable() Diagram Model Connection(text, text Position, type) Font Attribute(font, font Color) Diagram Model Connection(text, text Position, type) Properties() Diagram Model Connection(text, text Position, type) Documentable(documentation) Diagram Model Connection(text, text Position, type) Line Object(line Width, line Color) Diagram Model Connection(text, text Position, type) bendpoints Diagram Model Bendpoint(start X, start Y, end X, end Y) Diagram Model Bendpoint(start X, start Y, end X, end Y) Cloneable() Line Object(line Width, line Color) Font Attribute(font, font Color) Text Position(text Position) Text Alignment(text Alignment) Border Object(border Color) Diagram Model Image Provider(image Path) Bounds(x, y, width, height) Lockable(locked) Archimate Diagram Model(viewpoint) Diagram Model(connection Router Type) Diagram Model Archimate Component() Connectable() Diagram Model Archimate Object(type) Diagram Model Object(fill Color) Diagram Model Archimate Object(type) Diagram Model Container() Diagram Model Archimate Object(type) Diagram Model Archimate Component() Diagram Model Archimate Object(type) Text Position(text Position) Diagram Model Archimate Object(type) archimate Element Archimate Element() Diagram Model Archimate Connection() Diagram Model Connection(text, text Position, type) Diagram Model Archimate Connection() Diagram Model Archimate Component() Diagram Model Archimate Connection() archimate Relationship Archimate Relationship() Sketch Model(background) Diagram Model(connection Router Type) Sketch Model Sticky() Diagram Model Object(fill Color) Sketch Model Sticky() Diagram Model Container() Sketch Model Sticky() Text Content(content) Sketch Model Sticky() Properties() Sketch Model Sticky() Text Position(text Position) Sketch Model Actor() Diagram Model Object(fill Color) Sketch Model Actor() Documentable(documentation) Sketch Model Actor() Properties()
Label: relational, Text: Database Versions(package Name, file Name) versions Database Version() Database Version() database Database() Database Version() table Mapping Table Mapping() Database Version() column Mapping Column Mapping() Database() Name Provider(name) Database() tables Table() Database() views View() Database() triggers Trigger() Database() indexes Index() Name Provider(name) Mapping Entry(previous, current) String To Table Mapping Entry Map(key) String To Column Mapping Entry Map(key) Table Mapping() curr2entry Map String To Table Mapping Entry Map(key) Column Mapping() curr2entry Map String To Column Mapping Entry Map(key) Collection() Table() Name Provider(name) Table() database Database() Table() columns Column(type) Table() constraints Table Constraint(name) Table Constraint(name) table Table() Primary Key Table Constraint() Table Constraint(name) Primary Key Table Constraint() columns Indexed Column() Unique Table Constraint() Table Constraint(name) Unique Table Constraint() columns Indexed Column() Check Table Constraint() Table Constraint(name) Check Table Constraint() expression Expression() Foreign Key Table Constraint() Table Constraint(name) Foreign Key Table Constraint() foreign Columns Column(type) Foreign Key Table Constraint() foreign Table Table() Column(type) Name Provider(name) Column(type) table Table() Column(type) constraints Column Constraint(name) BLOB() Indexed Column() column Column(type) Column Constraint(name) column Column(type) Primary Key Column Constraint() Column Constraint(name) Not Null Column Constraint() Column Constraint(name) Unique Column Constraint() Column Constraint(name) Check Column Constraint() Column Constraint(name) Check Column Constraint() expression Expression() Default Value Column Constraint() Column Constraint(name) Default Expression Value Column Constraint() Default String Value Column Constraint() Default Integer Value Column Constraint() Default Real Value Column Constraint() View() Name Provider(name) View() database Database() Index() database Database() Trigger() Name Provider(name) Trigger() database Database() Expression()
Label: trace, Text: Trace() steps Step() Trace() modelstate Model State() Trace() objectstates Object State() Trace() tracedobject Traced Object() Trace() values Value() Step() state Model State() Step() parametervalue Parameter Value(Direction Kind) Step() parent Big Step() Object State() value Value() Object State() tracedobject Traced Object() Value() Ref Value() Value() Ref Value() objectstate Traced Object() Literal Value() Value() Model State() objectstates Object State() Small Step() Step() Big Step() children Step() Traced Object() objectstates Object State() Parameter Value(Direction Kind) value Value() RETURN()
Label: simple-pl, Text: Wh() elements Program(name) Program(name) definition Definition() Definition() input Input(vars) Definition() command Commands() Definition() output Output(vars) Input(vars) Output(vars) Commands() commands Command() Command() Nop(nop) Affect() vars Vars(vars) Affect() exp Exprs() Vars(vars) Exprs() exprs Expr() Expr() Expr Simple() Expr() cons(list) Expr Simple()
Label: interaction, Text: Function(domain, min Duration, max Duration) Sequence Node(name) Function(domain, min Duration, max Duration) Process Node(label) Function(domain, min Duration, max Duration) sequence Nodes Sequence() Function(domain, min Duration, max Duration) flows Flow() Function(domain, min Duration, max Duration) output Ports Output Port() Function(domain, min Duration, max Duration) input Ports Input Port() Function(domain, min Duration, max Duration) descriptions Description(content) Sequence Node(name) Sequence() Sequence Node(name) And() Sequence() Or() Sequence() Start() Sequence() Final() Sequence() Loop() Sequence() Input Port() Port(id) Port(id) Item(name) Flow() Process Node(label) Flow() inputflow Edge Input Port() Flow() items Item(name) Process Node(label) Output Port() Port(id) Output Port() outputflow Edge Flow() Description(content) form() Loop Exit() Sequence() Iteration() Sequence()
Label: workflow, Text: finish To Finish() Process(name) process Elements Process Element() Work Definition(name) Process Element() Work Definition(name) links To Successors Work Sequence(link Type) Work Definition(name) ressourcecons Ressource Conso(quantity) Work Sequence(link Type) Process Element() Work Sequence(link Type) successor Work Definition(name) Process Element() process Process(name) Guidance(text) element Process Element() Ressource(type, quantity) Process Element() Ressource Conso(quantity) Process Element() Ressource Conso(quantity) workdefinition Work Definition(name) Ressource Conso(quantity) ressource Ressource(type, quantity)
Label: components, Text: Interface(name, signature) bindings Binding() Binding() to Interface(name, signature) Content(expression, language) content Parent Component(name) Content(expression, language) E Reference0 E Class0(E Attribute0) Required() Interface(name, signature) Provided() Interface(name, signature) Component(name) required Interfaces Required() Component(name) provided Interfaces Provided() Component(name) content Content(expression, language) E Class0(E Attribute0)
Label: trace, Text: State() action Activation firing Values Action Activation firing Value(firing) State() semantic Visitor runtime Model Element Values Semantic Visitor runtime Model Element Value() Trace() states Trace State() Trace() traced Objects Traced Objects() Traced Objects() uml traced Combined Fragments Traced Combined Fragment() Traced Objects() uml traced Create Link Object Actions Traced Create Link Object Action() Traced Objects() uml traced Initial Nodes Traced Initial Node() Traced Objects() uml traced Flow Final Nodes Traced Flow Final Node() Traced Objects() uml traced Expansion Regions Traced Expansion Region() Traced Objects() uml traced Create Object Actions Traced Create Object Action() Traced Objects() uml traced Lifelines Traced Lifeline() Traced Objects() intermediate Activities traced Fork Node Activations Traced Fork Node Activation() Traced Objects() uml traced Duration Constraints Traced Duration Constraint() Traced Objects() uml traced Destruction Occurrence Specifications Traced Destruction Occurrence Specification() Traced Objects() uml traced Connectors Traced Connector() Traced Objects() uml traced Send Object Actions Traced Send Object Action() Traced Objects() uml traced Package Imports Traced Package Import() Traced Objects() uml traced Classs Traced Class() Traced Objects() uml traced Interaction Uses Traced Interaction Use() Traced Objects() uml traced Generalization Sets Traced Generalization Set() Traced Objects() uml traced Change Events Traced Change Event() Traced Objects() uml traced Dependencys Traced Dependency() Traced Objects() uml traced Ports Traced Port() Traced Objects() intermediate Activities traced Initial Node Activations Traced Initial Node Activation() Traced Objects() uml traced Collaboration Uses Traced Collaboration Use() Traced Objects() intermediate Activities traced Activity Executions Traced Activity Execution() Traced Objects() uml traced Value Pins Traced Value Pin() Traced Objects() uml traced Nodes Traced Node() Traced Objects() uml traced Exception Handlers Traced Exception Handler() Traced Objects() uml traced Sequence Nodes Traced Sequence Node() Traced Objects() uml traced Start Classifier Behavior Actions Traced Start Classifier Behavior Action() Traced Objects() uml traced Extends Traced Extend() Traced Objects() integer Functions traced Integer Plus Function Behavior Executions Traced Integer Plus Function Behavior Execution() Traced Objects() uml traced Extensions Traced Extension() Traced Objects() uml traced Structured Activity Nodes Traced Structured Activity Node() Traced Objects() uml traced Execution Environments Traced Execution Environment() Traced Objects() uml traced Interval Constraints Traced Interval Constraint() Traced Objects() uml traced Consider Ignore Fragments Traced Consider Ignore Fragment() Traced Objects() uml traced Continuations Traced Continuation() Traced Objects() uml traced Time Constraints Traced Time Constraint() Traced Objects() uml traced Input Pins Traced Input Pin() Traced Objects() uml traced Clear Variable Actions Traced Clear Variable Action() Traced Objects() uml traced Constraints Traced Constraint() Traced Objects() uml traced Broadcast Signal Actions Traced Broadcast Signal Action() Traced Objects() uml traced Interactions Traced Interaction() Traced Objects() intermediate Activities traced Activity Node Activations Traced Activity Node Activation() Traced Objects() uml traced Parameters Traced Parameter() Traced Objects() uml traced Opaque Expressions Traced Opaque Expression() Traced Objects() uml traced Literal Strings Traced Literal String() Traced Objects() basic Actions traced Input Pin Activations Traced Input Pin Activation() Traced Objects() uml traced State Invariants Traced State Invariant() Traced Objects() integer Functions traced Integer Less Function Behavior Executions Traced Integer Less Function Behavior Execution() Traced Objects() uml traced Instance Specifications Traced Instance Specification() Traced Objects() uml traced Accept Call Actions Traced Accept Call Action() Traced Objects() uml traced Stereotypes Traced Stereotype() Traced Objects() uml traced Enumeration Literals Traced Enumeration Literal() Traced Objects() uml traced Substitutions Traced Substitution() Traced Objects() uml traced Information Flows Traced Information Flow() Traced Objects() uml traced Association Classs Traced Association Class() Traced Objects() uml traced Destroy Object Actions Traced Destroy Object Action() Traced Objects() basic Actions traced Call Behavior Action Activations Traced Call Behavior Action Activation() Traced Objects() intermediate Activities traced Activity Parameter Node Activations Traced Activity Parameter Node Activation() Traced Objects() uml traced Activity Partitions Traced Activity Partition() Traced Objects() uml traced State Machines Traced State Machine() Traced Objects() uml traced Messages Traced Message() Traced Objects() uml traced Deployments Traced Deployment() Traced Objects() uml traced Activitys Traced Activity() Traced Objects() uml traced Fork Nodes Traced Fork Node() Traced Objects() kernel traced References Traced Reference() Traced Objects() intermediate Actions traced Add Structural Feature Value Action Activations Traced Add Structural Feature Value Action Activation() Traced Objects() uml traced Instance Values Traced Instance Value() Traced Objects() uml traced Reclassify Object Actions Traced Reclassify Object Action() Traced Objects() uml traced Use Cases Traced Use Case() Traced Objects() intermediate Activities traced Join Node Activations Traced Join Node Activation() Traced Objects() kernel traced Objects Traced Object() Traced Objects() loci traced Semantic Visitors Traced Semantic Visitor() Traced Objects() uml traced Time Events Traced Time Event() Traced Objects() uml traced Part Decompositions Traced Part Decomposition() Traced Objects() uml traced Interruptible Activity Regions Traced Interruptible Activity Region() Traced Objects() uml traced Protocol Transitions Traced Protocol Transition() Traced Objects() uml traced Interaction Operands Traced Interaction Operand() Traced Objects() uml traced Generalizations Traced Generalization() Traced Objects() uml traced Remove Structural Feature Value Actions Traced Remove Structural Feature Value Action() Traced Objects() uml traced Intervals Traced Interval() Traced Objects() kernel traced Integer Values Traced Integer Value() Traced Objects() uml traced Any Receive Events Traced Any Receive Event() Traced Objects() uml traced Read Structural Feature Actions Traced Read Structural Feature Action() Traced Objects() uml traced Data Store Nodes Traced Data Store Node() Traced Objects() uml traced Protocol State Machines Traced Protocol State Machine() Traced Objects() uml traced Receptions Traced Reception() Traced Objects() uml traced Message Occurrence Specifications Traced Message Occurrence Specification() Traced Objects() uml traced Template Bindings Traced Template Binding() Traced Objects() uml traced Deployment Specifications Traced Deployment Specification() Traced Objects() uml traced Usages Traced Usage() Traced Objects() uml traced Action Input Pins Traced Action Input Pin() Traced Objects() uml traced Read Variable Actions Traced Read Variable Action() Traced Objects() intermediate Activities traced Activity Final Node Activations Traced Activity Final Node Activation() Traced Objects() uml traced Destroy Link Actions Traced Destroy Link Action() Traced Objects() uml traced Literal Integers Traced Literal Integer() Traced Objects() uml traced Signal Events Traced Signal Event() Traced Objects() kernel traced Boolean Values Traced Boolean Value() Traced Objects() uml traced Conditional Nodes Traced Conditional Node() Traced Objects() uml traced Connection Point References Traced Connection Point Reference() Traced Objects() uml traced Realizations Traced Realization() Traced Objects() uml traced Read Link Object End Qualifier Actions Traced Read Link Object End Qualifier Action() Traced Objects() basic Actions traced Opaque Action Activations Traced Opaque Action Activation() Traced Objects() uml traced Join Nodes Traced Join Node() Traced Objects() uml traced Redefinable Template Signatures Traced Redefinable Template Signature() Traced Objects() uml traced Models Traced Model() Traced Objects() uml traced Central Buffer Nodes Traced Central Buffer Node() Traced Objects() kernel traced Literal Integer Evaluations Traced Literal Integer Evaluation() Traced Objects() uml traced Create Link Actions Traced Create Link Action() Traced Objects() uml traced Extension Points Traced Extension Point() Traced Objects() uml traced Signals Traced Signal() Traced Objects() uml traced Execution Occurrence Specifications Traced Execution Occurrence Specification() Traced Objects() uml traced Time Intervals Traced Time Interval() Traced Objects() uml traced Interaction Constraints Traced Interaction Constraint() Traced Objects() intermediate Activities traced Decision Node Activations Traced Decision Node Activation() Traced Objects() uml traced Interfaces Traced Interface() Traced Objects() uml traced Opaque Behaviors Traced Opaque Behavior() Traced Objects() uml traced Protocol Conformances Traced Protocol Conformance() Traced Objects() uml traced Packages Traced Package() Traced Objects() uml traced Call Events Traced Call Event() Traced Objects() uml traced Loop Nodes Traced Loop Node() Traced Objects() uml traced Comments Traced Comment() Traced Objects() uml traced Data Types Traced Data Type() Traced Objects() uml traced Component Realizations Traced Component Realization() Traced Objects() uml traced Accept Event Actions Traced Accept Event Action() Traced Objects() uml traced Occurrence Specifications Traced Occurrence Specification() Traced Objects() uml traced Parameter Sets Traced Parameter Set() Traced Objects() uml traced Object Flows Traced Object Flow() Traced Objects() uml traced Operations Traced Operation() Traced Objects() uml traced Read Self Actions Traced Read Self Action() Traced Objects() intermediate Actions traced Read Structural Feature Action Activations Traced Read Structural Feature Action Activation() Traced Objects() uml traced Decision Nodes Traced Decision Node() Traced Objects() uml traced Package Merges Traced Package Merge() Traced Objects() uml traced Clauses Traced Clause() Traced Objects() uml traced Reply Actions Traced Reply Action() Traced Objects() uml traced Triggers Traced Trigger() Traced Objects() uml traced Transitions Traced Transition() Traced Objects() uml traced Duration Intervals Traced Duration Interval() Traced Objects() uml traced Link End Datas Traced Link End Data() Traced Objects() uml traced Connectable Element Template Parameters Traced Connectable Element Template Parameter() Traced Objects() uml traced Operation Template Parameters Traced Operation Template Parameter() Traced Objects() uml traced Information Items Traced Information Item() Traced Objects() uml traced Action Execution Specifications Traced Action Execution Specification() Traced Objects() uml traced Output Pins Traced Output Pin() Traced Objects() uml traced Template Parameter Substitutions Traced Template Parameter Substitution() Traced Objects() uml traced Durations Traced Duration() Traced Objects() uml traced Reduce Actions Traced Reduce Action() Traced Objects() uml traced Final States Traced Final State() Traced Objects() uml traced Opaque Actions Traced Opaque Action() Traced Objects() uml traced Devices Traced Device() Traced Objects() uml traced Propertys Traced Property() Traced Objects() uml traced Extension Ends Traced Extension End() Traced Objects() uml traced Images Traced Image() Traced Objects() uml traced Qualifier Values Traced Qualifier Value() Traced Objects() uml traced Add Structural Feature Value Actions Traced Add Structural Feature Value Action() Traced Objects() uml traced Expansion Nodes Traced Expansion Node() Traced Objects() uml traced Activity Parameter Nodes Traced Activity Parameter Node() Traced Objects() uml traced Behavior Execution Specifications Traced Behavior Execution Specification() Traced Objects() uml traced Duration Observations Traced Duration Observation() Traced Objects() uml traced Profile Applications Traced Profile Application() Traced Objects() uml traced Call Operation Actions Traced Call Operation Action() Traced Objects() uml traced Artifacts Traced Artifact() Traced Objects() uml traced Connector Ends Traced Connector End() Traced Objects() uml traced Variables Traced Variable() Traced Objects() uml traced Call Behavior Actions Traced Call Behavior Action() Traced Objects() uml traced Read Link Object End Actions Traced Read Link Object End Action() Traced Objects() uml traced Enumerations Traced Enumeration() Traced Objects() uml traced Literal Unlimited Naturals Traced Literal Unlimited Natural() Traced Objects() uml traced Template Signatures Traced Template Signature() Traced Objects() basic Actions traced Output Pin Activations Traced Output Pin Activation() Traced Objects() uml traced Read Extent Actions Traced Read Extent Action() Traced Objects() uml traced Link End Destruction Datas Traced Link End Destruction Data() Traced Objects() uml traced String Expressions Traced String Expression() Traced Objects() uml traced Primitive Types Traced Primitive Type() Traced Objects() kernel traced Literal Boolean Evaluations Traced Literal Boolean Evaluation() Traced Objects() uml traced Communication Paths Traced Communication Path() Traced Objects() uml traced Raise Exception Actions Traced Raise Exception Action() Traced Objects() uml traced Read Link Actions Traced Read Link Action() Traced Objects() uml traced Literal Booleans Traced Literal Boolean() Traced Objects() uml traced Start Object Behavior Actions Traced Start Object Behavior Action() Traced Objects() intermediate Actions traced Value Specification Action Activations Traced Value Specification Action Activation() Traced Objects() uml traced Literal Nulls Traced Literal Null() Traced Objects() uml traced States Traced State() Traced Objects() uml traced Regions Traced Region() Traced Objects() uml traced Includes Traced Include() Traced Objects() uml traced Literal Reals Traced Literal Real() Traced Objects() uml traced Add Variable Value Actions Traced Add Variable Value Action() Traced Objects() uml traced Clear Structural Feature Actions Traced Clear Structural Feature Action() Traced Objects() uml traced Associations Traced Association() Traced Objects() uml traced Expressions Traced Expression() Traced Objects() uml traced Unmarshall Actions Traced Unmarshall Action() Traced Objects() uml traced Slots Traced Slot() Traced Objects() intermediate Actions traced Create Object Action Activations Traced Create Object Action Activation() Traced Objects() uml traced Collaborations Traced Collaboration() Traced Objects() uml traced Test Identity Actions Traced Test Identity Action() Traced Objects() uml traced Profiles Traced Profile() Traced Objects() uml traced Remove Variable Value Actions Traced Remove Variable Value Action() Traced Objects() uml traced Actors Traced Actor() Traced Objects() uml traced Manifestations Traced Manifestation() Traced Objects() uml traced Interface Realizations Traced Interface Realization() Traced Objects() uml traced Send Signal Actions Traced Send Signal Action() Traced Objects() uml traced Function Behaviors Traced Function Behavior() Traced Objects() uml traced Value Specification Actions Traced Value Specification Action() Traced Objects() uml traced Time Expressions Traced Time Expression() Traced Objects() uml traced Abstractions Traced Abstraction() Traced Objects() uml traced Read Is Classified Object Actions Traced Read Is Classified Object Action() Traced Objects() uml traced Template Parameters Traced Template Parameter() Traced Objects() intermediate Activities traced Merge Node Activations Traced Merge Node Activation() Traced Objects() integer Functions traced Integer Greater Function Behavior Executions Traced Integer Greater Function Behavior Execution() Traced Objects() uml traced Pseudostates Traced Pseudostate() Traced Objects() uml traced Link End Creation Datas Traced Link End Creation Data() Traced Objects() uml traced Clear Association Actions Traced Clear Association Action() Traced Objects() uml traced Merge Nodes Traced Merge Node() Traced Objects() uml traced Element Imports Traced Element Import() Traced Objects() uml traced Components Traced Component() Traced Objects() uml traced Classifier Template Parameters Traced Classifier Template Parameter() Traced Objects() uml traced Activity Final Nodes Traced Activity Final Node() Traced Objects() uml traced Gates Traced Gate() Traced Objects() uml traced Time Observations Traced Time Observation() Traced Objects() uml traced Control Flows Traced Control Flow() Traced Objects() uml traced General Orderings Traced General Ordering() Traced Combined Fragment() Traced Interaction Fragment() Traced Interaction Fragment() Traced Named Element() Traced Named Element() Traced Element() Traced Element() Traced E Model Element() Traced Conditional Node() Traced Structured Activity Node() Traced Structured Activity Node() Traced Action() Traced Structured Activity Node() Traced Namespace() Traced Structured Activity Node() Traced Activity Group() Traced Action() Traced Executable Node() Traced Executable Node() Traced Activity Node() Traced Activity Node() Traced Redefinable Element() Traced Activity Node() Activity Content() Traced Redefinable Element() Traced Named Element() Traced Namespace() Traced Named Element() Traced Activity Group() Traced Named Element() Traced Activity Group() Activity Content() Traced Create Link Object Action() Traced Create Link Action() Traced Create Link Action() Traced Write Link Action() Traced Write Link Action() Traced Link Action() Traced Link Action() Traced Action() Traced Initial Node() Traced Control Node() Traced Control Node() Traced Activity Node() Traced Flow Final Node() Traced Final Node() Traced Final Node() Traced Control Node() Traced Expansion Region() Traced Structured Activity Node() Traced Create Object Action() Traced Action() Traced Lifeline() Traced Named Element() Traced Duration Constraint() Traced Interval Constraint() Traced Interval Constraint() Traced Constraint() Traced Constraint() Traced Packageable Element() Traced Packageable Element() Traced Named Element() Traced Packageable Element() Traced Parameterable Element() Traced Parameterable Element() Traced Element() Traced Pseudostate() Traced Vertex() Traced Vertex() Traced Named Element() Traced Destruction Occurrence Specification() Traced Message Occurrence Specification() Traced Message Occurrence Specification() Traced Occurrence Specification() Traced Message Occurrence Specification() Traced Message End() Traced Occurrence Specification() Traced Interaction Fragment() Traced Message End() Traced Named Element() Traced Package() Traced Namespace() Traced Package() Traced Packageable Element() Traced Package() Traced Templateable Element() Traced Templateable Element() Traced Element() Traced Connector() Traced Feature() Traced Feature() Traced Redefinable Element() Traced Send Object Action() Traced Invocation Action() Traced Invocation Action() Traced Action() Traced Opaque Action() Traced Action() Traced Protocol Conformance() Traced Directed Relationship() Traced Directed Relationship() Traced Relationship() Traced Relationship() Traced Element() Traced Call Behavior Action() Traced Call Action() Traced Call Action() Traced Invocation Action() Traced Package Import() Traced Directed Relationship() Traced Class() Traced Encapsulated Classifier() Traced Class() Traced Behaviored Classifier() Traced Encapsulated Classifier() Traced Structured Classifier() Traced Structured Classifier() Traced Classifier() Traced Classifier() Traced Namespace() Traced Classifier() Traced Redefinable Element() Traced Classifier() Traced Type() Traced Classifier() Traced Templateable Element() Traced Type() Traced Packageable Element() Traced Behaviored Classifier() Traced Classifier() Traced Activity Final Node() Traced Final Node() Traced Observation() Traced Packageable Element() Traced Interaction Use() Traced Interaction Fragment() Traced Loop Node() Traced Structured Activity Node() Traced Signal() Traced Classifier() Traced Generalization Set() Traced Packageable Element() Traced Change Event() Traced Event() Traced Event() Traced Packageable Element() Traced Dependency() Traced Packageable Element() Traced Dependency() Traced Directed Relationship() Traced Port() Traced Property() Traced Property() Traced Structural Feature() Traced Property() Traced Connectable Element() Traced Property() Traced Deployment Target() Traced Structural Feature() Traced Feature() Traced Structural Feature() Traced Typed Element() Traced Structural Feature() Traced Multiplicity Element() Traced Typed Element() Traced Named Element() Traced Multiplicity Element() Traced Element() Traced Connectable Element() Traced Typed Element() Traced Connectable Element() Traced Parameterable Element() Traced Deployment Target() Traced Named Element() Traced Collaboration Use() Traced Named Element() Traced Value Pin() Traced Input Pin() Traced Input Pin() Traced Pin() Traced Pin() Traced Object Node() Traced Pin() Traced Multiplicity Element() Traced Object Node() Traced Activity Node() Traced Object Node() Traced Typed Element() Traced Deployment Specification() Traced Artifact() Traced Artifact() Traced Classifier() Traced Artifact() Traced Deployed Artifact() Traced Deployed Artifact() Traced Named Element() Traced Transition() Traced Namespace() Traced Transition() Traced Redefinable Element() Traced Node() Traced Class() Traced Node() Traced Deployment Target() Traced Exception Handler() Traced Element() Traced Sequence Node() Traced Structured Activity Node() Traced Use Case() Traced Behaviored Classifier() Traced Start Classifier Behavior Action() Traced Action() Traced Extend() Traced Named Element() Traced Extend() Traced Directed Relationship() Traced Remove Structural Feature Value Action() Traced Write Structural Feature Action() Traced Write Structural Feature Action() Traced Structural Feature Action() Traced Structural Feature Action() Traced Action() Traced Read Link Action() Traced Link Action() Traced Extension() Traced Association() Traced Association() Traced Classifier() Traced Association() Traced Relationship() Traced Execution Environment() Traced Node() Traced Consider Ignore Fragment() Traced Combined Fragment() Traced Continuation() Traced Interaction Fragment() Traced Call Operation Action() Traced Call Action() Traced Time Constraint() Traced Interval Constraint() Traced Clear Variable Action() Traced Variable Action() Traced Variable Action() Traced Action() Traced Read Self Action() Traced Action() Traced Literal String() Traced Literal Specification() Traced Literal Specification() Traced Value Specification() Traced Value Specification() Traced Packageable Element() Traced Value Specification() Traced Typed Element() Traced Broadcast Signal Action() Traced Invocation Action() Traced Interaction() Traced Behavior() Traced Interaction() Traced Interaction Fragment() Traced Behavior() Traced Class() Traced Slot() Traced Element() Traced Literal Null() Traced Literal Specification() Traced Parameter() Traced Connectable Element() Traced Parameter() Traced Multiplicity Element() Traced Opaque Expression() Traced Value Specification() Traced Trigger() Traced Named Element() Traced State Invariant() Traced Interaction Fragment() Traced Association Class() Traced Class() Traced Association Class() Traced Association() Traced Instance Specification() Traced Deployment Target() Traced Instance Specification() Traced Packageable Element() Traced Instance Specification() Traced Deployed Artifact() Traced Template Signature() Traced Element() Traced Link End Destruction Data() Traced Link End Data() Traced Link End Data() Traced Element() Traced Accept Call Action() Traced Accept Event Action() Traced Accept Event Action() Traced Action() Traced Reduce Action() Traced Action() Traced Raise Exception Action() Traced Action() Traced Stereotype() Traced Class() Traced Clear Association Action() Traced Action() Traced Enumeration Literal() Traced Instance Specification() Traced Substitution() Traced Realization() Traced Realization() Traced Abstraction() Traced Abstraction() Traced Dependency() Traced Execution Specification() Traced Interaction Fragment() Traced Reply Action() Traced Action() Traced Actor() Traced Behaviored Classifier() Traced Information Flow() Traced Packageable Element() Traced Information Flow() Traced Directed Relationship() Traced Destroy Object Action() Traced Action() Traced Activity Partition() Traced Activity Group() Traced State Machine() Traced Behavior() Traced Message() Traced Named Element() Traced Read Link Object End Qualifier Action() Traced Action() Traced Deployment() Traced Dependency() Traced Activity() Traced Behavior() Traced Fork Node() Traced Control Node() Traced Protocol State Machine() Traced State Machine() Traced Interval() Traced Value Specification() Traced Clear Structural Feature Action() Traced Structural Feature Action() Traced Object Flow() Traced Activity Edge() Traced Activity Edge() Traced Redefinable Element() Traced Test Identity Action() Traced Action() Traced Instance Value() Traced Value Specification() Traced Literal Unlimited Natural() Traced Literal Specification() Traced Reclassify Object Action() Traced Action() Traced Time Event() Traced Event() Traced Part Decomposition() Traced Interaction Use() Traced Interruptible Activity Region() Traced Activity Group() Traced Add Variable Value Action() Traced Write Variable Action() Traced Write Variable Action() Traced Variable Action() Traced Protocol Transition() Traced Transition() Traced Image() Traced Element() Traced Literal Real() Traced Literal Specification() Traced Interaction Operand() Traced Namespace() Traced Interaction Operand() Traced Interaction Fragment() Traced Generalization() Traced Directed Relationship() Traced Information Item() Traced Classifier() Traced Model() Traced Package() Traced Classifier Template Parameter() Traced Template Parameter() Traced Template Parameter() Traced Element() Traced Operation() Traced Behavioral Feature() Traced Operation() Traced Parameterable Element() Traced Operation() Traced Templateable Element() Traced Behavioral Feature() Traced Namespace() Traced Behavioral Feature() Traced Feature() Traced Any Receive Event() Traced Message Event() Traced Message Event() Traced Event() Traced Primitive Type() Traced Data Type() Traced Data Type() Traced Classifier() Traced Read Structural Feature Action() Traced Structural Feature Action() Traced Parameter Set() Traced Named Element() Traced Data Store Node() Traced Central Buffer Node() Traced Central Buffer Node() Traced Object Node() Traced Send Signal Action() Traced Invocation Action() Traced Reception() Traced Behavioral Feature() Traced Template Binding() Traced Directed Relationship() Traced Usage() Traced Dependency() Traced Action Input Pin() Traced Input Pin() Traced Read Variable Action() Traced Variable Action() Traced Destroy Link Action() Traced Write Link Action() Traced Literal Integer() Traced Literal Specification() Traced Signal Event() Traced Message Event() Traced Read Link Object End Action() Traced Action() Traced Time Interval() Traced Interval() Traced Operation Template Parameter() Traced Template Parameter() Traced Duration Observation() Traced Observation() Traced Connection Point Reference() Traced Vertex() Traced Time Expression() Traced Value Specification() Traced Qualifier Value() Traced Element() Traced Duration Interval() Traced Interval() Traced Function Behavior() Traced Opaque Behavior() Traced Opaque Behavior() Traced Behavior() Traced Interface Realization() Traced Realization() Traced Device() Traced Node() Traced Template Parameter Substitution() Traced Element() Traced Join Node() Traced Control Node() Traced Redefinable Template Signature() Traced Redefinable Element() Traced Redefinable Template Signature() Traced Template Signature() Traced Read Is Classified Object Action() Traced Action() Traced Time Observation() Traced Observation() Traced Decision Node() Traced Control Node() Traced Element Import() Traced Directed Relationship() Traced Extension Point() Traced Redefinable Element() Traced Execution Occurrence Specification() Traced Occurrence Specification() Traced Interaction Constraint() Traced Constraint() Traced Add Structural Feature Value Action() Traced Write Structural Feature Action() Traced Interface() Traced Classifier() Traced Component() Traced Class() Traced Call Event() Traced Message Event() Traced Comment() Traced Element() Traced Behavior Execution Specification() Traced Execution Specification() Traced Component Realization() Traced Realization() Traced Communication Path() Traced Association() Traced Package Merge() Traced Directed Relationship() Traced Clause() Traced Element() Traced Final State() Traced State() Traced State() Traced Namespace() Traced State() Traced Redefinable Element() Traced State() Traced Vertex() Traced Connectable Element Template Parameter() Traced Template Parameter() Traced Action Execution Specification() Traced Execution Specification() Traced Output Pin() Traced Pin() Traced Duration() Traced Value Specification() Traced Unmarshall Action() Traced Action() Traced Profile() Traced Package() Traced Extension End() Traced Property() Traced Expansion Node() Traced Object Node() Traced Activity Parameter Node() Traced Object Node() Traced Profile Application() Traced Directed Relationship() Traced Connector End() Traced Multiplicity Element() Traced Enumeration() Traced Data Type() Traced Collaboration() Traced Structured Classifier() Traced Collaboration() Traced Behaviored Classifier() Traced Variable() Traced Connectable Element() Traced Variable() Traced Multiplicity Element() Traced Value Specification Action() Traced Action() Traced Read Extent Action() Traced Action() Traced String Expression() Traced Expression() Traced String Expression() Traced Templateable Element() Traced Expression() Traced Value Specification() Traced General Ordering() Traced Named Element() Traced Literal Boolean() Traced Literal Specification() Traced Start Object Behavior Action() Traced Call Action() Traced Region() Traced Namespace() Traced Region() Traced Redefinable Element() Traced Include() Traced Named Element() Traced Include() Traced Directed Relationship() Traced Control Flow() Traced Activity Edge() Traced Gate() Traced Message End() Traced Remove Variable Value Action() Traced Write Variable Action() Traced Manifestation() Traced Abstraction() Traced Link End Creation Data() Traced Link End Data() Traced Merge Node() Traced Control Node() Traced E Model Element() Traced Fork Node Activation() Traced Control Node Activation() Traced Control Node Activation() Traced Activity Node Activation() Traced Activity Node Activation() Traced Semantic Visitor() Traced Object Node Activation() Traced Activity Node Activation() Traced Initial Node Activation() Traced Control Node Activation() Traced Activity Execution() Traced Execution() Traced Merge Node Activation() Traced Control Node Activation() Traced Activity Parameter Node Activation() Traced Object Node Activation() Traced Join Node Activation() Traced Control Node Activation() Traced Activity Final Node Activation() Traced Control Node Activation() Traced Decision Node Activation() Traced Control Node Activation() Traced Semantic Visitor() runtime Model Element Trace Semantic Visitor runtime Model Element Value() Traced Pin Activation() Traced Object Node Activation() Traced Action Activation() Traced Activity Node Activation() Traced Action Activation() firing Trace Action Activation firing Value(firing) Traced Invocation Action Activation() Traced Action Activation() Traced Call Action Activation() Traced Invocation Action Activation() Traced Opaque Action Activation() Traced Action Activation() Traced Input Pin Activation() Traced Pin Activation() Traced Call Behavior Action Activation() Traced Call Action Activation() Traced Output Pin Activation() Traced Pin Activation() Traced Structural Feature Action Activation() Traced Action Activation() Traced Read Structural Feature Action Activation() Traced Structural Feature Action Activation() Traced Add Structural Feature Value Action Activation() Traced Write Structural Feature Action Activation() Traced Write Structural Feature Action Activation() Traced Structural Feature Action Activation() Traced Value Specification Action Activation() Traced Action Activation() Traced Create Object Action Activation() Traced Action Activation() Traced Execution() Traced Object() Traced Opaque Behavior Execution() Traced Execution() Traced Object() Traced Extensional Value() Traced Extensional Value() Traced Compound Value() Traced Compound Value() Traced Structured Value() Traced Structured Value() Traced Value() Traced Value() Traced Semantic Visitor() Traced Reference() Traced Structured Value() Traced Literal Evaluation() Traced Evaluation() Traced Evaluation() Traced Semantic Visitor() Traced Integer Value() Traced Primitive Value() Traced Primitive Value() Traced Value() Traced Literal Boolean Evaluation() Traced Literal Evaluation() Traced Boolean Value() Traced Primitive Value() Traced Literal Integer Evaluation() Traced Literal Evaluation() Traced Integer Plus Function Behavior Execution() Traced Opaque Behavior Execution() Traced Integer Less Function Behavior Execution() Traced Opaque Behavior Execution() Traced Integer Greater Function Behavior Execution() Traced Opaque Behavior Execution() Semantic Visitor runtime Model Element Value() runtime Model Element Traced Element() Semantic Visitor runtime Model Element Value() parent Traced Semantic Visitor() Semantic Visitor runtime Model Element Value() states State() Action Activation firing Value(firing) states State() Action Activation firing Value(firing) parent Traced Action Activation() Action Activation firing Value(firing) firing E Boolean() Activity Content() E Boolean()
Label: webapp, Text: Named(name) Web Application Model() Named(name) Web Application Model() entities Entity(number Of Columns) Web Application Model() data Sources Data Source() Web Application Model() pages Page() Data Source() Named(name) Data Source() entity Entity(number Of Columns) Entity(number Of Columns) Named(name) Entity(number Of Columns) columns Column(type, lenght, PK) Entity(number Of Columns) relates Related Entity() Column(type, lenght, PK) Named(name) Text() Related Entity() Named(name) Related Entity() relates To Entity(number Of Columns) Page() Named(name) Page() contents Content() Page() links Link() Page() forms Form() Content() Named(name) Content() data Source Data Source() Form() Named(name) Link() Named(name) Link() to Page() Menu(item Name, url, order) Content() Single Content() Content() Multiple Content(paginated, size) Content() CRUD Form() Form() CRUD Form() fields Field(type) Field(type) Named(name) Submit Button()
Label: class-diagram, Text: Element() Named Element(name) Element() Namespace() Element() Package() Named Element(name) Package() Namespace() Package() owned Classes Class() Class() Named Element(name) Root() Element() Root() owned Packages Package()
Label: petrinet, Text: Place(token, final Marking) Node(name, type) Pt Net() places Place(token, final Marking) Pt Net() transitions Transition() Pt Net() final Marking Marking() Pt Net() annotation Annotation(text) Pt Net() arcs Arc(weight) Transition() Node(name, type) Node(name, type) annotation Annotation(text) Node(name, type) outgoing Arc(weight) Marking() places Ref Marked Place(token) Place Reference() place Place(token, final Marking) Ref Marked Place(token) Place Reference() Annotation(text) Arc(weight) target Node(name, type) Arc To Place() Arc(weight) Arc To Transition() Arc(weight) inout() Transition Ext(probability, min Time, cost, max Time) Transition() Place Ext(probability, is Start) Place(token, final Marking) Arc To Place Ext(probability) Arc To Place() Arc To Transition Ext(probability) Arc To Transition()
Label: transformation, Text: Module(name) var Name Name Exp CS(namespace, element) Module(name) elements Module Element(name) Module Element(name) Matched Rule() Module Element(name) Matched Rule() in Pattern In Pattern() Matched Rule() variables Rule Variable Declaration(var Name) Matched Rule() out Pattern Out Pattern() Matched Rule() action Block Action Block() Called Rule() Module Element(name) Called Rule() variables Rule Variable Declaration(var Name) Called Rule() out Pattern Out Pattern() Called Rule() action Block Action Block() Query Rule() Module Element(name) Query Rule() parameters ATL Parameter CS(var Name) Query Rule() init Expression Exp CS() Helper() Module Element(name) Helper() definition ATL Def CS(var Name) ATL Def CS(var Name) parameters ATL Parameter CS(var Name) ATL Def CS(var Name) type ATL Type(model Name) ATL Def CS(var Name) init Expression Exp CS() ATL Parameter CS(var Name) type ATL Type(model Name) Rule Variable Declaration(var Name) type ATL Type(model Name) Rule Variable Declaration(var Name) init Expression Exp CS() In Pattern() elements In Pattern Element(var Name) In Pattern() filter Exp CS() In Pattern Element(var Name) type ATL Type(model Name) Out Pattern() elements Out Pattern Element() Out Pattern Element() Simple Out Pattern Element(var Name) Out Pattern Element() Simple Out Pattern Element(var Name) type ATL Type(model Name) Simple Out Pattern Element(var Name) bindings Binding(property Name) For Each Out Pattern Element() Out Pattern Element() For Each Out Pattern Element() collection Exp CS() Binding(property Name) value Exp CS() Action Block() statements Statement() Statement() Binding Stat(property Name) Statement() Binding Stat(property Name) value Exp CS() ATL Type(model Name) type Type Exp CS() Collection Type CS() Type Literal CS(name) Collection Type CS() owned Type Type Exp CS() Tuple Type CS(backtrack) Type Literal CS(name) Tuple Type CS(backtrack) owned Parts tuple Part CS(name) tuple Part CS(name) owned Type Type Exp CS() Primitive Literal Exp CS() Primary Exp CS() Tuple Literal Exp CS() Primary Exp CS() Tuple Literal Exp CS() owned Parts Tuple Literal Part CS(name) Tuple Literal Part CS(name) owned Type Type Exp CS() Tuple Literal Part CS(name) init Expression Exp CS() Number Literal Exp CS(name) Primitive Literal Exp CS() String Literal Exp CS(name) Primitive Literal Exp CS() Boolean Literal Exp CS(name) Primitive Literal Exp CS() Unlimited Natural Literal Exp CS() Primitive Literal Exp CS() Invalid Literal Exp CS() Primitive Literal Exp CS() Null Literal Exp CS() Primitive Literal Exp CS() Primitive Type CS() Type Literal CS(name) Type Literal CS(name) Type Exp CS() Type Literal Exp CS() owned Type Type Literal CS(name) Type Name Exp CS(namespace, element) Type Exp CS() Type Exp CS() Navigating Arg CS() name Navigating Arg Exp CS() Navigating Arg CS() owned Type Type Exp CS() Navigating Arg CS() init Exp CS() Navigating Bar Arg CS(prefix) name Navigating Arg Exp CS() Navigating Bar Arg CS(prefix) owned Type Type Exp CS() Navigating Bar Arg CS(prefix) init Exp CS() Navigating Comma Arg CS(prefix) name Navigating Arg Exp CS() Navigating Comma Arg CS(prefix) owned Type Type Exp CS() Navigating Comma Arg CS(prefix) init Exp CS() Navigating Semi Arg CS(prefix) name Navigating Arg Exp CS() Navigating Semi Arg CS(prefix) owned Type Type Exp CS() Navigating Semi Arg CS(prefix) init Exp CS() Navigating Arg Exp CS() If Exp CS() Primary Exp CS() If Exp CS() else Expression Exp CS() Let Exp CS() Primary Exp CS() Let Exp CS() variable Let Variable CS(name) Let Exp CS() in Exp CS() Let Variable CS(name) owned Type Type Exp CS() Let Variable CS(name) init Expression Exp CS() Nested Exp CS() Primary Exp CS() Nested Exp CS() source Exp CS() Self Exp CS() Primary Exp CS() Primary Exp CS() Prefixed Exp CS() String Exp Cs(name) Primary Exp CS() Name Exp CS(namespace, element) Index Exp CS() Exp CS() Navigating Arg Exp CS() Infixed Exp CS() Exp CS() Binary Operator CS(name) Infix Operator CS() Binary Operator CS(name) Navigation Operator CS() Binary Operator CS(name) Prefixed Exp CS() Infixed Exp CS() Unary Operator CS(name) Index Exp CS() Navigating Exp CS Base() Index Exp CS() second Indexes Exp CS() Navigating Exp CS Base() Navigating Exp CS() Navigating Exp CS() Primary Exp CS() Navigating Exp CS() named Exp Navigating Exp CS Base() Infix Exp CS() Infixed Exp CS() Infix Exp CS() owned Expression Prefixed Exp CS() Infix Exp CS() owned Operator Binary Operator CS(name) Prefix Exp CS() Prefixed Exp CS() Prefix Exp CS() owned Operator Unary Operator CS(name) Prefix Exp CS() owned Expression Primary Exp CS()
Label: simple-pl, Text: Specification() declarations Declaration() Declaration() Comment(comment) Declaration() Import(import URI) Declaration() External Function(name) Declaration() External Function(name) Function Ref() External Function(name) inputs Input Arg List() External Function(name) output Output Arg() External Procedure(name) Declaration() External Procedure(name) Function Ref() External Procedure(name) inputs Input Arg List() External Procedure(name) outputs Output Arg List() External Procedure(name) attribute Block Attribute Block() Local Function(name) Declaration() Local Function(name) Function Ref() Local Function(name) inputs Input Arg List() Local Function(name) output Output Arg() Local Function(name) var Block Var Block() Local Function(name) equation Block Equation Block() Local Procedure(name) Declaration() Local Procedure(name) Function Ref() Local Procedure(name) inputs Input Arg List() Local Procedure(name) outputs Output Arg List() Local Procedure(name) var Block Var Block() Local Procedure(name) attribute Block Attribute Block() Local Procedure(name) statementblock Statement Block() Type Declaration(name) Declaration() Var Block() Enum Type Def() Type Declaration(name) Enum Type Def() enumerations Enum Value() Enum Value() Variable Ref(name) Record Type Def() Type Declaration(name) Record Type Def() fields Record Field Type(field Name) Array Type Def(size) Type Declaration(name) Array Type Def(size) base Type Type() Abstract Type Def() Type Declaration(name) Record Field Type(field Name) field Type Type() Constant Declaration() Declaration() Constant Declaration() Variable Ref(name) Constant Declaration() type Type() Constant Declaration() expr Expr() Global Declaration() Declaration() Global Declaration() Variable Ref(name) Global Declaration() type Type() Variable Ref(name) Input Arg List() input Args Input Arg() Input Arg() Variable Ref(name) Input Arg() type Type() Local Arg() Variable Ref(name) Local Arg() type Type() Output Arg List() output Args Output Arg() Output Arg() Variable Ref(name) Output Arg() type Type() Type() Attribute Block() Attribute() Precondition(name) Attribute() Precondition(name) expr Expr() Postcondition(name) Attribute() Postcondition(name) expr Expr() Define Use Ref() reference Expr Expr() Define() Attribute() Define() elements Define Use Ref() Uses() Attribute() Uses() elements Define Use Ref() Statement Block() statements Statement() Statement() Void Statement() Statement() Void Statement() Equation() Void Statement() expr Expr() Assignment Statement() Statement() Assignment Statement() Equation() Assignment Statement() ids Id List() Assignment Statement() rhs Expr() If Then Else Statement() Statement() If Then Else Statement() cond Expr() If Then Else Statement() then Block Statement Block() If Then Else Statement() else Else() Else() While Statement() Statement() While Statement() cond Expr() While Statement() block Statement Block() For Statement() Statement() For Statement() increment Statement Assignment Statement() For Statement() limit Expr Expr() For Statement() block Statement Block() Label Statement(name) Statement() Goto Statement() Statement() Goto Statement() label Label Statement(name) Goto Statement() when Expr Expr() Equation Block() equations Equation() Equation() Id List() ids Variable Ref(name) Expr() Function Ref() Array Expr() expr List Expr() Array Expr() array Definition Array Type Def(size) Record Expr() Expr() Record Expr() record Definition Record Type Def() Record Expr() field Expr List Record Field Expr(field Name) Record Field Expr(field Name) field Expr Expr() Expr List() expr List Expr() Type Alias() Type Declaration(name) Type Alias() type Type() Some Var Block() Var Block() Some Var Block() locals Local Arg() No Var Block() Var Block() Void Type() Type() Bool Type() Type() Integer Type() Type() Real Type() Type() String Type() Type() Enum Type() Type() Enum Type() enum Def Enum Type Def() Record Type() Type() Record Type() record Def Record Type Def() Array Type() Type() Array Type() array Def Array Type Def(size) Abstract Type() Type() Abstract Type() abstract Def Abstract Type Def() Named Type() Type() Named Type() alias Type Alias() Some Attribute Block() Attribute Block() Some Attribute Block() attribute List Attribute() No Attribute Block() Attribute Block() Break Statement() Statement() Continue Statement() Statement() Return Statement() Statement() Else Block() Else() Else Block() block Statement Block() Else If() Else() Else If() if Then Else If Then Else Statement() No Else() Else() If Then Else Expr() else Expr Expr() Choice Expr() second Expr() Binary Expr(op) right Expr() Unary Negation Expr() expr Expr() Unary Minus Expr() expr Expr() Record Access Expr(field) record Expr() Record Update Expr(field) value Expr() Array Access Expr() index Expr() Array Update Expr() value Expr() Array Update Expr() access Array Access Expr() Boolean Literal Expr(bool Val) Expr() Integer Literal Expr(int Val) Expr() Integer Wild Card Expr() Expr() Real Literal Expr(real Val) Expr() String Literal Expr(string Val) Expr() Init Expr() Expr() Init Expr() id Variable Ref(name) Second Init() Expr() Second Init() id Variable Ref(name) Id Expr() Expr() Id Expr() id Variable Ref(name) Fcn Call Expr() Expr() Fcn Call Expr() id Function Ref() Fcn Call Expr() exprs Expr List() Tuple Type() type List Type() Fresh Variable(value) Expr()
Label: class-diagram, Text: Class Model() packages Package() Modeling Concept(name) Package() elements Modeling Concept(name) Class(is Abstract, is Static, access Modifier) Classifier() Class(is Abstract, is Static, access Modifier) fields Attribute(is Static, access Modifier) Class(is Abstract, is Static, access Modifier) methods Function(access Modifier, is Static, is Abstract, body) Attribute(is Static, access Modifier) Modeling Concept(name) Attribute(is Static, access Modifier) type Classifier() Type() Classifier() Classifier() Modeling Concept(name) public() Function(access Modifier, is Static, is Abstract, body) Modeling Concept(name) Function(access Modifier, is Static, is Abstract, body) return Type Classifier() Function(access Modifier, is Static, is Abstract, body) parameters Attribute(is Static, access Modifier)
Label: simple-pl, Text: File() commands Top Level Cmd() Top Level Cmd() Expr() Def(name) Top Level Cmd() Def(name) expr Expr() App() Top Level Cmd() App() rhs Expr() Var(name) Top Level Cmd() Var(name) Expr() This() Top Level Cmd() This() Expr() Bool(value) Top Level Cmd() Bool(value) Expr() Int(value) Top Level Cmd() Int(value) Expr() Skip() Top Level Cmd() Skip() Expr() Project(name) Top Level Cmd() Project(name) exp Expr() B Object() Top Level Cmd() B Object() Expr() B Object() fields Field(name) Copy() Top Level Cmd() Copy() copy Expr() With() Top Level Cmd() With() rhs Expr() Not() Top Level Cmd() Not() value Expr() If() Top Level Cmd() If() els Expr() Let(name) Top Level Cmd() Let(name) rhs Expr() Fun(name) Top Level Cmd() Fun(name) body Expr() Assign(name) Top Level Cmd() Assign(name) rhs Expr() Arith Op Plus() Top Level Cmd() Arith Op Plus() rhs Expr() Arith Op Minus() Top Level Cmd() Arith Op Minus() rhs Expr() Arith Op Times() Top Level Cmd() Arith Op Times() rhs Expr() Arith Op Divide() Top Level Cmd() Arith Op Divide() rhs Expr() Arith Op Remainder() Top Level Cmd() Arith Op Remainder() rhs Expr() Bool Op And() Top Level Cmd() Bool Op And() rhs Expr() Bool Op Or() Top Level Cmd() Bool Op Or() rhs Expr() Seq() Top Level Cmd() Seq() rhs Expr() Cmp Op Equal() Top Level Cmd() Cmp Op Equal() rhs Expr() Cmp Op Unequal() Top Level Cmd() Cmp Op Unequal() rhs Expr() Cmp Op Less() Top Level Cmd() Cmp Op Less() rhs Expr() Field(name) value Expr()
Label: visualization, Text: Symbol(on Init, on Dispose, on Update, script Modules, background Color, background Image) root Primitive(name) Symbol(on Init, on Dispose, on Update, script Modules, background Color, background Image) properties String To String Map(key, value) Symbol(on Init, on Dispose, on Update, script Modules, background Color, background Image) cursors Cursor() Symbol(on Init, on Dispose, on Update, script Modules, background Color, background Image) design Size Dimension(width, height) Symbol(on Init, on Dispose, on Update, script Modules, background Color, background Image) connections Connection() Symbol(on Init, on Dispose, on Update, script Modules, background Color, background Image) time Triggers Time Trigger(period, on Trigger) Primitive(name) Container() Primitive(name) Shape(line Width, antialias, alpha, fill, outline) Figure(foreground Color, background Color, on Click, on Double Click, visible, border, opaque, tool Tip, on Mouse In, on Mouse Out, on Mouse Move, on Mouse Hover, on Mouse Drag) Rectangle() Shape(line Width, antialias, alpha, fill, outline) Text(text, label Alignment, icon Alignment, text Alignment, text Placement, font Name, font Size, font Bold, font Italic, alpha) Figure(foreground Color, background Color, on Click, on Double Click, visible, border, opaque, tool Tip, on Mouse In, on Mouse Out, on Mouse Move, on Mouse Hover, on Mouse Drag) Child(name) element Primitive(name) XY Child() Child(name) XY Child() position Position(x, y) XY Child() dimension Dimension(width, height) XY Container() Container() XY Container() children XY Child() Position(x, y) Line() Shape(line Width, antialias, alpha, fill, outline) Line() points Position(x, y) Figure(foreground Color, background Color, on Click, on Double Click, visible, border, opaque, tool Tip, on Mouse In, on Mouse Out, on Mouse Move, on Mouse Hover, on Mouse Drag) Primitive(name) Figure(foreground Color, background Color, on Click, on Double Click, visible, border, opaque, tool Tip, on Mouse In, on Mouse Out, on Mouse Move, on Mouse Hover, on Mouse Drag) size Dimension(width, height) Figure(foreground Color, background Color, on Click, on Double Click, visible, border, opaque, tool Tip, on Mouse In, on Mouse Out, on Mouse Move, on Mouse Hover, on Mouse Drag) cursor Cursor() Symbol Reference(uri, zoom, on Create Properties) Primitive(name) Symbol Reference(uri, zoom, on Create Properties) properties String To String Map(key, value) String To String Map(key, value) Dimension(width, height) BOTTOM() WEST() Cursor() System Cursor(type) Cursor() HAND() Grid Container(columns, equal Width, horizontal Spacing, vertical Spacing, margin Width, margin Height) Container() Grid Container(columns, equal Width, horizontal Spacing, vertical Spacing, margin Width, margin Height) children Grid Child(horizontal Alignment, vertical Alignment, grab Horizontal Space, grab Vertical Space, span Cols, span Rows, width Hint, height Hint) Border Container(vertical Spacing, horizontal Spacing) Container() Border Container(vertical Spacing, horizontal Spacing) children Border Child(alignment) Border Child(alignment) Child(name) Grid Child(horizontal Alignment, vertical Alignment, grab Horizontal Space, grab Vertical Space, span Cols, span Rows, width Hint, height Hint) Child(name) END() Figure Container() Figure(foreground Color, background Color, on Click, on Double Click, visible, border, opaque, tool Tip, on Mouse In, on Mouse Out, on Mouse Move, on Mouse Hover, on Mouse Drag) Figure Container() content Primitive(name) Image(uri, image Alignment) Figure(foreground Color, background Color, on Click, on Double Click, visible, border, opaque, tool Tip, on Mouse In, on Mouse Out, on Mouse Move, on Mouse Hover, on Mouse Drag) Ellipse() Shape(line Width, antialias, alpha, fill, outline) Arc(start, length) Shape(line Width, antialias, alpha, fill, outline) Connection() end Primitive(name) Stack Container() Container() Stack Container() children Primitive(name) Polygon() Shape(line Width, antialias, alpha, fill, outline) Polygon() points Position(x, y) Rounded Rectangle() Shape(line Width, antialias, alpha, fill, outline) Rounded Rectangle() corner Dimension(width, height) Time Trigger(period, on Trigger)
Label: statemachine, Text: Statemachine(associated Tree, associated Attribute) Named(name) Statemachine(associated Tree, associated Attribute) states Abstract State() Named(name) Abstract State() Named(name) Abstract State() transitions Abstract Transition() Abstract Transition() Named(name) Abstract Transition() state Abstract State() Abstract Transition() state Change State Change() Initial State() Abstract State() Final State() Abstract State() State(state Color) Abstract State() Transition() Abstract Transition() Conditional Transition() Abstract Transition() defined State() query() State Value(type, value) State Attribute(type, value) Conditional State(and Expression, conditions Organization) Abstract State() Conditional State(and Expression, conditions Organization) condition Abstract Condition(is Not Condition) State Change() state Attribute State Attribute(type, value) State Change() state Value State Value(type, value) Abstract Condition(is Not Condition) state Value State Value(type, value) Field Condition(field Name) Abstract Condition(is Not Condition) Attribute Condition() Abstract Condition(is Not Condition) Attribute Condition() state Attribute State Attribute(type, value)
Label: interaction, Text: Function(domain) Sequence Node(name, t Min, t Max) Function(domain) Process Node(label) Function(domain) decompositions Abstract Function(id) Function(domain) sequence Nodes Sequence() Function(domain) flows Flow() Function(domain) output Ports Output Port() Function(domain) input Ports Input Port() Function(domain) descriptions Description(content) Function(domain) tokens Token() Sequence Node(name, t Min, t Max) Sequence() Sequence Node(name, t Min, t Max) And() Sequence() Or() Sequence() Start() Sequence() Final() Sequence() Loop() Sequence() Input Port() Port(id) Port(id) Item(name) Flow() Process Node(label) Flow() inputflow Edge Input Port() Flow() items Item(name) Process Node(label) Output Port() Port(id) Output Port() outputflow Edge Flow() Description(content) form() Loop Exit() Sequence() Iteration() Sequence() Token() Abstract Function(id)
Label: modelling, Text: Integer() Boolean() String() Unlimited Natural() Comment(body) annotated Element Element() Comment(body) body String() Element() owned Comment Comment(body) Package() Namespace() Package() packaged Element Packageable Element() Package() owned Type Type() Package() package Merge Package Merge() Packageable Element() Named Element(name, visibility, qualified Name) Named Element(name, visibility, qualified Name) Element() Named Element(name, visibility, qualified Name) qualified Name String() Named Element(name, visibility, qualified Name) client Dependency Dependency() Named Element(name, visibility, qualified Name) namespace Namespace() Named Element(name, visibility, qualified Name) name Expression String Expression() package() Dependency() Packageable Element() Dependency() Directed Relationship() Dependency() client Named Element(name, visibility, qualified Name) Directed Relationship() Relationship() Directed Relationship() target Element() Relationship() related Element Element() Namespace() owned Member Named Element(name, visibility, qualified Name) Namespace() element Import Element Import(visibility, alias) Namespace() package Import Package Import(visibility) Namespace() owned Rule Constraintx() Namespace() imported Member Packageable Element() Element Import(visibility, alias) Directed Relationship() Element Import(visibility, alias) alias String() Element Import(visibility, alias) imported Element Packageable Element() Element Import(visibility, alias) importing Namespace Namespace() Package Import(visibility) Directed Relationship() Package Import(visibility) imported Package Package() Package Import(visibility) importing Namespace Namespace() Constraintx() Packageable Element() Constraintx() constrained Element Element() Constraintx() specification Value Specification() Constraintx() context Namespace() Value Specification() Packageable Element() Value Specification() Typed Element() Typed Element() Named Element(name, visibility, qualified Name) Typed Element() type Type() Type() Packageable Element() Type() package Package() Association(is Derived) Classifier(is Abstract) Association(is Derived) Relationship() Association(is Derived) navigable Owned End Property(is Derived, is Derived Union, default, aggregation, is Composite) Association(is Derived) is Derived Boolean() Association(is Derived) end Type Type() Classifier(is Abstract) Namespace() Classifier(is Abstract) Redefinable Element(is Leaf) Classifier(is Abstract) Type() Classifier(is Abstract) is Abstract Boolean() Classifier(is Abstract) generalization Generalization(is Substitutable) Classifier(is Abstract) powertype Extent Generalization Set(is Covering, is Disjoint) Classifier(is Abstract) feature Feature(is Static) Classifier(is Abstract) inherited Member Named Element(name, visibility, qualified Name) Classifier(is Abstract) attribute Property(is Derived, is Derived Union, default, aggregation, is Composite) Redefinable Element(is Leaf) Named Element(name, visibility, qualified Name) Redefinable Element(is Leaf) is Leaf Boolean() Redefinable Element(is Leaf) redefinition Context Classifier(is Abstract) Generalization(is Substitutable) Directed Relationship() Generalization(is Substitutable) is Substitutable Boolean() Generalization(is Substitutable) specific Classifier(is Abstract) Generalization(is Substitutable) generalization Set Generalization Set(is Covering, is Disjoint) Generalization Set(is Covering, is Disjoint) Packageable Element() Generalization Set(is Covering, is Disjoint) is Disjoint Boolean() Generalization Set(is Covering, is Disjoint) powertype Classifier(is Abstract) Generalization Set(is Covering, is Disjoint) generalization Generalization(is Substitutable) Feature(is Static) Redefinable Element(is Leaf) Feature(is Static) is Static Boolean() Feature(is Static) featuring Classifier Classifier(is Abstract) Opaque Expression(body, language) Value Specification() Opaque Expression(body, language) language String() Multiplicity Element(is Ordered, is Unique, upper, lower) Element() Multiplicity Element(is Ordered, is Unique, upper, lower) is Unique Boolean() Multiplicity Element(is Ordered, is Unique, upper, lower) upper Unlimited Natural() Multiplicity Element(is Ordered, is Unique, upper, lower) lower Integer() Multiplicity Element(is Ordered, is Unique, upper, lower) lower Value Value Specification() Property(is Derived, is Derived Union, default, aggregation, is Composite) Structural Feature(is Read Only) Property(is Derived, is Derived Union, default, aggregation, is Composite) class Class(is Active) Property(is Derived, is Derived Union, default, aggregation, is Composite) datatype Data Type() Property(is Derived, is Derived Union, default, aggregation, is Composite) is Composite Boolean() Property(is Derived, is Derived Union, default, aggregation, is Composite) default String() Property(is Derived, is Derived Union, default, aggregation, is Composite) association Association(is Derived) Property(is Derived, is Derived Union, default, aggregation, is Composite) default Value Value Specification() Class(is Active) nested Classifier Classifier(is Abstract) Class(is Active) is Active Boolean() Class(is Active) owned Attribute Property(is Derived, is Derived Union, default, aggregation, is Composite) Model(viewpoint) Package() Model(viewpoint) viewpoint String() Data Type() Classifier(is Abstract) Data Type() owned Attribute Property(is Derived, is Derived Union, default, aggregation, is Composite) Structural Feature(is Read Only) Feature(is Static) Structural Feature(is Read Only) Typed Element() Structural Feature(is Read Only) Multiplicity Element(is Ordered, is Unique, upper, lower) Structural Feature(is Read Only) is Read Only Boolean() composite() String Expression() Expression(symbol) Expression(symbol) operand Value Specification() Expression(symbol) symbol String() Package Merge() Directed Relationship() Package Merge() receiving Package Package() Enumeration() Data Type() Enumeration() owned Literal Enumeration Literal() Enumeration Literal() Instance Specification() Enumeration Literal() enumeration Enumeration() Instance Specification() Packageable Element() Instance Specification() classifier Classifier(is Abstract) Instance Specification() slot Slot() Instance Specification() specification Value Specification() Slot() Element() Slot() defining Feature Structural Feature(is Read Only) Slot() value Value Specification() Slot() owning Instance Instance Specification() Primitive Type() Data Type() Literal Specification() Value Specification() Literal Integer(value) Literal Specification() Literal Integer(value) value Integer() Literal String(value) Literal Specification() Literal String(value) value String() Literal Boolean(value) Literal Specification() Literal Boolean(value) value Boolean() Literal Null() Literal Specification() Instance Value() Value Specification() Instance Value() instance Instance Specification() Literal Unlimited Natural(value) Literal Specification() Literal Unlimited Natural(value) value Unlimited Natural()
Label: gpl, Text: Dummy() Named Element(name) Commentable() Commentable() Labellable Element(label) Commentable() UR Iable Element(uri) Commentable() Condition() Nested Statement() Condition() Conditional() Condition() else Statements Statement(end Verb) Conditional Or Expression() Condition() Conditional Or Expression() children Conditional Or Expression Child() Conditional Or Expression() logical Operators Logical Operator() Conditional Or Expression Child() Condition() Negated Conditional Expression() Conditional And Expression Child() Negated Conditional Expression() child Negated Conditional Expression Child() Negated Conditional Expression() negate Operator Negate() Negated Conditional Expression Child() Conditional And Expression Child() Simple Condition Child() Negated Conditional Expression Child() Relational Expression() Negated Conditional Expression Child() Relational Expression() children Simple Condition Child() Relational Expression() relational Operator Relational Operator() Relational Expression() negate Operator Negate() Relational Expression() is Is() Expression List() expressions Condition() Conditional And Expression Child() Conditional Or Expression Child() Conditional And Expression() Conditional Or Expression Child() Conditional And Expression() children Conditional And Expression Child() Abbreviated Conditional Expression() Conditional And Expression Child() Abbreviated Conditional Expression() children Abbreviated Conditional Expression Child() Abbreviated Conditional Expression Child() Conditional And Expression Child() Negated Abbreviated Conditional Expression() Abbreviated Conditional Expression Child() Negated Abbreviated Conditional Expression() child Negated Abbreviated Conditional Expression Child() Negated Abbreviated Conditional Expression() negate Operator Negate() Negated Abbreviated Conditional Expression Child() Abbreviated Conditional Expression Child() Abbreviated Relational Expression() Negated Abbreviated Conditional Expression Child() Abbreviated Relational Expression() relational Operator Relational Operator() Abbreviated Relational Expression() child Abbreviated Relational Expression Child() Abbreviated Relational Expression() negate Operator Negate() Abbreviated Relational Expression() is Is() Nested Abbreviated Conditional Expression() Abbreviated Relational Expression Child() Nested Abbreviated Conditional Expression() rest Condition() Sign Condition() Negated Conditional Expression Child() Sign Condition() child Simple Condition Child() Sign Condition() sign Operator Sign Operator() Sign Condition() negate Operator Negate() Sign Condition() is Is() Class Condition() Negated Conditional Expression Child() Class Condition() child Simple Condition Child() Class Condition() class Operator Class Operator() Class Condition() negate Operator Negate() Class Condition() is Is() Abbreviated Relational Expression Child() Negated Abbreviated Conditional Expression Child() Nested Condition() Simple Condition Child() Nested Condition() condition Condition() Additive Arithmetic Expression() Range Expression Child() Additive Arithmetic Expression() children Additive Arithmetic Expression Child() Additive Arithmetic Expression() additive Operators Additive Operator() Additive Arithmetic Expression Child() Range Expression Child() Multiplicative Arithmetic Expression() Additive Arithmetic Expression Child() Multiplicative Arithmetic Expression() children Multiplicative Arithmetic Expression Child() Multiplicative Arithmetic Expression() multiplicative Operators Multiplicative Operator() Multiplicative Arithmetic Expression Child() Additive Arithmetic Expression Child() Power Arithmetic Expression() Multiplicative Arithmetic Expression Child() Power Arithmetic Expression() children Power Arithmetic Expression Child() Power Arithmetic Expression Child() Multiplicative Arithmetic Expression Child() Unary Arithmetic Expression Child() Power Arithmetic Expression Child() Unary Arithmetic Expression() Power Arithmetic Expression Child() Unary Arithmetic Expression() child Unary Arithmetic Expression Child() Unary Arithmetic Expression() unary Operator Unary Operator() Primary Expression() Unary Arithmetic Expression Child() Assignment Expression() assignment Operator Equal(to) Assignment Expression() value Arithmetic Expression() Range Expression() Arithmetic Expression() Range Expression() children Range Expression Child() Range Expression() through Operator Through(value) Range Expression Child() Arithmetic Expression() Nested Arithmetic Expression() Primary Expression() Nested Arithmetic Expression() expression Arithmetic Expression() Arithmetic Expression() Abbreviated Relational Expression Child() Arithmetic Expression() Simple Condition Child() Compilation Group() Cobol Root() Compilation Group() Named Element(name) Compilation Group() compilation Units Compilation Unit() Compilation Unit() Named Element(name) Compilation Unit() identification Division Identification Division(properties) Compilation Unit() environment Division Environment Division() Compilation Unit() data Division Data Division() Compilation Unit() procedure Division Procedure Division() Cobol Root() Empty Model() Cobol Root() Division() Multiplicative Operator() Data Division() Division() Environment Division() Division() Identification Division(properties) Division() Identification Division(properties) Incomplete Element() Procedure Division() Division() Procedure Division() Parametrizable() Procedure Division() declaratives Declaratives() recursive() Literal() Select Statement Water() Literal() Special Names Paragraph Water() Literal() CICS Statement Water() Literal() Primary Operand() Literal() Invoke Statement Water() Literal() Stop Label() Alphanumeric Literal(value) Literal() Integer Literal(value) Numeric Literal() Integer Literal(value) Object Computer Paragraph Water() Integer Literal(value) File Descriptor Water() Integer Literal(value) IO Control Paragraph Water() Decimal Literal(value) Numeric Literal() Figurative Constant Literal() Literal() Boolean Literal(value) Literal() Floating Decimal Literal() Decimal Literal(value) All Literal() Figurative Constant Literal() All Literal() constant Constant Literal() Numeric Literal() Literal() Constant Literal() Figurative Constant Literal() Pseudo Literal(value) Literal() DBCS Literal() Literal() National Literal(value) DBCS Literal() Fixed Decimal Literal() Decimal Literal(value) National Hex Literal(value) DBCS Literal() Null(value) Constant Literal() Zero() Sign Operator() Quote(value) Constant Literal() Low Value(value) Constant Literal() High Value(value) Constant Literal() Space(value) Constant Literal() nulls() zeroes() quotes() low Values() high Values() spaces() Any() Literal() Characters() Literal() Alphanumeric Hexa Decimal Literal() Alphanumeric Literal(value) Operator() Additive Operator() Operator() Multiplicative Operator() Operator() Unary Operator() Operator() Logical Operator() Operator() Relational Operator() Operator() Condition Or() Logical Operator() Condition And() Logical Operator() Multiplication() Multiplicative Operator() Sign Operator() Operator() Positive() Sign Operator() Negative() Sign Operator() Addition() Additive Operator() Addition() Unary Operator() Subtraction() Additive Operator() Subtraction() Unary Operator() Greater Than Or Equal(than, to) Relational Operator() Greater Than(than) Relational Operator() Less Than(than) Relational Operator() Less Than Or Equal(than, to) Relational Operator() Equal(to) Relational Operator() Power() Operator() Negate() Operator() Through(value) Operator() Class Operator() Operator() Class Name() Special Name() Class Name() Special Name Statement() Class Name() range Range Expression() Alphabetic() Class Operator() DBCS() Class Operator() Numeric() Class Operator() Alphabetic Upper() Class Operator() Alphabetic Lower() Class Operator() Kanji() Class Operator() thru() Equal Phrase() Equal(to) Equal Sign() Equal(to) LT Phrase() Less Than(than) LT Sign() Less Than(than) LTEQ Phrase() Less Than Or Equal(than, to) LTEQ Sign() Less Than Or Equal(than, to) GT Phrase() Greater Than(than) GT Sign() Greater Than(than) GTEQ Phrase() Greater Than Or Equal(than, to) GTEQ Sign() Greater Than Or Equal(than, to) Paragraph() Named Element(name) Paragraph() Procedure() Paragraph() sentences Statement Container() Source Computer Paragraph() Configuration Section Paragraph() Source Computer Paragraph() with Debugging Mode Debugging Mode() Object Computer Paragraph() Configuration Section Paragraph() Object Computer Paragraph() Incomplete Element() File Control Paragraph() IO Section Paragraph() File Control Paragraph() select Statements Select Statement(is Optional, external File Names) IO Control Paragraph() IO Section Paragraph() IO Control Paragraph() Incomplete Element() Configuration Section Paragraph() Paragraph() IO Section Paragraph() Paragraph() Special Names Paragraph() Configuration Section Paragraph() Special Names Paragraph() special Name Statements Special Name Statement() Special Names Paragraph() water Special Names Paragraph Water() Repository Paragraph() Configuration Section Paragraph() Repository Paragraph() Incomplete Element() Debugging Mode() Reference() Referenceable Element() Named Element(name) Element Reference() Reference() Element Reference() target Referenceable Element() Special Names Condition Name Reference() Element Reference() Special Names Condition Name Reference() Qualifiable() Special Names Condition Name Reference() Condition Name() File Name Reference() Element Reference() File Name Reference() Identifier Reference Qualifier() Index Name Reference() Identifier Reference() Mnemonic Name Reference() Element Reference() Mnemonic Name Reference() Qualifiable() Alphabet Name Reference() Element Reference() Condition Name() Named Element(name) Condition Name() Special Name() Qualifiable() qualifier Element Reference() Condition Name Reference() Identifier Reference() Condition Name Reference() Condition Name() Data Name Reference() Identifier Reference() Data Name Reference() Identifier Reference Qualifier() Identifier Reference Qualifier() Qualifiable() Identifier Reference Qualifier() Element Reference() Section(segment Number) Named Element(name) Section(segment Number) Procedure() Section(segment Number) sentences Statement Container() Section(segment Number) paragraphs Paragraph() Working Storage Section() Data Division Section() Local Storage Section() Data Division Section() Linkage Storage Section() Data Division Section() IO Section() Environment Division Section() Configuration Section() Environment Division Section() Environment Division Section() Section(segment Number) Data Division Section() Section(segment Number) Data Division Section() statements Statement(end Verb) Data Division Section() records Data Item(level Number) File Section() Data Division Section() File Section() file Descriptors File Name(file Descriptor) Declarative Section() Section(segment Number) Statement Container() statements Statement(end Verb) Empty Sentence() Sentence() Use Sentence() Statement Container() Use Sentence() Incomplete Element() Altered Go To() Sentence() Exit Procedure() Sentence() Entry Sentence() Sentence() Execute Sentence() Statement Container() Sentence() Statement Container() Primary Operand() Replacement Operand() Primary Operand() Operand() Primary Operand() Primary Expression() Primary Operand() Arithmetic Operand() Rounded Identifier() Arithmetic Operand() Rounded Identifier() identifier Identifier() egcs() Replacement Operand() Operand() Encoding(type) Replacement Operand() Operand() Arithmetic Operand() Operand() Statement(end Verb) Arithmetic Statement(corresponding) Statement(end Verb) Arithmetic Statement(corresponding) Error Handled() Arithmetic Statement(corresponding) givings Arithmetic Operand() Add() Arithmetic Statement(corresponding) Add() tos Arithmetic Operand() Subtract() Arithmetic Statement(corresponding) Subtract() froms Arithmetic Operand() Multiply() Arithmetic Statement(corresponding) Multiply() bys Arithmetic Operand() Divide() Arithmetic Statement(corresponding) Divide() intos Arithmetic Operand() Divide() remainders Identifier() Perform() Statement(end Verb) Perform Nested Statement() Perform() Perform Nested Statement() Nested Statement() Perform Procedure() Perform() Perform Procedure() label Procedure Range Label() Jump() Statement(end Verb) Jump() labels Procedure Range Label() Next Sentence() Jump() Go To() Jump() Go To() depends On Identifier Reference() Go Back() Jump() Nested Statement() statements Statement(end Verb) Move(corresponding) Statement(end Verb) Move(corresponding) sender Primary Operand() Exit(exit Label) Statement(end Verb) Conditional() condition Condition() Stop() Statement(end Verb) Stop() label Stop Label() Display() Statement(end Verb) Display() operands Primary Operand() Display() output Environment() Compute() Statement(end Verb) Compute() Error Handled() Compute() expression Assignment Expression() Accept() Statement(end Verb) Accept() Incomplete Element() Accept() receiver Primary Operand() Execute(water) Statement(end Verb) method() Error Handled() handlers Handler() Return() Statement(end Verb) Return() Error Handled() Return() file Name File Name Reference() Return() output Identifier Reference() Set Statement() Statement(end Verb) Set Statement() sender Primary Operand() Set Switches() Set Statement() Set Switches() switches Switch Status(status) Set Index Name(adjust) Set Statement() Set Index Name(adjust) receivers Index Name Reference() down() off() String() Close() Incomplete Element() Close() IO Statement() Cancel() Statement(end Verb) Cancel() subprograms Primary Operand() Call() Statement(end Verb) Call() Argumentable() Call() Error Handled() Call() subprogram Primary Operand() Initialize() Statement(end Verb) Initialize() subprograms Identifier() Initialize() replacements Replacement() Open() Incomplete Element() Open() IO Statement() Search Statement() Statement(end Verb) Search Statement() Error Handled() Search Statement() cases Normal Evaluate Case() Search Statement() table Primary Operand() Serial Search() Search Statement() Serial Search() variable Identifier() Binary Search() Search Statement() Unstring() Error Handled() Unstring() Statement(end Verb) Unstring() counter Identifier() Unstring() tally Identifier Reference() Unstring() receivers Splitted String() Unstring() delimiter Condition() Evaluate() Statement(end Verb) Evaluate() cases Evaluate Case() Evaluate() subject Expression List() Normal Evaluate Case() Evaluate Case() Other Evaluate Case() Evaluate Case() Evaluate Case() Nested Statement() Evaluate Case() objects Expression List() Replace(replace Switch) Statement(end Verb) Entry() Parametrizable() Entry() Statement(end Verb) Inspect() Statement(end Verb) Inspect() tallying Ins Tallying In() Inspect() conversions Replacement() Inspect() string Primary Operand() Set() Set Statement() Set() receivers Identifier Reference() Read() Statement(end Verb) Read() Error Handled() Read() key Name Identifier() Read() file Name File Name Reference() Write() Statement(end Verb) Write() Error Handled() Write() sender Identifier() Write() integer Integer Literal(value) Write() mnemonic Name Mnemonic Name Reference() Rewrite() Write() Switch Status(status) mnemonic Names Mnemonic Name Reference() end Of Page() Perform Procedure Fixed Times() Perform Procedure() Perform Procedure Fixed Times() Perform Fixed Times() Perform Until Condition(position) Perform() Perform Until Condition(position) Varying Until Condition() Perform Until Condition(position) conditions Condition() Perform Fixed Times() Perform() Perform Fixed Times() iterations Primary Operand() Perform Procedure Until Condition() Perform Until Condition(position) Perform Procedure Until Condition() Perform Procedure() Perform Procedure Until Condition() afters After Until Condition() Perform Nested Statement Fixed Times() Perform Nested Statement() Perform Nested Statement Fixed Times() Perform Fixed Times() Perform Nested Statement Until Condition() Perform Until Condition(position) Perform Nested Statement Until Condition() Perform Nested Statement() Continue() Jump() File IO Statement() Statement(end Verb) File IO Statement() file Name File Name Reference() File IO Statement() input Input Directive() File IO Statement() output Output Directive() File IO Statement() key Descriptors Key Descriptor(order) Sort() File IO Statement() Sort() Incomplete Element() Merge() File IO Statement() Merge() Incomplete Element() Release() Statement(end Verb) Release() sender Identifier Reference() Key Descriptor(order) key Names Identifier Reference() IO Statement() Statement(end Verb) IO Statement() io File Descriptors IO File Descriptor(type) IO File Descriptor(type) io Files IO File() IO File() Incomplete Element() IO File() file Name File Name Reference() extend() dsc() corresponding() Tallying In() occurrences Tallying() Tallying In() counter Identifier() Varying Until Condition() Conditional() Varying Until Condition() variable Identifier Reference() Varying Until Condition() increment Primary Operand() After Until Condition() Varying Until Condition() Start() Error Handled() Start() Statement(end Verb) Start() file Name File Name Reference() Start() operator Relational Operator() Start() data Name Identifier() Start() not Negate() Delete() Statement(end Verb) Delete() Error Handled() Delete() file Name File Name Reference() Subscript() subscript Operand() Identifier() Primary Operand() Identifier() Accept Statement Water() Identifier() CICS Statement Water() Identifier() Special Names Paragraph Water() Identifier() Object Computer Paragraph Water() Identifier() Repository Paragraph Water() Identifier() IO Control Paragraph Water() Identifier() Identification Division Water() Identifier() Invoke Statement Water() Identifier() SQL Statement Water() Identifier() Use Statement Water() Identifier() File Descriptor Water() Identifier() Data Descriptor Water() Identifier() Select Statement Water() Identifier() Sort Phrase Water() Identifier() modifier Reference Modifier() Identifier Reference() Identifier() Identifier Reference() Element Reference() Identifier Reference() Qualifiable() Identifier Reference() subscripts Subscript() Identifier Reference() qualifiers Qualifier() All() Direct Subscript() Reference Modifier() length Arithmetic Expression() Linage Counter() Identifier() Linage Counter() Qualifiable() Qualifier() Element Reference() Relative Subscript() Subscript() Relative Subscript() additive Operator Additive Operator() Relative Subscript() integer Integer Literal(value) Direct Subscript() Subscript() Input Procedure() Input Directive() Input Procedure() Procedure Directive() Input Directive() IO Directives() Input File() Input Directive() Input File() File Directive() Output Directive() IO Directives() Output Procedure() Procedure Directive() Output Procedure() Output Directive() Output File() Output Directive() Output File() File Directive() IO Directives() File Directive() IO Directives() File Directive() file Names File Name Reference() Procedure Directive() IO Directives() Procedure Directive() label Label() Incomplete Element() water Water() Identification Division Water() Water() Water() Program Description(value) Identification Division Water() security() Dot() Identification Division Water() Dot() SQL Statement Water() segment Limit() Object Computer Paragraph Water() Water() Object Computer Description(value) Object Computer Paragraph Water() Priority Number(value) Object Computer Paragraph Water() Select Statement Water() Water() Select Statement Clause(value) Select Statement Water() indexed() Special Names Paragraph Water() Water() Special Names Clause(value) Special Names Paragraph Water() xml Schema() File Descriptor Water() Water() reports() File Description(value) File Descriptor Water() left() Data Descriptor Water() Water() Data Description(value) Data Descriptor Water() IO Control Paragraph Water() Water() IO Control Description(value) IO Control Paragraph Water() unit() Repository Paragraph Water() Water() Repository Description(value) Repository Paragraph Water() is() tr() SQL Statement Water() Water() CICS Statement Water() Water() delete() SQL Statement Token(value) SQL Statement Water() CICS Statement Token(value) CICS Statement Water() dateformat2() Accept Statement Water() Water() Accept Statement Token(value) Accept Statement Water() Use Statement Water() Water() Use Statement Token(value) Use Statement Water() io() Close Statement Water() Water() Close Statement Token(value) Close Statement Water() removal() returning() Invoke Statement Water() Water() Invoke Statement Token(value) Invoke Statement Water() rewind() Open Statement Water() Water() Open Statement Token(value) Open Statement Water() Sort Phrase Token(value) Sort Phrase Water() Sort Phrase Water() Water() Register() operand Primary Operand() Shift In() Register() Shift Out() Register() Address Of() Register() Length Of() Register() Return Code() Register() When Compiled() Register() System Device() Environment() System Logical Input(value) System Device() UPSI(value) Environment() System Logical Output(value) System Device() System Punch Device(value) System Device() Console() System Device() Channel(value) System Device() Advanced Function Printing() System Device() Suppress Spacing() System Device() Pocket(value) System Device() upsi7() c12() sysipt() syslst() syspch() s5() Environment() Accept Statement Water() Picture String(picture) Data Item Attribute() Renaming Data Name() Data Name() Renaming Data Name() name Range Range Expression() Global() Data Item Attribute() External() Data Item Attribute() Value() Data Item Attribute() Value() values Condition() Data Item Attribute() Usage(usage, is Native) Data Item Attribute() Group Usage() Data Item Attribute() Data Item(level Number) Referenceable Element() Data Item(level Number) Incomplete Element() Data Item(level Number) attributes Data Item Attribute() national() escape() Record Name() elems Data Item(level Number) Data Name() Data Item(level Number) Redefines() Data Item Attribute() Redefines() data Name Identifier Reference() Special Name() Referenceable Element() On Status() Condition Name() Off Status() Condition Name() Alphabet Name() Special Name() Alphabet Name() Special Name Statement() Alphabet Name() type Alphabet Type() UPSI Switch Is() Mnemonic Name() UPSI Switch Is() Special Name Statement() UPSI Switch Is() condition Names Condition Name() Alphabet Type() Predefined Alphabet Type(value) Alphabet Type() Explicit Alphabet Type() Alphabet Type() Explicit Alphabet Type() range Range Expression() native() Code Name Alphabet Type(value) Alphabet Type() Currency Sign(picture Symbol) Special Name() Currency Sign(picture Symbol) Special Name Statement() Currency Sign(picture Symbol) currency Literal() Mnemonic Name() Special Name() Mnemonic Name() environment Environment() System Device Is() Mnemonic Name() System Device Is() Special Name Statement() Symbolic Character() Special Name() Symbolic Character() integers Integer Literal(value) Symbolic Character Statement() Special Name Statement() Symbolic Character Statement() Element Reference() Symbolic Character Statement() symbolic Characters Symbolic Character() Symbolic Character Statement() alphabet Name Reference Alphabet Name Reference() Special Name Statement() Table() Data Item(level Number) Table() Incomplete Element() Table() max Table Dimension Table Dimension(value) Table() indexed By Index Name() Table() keys Are Key Name(key Order) Table() depends On Identifier Reference() Key Name(key Order) keys Identifier Reference() Index Name() Named Element(name) Index Name() Referenceable Element() Index Name() additional Index Names Additional Index Name() Table Dimension(value) Additional Index Name() Referenceable Element() File Name(file Descriptor) Incomplete Element() File Name(file Descriptor) Referenceable Element() File Name(file Descriptor) records Data Item(level Number) File Name(file Descriptor) attributes Data Item Attribute() File Name(file Descriptor) sentences Statement Container() Select Statement(is Optional, external File Names) Incomplete Element() Select Statement(is Optional, external File Names) file Status File Status() Select Statement(is Optional, external File Names) file Name Reference File Name Reference() File Status() vsam File Status Identifier Reference() sd() Parametrizable() returning Parameter() Parameter() Referenceable Element() By Reference Parameter() Parameter() By Value Parameter() Parameter() Declaratives() declarative Sections Declarative Section() Is() Verb() Verb() Procedure Range() Procedure Range Label() Procedure Range() children Procedure Range Child() Procedure Range() through Operator Through(value) Procedure Range Label() Label() Procedure Range Child() Procedure Range Label() Procedure Range Child() target Procedure() Procedure Label() Procedure Range Child() Procedure Label() section Section(segment Number) Procedure() Label() Stop Label() Label() Run() Stop Label() Function Call() Argumentable() Function Call() Named Element(name) Function Call() Identifier() Argument() operands Primary Operand() By Reference Argument() Argument() By Value Argument() Argument() By Content Argument() Argument() Omitted Argument() Argument() Argumentable() returning Argument() On Size Error() Handler() Handler() Nested Statement() Not On Size Error() Not Error Handler() On Overflow() Handler() On Exception() Handler() Not On Exception() Not Error Handler() Not Error Handler() handler Statement Handler() Not On Overflow() Not Error Handler() Not At End() Not Error Handler() At End() Handler() At End Of Page(eop) Handler() Invalid Key() Handler() Not At End Of Page() Not Error Handler() Not Invalid Key() Not Error Handler() Tallying() String Manipulation() String Manipulation() String() String Manipulation() locations Location(position, initial) Manipulated Strings() String() Manipulated Strings() delimiter Primary Operand() Concatenating Strings() Manipulated Strings() Splitted String() Manipulated Strings() Splitted String() counter Primary Operand() Location(position, initial) base Primary Operand() Replacement() String Manipulation() Replacement() target Replacement Operand() after() Occurrence(type) first() Tallying Occurrence() occurrences Tallying() Tallying Occurrence() Occurrence(type) Replacement Occurrence() Occurrence(type) Replacement Occurrence() occurrences Replacement() Any Character() Tallying() Specific Character() Tallying() Specific Character() tallying Primary Operand() Any Character By Specific Character() Replacement() Specific Character By Specific Character() Replacement() Specific Character By Specific Character() source Replacement Operand()
Label: entities, Text: Domainmodel() elements Type(name) Type(name) Data Type() Type(name) Association() Type(name) Association() attribute Attribute(many, name) Association() role Role(many, name) Entity() Type(name) Entity() attribute Attribute(many, name) Entity() role Role(many, name) Attribute(many, name) type Type(name) Role(many, name) type Type(name)
Label: metrics, Text: Metric Model(import URI) metrics Metric(name) Metric(name) External Metric() Metric(name) Internal Metric(short Name, description) Metric(name) Internal Metric(short Name, description) parameter Number(name) Internal Metric(short Name, description) definition Metric Definition() Number(name) Parameter(shortname, description, default Value) Number(name) Constant(value) Number(name) Metric Definition() Weighted Metric() Metric Definition() Weighted Metric() weights Metric And Weight() Stepwise Metric() Metric Definition() Stepwise Metric() inner Metric Metric(name) Stepwise Metric() steps Bound And Weight() Ratio Metric() Metric Definition() Ratio Metric() denominator Metric Metric(name) Bound And Weight() weight Number(name) Metric And Weight() metric Metric(name) Metric And Weight() weight Number(name)
Label: interaction, Text: Function(domain) Sequence Node(name, t Min, t Max) Function(domain) Process Node(label) Function(domain) sequence Nodes Sequence() Function(domain) flows Flow() Function(domain) output Ports Output Port() Function(domain) input Ports Input Port() Function(domain) descriptions Description(content) Function(domain) tokens Token() Sequence Node(name, t Min, t Max) Sequence() Sequence Node(name, t Min, t Max) And() Sequence() Or() Sequence() Start() Sequence() Final() Sequence() Loop() Sequence() Input Port() Port(id) Port(id) outputflow Edge Flow() Item(name) Flow() Process Node(label) Flow() inputflow Edge Port(id) Flow() items Item(name) Process Node(label) Output Port() Port(id) Description(content) form() Loop Exit() Sequence() Iteration() Sequence() Token()
Label: gpl, Text: Annotable() Commentable() Annotation Instance() Reference() Annotation Instance() Annotation Instance Or Modifier() Annotation Instance() Namespace Aware Element(namespaces) Annotation Instance() annotation Classifier() Annotation Instance() parameter Annotation Parameter() Annotation Parameter() Commentable() Single Annotation Parameter() Annotation Parameter() Single Annotation Parameter() value Annotation Value() Annotation Parameter List() Annotation Parameter() Annotation Attribute Setting() Commentable() Annotation Attribute Setting() attribute Interface Method() Annotation Attribute Setting() value Annotation Value() Annotation Value() Commentable() Annotation Attribute() Interface Method() Array Typeable() Commentable() Array Typeable() array Dimensions After Array Dimension() Array Dimension() Commentable() Array Initializer() initial Values Array Initialization Value() Array Initializer() Annotation Value() Array Initialization Value() Commentable() Array Instantiation() Reference() Array Instantiation By Size() Array Instantiation() Array Instantiation By Size() Array Typeable() Array Instantiation By Values() Array Instantiation() Array Instantiation By Values() array Initializer Array Initializer() Array Instantiation By Values Untyped() Array Instantiation By Values() Array Instantiation By Values Typed() Array Instantiation By Values() Array Instantiation By Values Typed() Array Typeable() Array Selector() Commentable() Classifier() Referenceable Element() Concrete Classifier() Classifier() Concrete Classifier() Type Parametrizable() Concrete Classifier() Member Container() Concrete Classifier() Member() Concrete Classifier() Annotable And Modifiable() Implementor() Commentable() Class() Concrete Classifier() Class() Implementor() Interface() Concrete Classifier() Enumeration() Concrete Classifier() Enumeration() Implementor() Enumeration() constants Enum Constant() Annotation() Concrete Classifier() Anonymous Class() Member Container() Commentable() Named Element(name) Commentable() Namespace Aware Element(namespaces) Commentable() Java Root() Named Element(name) Java Root() Namespace Aware Element(namespaces) Java Root() Importing Element() Compilation Unit() Java Root() Compilation Unit() classifiers Concrete Classifier() Package() Java Root() Package() Annotable() Package() compilation Units Compilation Unit() Empty Model() Java Root() Expression List() Expression() Array Initialization Value() Expression() Annotation Value() Assignment Expression() child Assignment Expression Child() Assignment Expression() assignment Operator Assignment Operator() Assignment Expression Child() Conditional Expression() expression Else Assignment Expression Child() Conditional Expression() child Conditional Expression Child() Conditional Expression Child() Assignment Expression Child() Conditional Or Expression() Conditional Expression Child() Conditional Or Expression() children Conditional Or Expression Child() Conditional Or Expression Child() Conditional Expression Child() Conditional And Expression() Conditional Or Expression Child() Conditional And Expression() children Conditional And Expression Child() Conditional And Expression Child() Conditional Or Expression Child() Inclusive Or Expression() Conditional And Expression Child() Inclusive Or Expression() children Inclusive Or Expression Child() Inclusive Or Expression Child() Conditional And Expression Child() Exclusive Or Expression() Inclusive Or Expression Child() Exclusive Or Expression() children Exclusive Or Expression Child() Exclusive Or Expression Child() Inclusive Or Expression Child() And Expression() Exclusive Or Expression Child() And Expression() children And Expression Child() And Expression Child() Exclusive Or Expression Child() Equality Expression() And Expression Child() Equality Expression() equality Operators Equality Operator() Equality Expression() children Equality Expression Child() Equality Expression Child() And Expression Child() Instance Of Expression() Array Typeable() Instance Of Expression() Equality Expression Child() Instance Of Expression() child Instance Of Expression Child() Instance Of Expression Child() Equality Expression Child() Relation Expression() Instance Of Expression Child() Relation Expression() children Relation Expression Child() Relation Expression() relation Operators Relation Operator() Relation Expression Child() Instance Of Expression Child() Shift Expression() Relation Expression Child() Shift Expression() children Shift Expression Child() Shift Expression() shift Operators Shift Operator() Shift Expression Child() Relation Expression Child() Additive Expression() Shift Expression Child() Additive Expression() children Additive Expression Child() Additive Expression() additive Operators Additive Operator() Additive Expression Child() Shift Expression Child() Multiplicative Expression() Additive Expression Child() Multiplicative Expression() children Multiplicative Expression Child() Multiplicative Expression() multiplicative Operators Multiplicative Operator() Multiplicative Expression Child() Additive Expression Child() Unary Expression() Multiplicative Expression Child() Unary Expression() operators Unary Operator() Unary Expression() child Unary Expression Child() Unary Expression Child() Multiplicative Expression Child() Unary Modification Expression() Unary Expression Child() Unary Modification Expression() child Unary Modification Expression Child() Unary Modification Expression() operator Unary Modification Operator() Prefix Unary Modification Expression() Unary Modification Expression() Suffix Unary Modification Expression() Unary Modification Expression() Unary Modification Expression Child() Unary Expression Child() Cast Expression() Array Typeable() Cast Expression() Unary Modification Expression Child() Cast Expression() child Multiplicative Expression Child() Primary Expression() Unary Modification Expression Child() Nested Expression() Reference() Type Argument() Array Typeable() Type Argumentable() Commentable() Type Argumentable() type Arguments Type Argument() Call Type Argumentable() Commentable() Call Type Argumentable() call Type Arguments Type Argument() Type Parametrizable() Commentable() Type Parametrizable() type Parameters Type Parameter() Extends Type Argument() Type Argument() Qualified Type Argument() Type Argument() Super Type Argument() Type Argument() Type Parameter() Classifier() Unknown Type Argument() Type Argument() Import() Namespace Aware Element(namespaces) Importing Element() Commentable() Importing Element() imports Import() Static Import() Import() Classifier Import() Import() Classifier Import() classifier Concrete Classifier() Package Import() Import() Static Classifier Import() Static Import() Static Member Import() Static Import() Static Member Import() static Members Referenceable Element() Initializable() Commentable() Instantiation() Reference() Instantiation() Argumentable() New Constructor Call() Instantiation() New Constructor Call() Call Type Argumentable() New Constructor Call() anonymous Class Anonymous Class() Explicit Constructor Call() Instantiation() Explicit Constructor Call() call Target Self() Literal() Primary Expression() Self() Commentable() Boolean Literal(value) Character Literal(value) Float Literal() Decimal Float Literal(decimal Value) Float Literal() Hex Float Literal(hex Value) Float Literal() Double Literal() Decimal Double Literal(decimal Value) Hex Double Literal(hex Value) Integer Literal() Decimal Integer Literal(decimal Value) Hex Integer Literal(hex Value) Octal Integer Literal(octal Value) Long Literal() Decimal Long Literal(decimal Value) Long Literal() Hex Long Literal(hex Value) Long Literal() Octal Long Literal(octal Value) Long Literal() Null Literal() Super() Self() This() Self() Exception Thrower() Commentable() Member() Named Element(name) Member Container() Commentable() Member Container() default Members Member() Additional Field() Referenceable Element() Additional Field() Array Typeable() Additional Field() Initializable() Constructor() Member() Constructor() Statement List Container() Constructor() Parametrizable() Constructor() Type Parametrizable() Constructor() Exception Thrower() Constructor() Annotable And Modifiable() Empty Member() Member() Field() Member() Field() Initializable() Field() Variable() Field() Referenceable Element() Field() Annotable And Modifiable() Field() additional Fields Additional Field() Method() Member() Method() Array Typeable() Method() Type Parametrizable() Method() Parametrizable() Method() Referenceable Element() Method() Exception Thrower() Method() Annotable And Modifiable() Interface Method() Method() Class Method() Method() Class Method() Statement List Container() Enum Constant() Referenceable Element() Enum Constant() Argumentable() Enum Constant() Annotable() Enum Constant() anonymous Class Anonymous Class() Modifier() Annotation Instance Or Modifier() Annotation Instance Or Modifier() Commentable() Annotable And Modifiable() Commentable() Annotable And Modifiable() annotations And Modifiers Annotation Instance Or Modifier() Modifiable() Commentable() Abstract() Final() Native() Protected() Public() Private() Static() Strictfp() Synchronized() Transient() Volatile() Operator() Commentable() Additive Operator() Operator() Assignment Operator() Operator() Equality Operator() Operator() Multiplicative Operator() Operator() Relation Operator() Operator() Shift Operator() Operator() Unary Operator() Operator() Unary Modification Operator() Operator() Assignment() Assignment Operator() Assignment And() Assignment Operator() Assignment Division() Assignment Operator() Assignment Exclusive Or() Assignment Operator() Assignment Minus() Assignment Operator() Assignment Modulo() Assignment Operator() Assignment Multiplication() Assignment Operator() Assignment Left Shift() Assignment Operator() Assignment Or() Assignment Operator() Assignment Plus() Assignment Operator() Assignment Right Shift() Assignment Operator() Assignment Unsigned Right Shift() Assignment Operator() Equal() Equality Operator() Not Equal() Equality Operator() Greater Than() Relation Operator() Greater Than Or Equal() Relation Operator() Less Than() Relation Operator() Less Than Or Equal() Relation Operator() Addition() Additive Operator() Addition() Unary Operator() Subtraction() Additive Operator() Subtraction() Unary Operator() Division() Multiplicative Operator() Multiplication() Multiplicative Operator() Remainder() Multiplicative Operator() Complement() Unary Operator() Minus Minus() Unary Modification Operator() Negate() Unary Operator() Plus Plus() Unary Modification Operator() Left Shift() Shift Operator() Right Shift() Shift Operator() Unsigned Right Shift() Shift Operator() Parameter() Variable() Parameter() Annotable And Modifiable() Parametrizable() Commentable() Parametrizable() parameters Parameter() Ordinary Parameter() Parameter() Variable Length Parameter() Parameter() Reference() Primary Expression() Reference() Type Argumentable() Reference() array Selectors Array Selector() Argumentable() Commentable() Referenceable Element() Named Element(name) Element Reference() Reference() Element Reference() target Referenceable Element() Identifier Reference() Element Reference() Method Call() Element Reference() Method Call() Argumentable() Method Call() Call Type Argumentable() Reflective Class Reference() Reference() Primitive Type Reference() Reference() String Reference(value) Reference() Self Reference() Reference() Self Reference() self Self() Package Reference() Referenceable Element() Statement Container() Commentable() Statement List Container() Commentable() Conditional() Commentable() For Loop Initializer() Commentable() Statement() Commentable() Switch Case() Statement List Container() Assert() Conditional() Break() Jump() Block() Member() Block() Statement List Container() Block() Modifiable() Catch Block() Statement List Container() Catch Block() parameter Ordinary Parameter() Condition() Statement Container() Condition() Conditional() Continue() Jump() Default Switch Case() Do While Loop() Empty Statement() Expression Statement() For Loop() Statement Container() For Loop() Conditional() For Each Loop() Statement Container() For Each Loop() next Ordinary Parameter() Jump() Jump Label() Statement Container() Jump Label() Named Element(name) Local Variable Statement() variable Local Variable() Normal Switch Case() Conditional() Return() Switch() Synchronized Block() Statement List Container() Throw() Try Block() Statement List Container() Try Block() finally Block Block() While Loop() Statement Container() Type() Commentable() Typed Element() Commentable() Type Reference() Commentable() Classifier Reference() Type Argumentable() Classifier Reference() target Classifier() Namespace Classifier Reference() Namespace Aware Element(namespaces) Namespace Classifier Reference() classifier References Classifier Reference() Primitive Type() Boolean() Byte() Char() Double() Float() Int() Long() Short() Void() Variable() Named Element(name) Variable() Array Typeable() Variable() Referenceable Element() Variable() Type Argumentable() Local Variable() Variable() Local Variable() Initializable() Local Variable() Annotable And Modifiable() Local Variable() additional Local Variables Additional Local Variable() Additional Local Variable() Referenceable Element() Additional Local Variable() Array Typeable() Additional Local Variable() Initializable()
Label: relationships, Text: World() things Thing(id) World() e1s Article(aid) Thing(id) Named Element(name) Thing(id) relations Related To(since) Thing(id) e0s Line(quant, article Aid) Named Element(name) Related To(since) Named Element(name) Related To(since) to Thing Thing(id) Line(quant, article Aid) Named Element(name) Line(quant, article Aid) src Thing(id) Line(quant, article Aid) trg Article(aid) Article(aid) Named Element(name)
Label: statemachine, Text: Application(name) statemachine State Machine(name) State Machine(name) vertex Vertex() State Machine(name) transition Transition(name, trigger) Vertex() incoming Transition(name, trigger) Transition(name, trigger) target Vertex() Pseudostate() Vertex() State(name) Vertex() State(name) statemachine State Machine(name) View Controller() State(name) Event() State(name)
Label: transformation, Text: Located Element(row, column, file) Named Element(name) Definition Parameter() Named Element(name) Module Parameter() Definition Parameter() Module Definition() Located Element(row, column, file) Module Definition() Named Element(name) Module Definition() Annotable Element() Annotable Element() annotated With Annotation() Implicitly Annotable Element() annotations Single Annotation() Annotation() annotated Element Annotable Element() Optimizations Annotation(enabled) Annotation() Metamodel Model Annotation(metamodel) Annotation() Single Annotation() Annotation() Potency Annotation(value) Single Annotation() Generic Annotation(name) parameters Annotation Parameter() Annotation Parameter() Represent Model() Annotable Element() Transformation Definition() Module Definition() Transformation Definition() out Models Transformation Definition Parameter() Transformation Definition() imported Models Imported Model() Transformation Definition() inline Models Inline Model() Transformation Definition() annotations Annotation() Transformation Definition() uses Use Declaration(module, as) Transformation Definition() requires Require Declaration(name, default) Eclectic Transformation Definition() transformations Transformation Definition() Transformation Definition Parameter() Definition Parameter() Transformation Definition Parameter() Represent Model() Imported Model() Represent Model() Imported Model() Named Element(name) Use Declaration(module, as) Represent Model() Require Declaration(name, default) Represent Model() Require Declaration(name, default) parameters Require Parameter(formal Parameter Name) Require Parameter(formal Parameter Name) Require Model Parameter() Require Parameter(formal Parameter Name) Require Model Parameter() model Represent Model() Variable(name) Statement() Located Element(row, column, file) Expression() Statement() Define Variable() Statement() Define Variable() Variable(name) Define Variable() expression Expression() Property Write(property) expression Expression() Property Write(property) receptor Variable(name) Model Reference() Class Use(class Name, strict Type) Model Reference() Expression() Variable Reference() Expression() Variable Reference() variable Variable(name) Method Call(method Name, with Parameters) parameters Expression() Keyword Method Call() receptor Expression() Keyword Method Call() parameters Keyword Parameter(keyword) Keyword Parameter(keyword) value Expression() Binary Expr(binary Op) right Expression() Closure Declaration() Expression() Closure Declaration() statements Statement() Closure Declaration() formal Parameters Closure Parameter() Closure Parameter() Variable(name) Resolve Link(is External, link Name, feature Name) expr Expression() Resolve Link(is External, link Name, feature Name) module Use Declaration(module, as) DIV() If Expr() Expression() If Expr() else If Branch() If Branch() condition Expression() If Branch() statements Statement() Num Literal(value) Expression() Double Literal(value) Expression() String Literal(value) Expression() Boolean Literal(value) Expression() Type Expression() Class Use(class Name, strict Type) Type Expression() Class Use(class Name, strict Type) Implicitly Annotable Element() Class Use(class Name, strict Type) model Represent Model() Trace Use() Type Expression() Trace Use() trace Trace Definition() Typed With Class() type Class Use(class Name, strict Type) Trace Interface() Module Definition() Trace Interface() definitions Trace Definition() Traced Model Parameter() Definition Parameter() Traced Model Parameter() Represent Model() Trace Definition() Named Element(name) Trace Definition() elements Trace Element() Trace Element() Named Element(name) Trace Element() type Type Expression() Inline Model() Module Definition() Inline Model() Represent Model() Inline Model() classes Inline Class() Inline Class() Named Element(name) Inline Class() features Inline Feature(multivalued) Inline Feature(multivalued) Named Element(name) Inline Feature(multivalued) type Type Expression() Inline Attribute() Inline Feature(multivalued) Inline Reference() Inline Feature(multivalued) Match Trace(cardinality) Expression() Match Trace(cardinality) trace Trace Definition() Match Trace(cardinality) trace Expr Trace Compare Expression(multivalued Tag) Trace Compare Expression(multivalued Tag) trace Var Trace Element() Trace Compare Expression(multivalued Tag) expr Expression() MANY() Put Trace() Expression() Put Trace() trace Trace Definition() Put Trace() parameters Put Trace Parameter() Put Trace Parameter() value Expression() Put Trace Parameter() trace Var Trace Element()
Label: graphicaleditor, Text: Diagram(documentation, id, name, resolution) Diagram Element(id, any Attribute) extension Extension Type(any) Edge() Diagram Element(id, any Attribute) Extension Type(any) Label() Node() Labeled Edge() Edge() Labeled Shape() Shape() Node() Diagram Element(id, any Attribute) Plane(diagram Element Group) Node() Plane(diagram Element Group) diagram Element Diagram Element(id, any Attribute) Shape() Node() Style(id) Document Root(mixed) diagram Element Diagram Element(id, any Attribute) Document Root(mixed) diagram Diagram(documentation, id, name, resolution) Document Root(mixed) edge Edge() Document Root(mixed) label Label() Document Root(mixed) labeled Edge Labeled Edge() Document Root(mixed) labeled Shape Labeled Shape() Document Root(mixed) node Node() Document Root(mixed) plane Plane(diagram Element Group) Document Root(mixed) shape Shape() Document Root(mixed) style Style(id)
Label: requirements, Text: I Named(name) I Described(description) IID(id) I Content Element() IID(id) I Content Element() I Named(name) I Content Element() I Described(description) I Content Element() I Recycled(recycled, has Recycled Children) I Container() contents I Content Element() I Specmate Model Object() I Container() I Specmate Model Object() I Tracing Element() Folder(library) I Specmate Model Object() I Positionable(position) I External(ext Id, ext Id2, source, live) I Specmate Positionable Model Object(x, y, width, height) I Specmate Model Object() I Model Connection() I Specmate Model Object() I Model Connection() target I Model Node() I Model Node() I Specmate Positionable Model Object(x, y, width, height) I Model Node() incoming Connections I Model Connection() I Tracing Element() I Recycled(recycled, has Recycled Children) Requirement(number Of Tests, tac, implementing Unit, implementing BO Team, implementing IT Team, planned Release, status, is Regression Requirement, platform) I Specmate Model Object() Requirement(number Of Tests, tac, implementing Unit, implementing BO Team, implementing IT Team, planned Release, status, is Regression Requirement, platform) I External(ext Id, ext Id2, source, live) CEG Model(model Requirements) I Specmate Model Object() CEG Node(type, variable, condition) I Model Node() OR() CEG Connection(negate) I Model Connection() Test Specification() I Container() Test Parameter(type) I Content Element() Test Parameter(type) assignments Parameter Assignment(value, condition) Test Case(consistent) I Container() Test Case(consistent) I Positionable(position) Parameter Assignment(value, condition) I Content Element() Parameter Assignment(value, condition) parameter Test Parameter(type) OUTPUT() Test Procedure(is Regression Test) I Container() Test Procedure(is Regression Test) I External(ext Id, ext Id2, source, live) Test Step(expected Outcome) I Content Element() Test Step(expected Outcome) I Positionable(position) Test Step(expected Outcome) referenced Test Parameters Test Parameter(type) Process() I Container() Process Node() I Model Node() Process Step(expected Outcome) Process Node() Process Decision() Process Node() Process Connection(condition, label X, label Y) I Model Connection() Process Start() Process Node() Process End() Process Node() History() entries History Entry(timestamp, user, deleted Objects, comment) History Entry(timestamp, user, deleted Objects, comment) changes Change(object Name, object Type, old Value, new Value, feature, is Create, is Delete) Change(object Name, object Type, old Value, new Value, feature, is Create, is Delete) Status(value) Problem Detail(ecode, status, detail, instance) nlp() Batch Operation() operations Operation(type) Operation(type) value I Content Element() DELETE() Export(type, content) I Named(name)
Label: petrinet, Text: Petri Net(name) contains Generic Places Generic Place(name, capacity, number Of Tokens) Petri Net(name) contains Transitions Transition(name) Petri Net(name) contains Input Arcs Input Arc(weight) Petri Net(name) contains Output Arcs Output Arc(weight) Generic Place(name, capacity, number Of Tokens) Transition(name) Input Arc(weight) Input Arc To Transition Transition(name) Input Arc(weight) Input Arc From Place Place() Input Arc(weight) Input Arc From Input Port Input Port() Output Arc(weight) Output Arc From Transition Transition(name) Output Arc(weight) Output Arc To Place Place() Output Arc(weight) Output Arc To Output Port Output Port() Output Port() Generic Place(name, capacity, number Of Tokens) Input Port() Generic Place(name, capacity, number Of Tokens) Place() Generic Place(name, capacity, number Of Tokens)
Label: modelling, Text: Geppetto Model(id, name) variables Variable(static) Geppetto Model(id, name) libraries Geppetto Library() Geppetto Model(id, name) tags Tag(name) Geppetto Model(id, name) data Sources Data Source(data Source Service, url) Geppetto Model(id, name) queries Query(description, run For Count) Node(id, name) I Synchable(synched) Node(id, name) tags Tag(name) Geppetto Library() Node(id, name) Geppetto Library() shared Types Type(abstract) Library Manager() libraries Geppetto Library() Experiment State(experiment Id, project Id) set Parameters Variable Value() Variable Value() pointer Pointer(path) Variable Value() value Value() Tag(name) I Synchable(synched) Domain Model(domain Model) format Model Format(model Format) Model Format(model Format) External Domain Model(file Format) Domain Model(domain Model) HDF5() String To String Map(key, value) I Synchable(synched) Type(abstract) Node(id, name) Type(abstract) visual Type Visual Type() Type(abstract) referenced Variables Variable(static) Type(abstract) domain Model Domain Model(domain Model) Visual Type() Type(abstract) Visual Type() default Value Visual Value() Import Type(url, reference URL, model Interpreter Id, autoresolve) Type(abstract) Composite Type() Type(abstract) Composite Type() variables Variable(static) Composite Type() default Value Composite() Pointer Type() Type(abstract) Pointer Type() default Value Pointer(path) Quantity Type() Type(abstract) Quantity Type() default Value Quantity(scaling Factor, value) Parameter Type() Type(abstract) Parameter Type() default Value Quantity(scaling Factor, value) State Variable Type() Type(abstract) State Variable Type() default Value Quantity(scaling Factor, value) Dynamics Type() Type(abstract) Dynamics Type() default Value Dynamics() Argument Type() Type(abstract) Argument Type() default Value Argument(argument) Expression Type() Type(abstract) Expression Type() default Value Expression(expression) HTML Type() Type(abstract) HTML Type() default Value HTML(html) Text Type() Type(abstract) Text Type() default Value Text(text) URL Type() Type(abstract) URL Type() default Value URL(url) Point Type() Type(abstract) Point Type() default Value Point(x, y, z) Array Type(size) array Type Type(abstract) Array Type(size) default Value Array Value() Composite Visual Type() Visual Type() Composite Visual Type() variables Variable(static) Composite Visual Type() visual Groups Visual Group(low Spectrum Color, high Spectrum Color, type) Connection Type() Type(abstract) Connection Type() variables Variable(static) Connection Type() default Value Composite() Simple Type() Type(abstract) Image Type() Type(abstract) Image Type() default Value Image(data, name, reference, format) Value() I Synchable(synched) Composite() Value() Composite() value String To Value Map(key) String To Value Map(key) value Value() Quantity(scaling Factor, value) Value() Physical Quantity() Quantity(scaling Factor, value) Physical Quantity() unit Unit(unit) Unit(unit) Value() Time Series(scaling Factor, value) Value() Time Series(scaling Factor, value) unit Unit(unit) MD Time Series() value Value() Metadata Value() Value() Text(text) Metadata Value() URL(url) Metadata Value() HTML(html) Metadata Value() Pointer(path) Value() Pointer(path) elements Pointer Element(index) Pointer(path) point Point(x, y, z) Pointer Element(index) variable Variable(static) Pointer Element(index) type Type(abstract) Point(x, y, z) Value() Dynamics() Value() Dynamics() initial Condition Physical Quantity() Dynamics() dynamics Function() Function Plot(title, x Axis Label, y Axis Label, initial Value, final Value, step Value) Function() Value() Function() arguments Argument(argument) Function() expression Expression(expression) Function() function Plot Function Plot(title, x Axis Label, y Axis Label, initial Value, final Value, step Value) Argument(argument) Value() Expression(expression) Value() Visual Value() Value() Visual Value() group Elements Visual Group Element(default Color) Visual Value() position Point(x, y, z) Collada(collada) Visual Value() OBJ(obj) Visual Value() Sphere(radius) Visual Value() Cylinder(bottom Radius, top Radius, height) Visual Value() Cylinder(bottom Radius, top Radius, height) distal Point(x, y, z) Particles() Value() Particles() particles Point(x, y, z) Skeleton Animation() Visual Value() Skeleton Animation() skeleton Transformation Series Skeleton Transformation(skeleton Transformation) Skeleton Transformation(skeleton Transformation) Visual Group Element(default Color) Node(id, name) Visual Group Element(default Color) parameter Quantity(scaling Factor, value) Visual Group(low Spectrum Color, high Spectrum Color, type) Node(id, name) Visual Group(low Spectrum Color, high Spectrum Color, type) visual Group Elements Visual Group Element(default Color) Connection(connectivity) Value() Connection(connectivity) b Pointer(path) NON DIRECTIONAL() Array Element(index) initial Value Value() Array Element(index) position Point(x, y, z) Array Value() Value() Array Value() elements Array Element(index) Image(data, name, reference, format) Value() GOOGLE MAP() Import Value(model Interpreter Id) Value() Variable(static) Node(id, name) Variable(static) types Type(abstract) Variable(static) initial Values Type To Value Map() Variable(static) position Point(x, y, z) Type To Value Map() key Type(abstract) Type To Value Map() value Value() Data Source(data Source Service, url) Node(id, name) Data Source(data Source Service, url) library Configurations Data Source Library Configuration(model Interpreter Id, format) Data Source(data Source Service, url) fetch Variable Query Query(description, run For Count) Data Source(data Source Service, url) target Library Geppetto Library() Data Source Library Configuration(model Interpreter Id, format) library Geppetto Library() Query(description, run For Count) Node(id, name) Query(description, run For Count) matching Criteria Query Matching Criteria() Query(description, run For Count) return Type Type(abstract) Process Query(query Processor Id) Query(description, run For Count) Process Query(query Processor Id) parameters String To String Map(key, value) Simple Query(query, count Query) Query(description, run For Count) Compound Query() query Chain Query(description, run For Count) Compound Ref Query() query Chain Query(description, run For Count) Query Results(id, header) results A Query Result() Runnable Query(target Variable Path, query Path, boolean Operator) A Query Result() Query Result(values) A Query Result() Serializable Query Result(values) A Query Result() Query Matching Criteria() type Type(abstract) OR()
Label: publication, Text: finish To Finish() Publication Process(min Time, max Time) Named(name) Publication Process(min Time, max Time) phases Publication Phase(name, min Time, max Time) Publication Process(min Time, max Time) publication Rules Rule(text, key) Publication Phase(name, min Time, max Time) links To Successors Sequence(sequence Type) Publication Phase(name, min Time, max Time) needed Person Researcher(name, for Name, position) Publication Phase(name, min Time, max Time) rules Rule(text, key) Publication Phase(name, min Time, max Time) placeholder Place Holder PP() Sequence(sequence Type) predecessor Publication Phase(name, min Time, max Time) Rule(text, key) placeholder Place Holder Rule() Researcher(name, for Name, position) phase Participation Publication Phase(name, min Time, max Time) Researcher(name, for Name, position) writes Write() Researcher(name, for Name, position) reviews Review() Researcher(name, for Name, position) papers Paper() Researcher(name, for Name, position) placeholder Place Holder Rs() Paper() Named(name) Paper() paragraphs Paragraph(content) Paper() progress Progress(percent, time) Paper() authors Researcher(name, for Name, position) Paragraph(content) Counted(id) Paragraph(content) Named(name) Paragraph(content) reviews Review Note(content) Review Note(content) Named(name) Review Note(content) placeholder Place Holder Rn() Progress(percent, time) Labelled(lname) Progress(percent, time) process Publication Process(min Time, max Time) Progress(percent, time) paper Paper() Write() Labelled(lname) Write() paragraph Paragraph(content) Review() Labelled(lname) Review() review Note Review Note(content) Publication Structure() Named(name) Publication Structure() researchers Researcher(name, for Name, position) Publication Structure() papers Paper() Publication System() process View Publication Process(min Time, max Time) Publication System() structural View Publication Structure() Named(name) Counted(id) Labelled(lname) Place Holder Rs() Place Holder() Place Holder Rule() Place Holder() Place Holder() Place Holder Rn() Place Holder() Place Holder PP() Place Holder()
Label: gui, Text: Abstract Combo Box Cell Editor(activation Style) Cell Editor(mixed, group, error Message, style) Abstract Data Provider(mixed, group, key) binding Context I Binding Context(mixed) Abstract List Viewer() Structured Viewer(group2, use Hashlookup) Abstract Table Viewer(item Count) Column Viewer(group3) Abstract Tree Viewer(group4, auto Expand Level) Column Viewer(group3) Abstract Tree Viewer(group4, auto Expand Level) expanded Tree Paths Tree Path(mixed) Accessible(mixed) Binding(mixed, group, element Name, path, x Path) control Widget(mixed, activate Event, arm Event, close Event, collapse Event, data Context, deactivate Event, default Selection Event, deiconify Event, dispose Event, drag Detect Event, erase Item Event, expand Event, focus In Event, focus Out Event, hard Key Down Event, hard Key Up Event, help Event, hide Event, iconify Event, ime Composition Event, key Down Event, key Up Event, measure Item Event, menu Detect Event, modify Event, mouse Double Click Event, mouse Down Event, mouse Enter Event, mouse Exit Event, mouse Hover Event, mouse Move Event, mouse Up Event, mouse Wheel Event, move Event, paint Event, paint Item Event, resize Event, selection Event, set Data Event, show Event, style, traverse Event, verify Event) Browser(group3, browser Type, text, url) Composite(group2, background Mode, layout Deferred) Button(group1, alignment, grayed, image, selection, text) Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Button(group1, alignment, grayed, image, selection, text) command I Command(mixed) Canvas(mixed1, group3) Composite(group2, background Mode, layout Deferred) Canvas(mixed1, group3) i ME IME(group, ranges, composition Offset, text) Canvas(mixed1, group3) caret Caret(group, bounds, font, image, location, size, visible) Caret(group, bounds, font, image, location, size, visible) Widget(mixed, activate Event, arm Event, close Event, collapse Event, data Context, deactivate Event, default Selection Event, deiconify Event, dispose Event, drag Detect Event, erase Item Event, expand Event, focus In Event, focus Out Event, hard Key Down Event, hard Key Up Event, help Event, hide Event, iconify Event, ime Composition Event, key Down Event, key Up Event, measure Item Event, menu Detect Event, modify Event, mouse Double Click Event, mouse Down Event, mouse Enter Event, mouse Exit Event, mouse Hover Event, mouse Move Event, mouse Up Event, mouse Wheel Event, move Event, paint Event, paint Item Event, resize Event, selection Event, set Data Event, show Event, style, traverse Event, verify Event) Caret(group, bounds, font, image, location, size, visible) parent Canvas(mixed1, group3) C Combo(group3, items, editable, list Visible, selection, text, text Limit, visible Item Count) Composite(group2, background Mode, layout Deferred) Cell(mixed, group, image, text) parent Table Item(group, texts, checked, grayed, image Indent) Cell Editor(mixed, group, error Message, style) validator I Cell Editor Validator(mixed) Cell Editor(mixed, group, error Message, style) layout Data Layout Data(mixed) Cell Editor(mixed, group, error Message, style) control Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Checkbox Cell Editor() Cell Editor(mixed, group, error Message, style) Checkbox Table Viewer(group5, all Checked, all Grayed) Table Viewer(group4) Checkbox Table Viewer(group5, all Checked, all Grayed) check State Provider I Check State Provider(mixed) Checkbox Tree Viewer(group6, all Checked) Tree Viewer(group5) Checkbox Tree Viewer(group6, all Checked) check State Provider I Check State Provider(mixed) C Label(alignment, image, text) Canvas(mixed1, group3) Class(mixed) Collection(mixed) Color Cell Editor() Dialog Cell Editor() Column Viewer(group3) Structured Viewer(group2, use Hashlookup) Column Viewer(group3) column Viewer Editor Column Viewer Editor(mixed) Column Viewer(group3) cell Modifier I Cell Modifier(mixed) Column Viewer(group3) cell Editors Cell Editor(mixed, group, error Message, style) Column Viewer Editor(mixed) Combo(group3, items, list Visible, orientation, selection, text, text Limit, visible Item Count) Composite(group2, background Mode, layout Deferred) Combo Box Cell Editor() Abstract Combo Box Cell Editor(activation Style) Combo Box Viewer Cell Editor(group1) Abstract Combo Box Cell Editor(activation Style) Combo Box Viewer Cell Editor(group1) conten Provider I Structured Content Provider(mixed) Combo Box Viewer Cell Editor(group1) label Provider I Base Label Provider(mixed) Combo Box Viewer Cell Editor(group1) viewer Combo Viewer() Combo Viewer() Abstract List Viewer() Composite(group2, background Mode, layout Deferred) Scrollable(group1, client Area) Composite(group2, background Mode, layout Deferred) children Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Composite(group2, background Mode, layout Deferred) layout Layout(mixed) Content Viewer(group1) Viewer(mixed, group) Content Viewer(group1) content Provider I Content Provider(mixed) Content Viewer(group1) label Provider I Base Label Provider(mixed) Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Widget(mixed, activate Event, arm Event, close Event, collapse Event, data Context, deactivate Event, default Selection Event, deiconify Event, dispose Event, drag Detect Event, erase Item Event, expand Event, focus In Event, focus Out Event, hard Key Down Event, hard Key Up Event, help Event, hide Event, iconify Event, ime Composition Event, key Down Event, key Up Event, measure Item Event, menu Detect Event, modify Event, mouse Double Click Event, mouse Down Event, mouse Enter Event, mouse Exit Event, mouse Hover Event, mouse Move Event, mouse Up Event, mouse Wheel Event, move Event, paint Event, paint Item Event, resize Event, selection Event, set Data Event, show Event, style, traverse Event, verify Event) Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) menu Menu(group, enabled, handle, visible) Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) cursor Cursor() Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) accessible Accessible(mixed) Control Editor(mixed, group, grab Horizontal, grab Vertical, horizontal Alignment, minimum Height, minimum Width, vertical Alignment) editor Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Cool Bar(group3, item Order, wrap Indices, item Sizes, locked) Composite(group2, background Mode, layout Deferred) Cool Bar(group3, item Order, wrap Indices, item Sizes, locked) items Cool Item(group, bounds, minimum Size, preferred Size, size) Cool Item(group, bounds, minimum Size, preferred Size, size) Item(image, text) Cool Item(group, bounds, minimum Size, preferred Size, size) parent Cool Bar(group3, item Order, wrap Indices, item Sizes, locked) Cool Item(group, bounds, minimum Size, preferred Size, size) control Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) C Tab Folder(group3, border Visible, margin Height, margin Width, maximized, maximize Visible, m INTABWIDTH, minimized, minimize Visible, minimum Characters, m RU Visible, selection Background, selection Foreground, simple, single, tab Height, tab Position, unselected Close Visible, unselected Image Visible) Composite(group2, background Mode, layout Deferred) C Tab Folder(group3, border Visible, margin Height, margin Width, maximized, maximize Visible, m INTABWIDTH, minimized, minimize Visible, minimum Characters, m RU Visible, selection Background, selection Foreground, simple, single, tab Height, tab Position, unselected Close Visible, unselected Image Visible) border Middle RGB RGB(mixed) C Tab Folder(group3, border Visible, margin Height, margin Width, maximized, maximize Visible, m INTABWIDTH, minimized, minimize Visible, minimum Characters, m RU Visible, selection Background, selection Foreground, simple, single, tab Height, tab Position, unselected Close Visible, unselected Image Visible) selection C Tab Item(group, bounds, disabled Image, font, show Close, tool Tip Text) C Tab Folder(group3, border Visible, margin Height, margin Width, maximized, maximize Visible, m INTABWIDTH, minimized, minimize Visible, minimum Characters, m RU Visible, selection Background, selection Foreground, simple, single, tab Height, tab Position, unselected Close Visible, unselected Image Visible) top Right Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) C Tab Item(group, bounds, disabled Image, font, show Close, tool Tip Text) Item(image, text) C Tab Item(group, bounds, disabled Image, font, show Close, tool Tip Text) parent C Tab Folder(group3, border Visible, margin Height, margin Width, maximized, maximize Visible, m INTABWIDTH, minimized, minimize Visible, minimum Characters, m RU Visible, selection Background, selection Foreground, simple, single, tab Height, tab Position, unselected Close Visible, unselected Image Visible) C Tab Item(group, bounds, disabled Image, font, show Close, tool Tip Text) control Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Cursor() Resource(mixed) Date Time(day, hours, minutes, month, seconds, year) Composite(group2, background Mode, layout Deferred) Decorations(group4, images, image, maximized, minimized, text) Canvas(mixed1, group3) Decorations(group4, images, image, maximized, minimized, text) default Button Button(group1, alignment, grayed, image, selection, text) Decorations(group4, images, image, maximized, minimized, text) menu Bar Menu(group, enabled, handle, visible) Default Cell Modifier(mixed) Default Label Provider(mixed) Dialog(group1) Window(mixed, group, block On Open) Dialog(group1) button Bar Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Dialog(group1) blocked Handler I Dialog Blocked Handler(mixed) Dialog Cell Editor() Cell Editor(mixed, group, error Message, style) Dialog Tray(mixed) Document(mixed) Document Object() Observable(mixed) Document Root(mixed) composite Composite(group2, background Mode, layout Deferred) Document Root(mixed) dialog Window(mixed, group, block On Open) Echo Char Type() Element() Document Object() Expand Bar(group3, spacing) Composite(group2, background Mode, layout Deferred) Expand Bar(group3, spacing) items Expand Item(group, expanded, height) Expand Item(group, expanded, height) Item(image, text) Expand Item(group, expanded, height) parent Expand Bar(group3, spacing) Expand Item(group, expanded, height) control Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Fill Layout(margin Height, margin Width, spacing, type) Layout(mixed) Form Attachment(mixed, group, alignment, denominator, numerator, offset) control Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Form Data(mixed, group, height, width) top Form Attachment(mixed, group, alignment, denominator, numerator, offset) Form Layout(margin Bottom, margin Height, margin Left, margin Right, margin Top, margin Width, spacing) Layout(mixed) Grid Data(mixed, exclude, grab Excess Horizontal Space, grab Excess Vertical Space, height Hint, horizontal Alignment, horizontal Indent, horizontal Span, minimum Height, minimum Width, vertical Alignment, vertical Indent, vertical Span, width Hint) Grid Layout(horizontal Spacing, make Columns Equal Width, margin Bottom, margin Height, margin Left, margin Right, margin Top, margin Width, num Columns, vertical Spacing) Layout(mixed) Group(text) Composite(group2, background Mode, layout Deferred) I Base Label Provider(mixed) I Binding Context(mixed) I Cell Editor Validator(mixed) I Cell Modifier(mixed) I Check State Provider(mixed) I Command(mixed) I Content Provider(mixed) I Dialog Blocked Handler(mixed) I Element Comparer(mixed) IME(group, ranges, composition Offset, text) Widget(mixed, activate Event, arm Event, close Event, collapse Event, data Context, deactivate Event, default Selection Event, deiconify Event, dispose Event, drag Detect Event, erase Item Event, expand Event, focus In Event, focus Out Event, hard Key Down Event, hard Key Up Event, help Event, hide Event, iconify Event, ime Composition Event, key Down Event, key Up Event, measure Item Event, menu Detect Event, modify Event, mouse Double Click Event, mouse Down Event, mouse Enter Event, mouse Exit Event, mouse Hover Event, mouse Move Event, mouse Up Event, mouse Wheel Event, move Event, paint Event, paint Item Event, resize Event, selection Event, set Data Event, show Event, style, traverse Event, verify Event) IME(group, ranges, composition Offset, text) styles Text Style(mixed) I Selection(mixed) I Structured Content Provider(mixed) Item(image, text) Widget(mixed, activate Event, arm Event, close Event, collapse Event, data Context, deactivate Event, default Selection Event, deiconify Event, dispose Event, drag Detect Event, erase Item Event, expand Event, focus In Event, focus Out Event, hard Key Down Event, hard Key Up Event, help Event, hide Event, iconify Event, ime Composition Event, key Down Event, key Up Event, measure Item Event, menu Detect Event, modify Event, mouse Double Click Event, mouse Down Event, mouse Enter Event, mouse Exit Event, mouse Hover Event, mouse Move Event, mouse Up Event, mouse Wheel Event, move Event, paint Event, paint Item Event, resize Event, selection Event, set Data Event, show Event, style, traverse Event, verify Event) Label(alignment, image, text) Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Layout(mixed) Layout Data(mixed) Link(text) Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) List(group2, items, selection, selection Indices, top Index) Scrollable(group1, client Area) Listener(mixed) List Viewer(group3) Abstract List Viewer() List Viewer(group3) list List(group2, items, selection, selection Indices, top Index) Menu(group, enabled, handle, visible) Widget(mixed, activate Event, arm Event, close Event, collapse Event, data Context, deactivate Event, default Selection Event, deiconify Event, dispose Event, drag Detect Event, erase Item Event, expand Event, focus In Event, focus Out Event, hard Key Down Event, hard Key Up Event, help Event, hide Event, iconify Event, ime Composition Event, key Down Event, key Up Event, measure Item Event, menu Detect Event, modify Event, mouse Double Click Event, mouse Down Event, mouse Enter Event, mouse Exit Event, mouse Hover Event, mouse Move Event, mouse Up Event, mouse Wheel Event, move Event, paint Event, paint Item Event, resize Event, selection Event, set Data Event, show Event, style, traverse Event, verify Event) Menu(group, enabled, handle, visible) items Menu Item(group, accelerator, enabled, selection) Menu(group, enabled, handle, visible) parent Decorations(group4, images, image, maximized, minimized, text) Menu Item(group, accelerator, enabled, selection) Item(image, text) Menu Item(group, accelerator, enabled, selection) menu Menu(group, enabled, handle, visible) Menu Item(group, accelerator, enabled, selection) command I Command(mixed) Message Box(message) Dialog(group1) Object Data Provider(group1, method Name) Abstract Data Provider(mixed, group, key) Object Data Provider(group1, method Name) object Type Class(mixed) Object Data Provider(group1, method Name) method Parameters List(group2, items, selection, selection Indices, top Index) Observable(mixed) Progress Bar(maximum, minimum, selection, state) Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Resource(mixed) RGB(mixed) Row Data(mixed, exclude, height, width) Row Layout(center, fill, justify, margin Bottom, margin Height, margin Left, margin Right, margin Top, margin Width, pack, spacing, type, wrap) Layout(mixed) Sash() Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Sash Form(group3, weights, orientation, s ASHWIDTH, sash Width1) Composite(group2, background Mode, layout Deferred) Sash Form(group3, weights, orientation, s ASHWIDTH, sash Width1) maximized Control Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Scale(increment, maximum, minimum, page Increment, selection) Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Scrollable(group1, client Area) Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Scrollable(group1, client Area) vertical Bar Scroll Bar(group, enabled, increment, maximum, minimum, page Increment, selection, size, thumb, visible) Scroll Bar(group, enabled, increment, maximum, minimum, page Increment, selection, size, thumb, visible) Widget(mixed, activate Event, arm Event, close Event, collapse Event, data Context, deactivate Event, default Selection Event, deiconify Event, dispose Event, drag Detect Event, erase Item Event, expand Event, focus In Event, focus Out Event, hard Key Down Event, hard Key Up Event, help Event, hide Event, iconify Event, ime Composition Event, key Down Event, key Up Event, measure Item Event, menu Detect Event, modify Event, mouse Double Click Event, mouse Down Event, mouse Enter Event, mouse Exit Event, mouse Hover Event, mouse Move Event, mouse Up Event, mouse Wheel Event, move Event, paint Event, paint Item Event, resize Event, selection Event, set Data Event, show Event, style, traverse Event, verify Event) Scroll Bar(group, enabled, increment, maximum, minimum, page Increment, selection, size, thumb, visible) parent Scrollable(group1, client Area) Shell(group5, alpha, full Screen, ime Input Mode, minimum Size) Decorations(group4, images, image, maximized, minimized, text) Slider(increment, maximum, minimum, page Increment, selection, thumb) Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Spinner(digits, increment, maximum, minimum, page Increment, selection, text, text Limit) Composite(group2, background Mode, layout Deferred) Stack Layout(group, margin Height, margin Width) Layout(mixed) Stack Layout(group, margin Height, margin Width) top Control Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Structured Viewer(group2, use Hashlookup) Content Viewer(group1) Structured Viewer(group2, use Hashlookup) comparator Viewer Comparator(mixed) Structured Viewer(group2, use Hashlookup) comparer I Element Comparer(mixed) Structured Viewer(group2, use Hashlookup) filters Viewer Filter(mixed) Structured Viewer(group2, use Hashlookup) sorter Viewer Sorter() Styled Text(group4, ranges, selection Ranges, alignment, bidi Coloring, block Selection, caret Offset, double Click Enabled, editable, horizontal Index, horizontal Pixel, indent, justify, line Delimiter, line Spacing, orientation, selection, selection Background, selection Foreground, selection Text, tabs, text, text Limit, top Index, top Pixel, word Wrap) Canvas(mixed1, group3) Styled Text(group4, ranges, selection Ranges, alignment, bidi Coloring, block Selection, caret Offset, double Click Enabled, editable, horizontal Index, horizontal Pixel, indent, justify, line Delimiter, line Spacing, orientation, selection, selection Background, selection Foreground, selection Text, tabs, text, text Limit, top Index, top Pixel, word Wrap) style Range Style Range() Styled Text(group4, ranges, selection Ranges, alignment, bidi Coloring, block Selection, caret Offset, double Click Enabled, editable, horizontal Index, horizontal Pixel, indent, justify, line Delimiter, line Spacing, orientation, selection, selection Background, selection Foreground, selection Text, tabs, text, text Limit, top Index, top Pixel, word Wrap) content Styled Text Content(mixed) Styled Text Content(mixed) Style Range() Text Style(mixed) Tab Folder(group3) Composite(group2, background Mode, layout Deferred) Tab Folder(group3) selection Tab Item(group, bounds, tool Tip Text) Tab Item(group, bounds, tool Tip Text) Item(image, text) Tab Item(group, bounds, tool Tip Text) parent Tab Folder(group3) Tab Item(group, bounds, tool Tip Text) control Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Table(group3, column Order, selection Indices, header Visible, item Count, lines Visible, sort Direction, top Index) Composite(group2, background Mode, layout Deferred) Table(group3, column Order, selection Indices, header Visible, item Count, lines Visible, sort Direction, top Index) columns Table Column(group, alignment, moveable, resizable, tool Tip Text, width) Table(group3, column Order, selection Indices, header Visible, item Count, lines Visible, sort Direction, top Index) selection Table Item(group, texts, checked, grayed, image Indent) Table Column(group, alignment, moveable, resizable, tool Tip Text, width) Item(image, text) Table Column(group, alignment, moveable, resizable, tool Tip Text, width) editor Element() Table Column(group, alignment, moveable, resizable, tool Tip Text, width) parent Table(group3, column Order, selection Indices, header Visible, item Count, lines Visible, sort Direction, top Index) Table Editor(group1, column, dynamic) Control Editor(mixed, group, grab Horizontal, grab Vertical, horizontal Alignment, minimum Height, minimum Width, vertical Alignment) Table Editor(group1, column, dynamic) item Table Item(group, texts, checked, grayed, image Indent) Table Item(group, texts, checked, grayed, image Indent) Item(image, text) Table Item(group, texts, checked, grayed, image Indent) editors Collection(mixed) Table Item(group, texts, checked, grayed, image Indent) parent Table(group3, column Order, selection Indices, header Visible, item Count, lines Visible, sort Direction, top Index) Table Tree() Composite(group2, background Mode, layout Deferred) Table Tree Viewer(group5) Abstract Tree Viewer(group4, auto Expand Level) Table Tree Viewer(group5) table Tree Table Tree() Table Viewer(group4) Abstract Table Viewer(item Count) Table Viewer(group4) table Table(group3, column Order, selection Indices, header Visible, item Count, lines Visible, sort Direction, top Index) Table Viewer Column(group, text, width) Viewer Column(mixed) Table Viewer Column(group, text, width) column Table Column(group, alignment, moveable, resizable, tool Tip Text, width) Text(caret Location, double Click Enabled, echo Char, editable, line Delimiter, message, orientation, selection, selection Text, tabs, text, text Limit, top Index) Scrollable(group1, client Area) Text(caret Location, double Click Enabled, echo Char, editable, line Delimiter, message, orientation, selection, selection Text, tabs, text, text Limit, top Index) echo Char Echo Char Type() Text Cell Editor() Cell Editor(mixed, group, error Message, style) Text Style(mixed) Title Area Dialog(group3, error Message, message, title, title Image) Tray Dialog(group2, help Available) Title Area Dialog(group3, error Message, message, title, title Image) title Area Color RGB(mixed) Tool Bar(group3) Composite(group2, background Mode, layout Deferred) Tool Bar(group3) items Tool Item(group, bounds, disabled Image, enabled, hot Image, selection, tool Tip Text, width) Tool Item(group, bounds, disabled Image, enabled, hot Image, selection, tool Tip Text, width) Item(image, text) Tool Item(group, bounds, disabled Image, enabled, hot Image, selection, tool Tip Text, width) control Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Tool Item(group, bounds, disabled Image, enabled, hot Image, selection, tool Tip Text, width) parent Tool Bar(group3) Tool Tip(group, auto Hide, message, text, visible) Widget(mixed, activate Event, arm Event, close Event, collapse Event, data Context, deactivate Event, default Selection Event, deiconify Event, dispose Event, drag Detect Event, erase Item Event, expand Event, focus In Event, focus Out Event, hard Key Down Event, hard Key Up Event, help Event, hide Event, iconify Event, ime Composition Event, key Down Event, key Up Event, measure Item Event, menu Detect Event, modify Event, mouse Double Click Event, mouse Down Event, mouse Enter Event, mouse Exit Event, mouse Hover Event, mouse Move Event, mouse Up Event, mouse Wheel Event, move Event, paint Event, paint Item Event, resize Event, selection Event, set Data Event, show Event, style, traverse Event, verify Event) Tool Tip(group, auto Hide, message, text, visible) parent Shell(group5, alpha, full Screen, ime Input Mode, minimum Size) Tracker(group, rectangles, stippled) Widget(mixed, activate Event, arm Event, close Event, collapse Event, data Context, deactivate Event, default Selection Event, deiconify Event, dispose Event, drag Detect Event, erase Item Event, expand Event, focus In Event, focus Out Event, hard Key Down Event, hard Key Up Event, help Event, hide Event, iconify Event, ime Composition Event, key Down Event, key Up Event, measure Item Event, menu Detect Event, modify Event, mouse Double Click Event, mouse Down Event, mouse Enter Event, mouse Exit Event, mouse Hover Event, mouse Move Event, mouse Up Event, mouse Wheel Event, move Event, paint Event, paint Item Event, resize Event, selection Event, set Data Event, show Event, style, traverse Event, verify Event) Tracker(group, rectangles, stippled) cursor Cursor() Tray(group) Widget(mixed, activate Event, arm Event, close Event, collapse Event, data Context, deactivate Event, default Selection Event, deiconify Event, dispose Event, drag Detect Event, erase Item Event, expand Event, focus In Event, focus Out Event, hard Key Down Event, hard Key Up Event, help Event, hide Event, iconify Event, ime Composition Event, key Down Event, key Up Event, measure Item Event, menu Detect Event, modify Event, mouse Double Click Event, mouse Down Event, mouse Enter Event, mouse Exit Event, mouse Hover Event, mouse Move Event, mouse Up Event, mouse Wheel Event, move Event, paint Event, paint Item Event, resize Event, selection Event, set Data Event, show Event, style, traverse Event, verify Event) Tray(group) items Tray Item() Tray Dialog(group2, help Available) Dialog(group1) Tray Dialog(group2, help Available) tray Dialog Tray(mixed) Tray Item() Item(image, text) Tree(group3, column Order, header Visible, item Count, lines Visible, sort Direction) Composite(group2, background Mode, layout Deferred) Tree(group3, column Order, header Visible, item Count, lines Visible, sort Direction) columns Tree Column(group, alignment, moveable, resizable, tool Tip Text, width) Tree(group3, column Order, header Visible, item Count, lines Visible, sort Direction) selection Tree Item(group, texts, checked, expanded, grayed, handle, item Count) Tree Column(group, alignment, moveable, resizable, tool Tip Text, width) Item(image, text) Tree Column(group, alignment, moveable, resizable, tool Tip Text, width) parent Tree(group3, column Order, header Visible, item Count, lines Visible, sort Direction) Tree Item(group, texts, checked, expanded, grayed, handle, item Count) Item(image, text) Tree Item(group, texts, checked, expanded, grayed, handle, item Count) parent Tree(group3, column Order, header Visible, item Count, lines Visible, sort Direction) Tree Path(mixed) Tree Viewer(group5) Abstract Tree Viewer(group4, auto Expand Level) Tree Viewer(group5) tree Tree(group3, column Order, header Visible, item Count, lines Visible, sort Direction) URL(mixed) Viewer(mixed, group) selection I Selection(mixed) Viewer(mixed, group) control Control(group, background, background Image, bounds, capture, drag Detect, enabled, font, foreground, handle, location, redraw, size, tool Tip Text, visible) Viewer Column(mixed) Viewer Comparator(mixed) Viewer Filter(mixed) Viewer Sorter() Viewer Comparator(mixed) Widget(mixed, activate Event, arm Event, close Event, collapse Event, data Context, deactivate Event, default Selection Event, deiconify Event, dispose Event, drag Detect Event, erase Item Event, expand Event, focus In Event, focus Out Event, hard Key Down Event, hard Key Up Event, help Event, hide Event, iconify Event, ime Composition Event, key Down Event, key Up Event, measure Item Event, menu Detect Event, modify Event, mouse Double Click Event, mouse Down Event, mouse Enter Event, mouse Exit Event, mouse Hover Event, mouse Move Event, mouse Up Event, mouse Wheel Event, move Event, paint Event, paint Item Event, resize Event, selection Event, set Data Event, show Event, style, traverse Event, verify Event) Window(mixed, group, block On Open) window Manager Window Manager(mixed) Window Manager(mixed) XML Data Provider(group1, x Path) Abstract Data Provider(mixed, group, key) XML Data Provider(group1, x Path) document Document(mixed) XML Data Provider(group1, x Path) source URL(mixed)
Label: automata, Text: State() Named Element(name) Input() Named Element(name) Output() Named Element(name) Transition() Named Element(name) Transition() event Input() Transition() action Output() Transition() destination State() Automaton() Named Element(name) Automaton() state State() Automaton() transition Transition() Automaton() output Output() Automaton() input Input() Named Element(name)
Label: workflow, Text: Date() Uri() Unlimited Natural() String() Set() Sequence() Integer() Float() Classifier() Type() Type() Packageable Element() Element() Named Element(name) Element() Named Element(name) name String() Packageable Element() Named Element(name) Package() Namespace() Package() Packageable Element() Namespace() Named Element(name) Method Element(guid, brief Description, suppressed, ordering Guide) Packageable Element() Method Element(guid, brief Description, suppressed, ordering Guide) ordering Guide String() Method Element(guid, brief Description, suppressed, ordering Guide) owned Rules Constraint(body) Method Element(guid, brief Description, suppressed, ordering Guide) method Element Property Method Element Property(value) Constraint(body) Method Element(guid, brief Description, suppressed, ordering Guide) Constraint(body) body String() Method Element Property(value) Packageable Element() Method Element Property(value) value String() Content Element() Describable Element(presentation Name, shapeicon, nodeicon) Content Element() Variability Element(variability Type) Content Element() supporting Materials Supporting Material() Content Element() concepts And Papers Concept() Content Element() checklists Checklist() Content Element() guidelines Guideline() Content Element() examples Example() Content Element() assets Reusable Asset() Content Element() term Definition Term Definition() Describable Element(presentation Name, shapeicon, nodeicon) Method Element(guid, brief Description, suppressed, ordering Guide) Describable Element(presentation Name, shapeicon, nodeicon) Classifier() Describable Element(presentation Name, shapeicon, nodeicon) presentation Name String() Describable Element(presentation Name, shapeicon, nodeicon) presentation Content Description(main Description, external Id, key Considerations) Describable Element(presentation Name, shapeicon, nodeicon) nodeicon Uri() Content Description(main Description, external Id, key Considerations) Method Unit(authors, change Date, change Description, version) Content Description(main Description, external Id, key Considerations) key Considerations String() Content Description(main Description, external Id, key Considerations) sections Section(section Name, section Description) Section(section Name, section Description) Variability Element(variability Type) Section(section Name, section Description) section Description String() Role() Content Element() Role() responsible For Work Product() Work Product() Content Element() Work Product() reports Report() Work Product() templates Template() Work Product() tool Mentors Tool Mentor() Work Product() estimation Considerations Estimation Considerations() Task() Content Element() Task() Work Definition() Task() additionally Performed By Role() Task() optional Input Work Product() Task() steps Step() Task() tool Mentors Tool Mentor() Task() estimation Considerations Estimation Considerations() Work Definition() Method Element(guid, brief Description, suppressed, ordering Guide) Work Definition() postcondition Constraint(body) Step() Section(section Name, section Description) Step() Work Definition() Guidance() Content Element() Artifact() Work Product() Deliverable() delivered Work Products Work Product() Outcome() Work Product() Method Package(global) Method Element(guid, brief Description, suppressed, ordering Guide) Method Package(global) Package() Content Package() Method Package(global) Content Package() content Elements Content Element() Artifact Description(brief Outline, representation Options, representation, notation) Work Product Description(purpose, impact Of Not Having, reasons For Not Needing) Artifact Description(brief Outline, representation Options, representation, notation) notation String() Work Product Description(purpose, impact Of Not Having, reasons For Not Needing) Content Description(main Description, external Id, key Considerations) Work Product Description(purpose, impact Of Not Having, reasons For Not Needing) reasons For Not Needing String() Deliverable Description(external Description, packaging Guidance) Work Product Description(purpose, impact Of Not Having, reasons For Not Needing) Deliverable Description(external Description, packaging Guidance) packaging Guidance String() Role Description(skills, assignment Approaches, synonyms) Content Description(main Description, external Id, key Considerations) Role Description(skills, assignment Approaches, synonyms) synonyms String() Task Description(purpose, alternatives) Content Description(main Description, external Id, key Considerations) Task Description(purpose, alternatives) alternatives String() Guidance Description(attachments) Content Description(main Description, external Id, key Considerations) Guidance Description(attachments) attachments String() Practice Description(additional Info, problem, background, goals, application, levels Of Adoption) Content Description(main Description, external Id, key Considerations) Practice Description(additional Info, problem, background, goals, application, levels Of Adoption) levels Of Adoption String() Point(x, y) Graph Element() contained Diagram Element(is Visible) Graph Element() position Point(x, y) Graph Element() link Diagram Link(zoom) Graph Element() anchorage Graph Connector() Graph Element() semantic Model Semantic Model Bridge(presentation) Diagram Element(is Visible) Method Element(guid, brief Description, suppressed, ordering Guide) Diagram Element(is Visible) container Graph Element() Diagram Element(is Visible) reference Reference(is Individual Representation) Diagram Element(is Visible) property Property(key, value) Diagram Link(zoom) Diagram Element(is Visible) Diagram Link(zoom) viewport Point(x, y) Diagram Link(zoom) graph Element Graph Element() Diagram Link(zoom) diagram Diagram(zoom) Graph Connector() graph Element Graph Element() Graph Connector() graph Edge Graph Edge() Semantic Model Bridge(presentation) Diagram Element(is Visible) Semantic Model Bridge(presentation) presentation String() Semantic Model Bridge(presentation) graph Element Graph Element() Semantic Model Bridge(presentation) diagram Diagram(zoom) Dimension(width, height) Reference(is Individual Representation) referenced Diagram Element(is Visible) Property(key, value) Diagram Element(is Visible) Property(key, value) value String() Graph Edge() Graph Element() Graph Edge() anchor Graph Connector() Graph Edge() waypoints Point(x, y) Diagram(zoom) Graph Node() Diagram(zoom) viewpoint Point(x, y) Diagram(zoom) diagram Link Diagram Link(zoom) Diagram(zoom) namespace Semantic Model Bridge(presentation) Graph Node() Graph Element() Graph Node() size Dimension(width, height) Simple Semantic Model Element(type Info) Semantic Model Bridge(presentation) Simple Semantic Model Element(type Info) type Info String() UMA Semantic Model Bridge() Semantic Model Bridge(presentation) UMA Semantic Model Bridge() element Method Element(guid, brief Description, suppressed, ordering Guide) Core Semantic Model Bridge() Semantic Model Bridge(presentation) Core Semantic Model Bridge() element Element() Leaf Element() Diagram Element(is Visible) Text Element(text) Leaf Element() Text Element(text) text String() Image(uri, mime Type) Leaf Element() Image(uri, mime Type) uri Uri() Image(uri, mime Type) mime Type String() Graphic Primitive() Leaf Element() Polyline(closed) Graphic Primitive() Polyline(closed) waypoints Point(x, y) Ellipse(radius X, radius Y, rotation, start Angle, end Angle) Graphic Primitive() Ellipse(radius X, radius Y, rotation, start Angle, end Angle) center Point(x, y) Activity(is Enactable) Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) Activity(is Enactable) Variability Element(variability Type) Activity(is Enactable) Work Definition() Activity(is Enactable) breakdown Elements Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Activity(is Enactable) roadmaps Roadmap() Activity(is Enactable) supporting Materials Supporting Material() Activity(is Enactable) checklists Checklist() Activity(is Enactable) concepts Concept() Activity(is Enactable) examples Example() Activity(is Enactable) guidelines Guideline() Activity(is Enactable) reusable Assets Reusable Asset() Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) link To Predecessor Work Order(link Type) Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Process Element() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) prefix String() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) planning Data Planning Data(start Date, finish Date, rank) Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) super Activities Activity(is Enactable) Milestone() Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) Iteration() Activity(is Enactable) Phase() Activity(is Enactable) Team Profile() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Team Profile() team Roles Role Descriptor() Role Descriptor() Descriptor(is Synchronized With Source) Role Descriptor() Role Role() Role Descriptor() responsible For Work Product Descriptor(activity Entry State, activity Exit State) start To Finish() Work Order(link Type) Process Element() Work Order(link Type) pred Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) Process Element() Describable Element(presentation Name, shapeicon, nodeicon) Planning Data(start Date, finish Date, rank) Process Element() Planning Data(start Date, finish Date, rank) finish Date Date() Planning Data(start Date, finish Date, rank) rank Integer() Descriptor(is Synchronized With Source) Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Work Product Descriptor(activity Entry State, activity Exit State) Descriptor(is Synchronized With Source) Work Product Descriptor(activity Entry State, activity Exit State) activity Exit State String() Work Product Descriptor(activity Entry State, activity Exit State) Work Product Work Product() Task Descriptor() Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) Task Descriptor() Descriptor(is Synchronized With Source) Task Descriptor() Task Task() Task Descriptor() performed Primarily By Role Descriptor() Task Descriptor() output Work Product Descriptor(activity Entry State, activity Exit State) Task Descriptor() selected Steps Section(section Name, section Description) Composite Role() Role Descriptor() Composite Role() aggregated Roles Role() Breakdown Element Description(usage Guidance) Content Description(main Description, external Id, key Considerations) Breakdown Element Description(usage Guidance) usage Guidance String() Activity Description(purpose, alternatives, howto Staff) Breakdown Element Description(usage Guidance) Activity Description(purpose, alternatives, howto Staff) howto Staff String() Delivery Process Description(scale, project Characteristics, risk Level, estimating Technique, project Member Expertise, type Of Contract) Process Description(scope, usage Notes) Delivery Process Description(scale, project Characteristics, risk Level, estimating Technique, project Member Expertise, type Of Contract) type Of Contract String() Process Description(scope, usage Notes) Activity Description(purpose, alternatives, howto Staff) Process Description(scope, usage Notes) usage Notes String() Descriptor Description(refined Description) Breakdown Element Description(usage Guidance) Descriptor Description(refined Description) refined Description String() Concept() Guidance() Checklist() Guidance() Example() Guidance() Guideline() Guidance() Report() Guidance() Template() Guidance() Supporting Material() Guidance() Tool Mentor() Guidance() Whitepaper() Concept() Term Definition() Guidance() Practice() Guidance() Practice() content References Content Element() Practice() activity References Activity(is Enactable) Estimation Considerations() Guidance() Reusable Asset() Guidance() State() Vertex() State() Work Product Work Product() State() Region Region() State() submachine State Machine() Vertex() container Region() Vertex() incoming Transition() Region() Vertex Vertex() Region() Transition Transition() Region() State State() Region() State Machine State Machine() State Machine() Work Definition() State Machine() Region Region() Transition() Work Definition Work Definition() Transition() container Region() Transition() target Vertex() Pseudo State() Vertex() terminate() Discipline() Content Category() Discipline() tasks Task() Discipline() reference Workflows Activity(is Enactable) Content Category() Content Element() Role Set() Content Category() Role Set() roles Role() Domain() Content Category() Domain() work Products Work Product() Work Product Type() Content Category() Work Product Type() work Products Work Product() Discipline Grouping() Content Category() Discipline Grouping() disciplines Discipline() Tool() Content Category() Tool() tool Mentors Tool Mentor() Role Set Grouping() Content Category() Role Set Grouping() role Sets Role Set() Custom Category() sub Categories Content Category() Custom Category() categorized Elements Describable Element(presentation Name, shapeicon, nodeicon) Delivery Process() Process() Delivery Process() communications Materials Supporting Material() Process() Activity(is Enactable) Process() includes Patterns Capability Pattern() Process() valid Context Method Configuration() Capability Pattern() Process() Process Planning Template() based On Processes Process() Roadmap() Guidance() Process Component() Process Package() Process Component() Method Unit(authors, change Date, change Description, version) Process Component() interfaces Process Component Interface() Process Component() process Process() Process Package() Method Package(global) Process Package() process Elements Process Element() Process Package() diagrams Diagram(zoom) Process Component Interface() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Process Component Interface() interface Specifications Task Descriptor() Process Component Interface() interface IO Work Product Descriptor(activity Entry State, activity Exit State) Process Component Descriptor() Descriptor(is Synchronized With Source) Process Component Descriptor() Process Component Process Component() Method Plugin(user Changeable) Method Unit(authors, change Date, change Description, version) Method Plugin(user Changeable) Package() Method Plugin(user Changeable) method Packages Method Package(global) Variability Element(variability Type) Method Element(guid, brief Description, suppressed, ordering Guide) extends Replaces() Method Unit(authors, change Date, change Description, version) Method Element(guid, brief Description, suppressed, ordering Guide) Method Unit(authors, change Date, change Description, version) version String() Method Unit(authors, change Date, change Description, version) change Date Date() Method Unit(authors, change Date, change Description, version) copyright Statement Supporting Material() Method Configuration() Method Unit(authors, change Date, change Description, version) Method Configuration() method Plugin Selection Method Plugin(user Changeable) Method Configuration() method Package Selection Method Package(global) Method Configuration() added Category Content Category() Process Family() Method Configuration() Process Family() delivery Processes Delivery Process() Method Library() Method Unit(authors, change Date, change Description, version) Method Library() Package() Method Library() method Plugins Method Plugin(user Changeable) Method Library() predefined Configurations Method Configuration()
Label: families, Text: Family(address) parents Parent() Family(address) sons Son() Family(address) daughters Daughter() Family(address) pets Pet(name, breed) Member(first Name, last Name) Parent() Member(first Name, last Name) Parent() family Family(address) Son() Member(first Name, last Name) Son() family Family(address) Daughter() Member(first Name, last Name) Daughter() family Family(address) Pet(name, breed) Dog() Pet(name, breed) Cat() Pet(name, breed) Race Dog() Dog() Hunting Dog() Dog()
Label: families, Text: Root() imports Import(file Name) Root() elements Basic Element() Import(file Name) Element(name) property Property() Element(name) representations Representation(name) attachable Element() Element(name) Basic Element() Element(name) Basic Element() armani Armani(modifiers) Basic Element() parent Family Family() Family() Basic Element() Family() connectors Connector() Family() components Component() Family() attachments Attachment() Family() wildcard Wild Card(expression) Family() ctypes Component Type() Family() ptypes Port Type() Family() cntypes Connector Type() Family() rtypes Role Type() Family() prtypes Property Type(type, values) Family() properties Property() Component Type() Type Definition() Component Type() port Port() Component Type() parent Family Family() Role Type() Type Definition() Role Type() parent Family Family() Port Type() Type Definition() Port Type() parent Family Family() Connector Type() Type Definition() Connector Type() role Role() Connector Type() glue Glue(glue Type) Connector Type() parent Family Family() Property Type(type, values) Type Definition() Property Type(type, values) parent Family Family() System() Basic Element() System() connectors Connector() System() properties Property() System() attachments Attachment() System() wild Card Wild Card(expression) System() components Component() System() parent Representation Representation(name) System() effective type Family() Component() Element(name) Component() port Port() Component() effective type Component Type() Component() parent System System() Component() parent Family Family() Connector() Element(name) Connector() role Role() Connector() glue Glue(glue Type) Connector() effective type Connector Type() Connector() parent System System() Connector() parent Family Family() Role() attachable Element() Role() Bindable Element() Role() Connector Connector() Role() Connector T Connector Type() Role() effective type Role Type() Base Role() Role() Base Role() type Role Type() Crosscutting Role() Role() Crosscutting Role() type Role Type() Port() attachable Element() Port() Bindable Element() Port() effective type Port Type() Port() Component Component() Port() Component T Component Type() Property() Glue(glue Type) base Attach Base Role() Glue(glue Type) crosscutting Attach Crosscutting Role() Glue(glue Type) connector Connector() Attachment() second Element attachable Element() Attachment() parent System System() Attachment() parent Family Family() Binding() property Property() Binding() second Port Bindable Element() Binding() representation Representation(name) Representation(name) system System() Representation(name) bindings Binding() Representation(name) element Element(name) Wild Card(expression) attachable Element() after() Bindable Element() Element(name) Type Definition() Element(name) Armani(modifiers) design Rule Armani Design Rule Expression() Armani Expression() Armani Function Call(function Id) parameters Armani Primitive Expression() Armani Set Expression(reference, reference Type) Armani Primitive Expression() Armani Set Expression(reference, reference Type) set Values Armani Constant() Armani Constant() Armani Primitive Expression() Armani Primitive Expression() Armani Unary Expression(operator) Armani Primitive Expression() design Rule Armani Design Rule Expression() Armani Unary Expression(operator) Armani Expression() Elements() Armani Multiplicative Expression(operators) Armani Expression() Armani Multiplicative Expression(operators) expressions Armani Unary Expression(operator) Armani Additive Expression(operators) Armani Expression() Armani Additive Expression(operators) expressions Armani Multiplicative Expression(operators) Armani Relational Expression(operators) Armani Expression() Armani Relational Expression(operators) expressions Armani Additive Expression(operators) Armani Equality Expression(operators) Armani Expression() Armani Equality Expression(operators) expressions Armani Relational Expression(operators) Armani Iff Expression() Armani Expression() Armani Iff Expression() expressions Armani Equality Expression(operators) Armani Implies Expression() Armani Expression() Armani Implies Expression() expressions Armani Iff Expression() Armani Or Expression(operators) Armani Expression() Armani Or Expression(operators) expressions Armani Implies Expression() Armani Variable(id, basic Type) Armani Expression() Armani Variable(id, basic Type) user Type Type Definition() Armani Boolean Expression() Armani Design Rule Expression() Armani Boolean Expression() expressions Armani Or Expression(operators) Armani Quantified Expression(quantifier) design Rule Armani Design Rule Expression() Armani Quantified Expression(quantifier) variable Armani Variable(id, basic Type) Armani Quantified Expression(quantifier) set Expression Armani Set Expression(reference, reference Type) Armani Design Rule Expression() Armani Expression() exists()
Label: statemachine, Text: State Machine(name) name String() State Machine(name) nodes State(name) State Machine(name) edges Transition(name) State Machine(name) marks Observation(time) State(name) name String() State(name) graph State Machine(name) State(name) mark Observation(time) Transition(name) name String() Transition(name) target State(name) Transition(name) graph State Machine(name) Observation(time) time Integer() Observation(time) node State(name) Observation(time) graph State Machine(name) Boolean() Integer() String()
Label: statemachine, Text: State Machine() Named Element(name) State Machine() regions Region() Region() Named Element(name) Region() subvertex Abstract State() Region() transitions Transition() Abstract State() Named Element(name) Abstract State() outgoing Transition() Abstract State() owner Region Region() State() Abstract State() State() exit Program() Transition() Named Element(name) Transition() trigger Trigger(expression) Transition() source Abstract State() Transition() guard Constraint() Named Element(name) Trigger(expression) Program() statements Statement() Statement() Conditional() Statement() Loop() Statement() Var Decl() Statement() Constraint() Pseudostate(kind) Abstract State() initial() Final State() State()
Label: enterprisearchitecture, Text: Enterprise Architecture() architectures Architecture() Enterprise Architecture() containers Container(name) Architecture() Business Architecture() Architecture() Business Architecture() drivers Driver() Business Architecture() goals Goal() Business Architecture() objectives Objective() Business Architecture() units Organization Unit(headcount) Business Architecture() actors Actor(FT Es, actor Goal, actor Tasks) Business Architecture() roles Role(estimated FT Es) Business Architecture() functions Function() Business Architecture() services Business Service() Business Architecture() processes Process(process Critiality, is Automated, process Volumetrics) Business Architecture() controls Control() Business Architecture() events Event() Business Architecture() locations Location() Business Architecture() products Product() Business Architecture() contracts Contract(behavior Characteristics, Service Name Caller, Service Name Called, service Quality Characteristics, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, response Characteristics, reliability Characteristics, quality Of Information Required, contract Control Requirements, result Control Requirements, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) Business Architecture() measures Measure() Business Architecture() services Quality Service Quality() Data Architecture() Architecture() Data Architecture() entities Data Entity(data Entity Category, privacy Classification, retention Classification) Data Architecture() logical Components Logical Data Component() Data Architecture() physical Components Physical Data Component() Technology Architecture() Architecture() Technology Architecture() platform Services Platform Service() Technology Architecture() physical Components Physical Technology Component(product Name, module Name, vendor, version) Technology Architecture() logical Components Logical Technology Component() Driver() Element(name, description, category, source Descr, owner Descr, ID) Driver() creates Goals Goal() Driver() motivates Organization Units Organization Unit(headcount) Goal() Element(name, description, category, source Descr, owner Descr, ID) Goal() addresses Drivers Driver() Goal() is Realized Through Objectives Objective() Objective() Element(name, description, category, source Descr, owner Descr, ID) Objective() realizes Goals Goal() Objective() is Tracked Against Measures Measure() Organization Unit(headcount) Element(name, description, category, source Descr, owner Descr, ID) Organization Unit(headcount) owns And Governs Services Service() Organization Unit(headcount) contains Actors Actor(FT Es, actor Goal, actor Tasks) Organization Unit(headcount) owns Functions Function() Organization Unit(headcount) participates In Processes Process(process Critiality, is Automated, process Volumetrics) Organization Unit(headcount) is Motivated By Drivers Driver() Organization Unit(headcount) produces Products Product() Organization Unit(headcount) operates In Location Location() Actor(FT Es, actor Goal, actor Tasks) Element(name, description, category, source Descr, owner Descr, ID) Actor(FT Es, actor Goal, actor Tasks) consumes Entities Data Entity(data Entity Category, privacy Classification, retention Classification) Actor(FT Es, actor Goal, actor Tasks) belongs To Organization Unit(headcount) Actor(FT Es, actor Goal, actor Tasks) performs Functions Function() Actor(FT Es, actor Goal, actor Tasks) performs Task In Roles Role(estimated FT Es) Actor(FT Es, actor Goal, actor Tasks) participates In Processes Process(process Critiality, is Automated, process Volumetrics) Actor(FT Es, actor Goal, actor Tasks) consumes Services Service() Actor(FT Es, actor Goal, actor Tasks) generates Events Event() Actor(FT Es, actor Goal, actor Tasks) operates In Location Location() Role(estimated FT Es) Element(name, description, category, source Descr, owner Descr, ID) Role(estimated FT Es) is Assumed By Actors Actor(FT Es, actor Goal, actor Tasks) Role(estimated FT Es) accesses Functions Function() Data Entity(data Entity Category, privacy Classification, retention Classification) Element(name, description, category, source Descr, owner Descr, ID) Data Entity(data Entity Category, privacy Classification, retention Classification) is Consumed By Actors Actor(FT Es, actor Goal, actor Tasks) Data Entity(data Entity Category, privacy Classification, retention Classification) is Updated Through Services Service() Data Entity(data Entity Category, privacy Classification, retention Classification) resides Within Logical Data Component Logical Data Component() Data Entity(data Entity Category, privacy Classification, retention Classification) is Processes By Logical Application Components Logical Application Component() Logical Application Component() Element(name, description, category, source Descr, owner Descr, ID) Logical Application Component() Application Component() Logical Application Component() implements Services Service() Logical Application Component() operates On Data Entities Data Entity(data Entity Category, privacy Classification, retention Classification) Logical Application Component() is Extended By Physical Application Components Physical Application Component(life Cycle Status, initial Live Date, date Of Last Release, date Of Next Release, retirement Date, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, reliability Characteristics, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) Function() Element(name, description, category, source Descr, owner Descr, ID) Function() Standard(standard Class, standard Creation Date, last Standard Creation Date, next Standard Creation Date, retire Date) Function() supports Actors Actor(FT Es, actor Goal, actor Tasks) Function() is Owned By Unit Organization Unit(headcount) Function() is Bounded By Services Service() Function() is Realized By Processes Process(process Critiality, is Automated, process Volumetrics) Function() can Be Accessed By Roles Role(estimated FT Es) Business Service() Element(name, description, category, source Descr, owner Descr, ID) Business Service() Service() Business Service() supports Objective Objective() Process(process Critiality, is Automated, process Volumetrics) Element(name, description, category, source Descr, owner Descr, ID) Process(process Critiality, is Automated, process Volumetrics) Standard(standard Class, standard Creation Date, last Standard Creation Date, next Standard Creation Date, retire Date) Process(process Critiality, is Automated, process Volumetrics) decomposes Functions Function() Process(process Critiality, is Automated, process Volumetrics) involves Organization Units Organization Unit(headcount) Process(process Critiality, is Automated, process Volumetrics) decomposes Services Service() Process(process Critiality, is Automated, process Volumetrics) involves Actors Actor(FT Es, actor Goal, actor Tasks) Process(process Critiality, is Automated, process Volumetrics) is Guided By Controls Control() Process(process Critiality, is Automated, process Volumetrics) generates Events Event() Process(process Critiality, is Automated, process Volumetrics) produces Products Product() Platform Service() Element(name, description, category, source Descr, owner Descr, ID) Platform Service() Service() Platform Service() is Supplied By Logical Technology Components Logical Technology Component() Physical Technology Component(product Name, module Name, vendor, version) Element(name, description, category, source Descr, owner Descr, ID) Physical Technology Component(product Name, module Name, vendor, version) Technology Component() Physical Technology Component(product Name, module Name, vendor, version) realizes Application Components Physical Application Component(life Cycle Status, initial Live Date, date Of Last Release, date Of Next Release, retirement Date, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, reliability Characteristics, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) Physical Technology Component(product Name, module Name, vendor, version) extends Logical Technology Components Logical Technology Component() Physical Technology Component(product Name, module Name, vendor, version) is Hosted In Location Location() Product() Element(name, description, category, source Descr, owner Descr, ID) Product() is Produced By Organization Units Organization Unit(headcount) Product() is Produced By Processes Process(process Critiality, is Automated, process Volumetrics) Measure() Element(name, description, category, source Descr, owner Descr, ID) Measure() sets Performance Criteria For Objectives Objective() Measure() sets Performance Criteria For Services Service() Service Quality() Element(name, description, category, source Descr, owner Descr, ID) Service Quality() applies To Services Service() Service Quality() applies To Contracts Contract(behavior Characteristics, Service Name Caller, Service Name Called, service Quality Characteristics, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, response Characteristics, reliability Characteristics, quality Of Information Required, contract Control Requirements, result Control Requirements, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) Contract(behavior Characteristics, Service Name Caller, Service Name Called, service Quality Characteristics, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, response Characteristics, reliability Characteristics, quality Of Information Required, contract Control Requirements, result Control Requirements, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) Element(name, description, category, source Descr, owner Descr, ID) Contract(behavior Characteristics, Service Name Caller, Service Name Called, service Quality Characteristics, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, response Characteristics, reliability Characteristics, quality Of Information Required, contract Control Requirements, result Control Requirements, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) governs And Measures Business Services Service() Contract(behavior Characteristics, Service Name Caller, Service Name Called, service Quality Characteristics, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, response Characteristics, reliability Characteristics, quality Of Information Required, contract Control Requirements, result Control Requirements, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) meets Service Quality Service Quality() Event() Element(name, description, category, source Descr, owner Descr, ID) Event() is Resolved By Business Services Service() Event() is Generated By Processes Process(process Critiality, is Automated, process Volumetrics) Event() is Generated By Actors Actor(FT Es, actor Goal, actor Tasks) Control() Element(name, description, category, source Descr, owner Descr, ID) Control() ensures Correct Operation Of Processes Process(process Critiality, is Automated, process Volumetrics) Element(name, description, category, source Descr, owner Descr, ID) Container(name) owns Elements Element(name, description, category, source Descr, owner Descr, ID) Location() Element(name, description, category, source Descr, owner Descr, ID) Location() contains Actors Actor(FT Es, actor Goal, actor Tasks) Location() contains Organization Units Organization Unit(headcount) Location() contains Physical Data Components Physical Data Component() Location() contains Physical Application Components Physical Application Component(life Cycle Status, initial Live Date, date Of Last Release, date Of Next Release, retirement Date, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, reliability Characteristics, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) Location() contains Physical Technology Components Physical Technology Component(product Name, module Name, vendor, version) Capability(business Value, increments) Element(name, description, category, source Descr, owner Descr, ID) Capability(business Value, increments) is Delivered By Work Package(work Package Category) Strategic Element() Element(name, description, category, source Descr, owner Descr, ID) Principle(principle Category, priority, statement Of Principle, rationale, implication, metric) Strategic Element() Constraint() Strategic Element() Assumption() Strategic Element() Requirement(statement Of Requirement, rationale, acceptance Criteria) Strategic Element() Gap() Strategic Element() Work Package(work Package Category) Strategic Element() Work Package(work Package Category) delivers Capabilities Capability(business Value, increments) Logical Data Component() Element(name, description, category, source Descr, owner Descr, ID) Logical Data Component() Data Component() Logical Data Component() encapsulates Data Entities Data Entity(data Entity Category, privacy Classification, retention Classification) Logical Data Component() is Extended By Physical Data Components Physical Data Component() Physical Data Component() Element(name, description, category, source Descr, owner Descr, ID) Physical Data Component() Data Component() Physical Data Component() extends Logical Data Components Logical Data Component() Physical Data Component() is Hoted In Location Location() Physical Data Component() encapsulates Physical Application Components Physical Application Component(life Cycle Status, initial Live Date, date Of Last Release, date Of Next Release, retirement Date, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, reliability Characteristics, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) Application Architecture() Architecture() Application Architecture() logical Application Components Logical Application Component() Application Architecture() physical Application Components Physical Application Component(life Cycle Status, initial Live Date, date Of Last Release, date Of Next Release, retirement Date, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, reliability Characteristics, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) Application Architecture() information System Services Information System Service() Physical Application Component(life Cycle Status, initial Live Date, date Of Last Release, date Of Next Release, retirement Date, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, reliability Characteristics, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) Element(name, description, category, source Descr, owner Descr, ID) Physical Application Component(life Cycle Status, initial Live Date, date Of Last Release, date Of Next Release, retirement Date, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, reliability Characteristics, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) Application Component() Physical Application Component(life Cycle Status, initial Live Date, date Of Last Release, date Of Next Release, retirement Date, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, reliability Characteristics, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) extends Logical Application Components Logical Application Component() Physical Application Component(life Cycle Status, initial Live Date, date Of Last Release, date Of Next Release, retirement Date, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, reliability Characteristics, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) is Hosted In Location Location() Physical Application Component(life Cycle Status, initial Live Date, date Of Last Release, date Of Next Release, retirement Date, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, reliability Characteristics, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) encapsulates Physical Data Components Physical Data Component() Physical Application Component(life Cycle Status, initial Live Date, date Of Last Release, date Of Next Release, retirement Date, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, reliability Characteristics, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) is Realized By Physical Technology Components Physical Technology Component(product Name, module Name, vendor, version) Logical Technology Component() Element(name, description, category, source Descr, owner Descr, ID) Logical Technology Component() Technology Component() Logical Technology Component() provides Platform For Services Service() Logical Technology Component() supplies Platform Services Platform Service() Logical Technology Component() is Realized By Physical Technology Components Physical Technology Component(product Name, module Name, vendor, version) Strategic Architecture() Architecture() Strategic Architecture() capabilities Capability(business Value, increments) Strategic Architecture() strategic Elements Strategic Element() Technology Principle() Retired() Standard(standard Class, standard Creation Date, last Standard Creation Date, next Standard Creation Date, retire Date) Service() Standard(standard Class, standard Creation Date, last Standard Creation Date, next Standard Creation Date, retire Date) Service() is Provided To Actors Actor(FT Es, actor Goal, actor Tasks) Service() provides Governed Interface To Access Functions Function() Service() consumes Entities Data Entity(data Entity Category, privacy Classification, retention Classification) Service() is Governed And Measured By Contracts Contract(behavior Characteristics, Service Name Caller, Service Name Called, service Quality Characteristics, availability Quality Characteristics, services Times, manageability Characteristics, serviceability Characteristics, performance Characteristics, response Characteristics, reliability Characteristics, quality Of Information Required, contract Control Requirements, result Control Requirements, recoverability Characteristics, locatability Characteristics, security Characteristics, privacy Characteristics, integrity Characteristics, credibility Characteristics, localization Characteristics, internationalization Characteristics, interoperability Characteristics, scalability Characteristics, portability Characteristics, extensibility Characteristics, capacity Characteristics, throughput, throughput Period, growth, growth Period, peak Profile Short Term, peak Profile Long Term) Service() resolves Events Event() Service() is Implemented On Logical Technology Components Logical Technology Component() Service() is Realized Through Logical Application Component Logical Application Component() Service() is Owned And Governed By Organization Units Organization Unit(headcount) Service() is Tracked Against Measures Measure() Service() is Realized By Processes Process(process Critiality, is Automated, process Volumetrics) Service() meets Qualities Service Quality() Application Component() Standard(standard Class, standard Creation Date, last Standard Creation Date, next Standard Creation Date, retire Date) Information System Service() Service() Information System Service() Element(name, description, category, source Descr, owner Descr, ID) Internally Stored Entity() Data Component() Standard(standard Class, standard Creation Date, last Standard Creation Date, next Standard Creation Date, retire Date) Technology Component() Standard(standard Class, standard Creation Date, last Standard Creation Date, next Standard Creation Date, retire Date) Portofolio()
Label: class-diagram, Text: Model() Package() Packageable Element() Named Element(name) Packageable Element() package Package() Annotated Element() annotations Annotation(key, value) Annotation(key, value) Named Element(name) Annotated Element() Package() contents Packageable Element() Classifier() Packageable Element() External Class() Class(is Abstract) Class(is Abstract) Classifier() Class(is Abstract) features Feature(visibility) Datatype() Classifier() Feature(visibility) Named Element(name) Feature(visibility) owner Class(is Abstract) Feature(visibility) type Classifier() Structural Feature(is Many) Feature(visibility) Operation() Feature(visibility) Operation() parameters Parameter() Parameter() Named Element(name) Parameter() type Classifier() Parameter() owner Operation() Reference() Structural Feature(is Many) Attribute() Structural Feature(is Many) private()
Label: interaction, Text: Function(domain) Sequence Node(name, t Min, t Max) Function(domain) Process Node(label) Function(domain) sequence Nodes Sequence() Function(domain) flows Flow() Function(domain) output Ports Output Port() Function(domain) input Ports Input Port() Function(domain) descriptions Description(content) Function(domain) tokens Token() Sequence Node(name, t Min, t Max) Sequence() Sequence Node(name, t Min, t Max) And() Sequence() Or() Sequence() Start() Sequence() Final() Sequence() Loop() Sequence() Input Port() Port(id) Port(id) Item(name) Flow() Process Node(label) Flow() inputflow Edge Input Port() Flow() items Item(name) Process Node(label) Output Port() Port(id) Output Port() outputflow Edge Flow() Description(content) form() Loop Exit() Sequence() Iteration() Sequence() Token()
Label: architecture, Text: PCM Random Variable() Entity() Named Element(entity Name) Named Element(entity Name) Interface Providing Entity() Entity() Interface Providing Entity() provided Roles Interface Providing Entity Provided Role() Interface Providing Requiring Entity() Interface Providing Entity() Interface Providing Requiring Entity() Interface Requiring Entity() Interface Providing Requiring Entity() Resource Interface Requiring Entity() Interface Requiring Entity() Entity() Interface Requiring Entity() required Roles Interface Requiring Entity Required Role() Resource Interface Requiring Entity() Entity() Resource Interface Requiring Entity() resource Required Roles Resource Interface Requiring Entity Resource Required Role() Composed Providing Requiring Entity() Composed Structure() Composed Providing Requiring Entity() Interface Providing Requiring Entity() Connector() Entity() Provided Delegation Connector() Delegation Connector() Provided Delegation Connector() outer Provided Role Provided Delegation Connector Provided Role() Provided Delegation Connector() assembly Context Provided Delegation Connector Assembly Context() Provided Delegation Connector() parent Structure Provided Delegation Connector Composed Structure() Assembly Context() Entity() Assembly Context() encapsulated Component Assembly Context Repository Component() Assembly Context() parent Structure Assembly Context Composed Structure() Assembly Context() config Parameter Usages Assembly Context Variable Usage() Required Delegation Connector() Delegation Connector() Required Delegation Connector() outer Required Role Required Delegation Connector Required Role() Required Delegation Connector() assembly Context Required Delegation Connector Assembly Context() Required Delegation Connector() parent Structure Required Delegation Connector Composed Structure() Assembly Connector() Connector() Assembly Connector() providing Assembly Context Assembly Connector Assembly Context() Assembly Connector() provided Role Assembly Connector Provided Role() Assembly Connector() required Role Assembly Connector Required Role() Assembly Connector() parent Structure Assembly Connector Composed Structure() Resource Required Delegation Connector() parent Structure Resource Required Delegation Connector Composed Structure() Resource Required Delegation Connector() outer Resource Required Role Resource Required Delegation Connector Resource Required Role() Composed Structure() Entity() Composed Structure() assembly Contexts Composed Structure Assembly Context() Composed Structure() provided Delegation Connectors Composed Structure Provided Delegation Connector() Composed Structure() required Delegation Connectors Composed Structure Required Delegation Connector() Composed Structure() assembly Connectors Composed Structure Assembly Connector() Composed Structure() resource Required Delegation Connectors Composed Structure Resource Required Delegation Connector() Passive Resource() Entity() Passive Resource() capacity Passive Resource PCM Random Variable() inout() Signature(service Name) parameters Signature Parameter(parameter Name, modifier Parameter) Signature(service Name) interface Signature Interface() Signature(service Name) returntype Signature Data Type() Signature(service Name) exceptions Signature Exception Type(exception Name, exception Message) Parameter(parameter Name, modifier Parameter) datatype Parameter Data Type() Parameter(parameter Name, modifier Parameter) signature Parameter Signature(service Name) Data Type() repository Data Type Repository(repository Description) Repository(repository Description) Entity() Repository(repository Description) components Repository Repository Component() Repository(repository Description) interfaces Repository Interface() Repository(repository Description) datatypes Repository Data Type() Repository Component() Interface Providing Requiring Entity() Repository Component() repository Repository Component Repository(repository Description) Required Role() Role() Required Role() required Interface Required Role Interface() Required Role() requiring Entity Required Role Interface Requiring Entity() Role() Entity() Interface() Entity() Interface() protocols Interface Protocol(protocol Type ID) Interface() signatures Interface Signature(service Name) Interface() repository Interface Repository(repository Description) Resource Required Role() Role() Resource Required Role() required Interface Resource Required Role Interface() Resource Required Role() resource Requiring Entity Resource Required Role Resource Interface Requiring Entity() Exception Type(exception Name, exception Message) Provides Component Type() Repository Component() Implementation Component Type() Repository Component() Implementation Component Type() parent Complete Component Types Complete Component Type() Implementation Component Type() component Parameter Usage Implementation Component Type Variable Usage() Complete Component Type() Repository Component() Complete Component Type() parent Provides Component Types Provides Component Type() Delegation Connector() Connector() Composite Component() Composed Providing Requiring Entity() Composite Component() Implementation Component Type() Basic Component() Implementation Component Type() Basic Component() service Effect Specifications Basic Component Service Effect Specification(seff Type ID) Basic Component() passive Resource Basic Component Passive Resource() Primitive Data Type(type) Data Type() LONG() Collection Data Type() Entity() Collection Data Type() inner Type Collection Data Type Data Type() Composite Data Type() Entity() Composite Data Type() Data Type() Composite Data Type() inner Declaration Composite Data Type Inner Declaration() Inner Declaration() Named Element(entity Name) Inner Declaration() datatype Inner Declaration Data Type() Provided Role() Role() Provided Role() provided Interface Provided Role Interface() Provided Role() providing Entity Provided Role Interface Providing Entity() Service Call() signature Service Call Signature(service Name) Protocol(protocol Type ID) TYPE() Variable Characterisation(type) specification Variable Characterisation PCM Random Variable() Characterised Variable(characterisation Type) Variable Usage() variable Characterisation Variable Usage Variable Characterisation(type) Stop Action() Abstract Internal Control Flow Action() Abstract Internal Control Flow Action() Abstract Action() Abstract Internal Control Flow Action() resource Demand Action Parametric Resource Demand() Abstract Action() Entity() Start Action() Abstract Internal Control Flow Action() Resource Demanding SEFF() Service Effect Specification(seff Type ID) Resource Demanding SEFF() Resource Demanding Behaviour() Resource Demanding Behaviour() steps Behaviour Abstract Action() Release Action() Abstract Internal Control Flow Action() Release Action() passive Resource Release Action Passive Resource() Loop Action() Abstract Loop Action() Loop Action() iteration Count Loop Action PCM Random Variable() Abstract Loop Action() Abstract Internal Control Flow Action() Abstract Loop Action() body Behaviour Loop Resource Demanding Behaviour() Internal Action(failure Probability) Abstract Internal Control Flow Action() Fork Action() Abstract Internal Control Flow Action() Fork Action() asynchronous Forked Behaviours Fork Action Forked Behaviour() Fork Action() synchronising Behaviours Fork Action Synchronisation Point() Forked Behaviour() Resource Demanding Behaviour() Synchronisation Point() synchronous Forked Behaviours Synchronisation Point Forked Behaviour() Synchronisation Point() output Parameter Usage Synchronisation Point Variable Usage() External Call Action(retry Count) Abstract Action() External Call Action(retry Count) called Service External Service Signature(service Name) External Call Action(retry Count) output Variable Usages External Call Action Variable Usage() External Call Action(retry Count) role External Service Role() Probabilistic Branch Transition(branch Probability) Abstract Branch Transition() Abstract Branch Transition() Named Element(entity Name) Abstract Branch Transition() branch Behaviour Branch Transition Resource Demanding Behaviour() Branch Action() Abstract Internal Control Flow Action() Branch Action() branches Branch Abstract Branch Transition() Acquire Action() Abstract Internal Control Flow Action() Acquire Action() passiveresource Acquire Action Passive Resource() Collection Iterator Action() Abstract Loop Action() Collection Iterator Action() parameter Collection Iterator Action Parameter(parameter Name, modifier Parameter) Guarded Branch Transition() Abstract Branch Transition() Guarded Branch Transition() branch Condition Guarded Branch Transition PCM Random Variable() Set Variable Action() Abstract Internal Control Flow Action() Set Variable Action() local Variable Usages Set Variable Action Variable Usage() Service Effect Specification(seff Type ID) described Service SEFF Signature(service Name) Parametric Resource Demand() specification Parameteric Resource Demand PCM Random Variable() Parametric Resource Demand() required Resource Parametric Resource Demand Processing Resource Type() Parametric Resource Demand() action Parametric Resource Demand Abstract Internal Control Flow Action() Resource Type() Entity() Resource Repository() available Resource Types Resource Repository Resource Type() Communication Link Resource Type() Processing Resource Type() Processing Resource Type() Resource Type() Allocation Context() Entity() Allocation Context() resource Container Allocation Context Resource Container() Allocation Context() assembly Context Allocation Context Assembly Context() Allocation() Entity() Allocation() allocation Contexts Allocation Allocation Context() Allocation() target Resource Environment Allocation Resource Environment() Allocation() system Allocation System() Resource Environment() linkingresource Linking Resource() Resource Environment() resource Container Resource Environment Resource Container() Linking Resource() Entity() Linking Resource() from Resource Container Linking Resource Resource Container() Linking Resource() communication Link Resource Specifications Linking Resource Communication Link Resource Specification(failure Probability) Communication Link Resource Specification(failure Probability) communication Link Resource Type Communication Link Resource Specification Communication Link Resource Type() Communication Link Resource Specification(failure Probability) throughput Communication Link Resource Specification PCM Random Variable() Processing Resource Specification(MTTR, MTTF, scheduling Policy) active Resource Type Active Resource Specification Processing Resource Type() Processing Resource Specification(MTTR, MTTF, scheduling Policy) processing Rate Processing Resource Specification PCM Random Variable() FCFS() Resource Container() Entity() Resource Container() active Resource Specifications Resource Container Processing Resource Specification(MTTR, MTTF, scheduling Policy) System() Entity() System() Composed Providing Requiring Entity() System() qos Annotations System Qo S Annotations() Specified Qo S Annotation() signature Specified Qo S Annation Signature(service Name) Specified Qo S Annotation() role Specified Qo S Annotation Role() Specified Qo S Annotation() specification Specified Execution Time PCM Random Variable() Specified Output Parameter Abstraction() signature Specified Output Parameter Abstraction Signature(service Name) Specified Output Parameter Abstraction() role Specified Output Parameter Abstraction Role() Specified Output Parameter Abstraction() expected External Outputs Specified Output Parameter Abstraction Variable Usage() Qo S Annotations() Entity() Qo S Annotations() specified Qo S Annotations Qo S Annotations Specified Qo S Annotation() Qo S Annotations() specified Output Parameter Abstractions Qo S Annotations Specified Output Parameter Abstraction() System Specified Execution Time() Specified Qo S Annotation() Component Specified Execution Time() Specified Qo S Annotation() Component Specified Execution Time() assembly Context Component Specified Execution Time Assembly Context() Specified Failure Probability(failure Probability) Specified Qo S Annotation() Workload() Usage Scenario() Entity() Usage Scenario() workload Usage Scenario Workload() Usage Scenario() scenario Behaviour Usage Scenario Scenario Behaviour() Scenario Behaviour() Entity() Scenario Behaviour() actions Scenario Behaviour Abstract User Action() Abstract User Action() Entity() Usage Model() usage Scenario Usage Model Usage Scenario() Usage Model() user Data Usage Model User Data() User Data() user Data Parameter Usages User Data Variable Usage() User Data() assembly Context user Data Assembly Context() Stop() Abstract User Action() Start() Abstract User Action() Open Workload() Workload() Open Workload() inter Arrival Time Open Workload PCM Random Variable() Loop() Abstract User Action() Loop() body Behaviour Loop Scenario Behaviour() Loop() loop Iteration Loop PCM Random Variable() Entry Level System Call() Abstract User Action() Entry Level System Call() output Parameter Usages Entry Level System Call Variable Usage() Entry Level System Call() provided Role Entry Level System Call Provided Role() Entry Level System Call() signature Entry Level System Call Signature(service Name) Closed Workload(population) Workload() Closed Workload(population) think Time Closed Workload PCM Random Variable() Branch() Abstract User Action() Branch() branch Transitions Branch Branch Transition(branch Probability) Branch Transition(branch Probability) branched Behaviour Branch Transition Scenario Behaviour() Delay() Abstract User Action() Delay() time Specification Delay PCM Random Variable() Sub System() Composed Providing Requiring Entity() Sub System() Repository Component()
Label: iot, Text: System(name) components HW Component(name) System(name) boards Board(name, type) System(name) sketch Sketch() Board(name, type) components HW Component(name) Sketch() activity Activity() HW Component(name) services Operation Def(is Oneway, contexts) Sensor() HW Component(name) Actuator() HW Component(name) Activity() Named Element(identifier, name) Activity() nodes Activity Node(running) Activity() edges Activity Edge() Activity() inputs Variable(name) Operation Def(is Oneway, contexts) Contained(repository Id, version, absolute Name) Operation Def(is Oneway, contexts) Typed() Operation Def(is Oneway, contexts) parameters Parameter Def(identifier, direction) Operation Def(is Oneway, contexts) can Raise Exception Def(type Code) Operation Def(is Oneway, contexts) lua Block() Beagle Board() Contained(repository Id, version, absolute Name) Named Element(identifier, name) Contained(repository Id, version, absolute Name) defined In Container() Named Element(identifier, name) Container() contains Contained(repository Id, version, absolute Name) Typed() contained Type IDL Type(type Code) Typed() shared Type Typedef Def() IDL Type(type Code) type Code E Type Code() E Type Code() Typedef Def() IDL Type(type Code) Typedef Def() Contained(repository Id, version, absolute Name) Parameter Def(identifier, direction) Typed() PARAM INOUT() Exception Def(type Code) Contained(repository Id, version, absolute Name) Exception Def(type Code) type Code E Type Code() Exception Def(type Code) members Field(identifier) Field(identifier) Typed() Field(identifier) value Expression() Primitive Def(kind) IDL Type(type Code) PK LONGLONG() Chunk() Block() Chunk() Block() statements Statement() Block() return Value Last Statement() Last Statement() Last Statement Return() Last Statement() Last Statement Break() Last Statement() Statement() Statement Block() Statement() Statement Block() block Block() Statement While() Statement() Statement While() expression Expression() Statement While() block Block() Statement Repeat() Statement() Statement Repeat() block Block() Statement Repeat() expression Expression() Statement If Then Else() Statement() Statement If Then Else() if Expression Expression() Statement If Then Else() else Block Block() Statement If Then Else() else If Statement If Then Else Else If Part() Statement If Then Else Else If Part() elseif Expression Expression() Statement If Then Else Else If Part() elseif Block Block() Statement For Numeric(iterator Name) Statement() Statement For Numeric(iterator Name) step Expr Expression() Statement For Numeric(iterator Name) block Block() Statement For Generic(names) Statement() Statement For Generic(names) expressions Expression() Statement For Generic(names) block Block() Statement Global Function Declaration(prefix, function Name) Statement() Statement Global Function Declaration(prefix, function Name) function Function(parameters, var Args) Statement Local Function Declaration(function Name) Statement() Statement Local Function Declaration(function Name) function Function(parameters, var Args) Statement Local Variable Declaration(variable Names) Statement() Statement Local Variable Declaration(variable Names) initial Value Expression() Statement Functioncall Or Assignment() Statement() Expression() Statement Functioncall Or Assignment() Expression Nil() Expression() Expression True() Expression() Expression False() Expression() Expression Number(value) Expression() Expression Var Args() Expression() Expression String(value) Expression() Expression Function() Expression() Expression Function() function Function(parameters, var Args) Expression Table Constructor() Expression() Expression Table Constructor() fields Field(identifier) Function(parameters, var Args) body Block() Functioncall Arguments() arguments Expression() Field Add Entry To Table Brackets() Field(identifier) Field Add Entry To Table Brackets() index Expression Expression() Field Add Entry To Table(key) Field(identifier) Field Append Entry To Table() Field(identifier) Last Statement Return With Value() Last Statement Return() Last Statement Return With Value() return Values Expression() Statement Assignment() Statement Functioncall Or Assignment() Statement Assignment() values Expression() Statement Call Member Function(member Function Name) Statement Functioncall Or Assignment() Statement Call Member Function(member Function Name) object Expression() Statement Call Member Function(member Function Name) arguments Functioncall Arguments() Statement Call Function() Statement Functioncall Or Assignment() Statement Call Function() object Expression() Statement Call Function() arguments Functioncall Arguments() Expression Or() right Expression() Expression And() right Expression() Expression Larger() right Expression() Expression Larger Equal() right Expression() Expression Smaller() right Expression() Expression Smaller Equal() right Expression() Expression Equal() right Expression() Expression Not Equal() right Expression() Expression Concatenation() right Expression() Expression Plus() right Expression() Expression Minus() right Expression() Expression Multiplication() right Expression() Expression Division() right Expression() Expression Modulo() right Expression() Expression Negate() exp Expression() Expression Length() exp Expression() Expression Invert() exp Expression() Expression Exponentiation() right Expression() Expression Call Member Function(member Function Name) object Expression() Expression Call Member Function(member Function Name) arguments Functioncall Arguments() Expression Call Function() object Expression() Expression Call Function() arguments Functioncall Arguments() Expression Access Array() index Expression() Expression Access Member(member Name) object Expression() Expression Variable Name(variable) Expression() Environment() Object() Stack() Activity Node(running) Named Element(identifier, name) Activity Node(running) incoming Activity Edge() Activity Node(running) activity Activity() Activity Edge() Named Element(identifier, name) Activity Edge() target Activity Node(running) Activity Edge() offers Offer() Control Flow() Activity Edge() Control Flow() guard Boolean Variable() Control Node() Activity Node(running) Executable Node() Activity Node(running) Action() Executable Node() Opaque Action() Action() Opaque Action() expressions Expression() Opaque Action() service Operation Def(is Oneway, contexts) Initial Node() Control Node() Final Node() Control Node() Activity Final Node() Final Node() Fork Node() Control Node() Join Node() Control Node() Merge Node() Control Node() Decision Node() Control Node() Variable(name) current Value Value() Integer Variable() Variable(name) Boolean Variable() Variable(name) Value() Boolean Value(value) Value() Integer Value(value) Value() Integer Expression() Expression() Integer Expression() operand1 Integer Variable() Boolean Expression() Expression() Boolean Expression() assignee Boolean Variable() Integer Calculation Expression(operator) Integer Expression() Integer Calculation Expression(operator) assignee Integer Variable() Integer Comparison Expression(operator) Integer Expression() Integer Comparison Expression(operator) assignee Boolean Variable() SUBRACT() GREATER() Boolean Unary Expression(operator) Boolean Expression() Boolean Unary Expression(operator) operand Boolean Variable() Boolean Binary Expression(operator) Boolean Expression() Boolean Binary Expression(operator) operand2 Boolean Variable() NOT() OR() Input Value() value Value() Input Value() variable Variable(name) Input() input Values Input Value() Offer() offered Tokens Token() Token() holder Activity Node(running) Context() output Trace() Context() activity Activity() Context() input Values Input Value() Context() node Join Node() Trace() executed Nodes Activity Node(running) Forked Token(remaining Offers Count) base Token Token() Control Token() Token()
Label: workflow, Text: Inclusive Gateway() Non Exclusive Gateway() Inclusive Gateway() default Sequence Flow(is Immediate) Non Exclusive Gateway() Gateway() Gateway() Flow Node() Flow Node() Flow Element() Flow Element() Base Element(id) Flow Element() auditing Auditing() Flow Element() monitoring Monitoring() Flow Element() category Value Ref Category Value() Flow Element() container Flow Elements Container() Base Element(id) extension Values Extension Attribute Value() Base Element(id) documentation Documentation(text Format, text) Base Element(id) extension Definitions Extension Definition() Base Element(id) incoming BPMN Association(association Direction) Extension Attribute Value() extension Attribute Definition Extension Attribute Definition(type, is Reference) Extension Attribute Definition(type, is Reference) Documentation(text Format, text) Base Element(id) Extension Definition() extension Attribute Definitions Extension Attribute Definition(type, is Reference) BPMN Association(association Direction) BPMN Artifact() BPMN Association(association Direction) source Ref Base Element(id) BPMN Artifact() Base Element(id) both() Auditing() Base Element(id) Monitoring() Base Element(id) Category Value() Base Element(id) Category Value() categorized Flow Elements Flow Element() Flow Elements Container() Base Element(id) Flow Elements Container() lane Sets Lane Set() Flow Elements Container() flow Elements Flow Element() Lane Set() Base Element(id) Lane Set() parent Lane Lane() Lane Set() flow Elements Container Flow Elements Container() Lane() partition Element Ref Base Element(id) Lane() flow Node Refs Flow Node() Lane() lane Set Lane Set() Sequence Flow(is Immediate) Flow Element() Sequence Flow(is Immediate) condition Expression BPMN Expression() BPMN Expression() Base Element(id) Event Based Gateway(instantiate, event Gateway Type) Gateway() parallel() mixed() Parallel Gateway() Non Exclusive Gateway() Complex Gateway() Non Exclusive Gateway() Complex Gateway() default Sequence Flow(is Immediate) Complex Gateway() activation Condition BPMN Expression() Exclusive Gateway() Gateway() Exclusive Gateway() default Sequence Flow(is Immediate) Root Element() Base Element(id) Root Element() definition Definitions(target Namespace, expression Language, type Language, exporter, exporter Version) Definitions(target Namespace, expression Language, type Language, exporter, exporter Version) Base Element(id) Definitions(target Namespace, expression Language, type Language, exporter, exporter Version) extensions BPMN Extension(must Understand) Definitions(target Namespace, expression Language, type Language, exporter, exporter Version) imports Import(import Type, location, namespace) Definitions(target Namespace, expression Language, type Language, exporter, exporter Version) relationships BPMN Relationship(type, direction) Definitions(target Namespace, expression Language, type Language, exporter, exporter Version) root Elements Root Element() BPMN Extension(must Understand) definition Extension Definition() Import(import Type, location, namespace) definitions Definitions(target Namespace, expression Language, type Language, exporter, exporter Version) BPMN Relationship(type, direction) Base Element(id) BPMN Relationship(type, direction) definition Definitions(target Namespace, expression Language, type Language, exporter, exporter Version) BPMN Process(process Type, is Closed, is Executable) Callable Element() BPMN Process(process Type, is Closed, is Executable) Flow Elements Container() BPMN Process(process Type, is Closed, is Executable) auditing Auditing() BPMN Process(process Type, is Closed, is Executable) definitional Collaboration Ref BPMN Collaboration(is Closed) BPMN Process(process Type, is Closed, is Executable) correlation Subscriptions Correlation Subscription() BPMN Process(process Type, is Closed, is Executable) monitoring Monitoring() BPMN Process(process Type, is Closed, is Executable) properties BPMN Property() BPMN Process(process Type, is Closed, is Executable) resources Resource Role() Callable Element() Root Element() Callable Element() io Specification Input Output Specification() Callable Element() supported Interface Refs BPMN Interface() Callable Element() io Binding Input Output Binding() Input Output Specification() Base Element(id) Input Output Specification() data Inputs Data Input(is Collection) Input Output Specification() data Outputs Data Output(is Collection) Input Output Specification() input Sets Input Set() Input Output Specification() output Sets Output Set() Data Input(is Collection) Item Aware Element() Data Input(is Collection) input Set With While Executing Input Set() Item Aware Element() Base Element(id) Item Aware Element() data State Data State() Item Aware Element() item Subject Ref Item Definition(item Kind, is Collection) Data State() Base Element(id) Item Definition(item Kind, is Collection) Root Element() Item Definition(item Kind, is Collection) import Import(import Type, location, namespace) information() Input Set() Base Element(id) Input Set() data Input Refs Data Input(is Collection) Data Output(is Collection) Item Aware Element() Data Output(is Collection) output Set With While Executing Output Set() Output Set() Base Element(id) Output Set() data Output Refs Data Output(is Collection) BPMN Interface() Root Element() BPMN Interface() operations BPMN Operation() BPMN Interface() callable Elements Callable Element() BPMN Operation() Base Element(id) BPMN Operation() out Message Ref BPMN Message() BPMN Operation() error Ref Error(error Code) BPMN Message() item Ref Item Definition(item Kind, is Collection) Error(error Code) Item Definition(item Kind, is Collection) Input Output Binding() Base Element(id) Input Output Binding() input Data Ref Input Set() Input Output Binding() output Data Ref Output Set() Input Output Binding() operation Ref BPMN Operation() private() BPMN Collaboration(is Closed) Root Element() BPMN Collaboration(is Closed) participant Associations Participant Association() BPMN Collaboration(is Closed) conversation Links Conversation Link() BPMN Collaboration(is Closed) message Flow Associations Message Flow Association() BPMN Collaboration(is Closed) message Flows Message Flow() BPMN Collaboration(is Closed) conversations Conversation Node() BPMN Collaboration(is Closed) correlation Keys Correlation Key() BPMN Collaboration(is Closed) participants Participant() Participant Association() Base Element(id) Participant Association() outer Participant Ref Participant() Participant() Base Element(id) Participant() process Ref BPMN Process(process Type, is Closed, is Executable) Participant() participant Multiplicity Participant Multiplicity(minimum, maximum) Participant() partner Entity Ref Partner Entity() Participant() partner Role Ref Partner Role() Participant() interface Refs BPMN Interface() Interaction Node() incoming Conversation Links Conversation Link() Conversation Link() Base Element(id) Conversation Link() collaboration BPMN Collaboration(is Closed) Conversation Link() source Ref Interaction Node() Participant Multiplicity(minimum, maximum) Base Element(id) Partner Entity() Root Element() Partner Entity() participant Ref Participant() Partner Role() Root Element() Partner Role() participant Ref Participant() Message Flow Association() Base Element(id) Message Flow Association() outer Message Flow Ref Message Flow() Message Flow() Base Element(id) Message Flow() target Ref Interaction Node() Message Flow() message Ref BPMN Message() Conversation Node() Interaction Node() Conversation Node() message Flow Refs Message Flow() Conversation Node() correlation Keys Correlation Key() Conversation Node() participant Refs Participant() Correlation Key() Base Element(id) Correlation Key() correlation Property Ref Correlation Property() Correlation Property() Base Element(id) Correlation Property() type Item Definition(item Kind, is Collection) Correlation Property() correlation Property Retrieval Expression Correlation Property Retrieval Expression() Correlation Property Retrieval Expression() Base Element(id) Correlation Property Retrieval Expression() message Ref BPMN Message() Correlation Property Retrieval Expression() message Path Formal Expression() Formal Expression() BPMN Expression() Formal Expression() evaluates To Type Ref Item Definition(item Kind, is Collection) Correlation Subscription() Base Element(id) Correlation Subscription() correlation Key Ref Correlation Key() Correlation Subscription() correlation Property Binding Correlation Property Binding() Correlation Property Binding() Base Element(id) Correlation Property Binding() data Path Formal Expression() Correlation Property Binding() correlation Property Ref Correlation Property() BPMN Property() Item Aware Element() Resource Role() Base Element(id) Resource Role() resource Assignment Expression Resource Assignment Expression() Resource Role() resource Ref Resource() Resource Role() resource Parameter Bindings Resource Parameter Binding() Resource Role() process BPMN Process(process Type, is Closed, is Executable) Resource Assignment Expression() expression BPMN Expression() Resource() Item Definition(item Kind, is Collection) Resource() resource Parameters Resource Parameter(is Required) Resource Parameter(is Required) Base Element(id) Resource Parameter(is Required) type Item Definition(item Kind, is Collection) Resource Parameter Binding() Base Element(id) Resource Parameter Binding() parameter Ref Resource Parameter(is Required) Resource Parameter Binding() expression BPMN Expression() Global Script Task(script, script Format) Global Task() Global Task() Callable Element() Global Task() resources Resource Role() Global Business Rule Task(implementation) Global Task() Compensate Event Definition(wait For Completion) Event Definition() Compensate Event Definition(wait For Completion) activity Ref BPMN Activity(is For Compensation, start Quantity, completion Quantity) Event Definition() Root Element() BPMN Activity(is For Compensation, start Quantity, completion Quantity) Flow Node() BPMN Activity(is For Compensation, start Quantity, completion Quantity) properties BPMN Property() BPMN Activity(is For Compensation, start Quantity, completion Quantity) default Sequence Flow(is Immediate) BPMN Activity(is For Compensation, start Quantity, completion Quantity) boundary Event Refs Boundary Event(cancel Activity) BPMN Activity(is For Compensation, start Quantity, completion Quantity) data Input Associations Data Input Association() BPMN Activity(is For Compensation, start Quantity, completion Quantity) data Output Associations Data Output Association() BPMN Activity(is For Compensation, start Quantity, completion Quantity) loop Characteristics Loop Characteristics() BPMN Activity(is For Compensation, start Quantity, completion Quantity) resources Resource Role() Boundary Event(cancel Activity) Catch Event(parallel Multiple) Boundary Event(cancel Activity) attached To Ref BPMN Activity(is For Compensation, start Quantity, completion Quantity) Catch Event(parallel Multiple) BPMN Event() Catch Event(parallel Multiple) data Output Association Data Output Association() BPMN Event() Flow Node() BPMN Event() event Definition Refs Event Definition() BPMN Event() properties BPMN Property() Data Output Association() Data Association() Data Association() Base Element(id) Data Association() target Ref Item Aware Element() Data Association() transformation Formal Expression() Data Association() assignment Assignment() Assignment() Base Element(id) Assignment() to BPMN Expression() Data Input Association() Data Association() Loop Characteristics() Base Element(id) Escalation Event Definition() Event Definition() Escalation Event Definition() escalation Ref Escalation(escalation Code) Escalation(escalation Code) Item Definition(item Kind, is Collection) Timer Event Definition() Event Definition() Timer Event Definition() time Duration BPMN Expression() Signal Event Definition() Event Definition() Signal Event Definition() signal Ref BPMN Signal() BPMN Signal() Item Definition(item Kind, is Collection) End Event() Throw Event() Throw Event() BPMN Event() Throw Event() data Input Association Data Input Association() Message Event Definition() Event Definition() Message Event Definition() message Ref BPMN Message() Message Event Definition() operation Ref BPMN Operation() Start Event(is Interrupting) Catch Event(parallel Multiple) Conditional Event Definition() Event Definition() Conditional Event Definition() condition BPMN Expression() Link Event Definition() Event Definition() Error Event Definition() Event Definition() Error Event Definition() error Ref Error(error Code) Intermediate Catch Event() Catch Event(parallel Multiple) Intermediate Throw Event() Throw Event() Terminate Event Definition() Event Definition() Implicit Throw Event() Throw Event() Cancel Event Definition() Event Definition() Text Annotation(text Format, text) BPMN Artifact() Category() Root Element() Category() category Value Category Value() Group() BPMN Artifact() Group() category Value Ref Category Value() Data Object Reference() Flow Element() Data Object Reference() Item Aware Element() Data Object Reference() data Object Ref Data Object(is Collection) Data Object(is Collection) Flow Element() Data Object(is Collection) Item Aware Element() Data Store(capacity, is Unlimited) Root Element() Data Store(capacity, is Unlimited) item Subject Ref Item Definition(item Kind, is Collection) Data Store Reference() Flow Element() Data Store Reference() Item Aware Element() Data Store Reference() data Store Data Store(capacity, is Unlimited) User Task(implementation) Task() User Task(implementation) renderings Rendering() Task() BPMN Activity(is For Compensation, start Quantity, completion Quantity) Task() io Specification Input Output Specification() Rendering() Base Element(id) Human Performer() Performer() Performer() Resource Role() Global User Task(implementation) Global Task() Global User Task(implementation) renderings Rendering() Global Manual Task() Global Task() Manual Task() Task() Potential Owner() Human Performer() Sub Conversation() conversation Nodes Conversation Node() Global Conversation() BPMN Collaboration(is Closed) Call Conversation() Conversation Node() Call Conversation() called Collaboration Ref BPMN Collaboration(is Closed) Call Conversation() participant Associations Participant Association() Conversation() Conversation Node() Sub Process(triggered By Event) BPMN Activity(is For Compensation, start Quantity, completion Quantity) Sub Process(triggered By Event) Flow Elements Container() Sub Process(triggered By Event) has Lane Sets Lane Set() Call Activity() BPMN Activity(is For Compensation, start Quantity, completion Quantity) Call Activity() called Element Ref Callable Element() Business Rule Task(implementation) Task() sequential() Complex Behavior Definition() Base Element(id) Complex Behavior Definition() condition Formal Expression() Complex Behavior Definition() event Implicit Throw Event() Ad Hoc Sub Process(ordering, cancel Remaining Instances) Sub Process(triggered By Event) Ad Hoc Sub Process(ordering, cancel Remaining Instances) completion Condition BPMN Expression() Script Task(script Format, script) Task() Send Task(implementation) Task() Send Task(implementation) message Ref BPMN Message() Send Task(implementation) operation Ref BPMN Operation() Transaction(method) Sub Process(triggered By Event) Standard Loop Characteristics(loop Maximum, test Before) Loop Characteristics() Standard Loop Characteristics(loop Maximum, test Before) loop Condition BPMN Expression() complex() Receive Task(implementation, instantiate) Task() Receive Task(implementation, instantiate) message Ref BPMN Message() Receive Task(implementation, instantiate) operation Ref BPMN Operation() Service Task(implementation) Task() Service Task(implementation) operation Ref BPMN Operation() Multi Instance Loop Characteristics(behavior, is Sequential) Loop Characteristics() Multi Instance Loop Characteristics(behavior, is Sequential) completion Condition BPMN Expression() Multi Instance Loop Characteristics(behavior, is Sequential) loop Data Output Ref Item Aware Element() Multi Instance Loop Characteristics(behavior, is Sequential) output Data Item Data Output(is Collection) Multi Instance Loop Characteristics(behavior, is Sequential) input Data Item Data Input(is Collection) Multi Instance Loop Characteristics(behavior, is Sequential) none Behavior Event Ref Event Definition() Multi Instance Loop Characteristics(behavior, is Sequential) complex Behavior Definition Complex Behavior Definition()
Label: testing, Text: Model() elements Domain Declaration(name) Domain Declaration(name) elements Abstract Element() Import(imported Namespace) Abstract Element() Abstract Element() Function(methode) Abstract Element() Function(methode) out Out Variable(name, type) Function(methode) arg1 Variable(name, type) Data() Abstract Element() Data() inst Inst() Out Variable(name, type) Inst() variable Variable(name, type) Inst() valeur Expression() Test Intention(description) Abstract Element() Test Intention(description) expression Expression() Test Intention(description) outvar Out Variable(name, type) Expression() Variable(name, type) Double(value) Expression() Or() right Expression() And() right Expression() Equality(op) right Expression() Comparison(op) right Expression() Plus() right Expression() Minus() right Expression() Mul Or Div(op) right Expression() Not() expression Expression() INT(value) Expression() STRING(value) Expression() Boolean(value) Expression() Variable Ref() Expression() Variable Ref() variable Variable(name, type)
Label: relational, Text: Boolean() Integer() String() Named Element(name) name String() Data Base() Named Element(name) Data Base() tables Table() Table() Named Element(name) Table() columns Column(type, is Primary Key, default Value, comment) Table() database Data Base() Column(type, is Primary Key, default Value, comment) Named Element(name) Column(type, is Primary Key, default Value, comment) comment String() Column(type, is Primary Key, default Value, comment) is Primary Key Boolean() Column(type, is Primary Key, default Value, comment) table Table() Integer Column(is Auto Increment) Column(type, is Primary Key, default Value, comment) Integer Column(is Auto Increment) is Auto Increment Boolean() Enum Column() Column(type, is Primary Key, default Value, comment) Enum Column() enum Set Enum Set() Enum Set() enum Items Enum Item() Enum Item() Named Element(name) Enum Item() enum Set Enum Set() Foreign Column() Column(type, is Primary Key, default Value, comment) Foreign Column() refers Table()
Label: architecture, Text: Model() package Domain Declaration(name) Domain Declaration(name) elements Abstract Model() Abstract Model() imp Import(imported Namespace) Abstract Model() comp Component(name) Abstract Model() arch Architecture() Import(imported Namespace) Component(name) operations Operation(name) Architecture() vars Variable(name) Architecture() bind Binding() Binding() receiver Variable(name) Binding() rec Member Operation(name) Variable(name) type Atomic Type(atom Type) Operation(name) arg Variable(name) Operation(name) type Atomic Type(atom Type) Atomic Type(atom Type) comp Type Component(name) Void()
Label: class-diagram, Text: Association() Named Element(name) Association() dst Class() Class() Named Element(name) Class() attrs Attribute() Attribute() Named Element(name) Attribute() type Class() UML Specification() Named Element(name) UML Specification() classes Class() UML Specification() associations Association() Named Element(name)
Label: simple-pl, Text: Function(name) parameters Parameter(name) Function(name) body Expression() Parameter(name) Expression() Number(value) Expression() Parameter Access() Expression() Parameter Access() parameter Parameter(name) Binary Operator() op2 Expression() Unary Operator() op Expression() Plus() Binary Operator() Minus() Binary Operator() Mul() Binary Operator() Div() Binary Operator() Neg() Unary Operator() Function Call() arguments Expression() Function Call() function Function(name) Model() functions Function(name)
Label: metrics, Text: Boolean() Integer() String() Double() Metric(name) name String() Metric(name) values Metric Value(tag) Metric Value(tag) tag String() String Metric Value(value) Metric Value(tag) String Metric Value(value) value String() Boolean Metric Value(value) Metric Value(tag) Boolean Metric Value(value) value Boolean() Integer Metric Value(value) Metric Value(tag) Integer Metric Value(value) value Integer() Double Metric Value(value) Metric Value(tag) Double Metric Value(value) value Double()
Label: statemachine, Text: Statemachine() reset Events Event(code) Statemachine() commands Command(code) Statemachine() states State() Named Element(name, displayname) Event(code) Named Element(name, displayname) Command(code) Named Element(name, displayname) State() Named Element(name, displayname) State() actions Command(code) State() transitions Transition() Transition() event Event(code) Transition() state State()
Label: constraints, Text: Arrow Call Arguments CS() Call Arguments CS() Arrow Call Arguments CS() variable2 Variable CS() Arrow Call Arguments CS() body Ocl Expression CS() Binary Expression CS(op) right Ocl Expression CS() Boolean Literal Exp CS(value) Primitive Literal Exp CS() Call Arguments CS() path Name Path Name CS() Call Arguments CS() arguments Ocl Expression CS() Call Exp CS() source Ocl Expression CS() Call Exp CS() call Arguments Call Arguments CS() Collection Literal Exp CS() Literal Exp CS() Collection Literal Part CS() last Expression CS Ocl Expression CS() Collection Type CS() type CS Type CS() Collection Type CS() Collection Literal Exp CS() Collection Type CS() Type Literal Exp CS() Collection Type CS() value Simple Name CS(value) Collection Type CS() collection Literal Parts Collection Literal Part CS() Dot Index Arguments CS(is Pre) Call Arguments CS() Dot Index Arguments CS(is Pre) indexes Ocl Expression CS() If Exp CS() else Expression Ocl Expression CS() Integer Literal Exp CS(integer Symbol) Primitive Literal Exp CS() Invalid Literal Exp CS() Primitive Literal Exp CS() Let Exp CS() in Ocl Expression CS() Let Exp CS() variable Variable CS() Literal Exp CS() Ocl Expression CS() Null Literal Exp CS() Primitive Literal Exp CS() Ocl Expression CS() Path Name CS() Type CS() Path Name CS() Type Literal Exp CS() Path Name CS() simple Names Simple Name CS(value) Primitive Literal Exp CS() Literal Exp CS() Real Literal Exp CS(real Symbol) Primitive Literal Exp CS() Simple Name CS(value) Type CS() Simple Name CS(value) Collection Literal Exp CS() Simple Name CS(value) Type Literal Exp CS() Simple Name CS(value) Variable Exp CS() Simple Name CS(value) collection Literal Parts Collection Literal Part CS() String Literal Exp CS(string Symbol) Primitive Literal Exp CS() Tuple Literal Exp CS() Literal Exp CS() Tuple Literal Exp CS() part Variable CS() Tuple Type CS(value) Type CS() Tuple Type CS(value) Type Literal Exp CS() Tuple Type CS(value) part Variable CS() Type CS() Type Literal Exp CS() Literal Exp CS() Unary Expression CS(op) source Ocl Expression CS() Unlimited Natural Literal Exp CS() Primitive Literal Exp CS() Variable CS() name Simple Name CS(value) Variable CS() type Type CS() Variable CS() init Expression Ocl Expression CS() Variable Exp CS() Ocl Expression CS()
Label: projectplanning, Text: Project() Unique Identifier(id) Identifiable Element(identifier) Model Element(creator, creation Date) Identifiable Element(identifier) Model Element Id() Unique Identifier(id) Model Version(release Number) Non Domain Element() Association Class Element() Unicase Model Element(name, description, state) Model Element(creator, creation Date) Unicase Model Element(name, description, state) annotations Annotation() Unicase Model Element(name, description, state) attachments Attachment() Unicase Model Element(name, description, state) incoming Document References Leaf Section() Unicase Model Element(name, description, state) comments Comment() Unicase Model Element(name, description, state) applied Stereotype Instances Stereotype Instance() Annotation() annotated Model Elements Unicase Model Element(name, description, state) Attachment() referring Model Elements Unicase Model Element(name, description, state) Org Unit(ac Org Id) Unicase Model Element(name, description, state) Org Unit(ac Org Id) group Memberships Group() Org Unit(ac Org Id) assignments Work Item(due Date, estimate, effort, priority, resolved) User(email, first Name, last Name) Org Unit(ac Org Id) User(email, first Name, last Name) work Items To Review Work Item(due Date, estimate, effort, priority, resolved) Group() org Units Org Unit(ac Org Id) Work Item(due Date, estimate, effort, priority, resolved) Annotation() Work Item(due Date, estimate, effort, priority, resolved) containing Workpackage Work Package(start Date, end Date) Work Item(due Date, estimate, effort, priority, resolved) participants Org Unit(ac Org Id) Work Item(due Date, estimate, effort, priority, resolved) reviewer User(email, first Name, last Name) Work Item(due Date, estimate, effort, priority, resolved) associated Change Packages Model Change Package(source Version, target Version) Work Package(start Date, end Date) contained Work Items Work Item(due Date, estimate, effort, priority, resolved) Milestone() Work Item(due Date, estimate, effort, priority, resolved) Milestone() contained Model Elements Unicase Model Element(name, description, state) MANAGEMENT() Checkable(checked) Unicase Model Element(name, description, state) Action Item(done, activity) Work Item(due Date, estimate, effort, priority, resolved) Action Item(done, activity) Checkable(checked) ME Diagram(diagram Layout, type) Attachment() ME Diagram(diagram Layout, type) new Elements Unicase Model Element(name, description, state) WORKITEM DIAGRAM() Package Element() Unicase Model Element(name, description, state) Package Element() parent Package Package() Package Element() incoming Dependencies Dependency() Class() Package Element() Class() incoming Associations Association(source Multiplicity, target Multiplicity, source Role, target Role, type) Class() attributes Attribute(signature, type, default Value, properties, label, visibility, scope) Class() methods Method(visibility, scope, return Type, signature, properties, label, stubbed) Class() participated Use Cases Use Case(precondition, postcondition, rules, exception) Class() demo Participations Scenario() Package() contained Package Elements Package Element() Package() facade Class Class() Association(source Multiplicity, target Multiplicity, source Role, target Role, type) Unicase Model Element(name, description, state) Association(source Multiplicity, target Multiplicity, source Role, target Role, type) target Class() COMPOSITION() Attribute(signature, type, default Value, properties, label, visibility, scope) Unicase Model Element(name, description, state) Attribute(signature, type, default Value, properties, label, visibility, scope) defining Class Class() PROTECTED() CLASS() Method(visibility, scope, return Type, signature, properties, label, stubbed) Unicase Model Element(name, description, state) Method(visibility, scope, return Type, signature, properties, label, stubbed) defining Class Class() Method(visibility, scope, return Type, signature, properties, label, stubbed) arguments Method Argument(type, default Value, signature, label, direction) Method(visibility, scope, return Type, signature, properties, label, stubbed) demo Participations Scenario() Method Argument(type, default Value, signature, label, direction) Unicase Model Element(name, description, state) INOUT() Dependency() Unicase Model Element(name, description, state) Dependency() target Package Element() Section() Unicase Model Element(name, description, state) Section() parent Composite Section() Leaf Section() Section() Leaf Section() referenced Model Elements Unicase Model Element(name, description, state) Composite Section() subsections Section() Functional Requirement(story Points, priority, reviewed, cost) Unicase Model Element(name, description, state) Functional Requirement(story Points, priority, reviewed, cost) stakeholder Org Unit(ac Org Id) Functional Requirement(story Points, priority, reviewed, cost) use Cases Use Case(precondition, postcondition, rules, exception) Functional Requirement(story Points, priority, reviewed, cost) scenarios Scenario() Use Case(precondition, postcondition, rules, exception) Unicase Model Element(name, description, state) Use Case(precondition, postcondition, rules, exception) functional Requirements Functional Requirement(story Points, priority, reviewed, cost) Use Case(precondition, postcondition, rules, exception) identified Classes Class() Use Case(precondition, postcondition, rules, exception) scenarios Scenario() Use Case(precondition, postcondition, rules, exception) participating Actors Actor() Use Case(precondition, postcondition, rules, exception) use Case Steps Step(user Step) Use Case(precondition, postcondition, rules, exception) realized User Task User Task() Use Case(precondition, postcondition, rules, exception) non Functional Requirements Non Functional Requirement() Use Case(precondition, postcondition, rules, exception) system Functions System Function(input, output, exception) Scenario() Unicase Model Element(name, description, state) Scenario() instantiated Use Cases Use Case(precondition, postcondition, rules, exception) Scenario() functional Requirements Functional Requirement(story Points, priority, reviewed, cost) Scenario() participating Methods Method(visibility, scope, return Type, signature, properties, label, stubbed) Scenario() participating Classes Class() Scenario() participating Actor Instances Actor Instance() Scenario() steps Step(user Step) Scenario() non Functional Requirements Non Functional Requirement() Actor() Unicase Model Element(name, description, state) Actor() participated Use Cases Use Case(precondition, postcondition, rules, exception) Actor() instances Actor Instance() Actor() initiated User Task User Task() Actor Instance() Unicase Model Element(name, description, state) Actor Instance() participated Scenarios Scenario() Actor Instance() instantiated Actor Actor() Step(user Step) Unicase Model Element(name, description, state) Step(user Step) Non Domain Element() Step(user Step) use Case Use Case(precondition, postcondition, rules, exception) Step(user Step) included System Function System Function(input, output, exception) System Function(input, output, exception) Unicase Model Element(name, description, state) System Function(input, output, exception) non Functional Requirement Non Functional Requirement() System Function(input, output, exception) usecases Use Case(precondition, postcondition, rules, exception) System Function(input, output, exception) workspace Workspace() User Task() Unicase Model Element(name, description, state) User Task() participating Actors Actor() User Task() realizing Use Cases Use Case(precondition, postcondition, rules, exception) User Task() non Functional Requirements Non Functional Requirement() Non Functional Requirement() Criterion() Non Functional Requirement() restricted Use Cases Use Case(precondition, postcondition, rules, exception) Non Functional Requirement() restricted Scenarios Scenario() Non Functional Requirement() system Functions System Function(input, output, exception) Non Functional Requirement() user Tasks User Task() Workspace() Unicase Model Element(name, description, state) Workspace() system Functions System Function(input, output, exception) Issue(activity) Annotation() Issue(activity) Checkable(checked) Issue(activity) Work Item(due Date, estimate, effort, priority, resolved) Issue(activity) proposals Proposal() Issue(activity) solution Solution() Issue(activity) criteria Criterion() Proposal() Unicase Model Element(name, description, state) Proposal() Non Domain Element() Proposal() issue Issue(activity) Proposal() assessments Assessment(value) Solution() Unicase Model Element(name, description, state) Solution() Non Domain Element() Solution() underlying Proposals Proposal() Solution() issue Issue(activity) Criterion() Unicase Model Element(name, description, state) Criterion() assessments Assessment(value) Assessment(value) Unicase Model Element(name, description, state) Assessment(value) Non Domain Element() Assessment(value) proposal Proposal() Assessment(value) criterion Criterion() Comment() commented Element Unicase Model Element(name, description, state) Comment() Non Domain Element() Comment() recipients Org Unit(ac Org Id) Audio Comment() audio File File Attachment(file Name, file Hash, file ID, file Size, required Offline, file Type, uploading, downloading) Model Change Package(source Version, target Version) Unicase Model Element(name, description, state) Merging Issue(resolving Revision) Issue(activity) Merging Proposal() Proposal() Merging Proposal() pending Changes Model Change Package(source Version, target Version) Merging Solution() Solution() Merging Solution() applied Changes Model Change Package(source Version, target Version) Bug Report(resolution, severity, resolution Type, done) Work Item(due Date, estimate, effort, priority, resolved) Bug Report(resolution, severity, resolution Type, done) Checkable(checked) BLOCKER() WONT FIX() Component() Unicase Model Element(name, description, state) Component() subsystems Package() Component() consumed Services Component Service() Component Service() Unicase Model Element(name, description, state) Component Service() consuming Components Component() Deployment Node() Unicase Model Element(name, description, state) Deployment Node() components Component() Meeting(location, starttime, endtime) Unicase Model Element(name, description, state) Meeting(location, starttime, endtime) timekeeper User(email, first Name, last Name) Meeting(location, starttime, endtime) participants Org Unit(ac Org Id) Meeting(location, starttime, endtime) sections Meeting Section(allocated Time) Meeting(location, starttime, endtime) identified Issues Section Issue Meeting Section() Meeting(location, starttime, endtime) identified Work Items Section Work Item Meeting Section() Meeting Section(allocated Time) Unicase Model Element(name, description, state) Composite Meeting Section() subsections Meeting Section(allocated Time) Issue Meeting Section() Meeting Section(allocated Time) Issue Meeting Section() included Issues Issue(activity) Work Item Meeting Section() Meeting Section(allocated Time) Work Item Meeting Section() included Work Items Work Item(due Date, estimate, effort, priority, resolved) Transition(condition) Unicase Model Element(name, description, state) Transition(condition) target Activity Object() State Node() Unicase Model Element(name, description, state) State Node() incoming Transitions Transition(condition) State(exit Conditions, activities, entry Conditions) State Node() State Initial() State Node() State End() State Node() Url Attachment(url) Attachment() File Attachment(file Name, file Hash, file ID, file Size, required Offline, file Type, uploading, downloading) Attachment() VIDEO() Profile() affected Containers Unicase Model Element(name, description, state) Profile() stereotypes Stereotype(required) Stereotype(required) Unicase Model Element(name, description, state) Stereotype(required) profile Profile() Stereotype(required) stereotype Instances Stereotype Instance() Stereotype(required) stereotype Attributes Stereotype Attribute() Stereotype Instance() model Element Unicase Model Element(name, description, state) Stereotype Instance() stereotype Stereotype(required) Stereotype Instance() stereotype Attribute Instances Stereotype Attribute Instance() Stereotype Attribute() Unicase Model Element(name, description, state) Stereotype Attribute() stereotype Stereotype(required) Stereotype Attribute() stereotype Attribute Instances Stereotype Attribute Instance() Stereotype Attribute Simple(type) Stereotype Attribute() Stereotype Attribute Instance() Unicase Model Element(name, description, state) Stereotype Attribute Instance() stereotype Instance Stereotype Instance() Stereotype Attribute Instance() stereotype Attribute Stereotype Attribute() Stereotype Attribute Instance String(value) Stereotype Attribute Instance() Model Element Path() path Model Element Id() Activity Object() Unicase Model Element(name, description, state) Activity Object() incoming Transitions Transition(condition) Activity() Activity Object() Fork() Activity Object() Branch() Activity Object() Activity Initial() Activity Object() Activity End() Activity Object() Project History(project Name, project Description) project Id Project Id() Project History(project Name, project Description) versions Version() Project Info(name, description) project Id Project Id() Project Info(name, description) version Primary Version Spec(identifier) Session Id() Unique Identifier(id) Server Space() groups AC Group() Server Space() projects Project History(project Name, project Description) Server Space() open Sessions Session Id() Server Space() users AC User(first Name, last Name) Project Id() Unique Identifier(id) Version Info(emf Store Version String) Client Version Info(version, name) Tag Version Spec(name) Version Spec() Date Version Spec(date) Version Spec() Primary Version Spec(identifier) Version Spec() Version Spec() Log Message(author, message, date, client Date) Change Package() operations Abstract Operation(name, description, accepted, client Date) Change Package() events Event(timestamp) Change Package() log Message Log Message(author, message, date, client Date) Change Package() notifications ES Notification(name, message, details, seen, creation Date, provider, sender, recipient) Change Package() version Properties Version Property(name, value) History Info() primery Spec Primary Version Spec(identifier) History Info() log Message Log Message(author, message, date, client Date) History Info() tag Specs Tag Version Spec(name) History Info() version Properties Version Property(name, value) History Info() change Package Change Package() History Query(include Change Package) target Primary Version Spec(identifier) History Query(include Change Package) model Elements Model Element Id() Version() project State Project() Version() primary Spec Primary Version Spec(identifier) Version() tag Specs Tag Version Spec(name) Version() changes Change Package() Version() log Message Log Message(author, message, date, client Date) Head Version Spec() Version Spec() Version Property(name, value) Abstract Operation(name, description, accepted, client Date) Identifiable Element(identifier) Abstract Operation(name, description, accepted, client Date) model Element Id Model Element Id() Composite Operation(composite Name, composite Description, reversed) main Operation Abstract Operation(name, description, accepted, client Date) Feature Operation(feature Name) Abstract Operation(name, description, accepted, client Date) Create Delete Operation(delete) Abstract Operation(name, description, accepted, client Date) Create Delete Operation(delete) sub Operations Reference Operation(bidirectional, opposite Feature Name, containment Type) Create Delete Operation(delete) e Object To Id Map E Object To Model Element Id Map() Attribute Operation(old Value, new Value) Feature Operation(feature Name) Multi Attribute Operation(add, indexes, referenced Values) Feature Operation(feature Name) Multi Attribute Set Operation(index, old Value, new Value) Feature Operation(feature Name) Multi Attribute Move Operation(old Index, new Index, referenced Value) Feature Operation(feature Name) Single Reference Operation() Reference Operation(bidirectional, opposite Feature Name, containment Type) Single Reference Operation() new Value Model Element Id() Multi Reference Set Operation(index) Reference Operation(bidirectional, opposite Feature Name, containment Type) Multi Reference Set Operation(index) new Value Model Element Id() Multi Reference Operation(add, index) Reference Operation(bidirectional, opposite Feature Name, containment Type) Multi Reference Operation(add, index) referenced Model Elements Model Element Id() Multi Reference Move Operation(old Index, new Index) Feature Operation(feature Name) Multi Reference Move Operation(old Index, new Index) referenced Model Element Id Model Element Id() Reference Operation(bidirectional, opposite Feature Name, containment Type) Feature Operation(feature Name) Diagram Layout Operation() Attribute Operation(old Value, new Value) Operation Id() Unique Identifier(id) Operation Group(name) operations Abstract Operation(name, description, accepted, client Date) Model Element Group(name) model Elements Model Element Id() CONTAINMENT() E Object To Model Element Id Map() value Model Element Id() Semantic Composite Operation() Composite Operation(composite Name, composite Description, reversed) Event(timestamp) Read Event(source View, read View) Event(timestamp) Read Event(source View, read View) model Element Model Element Id() Merge Event(number Of Conflicts, total Time) Event(timestamp) Merge Event(number Of Conflicts, total Time) target Version Primary Version Spec(identifier) Merge Event(number Of Conflicts, total Time) local Changes Abstract Operation(name, description, accepted, client Date) Checkout Event() Event(timestamp) Checkout Event() base Version Primary Version Spec(identifier) Exception Event(Exception Title, Exception Stack Trace, Exception Cause Title, Exception Cause Stack Trace) Event(timestamp) Plugin Start Event(plugin Id) Event(timestamp) Update Event() Event(timestamp) Update Event() target Version Primary Version Spec(identifier) Annotation Event() Event(timestamp) Annotation Event() annotation Model Element Id() Revert Event(reverted Changes Count) Event(timestamp) Show History Event() Event(timestamp) Show History Event() target Version Primary Version Spec(identifier) Show History Event() model Element Model Element Id() Perspective Event() Event(timestamp) DND Event(source View, target View) Event(timestamp) DND Event(source View, target View) drop Target Element Model Element Id() Link Event(source View, created New) Event(timestamp) Link Event(source View, created New) target Element Model Element Id() Trace Event(feature Name) Event(timestamp) Trace Event(feature Name) target Element Model Element Id() Navigator Create Event(dynamic) Event(timestamp) Navigator Create Event(dynamic) source Section Model Element Id() Plugin Focus Event(plugin Id, start Date) Event(timestamp) Presentation Switch Event(read View, new Presentation) Event(timestamp) Undo Event() Event(timestamp) Undo Event() operation Abstract Operation(name, description, accepted, client Date) Validate() Event(timestamp) Show Changes Event() Event(timestamp) Show Changes Event() target Version Primary Version Spec(identifier) Notification Read Event(notification Id) Read Event(source View, read View) Notification Generation Event() Event(timestamp) Notification Generation Event() notifications ES Notification(name, message, details, seen, creation Date, provider, sender, recipient) Notification Ignore Event(notification Id) Event(timestamp) URL Event(source View) Event(timestamp) URL Event(source View) source URL Model Element Id() Merge Choice Event(selection, context Feature, created Issue Name) Event(timestamp) Merge Choice Event(selection, context Feature, created Issue Name) their Rejected Changes Operation Id() Merge Choice Event(selection, context Feature, created Issue Name) context Model Element Model Element Id() Merged Text() Merge Global Choice Event(selection) Event(timestamp) OK Finished() Server Event() Event(timestamp) Server Project Event() Server Event() Server Project Event() project Id Project Id() Project Updated Event() Server Project Event() Project Updated Event() new Version Primary Version Spec(identifier) AC User(first Name, last Name) AC Org Unit(name, description) AC Org Unit(name, description) Identifiable Element(identifier) AC Org Unit(name, description) roles Role() AC Org Unit(name, description) properties Org Unit Property(name, value) AC Group() members AC Org Unit(name, description) AC Org Unit Id() Unique Identifier(id) Org Unit Property(name, value) project Project Id() Role() projects Project Id() Reader Role() Role() Writer Role() Role() Project Admin Role() Role() Server Admin() Role() ES Notification(name, message, details, seen, creation Date, provider, sender, recipient) Identifiable Element(identifier) ES Notification(name, message, details, seen, creation Date, provider, sender, recipient) project Project Id() ES Notification(name, message, details, seen, creation Date, provider, sender, recipient) related Model Elements Model Element Id() ES Notification(name, message, details, seen, creation Date, provider, sender, recipient) related Operations Operation Id() Server Url(host Name, port) Project Url Fragment(name) project Id Project Id() Model Element Url Fragment(name) model Element Id Model Element Id() Model Element Url() server Url Server Url(host Name, port) Model Element Url() project Url Fragment Project Url Fragment(name) Model Element Url() model Element Url Fragment Model Element Url Fragment(name)
Label: purchases, Text: Item(product Name, quantity, US Price, comment, ship Date, part Num) order Purchase Order(comment, order Date, status, total Amount) Item(product Name, quantity, US Price, comment, ship Date, part Num) ship Date Date() Item(product Name, quantity, US Price, comment, ship Date, part Num) part Num SKU() US Address(street, city, state, zip) Address(name, country) SKU() Date() Purchase Order(comment, order Date, status, total Amount) items Item(product Name, quantity, US Price, comment, ship Date, part Num) Purchase Order(comment, order Date, status, total Amount) ship To Address(name, country) Purchase Order(comment, order Date, status, total Amount) order Date Date() Purchase Order(comment, order Date, status, total Amount) customer Customer(customer ID) Address(name, country) Complete() Supplier(name) customers Customer(customer ID) Supplier(name) shipped Orders Purchase Order(comment, order Date, status, total Amount) Customer(customer ID) orders Purchase Order(comment, order Date, status, total Amount) Global Address(location) Address(name, country) Global Address(location) Global Location(country Code) Global Location(country Code)
Label: gpl, Text: Annotable() Commentable(comments) Annotation Instance() Reference() Annotation Instance() Annotation Instance Or Modifier() Annotation Instance() Namespace Aware Element(namespaces) Annotation Instance() annotation Classifier() Annotation Instance() parameter Annotation Parameter() Annotation Parameter() Commentable(comments) Single Annotation Parameter() Annotation Parameter() Single Annotation Parameter() value Annotation Value() Annotation Parameter List() Annotation Parameter() Annotation Attribute Setting() Commentable(comments) Annotation Attribute Setting() attribute Interface Method() Annotation Attribute Setting() value Annotation Value() Annotation Value() Commentable(comments) Annotation Attribute() Interface Method() Array Typeable() Commentable(comments) Array Typeable() array Dimensions After Array Dimension() Array Dimension() Commentable(comments) Array Initializer() initial Values Array Initialization Value() Array Initializer() Annotation Value() Array Initialization Value() Commentable(comments) Array Instantiation By Size() Array Typeable() Array Instantiation By Size() Reference() Array Instantiation By Values() Array Typeable() Array Instantiation By Values() Reference() Array Instantiation By Values() array Initializer Array Initializer() Array Selector() Commentable(comments) Classifier() Referenceable Element() Concrete Classifier(full Name) Classifier() Concrete Classifier(full Name) Type Parametrizable() Concrete Classifier(full Name) Member Container() Concrete Classifier(full Name) Member() Concrete Classifier(full Name) Annotable And Modifiable() Implementor() Commentable(comments) Class() Concrete Classifier(full Name) Class() Implementor() Interface() Concrete Classifier(full Name) Enumeration() Concrete Classifier(full Name) Enumeration() Implementor() Enumeration() constants Enum Constant() Annotation() Concrete Classifier(full Name) Anonymous Class() Member Container() Commentable(comments) Named Element(name) Commentable(comments) Namespace Aware Element(namespaces) Commentable(comments) Java Root() Named Element(name) Java Root() Namespace Aware Element(namespaces) Java Root() Importing Element() Compilation Unit() Java Root() Compilation Unit() classifiers Concrete Classifier(full Name) Package() Java Root() Package() Annotable() Package() Referenceable Element() Package() compilation Units Compilation Unit() Empty Model() Java Root() Expression List() Expression() Array Initialization Value() Expression() Annotation Value() Assignment Expression() child Assignment Expression Child() Assignment Expression() assignment Operator Assignment Operator() Assignment Expression Child() Conditional Expression() expression Else Assignment Expression Child() Conditional Expression() child Conditional Expression Child() Conditional Expression Child() Assignment Expression Child() Conditional Or Expression() Conditional Expression Child() Conditional Or Expression() children Conditional Or Expression Child() Conditional Or Expression Child() Conditional Expression Child() Conditional And Expression() Conditional Or Expression Child() Conditional And Expression() children Conditional And Expression Child() Conditional And Expression Child() Conditional Or Expression Child() Inclusive Or Expression() Conditional And Expression Child() Inclusive Or Expression() children Inclusive Or Expression Child() Inclusive Or Expression Child() Conditional And Expression Child() Exclusive Or Expression() Inclusive Or Expression Child() Exclusive Or Expression() children Exclusive Or Expression Child() Exclusive Or Expression Child() Inclusive Or Expression Child() And Expression() Exclusive Or Expression Child() And Expression() children And Expression Child() And Expression Child() Exclusive Or Expression Child() Equality Expression() And Expression Child() Equality Expression() equality Operators Equality Operator() Equality Expression() children Equality Expression Child() Equality Expression Child() And Expression Child() Instance Of Expression() Array Typeable() Instance Of Expression() Equality Expression Child() Instance Of Expression() child Instance Of Expression Child() Instance Of Expression Child() Equality Expression Child() Relation Expression() Instance Of Expression Child() Relation Expression() children Relation Expression Child() Relation Expression() relation Operators Relation Operator() Relation Expression Child() Instance Of Expression Child() Shift Expression() Relation Expression Child() Shift Expression() children Shift Expression Child() Shift Expression() shift Operators Shift Operator() Shift Expression Child() Relation Expression Child() Additive Expression() Shift Expression Child() Additive Expression() children Additive Expression Child() Additive Expression() additive Operators Additive Operator() Additive Expression Child() Shift Expression Child() Multiplicative Expression() Additive Expression Child() Multiplicative Expression() children Multiplicative Expression Child() Multiplicative Expression() multiplicative Operators Multiplicative Operator() Multiplicative Expression Child() Additive Expression Child() Unary Expression() Multiplicative Expression Child() Unary Expression() operators Unary Operator() Unary Expression() child Unary Expression Child() Unary Expression Child() Multiplicative Expression Child() Unary Modification Expression() Unary Expression Child() Unary Modification Expression() child Unary Modification Expression Child() Unary Modification Expression() operator Unary Modification Operator() Prefix Unary Modification Expression() Unary Modification Expression() Suffix Unary Modification Expression() Unary Modification Expression() Unary Modification Expression Child() Unary Expression Child() Cast Expression() Array Typeable() Cast Expression() Unary Modification Expression Child() Cast Expression() child Multiplicative Expression Child() Primary Expression() Unary Modification Expression Child() Nested Expression() Reference() Type Argument() Array Typeable() Type Argumentable() Commentable(comments) Type Argumentable() type Arguments Type Argument() Call Type Argumentable() Commentable(comments) Call Type Argumentable() call Type Arguments Type Argument() Type Parametrizable() Commentable(comments) Type Parametrizable() type Parameters Type Parameter() Extends Type Argument() Type Argument() Qualified Type Argument() Type Argument() Super Type Argument() Type Argument() Type Parameter() Classifier() Unknown Type Argument() Type Argument() Import() Namespace Aware Element(namespaces) Importing Element() Commentable(comments) Importing Element() imports Import() Static Import() Import() Classifier Import() Import() Classifier Import() classifier Concrete Classifier(full Name) Package Import() Import() Static Classifier Import() Static Import() Static Member Import() Static Import() Static Member Import() static Members Referenceable Element() Initializable() Commentable(comments) Instantiation() Reference() Instantiation() Argumentable() Instantiation() Type Argumentable() New Constructor Call() Instantiation() New Constructor Call() Call Type Argumentable() New Constructor Call() anonymous Class Anonymous Class() Explicit Constructor Call() Instantiation() Explicit Constructor Call() call Target Self() Literal() Primary Expression() Self() Commentable(comments) Boolean Literal(value) Character Literal(value) Float Literal() Decimal Float Literal(decimal Value) Float Literal() Hex Float Literal(hex Value) Float Literal() Double Literal() Decimal Double Literal(decimal Value) Hex Double Literal(hex Value) Integer Literal() Decimal Integer Literal(decimal Value) Hex Integer Literal(hex Value) Octal Integer Literal(octal Value) Long Literal() Decimal Long Literal(decimal Value) Long Literal() Hex Long Literal(hex Value) Long Literal() Octal Long Literal(octal Value) Long Literal() Null Literal() Super() Self() This() Self() Exception Thrower() Commentable(comments) Member() Named Element(name) Member Container() Commentable(comments) Member Container() default Members Member() Additional Field() Referenceable Element() Additional Field() Array Typeable() Additional Field() Initializable() Constructor() Member() Constructor() Statement List Container() Constructor() Parametrizable() Constructor() Type Parametrizable() Constructor() Exception Thrower() Constructor() Annotable And Modifiable() Empty Member() Member() Field() Member() Field() Initializable() Field() Variable() Field() Referenceable Element() Field() Annotable And Modifiable() Field() additional Fields Additional Field() Method() Member() Method() Array Typeable() Method() Type Parametrizable() Method() Parametrizable() Method() Referenceable Element() Method() Exception Thrower() Method() Annotable And Modifiable() Interface Method() Method() Class Method() Method() Class Method() Statement List Container() Enum Constant() Referenceable Element() Enum Constant() Argumentable() Enum Constant() Annotable() Enum Constant() anonymous Class Anonymous Class() Modifier() Annotation Instance Or Modifier() Annotation Instance Or Modifier() Commentable(comments) Annotable And Modifiable() Commentable(comments) Annotable And Modifiable() annotations And Modifiers Annotation Instance Or Modifier() Modifiable() Commentable(comments) Abstract() Final() Native() Protected() Public() Private() Static() Strictfp() Synchronized() Transient() Volatile() Operator() Commentable(comments) Additive Operator() Operator() Assignment Operator() Operator() Equality Operator() Operator() Multiplicative Operator() Operator() Relation Operator() Operator() Shift Operator() Operator() Unary Operator() Operator() Unary Modification Operator() Operator() Assignment() Assignment Operator() Assignment And() Assignment Operator() Assignment Division() Assignment Operator() Assignment Exclusive Or() Assignment Operator() Assignment Minus() Assignment Operator() Assignment Modulo() Assignment Operator() Assignment Multiplication() Assignment Operator() Assignment Left Shift() Assignment Operator() Assignment Or() Assignment Operator() Assignment Plus() Assignment Operator() Assignment Right Shift() Assignment Operator() Assignment Unsigned Right Shift() Assignment Operator() Equal() Equality Operator() Not Equal() Equality Operator() Greater Than() Relation Operator() Greater Than Or Equal() Relation Operator() Less Than() Relation Operator() Less Than Or Equal() Relation Operator() Addition() Additive Operator() Addition() Unary Operator() Subtraction() Additive Operator() Subtraction() Unary Operator() Division() Multiplicative Operator() Multiplication() Multiplicative Operator() Remainder() Multiplicative Operator() Complement() Unary Operator() Minus Minus() Unary Modification Operator() Negate() Unary Operator() Plus Plus() Unary Modification Operator() Left Shift() Shift Operator() Right Shift() Shift Operator() Unsigned Right Shift() Shift Operator() Parameter() Variable() Parameter() Annotable And Modifiable() Parametrizable() Commentable(comments) Parametrizable() parameters Parameter() Ordinary Parameter() Parameter() Variable Length Parameter() Parameter() Reference() Primary Expression() Reference() Type Argumentable() Reference() array Selectors Array Selector() Argumentable() Commentable(comments) Referenceable Element() Named Element(name) Element Reference() Reference() Element Reference() target Referenceable Element() Identifier Reference() Element Reference() Method Call() Element Reference() Method Call() Argumentable() Method Call() Call Type Argumentable() Reflective Class Reference() Reference() Primitive Type Reference() Reference() String Reference(value) Reference() Self Reference() Reference() Self Reference() self Self() Statement Container() Commentable(comments) Statement List Container() Commentable(comments) Conditional() Commentable(comments) For Loop Initializer() Commentable(comments) Statement() Commentable(comments) Switch Case() Statement List Container() Assert() Conditional() Break() Jump() Block() Member() Block() Statement List Container() Block() Modifiable() Catch Block() Statement List Container() Catch Block() parameter Ordinary Parameter() Condition() Statement Container() Condition() Conditional() Continue() Jump() Default Switch Case() Do While Loop() Empty Statement() Expression Statement() For Loop() Statement Container() For Loop() Conditional() For Each Loop() Statement Container() For Each Loop() next Ordinary Parameter() Jump() Jump Label() Statement Container() Jump Label() Named Element(name) Local Variable Statement() variable Local Variable() Normal Switch Case() Conditional() Return() Switch() Synchronized Block() Statement List Container() Throw() Try Block() Statement List Container() Try Block() finally Block Block() While Loop() Statement Container() Type() Commentable(comments) Typed Element() Commentable(comments) Type Reference() Commentable(comments) Classifier Reference() Type Argumentable() Classifier Reference() target Classifier() Namespace Classifier Reference() Namespace Aware Element(namespaces) Namespace Classifier Reference() classifier References Classifier Reference() Primitive Type() Boolean() Byte() Char() Double() Float() Int() Long() Short() Void() Variable() Named Element(name) Variable() Array Typeable() Variable() Referenceable Element() Variable() Type Argumentable() Local Variable() Variable() Local Variable() Initializable() Local Variable() Annotable And Modifiable() Local Variable() additional Local Variables Additional Local Variable() Additional Local Variable() Referenceable Element() Additional Local Variable() Array Typeable() Additional Local Variable() Initializable()
Label: bibliography, Text: Person(first Name, second Name, last Name) Author() Person(first Name, second Name, last Name) Editor() Person(first Name, second Name, last Name) String Value(value) Year Value(value) Int Value(value) Page() Int Value(value) Field() Author Field() Field() Author Field() authors Author() Editor Field() Field() Editor Field() editors Editor() Title Field() Field() Title Field() String Value(value) Book Title Field() Field() Book Title Field() String Value(value) Number Field() Int Value(value) Number Field() Field() Year Field() Field() Year Field() Year Value(value) Bibtex Key Field() Field() Bibtex Key Field() String Value(value) Journal Field() Field() Journal Field() String Value(value) Volume Field() Field() Volume Field() Int Value(value) Page Field() Field() Page Field() to Page Page() Series Field() String Value(value) Series Field() Field() Address Field() Field() Address Field() String Value(value) Month Field() Field() Month Field() String Value(value) Organization Field() Field() Organization Field() String Value(value) Note Field() Field() Note Field() String Value(value) Publisher Field() Field() Publisher Field() String Value(value) Part Field() Int Value(value) Part Field() Field() Eid Field() Field() Eid Field() String Value(value) Url Field() String Value(value) Url Field() Field() Keyword() String Value(value) Keyword Field() Field() Keyword Field() keywords Keyword() Abstract Field() String Value(value) Abstract Field() Field() Review Field() String Value(value) Review Field() Field() Entry() bibtex Key Bibtex Key Field() Entry() abstract Abstract Field() Entry() url Url Field() Entry() keyword Keyword Field() Entry() review Review Field() In Proceedings Entry() Entry() In Proceedings Entry() author Author Field() In Proceedings Entry() title Title Field() In Proceedings Entry() book Title Book Title Field() In Proceedings Entry() year Year Field() In Proceedings Entry() editor Editor Field() In Proceedings Entry() pages Page Field() In Proceedings Entry() volume Volume Field() In Proceedings Entry() number Number Field() In Proceedings Entry() series Series Field() In Proceedings Entry() address Address Field() In Proceedings Entry() month Month Field() In Proceedings Entry() organization Organization Field() In Proceedings Entry() note Note Field() In Proceedings Entry() publisher Publisher Field() Article Entry() Entry() Article Entry() author Author Field() Article Entry() title Title Field() Article Entry() year Year Field() Article Entry() journal Journal Field() Article Entry() pages Page Field() Article Entry() volume Volume Field() Article Entry() number Number Field() Article Entry() month Month Field() Article Entry() note Note Field() Article Entry() part Part Field() Article Entry() eid Eid Field() Bibliography() entries Entry()
Label: enterprisearchitecture, Text: Node Element() Node() Node Element() Device() Node Element() Network() Node Element() Communication Path() Node Element() Infrastructure Interface() Node Element() System Software() Node Element() Infrastructure Function() Node Element() Infrastructure Service() Node Element() Artifact() Node Element() Grouping() Node Element() Junction() Relationship() Relationship() target Node Element() Association() Relationship() Access() Relationship() Used By() Relationship() Realization() Relationship() Assignment() Relationship() Aggregation() Relationship() Composition() Relationship() Flow() Relationship() Triggering() Relationship() Specialization() Relationship()
Label: graphicaleditor, Text: D Analysis(semantic Resources, version) semantic Resources Resource Descriptor() D Analysis(semantic Resources, version) e Annotations D Annotation Entry(source, details) D Analysis(semantic Resources, version) selected Views D View() D Analysis(semantic Resources, version) owned Feature Extensions D Feature Extension() D Feature Extension() description Feature Extension Description() D Stylizable() D Refreshable() D Mapping Based() D Semantic Decorator() D Representation(name) Documented Element(documentation) D Representation(name) D Refreshable() D Representation(name) D Model Element() D Representation(name) representation Elements D Representation Element(name) D Representation(name) owned Annotation Entries Annotation Entry(source) D Representation(name) ui State UI State(inverse Selection Order) D Representation Element(name) D Mapping Based() D Representation Element(name) D Stylizable() D Representation Element(name) D Refreshable() D Representation Element(name) D Semantic Decorator() D View() D Refreshable() D View() viewpoint Viewpoint(model File Extension, icon, conflicts, reuses, customizes) D View() owned Representations D Representation(name) D View() owned Extensions Meta Model Extension() Meta Model Extension() Decoration() description Decoration Description(name, position, decorator Path, precondition Expression) D Analysis Custom Data(key) Label Style(label Alignment) Basic Label Style(label Size, label Format, show Icon, icon Path, label Color) strike through() Style() D Refreshable() Style() Customizable(custom Features) Style() description Style Description() RIGHT() RGB Values() D Analysis Session E Object(open, resources, controlled Resources, synchronization Status) activated Viewpoints Viewpoint(model File Extension, icon, conflicts, reuses, customizes) D Analysis Session E Object(open, resources, controlled Resources, synchronization Status) analyses D Analysis(semantic Resources, version) sync() Session Manager E Object() owned Sessions D Analysis Session E Object(open, resources, controlled Resources, synchronization Status) D Resource(name, path) D File() D Resource(name, path) D Resource Container() members D Resource(name, path) D Project() D Resource Container() D Folder() D Resource Container() D Model() D File() Basic Label Style(label Size, label Format, show Icon, icon Path, label Color) Customizable(custom Features) Basic Label Style(label Size, label Format, show Icon, icon Path, label Color) label Color RGB Values() Customizable(custom Features) Resource Descriptor() UI State(inverse Selection Order) Group(name, version) D Model Element() Group(name, version) Documented Element(documentation) Group(name, version) owned Viewpoints Viewpoint(model File Extension, icon, conflicts, reuses, customizes) Group(name, version) system Colors Palette Sytem Colors Palette() Group(name, version) user Colors Palettes User Colors Palette(name) Group(name, version) extensions Extension() Extension() Component() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) Documented Element(documentation) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) Component() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) End User Documented Element(end User Documentation) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) Identified Element(name, label) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) validation Set Validation Set(name) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Representations Representation Description(title Expression, initialisation, show On Startup) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Representation Extensions Representation Extension Description(name, viewpoint URI, representation Name) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Java Extensions Java Extension(qualified Class Name) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned MM Extensions Metamodel Extension Setting() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Feature Extensions Feature Extension Description() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) icon Image Path() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Templates Representation Template(name) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) customizes URI() Feature Extension Description() Representation Description(title Expression, initialisation, show On Startup) Documented Element(documentation) Representation Description(title Expression, initialisation, show On Startup) End User Documented Element(end User Documentation) Representation Description(title Expression, initialisation, show On Startup) Identified Element(name, label) Representation Description(title Expression, initialisation, show On Startup) title Expression Interpreted Expression() Representation Template(name) owned Representations Representation Description(title Expression, initialisation, show On Startup) Representation Import Description() Representation Description(title Expression, initialisation, show On Startup) Representation Extension Description(name, viewpoint URI, representation Name) Metamodel Extension Setting() Java Extension(qualified Class Name) Representation Element Mapping() Identified Element(name, label) Representation Element Mapping() detail Descriptions Representation Creation Description(title Expression, browse Expression) Representation Element Mapping() navigation Descriptions Representation Navigation Description(browse Expression, navigation Name Expression) Abstract Mapping Import(hide Sub Mappings, inherits Ancestor Filters) Documented Element(documentation) D Model Element() e Annotations D Annotation(source) D Annotation(source) Conditional Style Description(predicate Expression) predicate Expression Interpreted Expression() Type Name() Interpreted Expression() Feature Name() Image Path() Paste Target Description() paste Descriptions Paste Description() Decoration Descriptions Set() decoration Descriptions Decoration Description(name, position, decorator Path, precondition Expression) Decoration Description(name, position, decorator Path, precondition Expression) decorator Path Image Path() Decoration Description(name, position, decorator Path, precondition Expression) precondition Expression Interpreted Expression() CENTER() Semantic Based Decoration(domain Class) Decoration Description(name, position, decorator Path, precondition Expression) Semantic Based Decoration(domain Class) domain Class Type Name() Customization() vsm Element Customizations IVSM Element Customization() IVSM Element Customization() VSM Element Customization(predicate Expression) IVSM Element Customization() VSM Element Customization(predicate Expression) predicate Expression Interpreted Expression() VSM Element Customization(predicate Expression) feature Customizations E Structural Feature Customization(apply On All) VSM Element Customization Reuse() IVSM Element Customization() VSM Element Customization Reuse() reuse E Structural Feature Customization(apply On All) E Structural Feature Customization(apply On All) E Attribute Customization(attribute Name, value) E Structural Feature Customization(apply On All) E Attribute Customization(attribute Name, value) value Interpreted Expression() E Reference Customization(reference Name) E Structural Feature Customization(apply On All) Selection Description(candidates Expression, multiple, tree, root Expression, children Expression, message) children Expression Interpreted Expression() Selection Description(candidates Expression, multiple, tree, root Expression, children Expression, message) message Translatable Message() Color Description() System Color(name) Fixed Color(red, green, blue) Interpolated Color(color Value Computation Expression, min Value Computation Expression, max Value Computation Expression) Color Description() Interpolated Color(color Value Computation Expression, min Value Computation Expression, max Value Computation Expression) User Color(name) Interpolated Color(color Value Computation Expression, min Value Computation Expression, max Value Computation Expression) max Value Computation Expression Interpreted Expression() Interpolated Color(color Value Computation Expression, min Value Computation Expression, max Value Computation Expression) color Steps Color Step(associated Value) Color Step(associated Value) associated Value Interpreted Expression() Color Step(associated Value) associated Color Fixed Color(red, green, blue) Fixed Color(red, green, blue) Color Description() User Fixed Color() Fixed Color(red, green, blue) User Fixed Color() User Color(name) User Color(name) light gray() Environment() system Colors Sytem Colors Palette() Environment() default Tools Tool Entry() Environment() label Border Styles Label Border Styles() Sytem Colors Palette() entries System Color(name) User Colors Palette(name) entries User Color(name) Annotation Entry(source) End User Documented Element(end User Documentation) Identified Element(name, label) label Translatable Message() Computed Color(red, green, blue) User Color(name) Computed Color(red, green, blue) Color Description() Computed Color(red, green, blue) blue Interpreted Expression() D Annotation Entry(source, details) URI() Abstract Variable(name) Sub Variable() Abstract Variable(name) Interactive Variable Description(user Documentation) Typed Variable(default Value Expression) Interactive Variable Description(user Documentation) Typed Variable(default Value Expression) Sub Variable() Typed Variable(default Value Expression) default Value Expression Interpreted Expression() Translatable Message() Style Description() Basic Label Style Description(label Size, label Format, show Icon, label Expression, icon Path) label Expression Interpreted Expression() Basic Label Style Description(label Size, label Format, show Icon, label Expression, icon Path) label Color Color Description() Basic Label Style Description(label Size, label Format, show Icon, label Expression, icon Path) icon Path Image Path() Label Style Description(label Alignment) Basic Label Style Description(label Size, label Format, show Icon, label Expression, icon Path) Label Border Styles() label Border Style Descriptions Label Border Style Description(id, name, corner Height, corner Width) Label Border Style Description(id, name, corner Height, corner Width) Tooltip Style Description(tooltip Expression) tooltip Expression Interpreted Expression() Tool Entry() Documented Element(documentation) Tool Entry() Identified Element(name, label) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Tool Entry() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) elements To Select Interpreted Expression() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) filters Tool Filter Description(precondition, elements To Listen) Mapping Based Tool Description() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Tool Description(icon Path) Mapping Based Tool Description() Tool Description(icon Path) icon Path Image Path() Tool Description(icon Path) element Element Variable() Tool Description(icon Path) element View Element View Variable() Tool Description(icon Path) initial Operation Initial Operation() Paste Description() Mapping Based Tool Description() Paste Description() container Drop Container Variable() Paste Description() container View Container View Variable() Paste Description() copied View Element View Variable() Paste Description() copied Element Element Variable() Paste Description() initial Operation Initial Operation() Selection Wizard Description(icon Path, window Title, window Image Path) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Selection Wizard Description(icon Path, window Title, window Image Path) Selection Description(candidates Expression, multiple, tree, root Expression, children Expression, message) Selection Wizard Description(icon Path, window Title, window Image Path) element Element Select Variable() Selection Wizard Description(icon Path, window Title, window Image Path) container View Container View Variable() Selection Wizard Description(icon Path, window Title, window Image Path) container Select Container Variable() Selection Wizard Description(icon Path, window Title, window Image Path) initial Operation Initial Operation() Selection Wizard Description(icon Path, window Title, window Image Path) window Image Path Image Path() Selection Wizard Description(icon Path, window Title, window Image Path) window Title Translatable Message() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) element Element Select Variable() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) container View Container View Variable() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) container Select Container Variable() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) initial Operation Initial Operation() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) window Image Path Image Path() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) selected Values Message Translatable Message() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) pre Selected Candidates Expression Interpreted Expression() Representation Creation Description(title Expression, browse Expression) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Representation Creation Description(title Expression, browse Expression) browse Expression Interpreted Expression() Representation Creation Description(title Expression, browse Expression) representation Description Representation Description(title Expression, initialisation, show On Startup) Representation Creation Description(title Expression, browse Expression) initial Operation Initial Operation() Representation Creation Description(title Expression, browse Expression) container View Variable Container View Variable() Representation Creation Description(title Expression, browse Expression) representation Name Variable Name Variable() Representation Navigation Description(browse Expression, navigation Name Expression) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Representation Navigation Description(browse Expression, navigation Name Expression) navigation Name Expression Interpreted Expression() Representation Navigation Description(browse Expression, navigation Name Expression) representation Description Representation Description(title Expression, initialisation, show On Startup) Representation Navigation Description(browse Expression, navigation Name Expression) container View Variable Container View Variable() Representation Navigation Description(browse Expression, navigation Name Expression) container Variable Element Select Variable() Representation Navigation Description(browse Expression, navigation Name Expression) representation Name Variable Name Variable() Menu Item Or Ref() Menu Item Description(icon) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Menu Item Description(icon) Menu Item Or Ref() Menu Item Description(icon) icon Image Path() Menu Item Description Reference() Menu Item Or Ref() Menu Item Description Reference() item Menu Item Description(icon) Operation Action() Menu Item Description(icon) Operation Action() view Container View Variable() Operation Action() initial Operation Initial Operation() External Java Action(id) Menu Item Description(icon) External Java Action(id) Container Model Operation() External Java Action(id) parameters External Java Action Parameter(name, value) External Java Action Call() Menu Item Description(icon) External Java Action Call() Container Model Operation() External Java Action Call() action External Java Action(id) Popup Menu() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Popup Menu() menu Item Description Menu Item Description(icon) Variable Container() sub Variables Sub Variable() Acceleo Variable(computation Expression) Variable Container() Acceleo Variable(computation Expression) Sub Variable() Acceleo Variable(computation Expression) computation Expression Interpreted Expression() Dialog Variable(dialog Prompt) Abstract Variable(name) Element Drop Variable() Abstract Variable(name) Element Drop Variable() Variable Container() Element Select Variable() Abstract Variable(name) Element Variable() Abstract Variable(name) Element Variable() Variable Container() Element View Variable() Abstract Variable(name) Element View Variable() Variable Container() Element Delete Variable() Abstract Variable(name) Element Delete Variable() Variable Container() Drop Container Variable() Abstract Variable(name) Drop Container Variable() Variable Container() Select Container Variable() Abstract Variable(name) Select Container Variable() Variable Container() Container View Variable() Abstract Variable(name) Container View Variable() Variable Container() Select Model Element Variable() Sub Variable() Select Model Element Variable() Selection Description(candidates Expression, multiple, tree, root Expression, children Expression, message) Select Model Element Variable() Interactive Variable Description(user Documentation) Edit Mask Variables(mask) Container Model Operation() sub Model Operations Model Operation() Model Operation() Initial Node Creation Operation() first Model Operations Model Operation() Initial Operation() first Model Operations Model Operation() Init Edge Creation Operation() first Model Operations Model Operation() Initial Container Drop Operation() first Model Operations Model Operation() Create Instance(type Name, reference Name, variable Name) Container Model Operation() Create Instance(type Name, reference Name, variable Name) type Name Type Name() Create Instance(type Name, reference Name, variable Name) reference Name Feature Name() Change Context(browse Expression) Container Model Operation() Change Context(browse Expression) browse Expression Interpreted Expression() Set Value(feature Name, value Expression) Container Model Operation() Set Value(feature Name, value Expression) feature Name Feature Name() Set Value(feature Name, value Expression) value Expression Interpreted Expression() Set Object(feature Name) Container Model Operation() Set Object(feature Name) feature Name Feature Name() Unset(feature Name, element Expression) Container Model Operation() Unset(feature Name, element Expression) feature Name Feature Name() Unset(feature Name, element Expression) element Expression Interpreted Expression() Move Element(new Container Expression, feature Name) Container Model Operation() Move Element(new Container Expression, feature Name) new Container Expression Interpreted Expression() Move Element(new Container Expression, feature Name) feature Name Feature Name() Remove Element() Container Model Operation() For(expression, iterator Name) Container Model Operation() For(expression, iterator Name) expression Interpreted Expression() BOTH() If(condition Expression) Container Model Operation() If(condition Expression) condition Expression Interpreted Expression() Delete View() Container Model Operation() Name Variable() Abstract Variable(name) External Java Action Parameter(name, value) value Interpreted Expression() Tool Filter Description(precondition, elements To Listen) elements To Listen Interpreted Expression() Tool Filter Description(precondition, elements To Listen) listeners Feature Change Listener(domain Class, feature Name) Feature Change Listener(domain Class, feature Name) domain Class Type Name() Feature Change Listener(domain Class, feature Name) feature Name Feature Name() Case(condition Expression) Switch Child() Case(condition Expression) condition Expression Interpreted Expression() Switch Child() sub Model Operations Model Operation() Default() Switch Child() Switch() Model Operation() Switch() cases Case(condition Expression) Switch() default Default() Validation Set(name) Documented Element(documentation) Validation Set(name) all Rules Validation Rule(level, message) Validation Rule(level, message) Identified Element(name, label) Validation Rule(level, message) message Interpreted Expression() Validation Rule(level, message) audits Rule Audit(audit Expression) Validation Rule(level, message) fixes Validation Fix(name) Semantic Validation Rule(target Class) Validation Rule(level, message) Semantic Validation Rule(target Class) target Class Type Name() View Validation Rule() Validation Rule(level, message) View Validation Rule() targets Representation Element Mapping() Rule Audit(audit Expression) audit Expression Interpreted Expression() ERROR() Validation Fix(name) initial Operation Initial Operation() Information Section() Template Information Section(template Path) Information Section()
Label: expressions, Text: Expression() Binary Operator() op2 Expression() Unary Operator() op Expression() Implies() Binary Operator() Or() Binary Operator() And() Binary Operator() Neg() Unary Operator() Model() constraints Expression() Feature(name) Expression() All() Unary Operator() Number() Unary Operator() Any() Unary Operator()
Label: features, Text: Attributed Feature Diagram() root Feature(name) Attributed Feature Diagram() readable Constraints Cross Tree Constraint() Attributed Feature Diagram() relations Relation() Feature(name) attributes Attribute(name) Relation() children Feature(name) Mandatory() Relation() Optional() Relation() Mutex() Relation() X Or() Relation() Or() Relation() Domain() Boolean() Domain() Integer() Domain() Real() Domain() Enum(literals) Domain() Attributed Feature Model() diagram Attributed Feature Diagram() Attributed Feature Model() constraint Cross Tree Constraint() Attributed Feature Model() domains Domain() Cross Tree Constraint() E Class0() Attribute(name) domain Domain()
Label: education, Text: Lecture(Date, length) Content Lecture Content(Type, Material) Lecture(Date, length) Learning Goals Sub Goal(Goal ID, Goal Text) Person(Name) Submitted Assignment Submission(Comments, assessment) Assingnment(Type, is Mandatory, Deadline, Start Date, Title, Content) Learning Goals Sub Goal(Goal ID, Goal Text) Course(ID, Name, credit) Teaching Assistant Person(Name) Course(ID, Name, credit) Assingments Assingnment(Type, is Mandatory, Deadline, Start Date, Title, Content) Course(ID, Name, credit) Lectures Lecture(Date, length) Course(ID, Name, credit) Student Groups Group(Name) Course(ID, Name, credit) Learning Goals Goal(Goal ID, Goal Text) Group(Name) Group Member Person(Name) Group(Name) Submitted Assignment Submission(Comments, assessment) Assignment Submission(Comments, assessment) Assignment Assingnment(Type, is Mandatory, Deadline, Start Date, Title, Content) Assignment Submission(Comments, assessment) Assesed By Person(Name) University(Name) Persons Person(Name) University(Name) Courses Course(ID, Name, credit) Lecture Content(Type, Material) Lecture Assignment Assingnment(Type, is Mandatory, Deadline, Start Date, Title, Content) Goal(Goal ID, Goal Text) Sub Goals Sub Goal(Goal ID, Goal Text) E Class0() Sub Goal(Goal ID, Goal Text)
Label: transformation, Text: Grammar() rules Rule(name, priority) Rule(name, priority) parent Grammar Grammar() Rule(name, priority) lhs LHS() Rule(name, priority) rhs RHS() Rule(name, priority) Embedding Mechanism Embedding() LHS() parent Rule Rule(name, priority) RHS() parent Rule Rule(name, priority) Embedding() Parent Rule Rule(name, priority) Embedding() instructions Connexion Instruction(m) Connexion Instruction(m) parent Embedding Embedding()
Label: workflow, Text: finish To Finish() Process(name, min time, max time) process Elements Process Element() Process(name, min time, max time) resources Resource(name, marking) Work Definition(min time, max time, name) Process Element() Work Definition(min time, max time, name) links To Successors Work Sequence(link Type, name) Work Definition(min time, max time, name) needs Parameter(nb Needs, name) Work Sequence(link Type, name) Process Element() Work Sequence(link Type, name) successor Work Definition(min time, max time, name) Process Element() Guidance(text) element Process Element() Resource(name, marking) Parameter(nb Needs, name) Process Element() Parameter(nb Needs, name) resource Resource(name, marking) Parameter(nb Needs, name) work Definition Work Definition(min time, max time, name)
Label: units, Text: Quantity() unit Unit(name, symbol, is Ratio Scaled, is Base Unit, is Derived Unit, is Coherent Derived Unit, is Interval Scaled) Quantity() value Quantity Value(value) Length() Base Quantity() Angle() Base Quantity() Unit(name, symbol, is Ratio Scaled, is Base Unit, is Derived Unit, is Coherent Derived Unit, is Interval Scaled) dimensions Dimension(exponent) Unit(name, symbol, is Ratio Scaled, is Base Unit, is Derived Unit, is Coherent Derived Unit, is Interval Scaled) conversion Factors Conversion Factor(multiplicator, offset) Mass() Base Quantity() Time() Base Quantity() Electric Current() Base Quantity() Thermodynamic Temperature() Base Quantity() Amount Of Substance() Base Quantity() Luminous Intensity() Base Quantity() Length Unit() Base Quantity Unit() Mass Unit() Base Quantity Unit() Time Unit() Base Quantity Unit() Electric Current Unit() Base Quantity Unit() Thermodynamic Temperature Unit() Base Quantity Unit() Amount Of Substance Unit() Base Quantity Unit() Luminous Intensity Unit() Base Quantity Unit() Angle Unit() Base Quantity Unit() System Of Units(name, standardization Body) units Unit(name, symbol, is Ratio Scaled, is Base Unit, is Derived Unit, is Coherent Derived Unit, is Interval Scaled) Dimension(exponent) Length Dimension() Dimension(exponent) Conversion Factor(multiplicator, offset) base Unit Unit(name, symbol, is Ratio Scaled, is Base Unit, is Derived Unit, is Coherent Derived Unit, is Interval Scaled) Mass Dimension() Dimension(exponent) Time Dimension() Dimension(exponent) Electric Current Dimension() Dimension(exponent) Thermodynamic Temperature Dimension() Dimension(exponent) Amount Of Substance Dimension() Dimension(exponent) Luminous Intensity Dimension() Dimension(exponent) Angle Dimension() Dimension(exponent) Quantity Value(value) uncertainty Measurement Uncertainty(standard Uncertainty) Measurement Uncertainty(standard Uncertainty) information Measurement Uncertainty Information() Data Storage Capacity() Base Quantity() Entropy() Base Quantity() Traffic Intensity() Base Quantity() Level() Base Quantity() Data Storage Capacity Unit() Base Quantity Unit() Entropy Unit() Base Quantity Unit() Traffic Intensity Unit() Base Quantity Unit() Level Unit() Base Quantity Unit() Data Storage Capacity Dimension() Dimension(exponent) Entropy Dimension() Dimension(exponent) Traffic Intensity Dimension() Dimension(exponent) Level Dimension() Dimension(exponent) Length Conversion Factor() Conversion Factor(multiplicator, offset) Mass Conversion Factor() Conversion Factor(multiplicator, offset) Time Conversion Factor() Conversion Factor(multiplicator, offset) Electric Current Conversion Factor() Conversion Factor(multiplicator, offset) Thermodynamic Temperature Conversion Factor() Conversion Factor(multiplicator, offset) Amount Of Substance Conversion Factor() Conversion Factor(multiplicator, offset) Luminous Intensity Conversion Factor() Conversion Factor(multiplicator, offset) Angle Conversion Factor() Conversion Factor(multiplicator, offset) Data Storage Capacity Conversion Factor() Conversion Factor(multiplicator, offset) Entropy Conversion Factor() Conversion Factor(multiplicator, offset) Traffic Intensity Conversion Factor() Conversion Factor(multiplicator, offset) Level Conversion Factor() Conversion Factor(multiplicator, offset) Normal Distribution(mean Value, standard Deviation) Measurement Uncertainty Information() Interval() Measurement Uncertainty Information() Interval() upper Endpoint Quantity() Measurement Uncertainty Information() Sampling(measurement Procedure) Measurement Uncertainty Information() Sampling(measurement Procedure) samples Sample() Sample() quantity Quantity() Base Quantity() Quantity() Derived Quantity() Quantity() Base Quantity Unit() Unit(name, symbol, is Ratio Scaled, is Base Unit, is Derived Unit, is Coherent Derived Unit, is Interval Scaled) Derived Quantity Unit() Unit(name, symbol, is Ratio Scaled, is Base Unit, is Derived Unit, is Coherent Derived Unit, is Interval Scaled)
Label: hotels, Text: Employee(employee ID, work Rate, salary) Person(name, SS Number, phone Number, street, city, postal Code, country, gender, title) Employee(employee ID, work Rate, salary) employee Type Employee Type(type, acess Level) Person(name, SS Number, phone Number, street, city, postal Code, country, gender, title) Employee Type(type, acess Level) Manager() Booking(booking Id, start Date, end Date, created, internal Comments, external Comments, checked In, checked Out) credit Card Creditcard(number, cvc, owner, expiration Month, expiration Day) Booking(booking Id, start Date, end Date, created, internal Comments, external Comments, checked In, checked Out) payment Master Customer(customer ID, bonus Points, misc Info, rank) Booking(booking Id, start Date, end Date, created, internal Comments, external Comments, checked In, checked Out) addons Addon(name, description) Booking(booking Id, start Date, end Date, created, internal Comments, external Comments, checked In, checked Out) booked Rooms Room(room Number, size, internal Comment, booked, max Nbr People, under Cleaning, under Repair, types, room Name) Booking(booking Id, start Date, end Date, created, internal Comments, external Comments, checked In, checked Out) discounts Discount(is Percentage, amount) Creditcard(number, cvc, owner, expiration Month, expiration Day) Customer(customer ID, bonus Points, misc Info, rank) Person(name, SS Number, phone Number, street, city, postal Code, country, gender, title) Addon(name, description) Room(room Number, size, internal Comment, booked, max Nbr People, under Cleaning, under Repair, types, room Name) Suite() Discount(is Percentage, amount) Bill(total Price, value Added Tax, final, paid) costables Costable(price) Bill(total Price, value Added Tax, final, paid) customer Customer(customer ID, bonus Points, misc Info, rank) Costable(price) discounts Discount(is Percentage, amount) Booking Controller() Management Controller() Maintenance Controller() room Stack Room(room Number, size, internal Comment, booked, max Nbr People, under Cleaning, under Repair, types, room Name) Hotel(name, address, rank) Booked Room() Room(room Number, size, internal Comment, booked, max Nbr People, under Cleaning, under Repair, types, room Name) Booked Room() addons Addon(name, description) Interaction1() Employee(employee ID, work Rate, salary) Interaction2() Employee(employee ID, work Rate, salary) Interaction3() Maintenance Controller() Interaction4() Employee(employee ID, work Rate, salary) Interaction5() Booking(booking Id, start Date, end Date, created, internal Comments, external Comments, checked In, checked Out)
Label: relational, Text: Model() query Select Query() Fetch First(row) fetch First Unsigned Value(integer) Offset(offset) Limit(l1, l2) Select Query() Select Sub Set(op, all) query Select(select) Select(select) Select Query() Select(select) op Select Sub Set(op, all) Select(select) cols Or Column() Select(select) tbl Or Table() Select(select) having Entry Or Expr() Select(select) group By Entry Or Group By Column() Select(select) order By Entry Or Order By Column() Select(select) lim Limit(l1, l2) Select(select) offset Offset(offset) Select(select) fetch First Fetch First(row) Or Column() Pivot For Clause() Or Column() entries Column Or Alias(alias, all Cols) Column Or Alias(alias, all Cols) Or Column() Column Or Alias(alias, all Cols) ce Operands() Column Or Alias(alias, all Cols) col Alias Db Object Name(dbname) Column Or Alias(alias, all Cols) db All Cols Db Object Name All(dbname) Column Full() Pivot For Clause() Or Table() entries From Table() From Table() Or Table() From Table() table Table Or Alias(alias) From Table() fjoin From Table Join(join) From Table Join(join) on Table Table Or Alias(alias) From Table Join(join) join Expr Or Expr() From Table Join(join) join Cond Join Condition() Join Condition() use Cols Using Cols() Using Cols() entries Db Object Name(dbname) Table Or Alias(alias) tfull Table Full() Table Or Alias(alias) sq Sub Query Operand() Table Or Alias(alias) values From Values() Table Or Alias(alias) pivot Pivot Table() Table Or Alias(alias) unpivot Unpivot Table() Table Or Alias(alias) tbl Alias Db Object Name(dbname) From Values() values Values() From Values() c From Values Columns() From Values Columns() fv Cols From Values Column Names() From Values Column Names() Column Names(col Name) From Values Column Names() Values() rows Rows() Rows() entries Row() Row() Rows() Row() row Values Row Values() Row Values() entries Row Value(null) Row Value(null) Row Values() Pivot Table() pfun Pivot Functions(abc) Pivot Table() pfor Pivot For Clause() Pivot Table() pin Pivot In Clause(pinany) Pivot Functions(abc) Pivot Function() Pivot In Clause(pinany) sq Sub Query Operand() Pivot In Clause(pinany) args Unpivot In Clause Args() Unpivot Table() pcols Pivot Columns() Unpivot Table() pfor Pivot For Clause() Unpivot Table() inop Unpivot In Clause() Unpivot In Clause() Unpivot In Clause Args() Unpivot In Clause Arg() Unpivot In Clause Args() Unpivot In Clause Arg() cfuls Pivot Columns() Pivot For Clause() Pivot Columns() Pivots() Pivot Columns() Pivot Col() Pivot Function() Pivot Col() Pivot Columns() Pivot Col() Pivots() Table Full() Db Object Name All(dbname) Db Object Name(dbname) Column Full() Db Object Name(dbname) Using Cols() Db Object Name(dbname) Pivot Col() Db Object Name(dbname) Table Full() Or Order By Column() entries Order By Column Full(col Order Int, direction) Order By Column Full(col Order Int, direction) Or Order By Column() Order By Column Full(col Order Int, direction) col Order Column Full() Or Group By Column() entries Group By Column Full(gr By Int) Group By Column Full(gr By Int) Or Group By Column() Group By Column Full(gr By Int) col Gr By Column Full() Group By Column Full(gr By Int) gb Function Op Function(fname, star) Or Expr() entries Full Expression(c, not Prm, isnull) Full Expression(c, not Prm, isnull) Or Expr() Full Expression(c, not Prm, isnull) expgroup Expr Group(isnot) Full Expression(c, not Prm, isnull) xexp X Expr(xf) Full Expression(c, not Prm, isnull) in In Oper(op) Full Expression(c, not Prm, isnull) exists Exists Oper(op) Full Expression(c, not Prm, isnull) op1 Operands() Full Expression(c, not Prm, isnull) between Between(op Between) Full Expression(c, not Prm, isnull) like Like(op Like) Full Expression(c, not Prm, isnull) comp Comparison(operator, sub Operator) Expr Group(isnot) expr Or Expr() X Expr(xf) col Operands() X Expr(xf) prm Prms() Prms() entries JR Parameter(jrprm) JR Parameter(jrprm) Prms() Comparison(operator, sub Operator) op2 Operands() Like(op Like) op2 Like Operand(op2) Like Operand(op2) fop2 Op Function(fname, star) Like Operand(op2) fcast Op Function Cast(type, p, p2) Like Operand(op2) fparam P Operand(prm) Between(op Between) op3 Operands() In Oper(op) subquery Sub Query Operand() In Oper(op) op List Operand List Group() Exists Oper(op) subquery Sub Query Operand() Exists Oper(op) op List Operand List Group() Operand List Group() op Group Operand List() Operand List() Operands() Op Function Arg Agregate() Operands() right Operand() Operand() column Column Operand(ora) Operand() subq Sub Query Operand() Operand() fcast Op Function Cast(type, p, p2) Operand() fext Function Extract(v) Operand() func Op Function(fname, star) Operand() sqlcase SQL Case Operand() Operand() param P Operand(prm) Operand() eparam Exp Operand(prm) Operand() scalar Scalar Operand(sostr, sodbl, sodate, sotime, sodt, so U Int, soint) Op Function(fname, star) args Op Function Arg() Op Function(fname, star) fan Function Analytical() Function Extract(v) operand Operands() Function Analytical() an Clause Analytic Clause() Analytic Clause() abc Query Partition Clause() Analytic Clause() obc Order By Clause() Analytic Clause() winc Windowing Clause() Windowing Clause() Windowing Clause Between() Windowing Clause() Windowing Clause Between() wco P Windowing Clause Operand Preceding() Windowing Clause Between() wco F Windowing Clause Operand Following() Windowing Clause Operand Following() exp Analytic Expr Arg() Windowing Clause Operand Preceding() Windowing Clause() Windowing Clause Operand Preceding() expr Analytic Expr Arg() Order By Clause() args Order By Clause Args() Order By Clause Args() Order By Clause Arg() Order By Clause Args() Order By Clause Arg() col Analytic Expr Arg() Query Partition Clause() args Analytic Expr Args() Analytic Expr Args() Query Partition Clause() Analytic Expr Arg() Analytic Expr Args() Analytic Expr Arg() ce Operands() Analytic Expr Arg() col Alias Db Object Name(dbname) Op Function Arg() Op Function Arg Operand() Op Function Arg() Op Function Arg Operand() op Op Function Arg Agregate() Op Function Cast(type, p, p2) op Operands() Op Function Arg Agregate() P Operand(prm) Exp Operand(prm) Column Operand(ora) cfull Column Full() Sub Query Operand() sel Select Query() Scalar Operand(sostr, sodbl, sodate, sotime, sodt, so U Int, soint) Row Value(null) Scalar Operand(sostr, sodbl, sodate, sotime, sodt, so U Int, soint) Operand List() SQL Case Operand() expr Or Expr() SQL Case Operand() when SQL Case Whens() SQL Case Whens() Sql Case When() SQL Case Whens() Sql Case When() expr Or Expr() Sql Case When() eexp Operands() year Month() xbwnr() Integer Value(integer) Unsigned Value(integer) Col() Column Full() Col() entries Db Object Name(dbname) abc() From Values Column Names() abc() entries Column Names(col Name) Unipivot In Clause(op) Unpivot In Clause() Unipivot In Clause(op) args Unpivot In Clause Args() uicargs() Unpivot In Clause Args() uicargs() entries Unpivot In Clause Arg() pvcs() Pivots() pvcs() entries Pivot Col() pcols() Pivot Col() pcols() entries Db Object Name(dbname) tbls() Table Full() tbls() entries Db Object Name(dbname) Op List() Operand List() Op List() entries Scalar Operand(sostr, sodbl, sodate, sotime, sodt, so U Int, soint) Plus() Operands() Minus() Operands() Concat() Operands() Multiply() Operands() Division() Operands() OBC Args() Order By Clause Args() OBC Args() entries Order By Clause Arg() A Exp Args() Analytic Expr Args() A Exp Args() entries Analytic Expr Arg() Op F List() Op Function Arg() Op F List() entries Op Function Arg Operand() When List() SQL Case Whens() When List() entries Sql Case When()
Label: testing, Text: Action() Action Reference() Pre Generation Action() Action Reference() action Stand Alone Action() Stand Alone Action() action Pre Generation Action() Timed Condition Action(frequency) action Pre Generation Action() Pre Generation Action() Action() Post Generation Action() Action() Pre Generation Sequence() actions Pre Generation Action() Post Generation Sequence() actions Post Generation Action() Throw Action(event ID) Pre Generation Action() Term Action() Post Generation Action() Term Action() Pre Generation Action() Reconfiguration Action() Pre Generation Action() Set Data Action() Reconfiguration Action() Get Data Action() Pre Generation Action() Remove Bag Action() Reconfiguration Action() Activate Feature Action() Post Generation Action() Activate Feature Action() Reconfiguration Action() Deactivate Feature Action() Post Generation Action() Deactivate Feature Action() Reconfiguration Action() Set Property Action() Post Generation Action() Fail Action() Post Generation Action() Fail Action() Pre Generation Action() Time Action(time) Pre Generation Action() Dependent Action() Post Generation Action() Get Property Action() Dependent Action() Get Real Time Action(time Hint) Dependent Action() Get Real Time Action(time Hint) Pre Generation Action() Get Feature State Action() Dependent Action() Get Feature State Action() Pre Generation Action()
Label: class-diagram, Text: Package(name) Association Associaton(name) Package(name) classifier Classifier(name) Associaton(name) namespace Package(name) Associaton(name) source Class(kind) Class(kind) Classifier(name) Class(kind) source Of Associaton(name) Class(kind) attribute Attribute(name) Attribute(name) type Classifier(name) Attribute(name) Owner Class(kind) Classifier(name) type Of Attribute(name) Classifier(name) namespace Package(name) Datatype() Classifier(name)
Label: metamodelling, Text: E Attribute(i D) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Attribute(i D) i D E Boolean() E Attribute(i D) e Attribute Type E Data Type(serializable) E Annotation(source) e Model Element E Model Element() E Annotation(source) source E String() E Annotation(source) details E String To String Map Entry(key, value) E Annotation(source) references E Object() E Class Not Matching(abstract, interface) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Class Not Matching(abstract, interface) interface E Boolean() E Class Not Matching(abstract, interface) e All Operations E Operation() E Class Not Matching(abstract, interface) e ID Attribute E Attribute(i D) E Class Not Matching(abstract, interface) e All Containments E Reference(containment, container, resolve Proxies) E Class Not Matching(abstract, interface) e Structural Features E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Class Not Matching(abstract, interface) e All Generic Super Types E Generic Type() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Named Element(name) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) instance Type Name E String() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) default Value E Java Object() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) e Package E Package(ns URI, ns Prefix) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) e Type Parameters E Type Parameter() E Data Type(serializable) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Data Type(serializable) serializable E Boolean() E Enum() E Data Type(serializable) E Enum() e Literals E Enum Literal(value, instance, literal) E Enum Literal(value, instance, literal) E Named Element(name) E Enum Literal(value, instance, literal) value E Int() E Enum Literal(value, instance, literal) instance E Enumerator() E Enum Literal(value, instance, literal) literal E String() E Enum Literal(value, instance, literal) e Enum E Enum() E Factory() E Model Element() E Factory() e Package E Package(ns URI, ns Prefix) E Model Element() e Annotations E Annotation(source) E Named Element(name) E Model Element() E Named Element(name) name E String() E Object() E Operation() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Operation() e Containing Class E Class Not Matching(abstract, interface) E Operation() e Type Parameters E Type Parameter() E Operation() e Parameters E Parameter() E Operation() e Exceptions E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Operation() e Generic Exceptions E Generic Type() E Package(ns URI, ns Prefix) E Named Element(name) E Package(ns URI, ns Prefix) ns Prefix E String() E Package(ns URI, ns Prefix) e Factory Instance E Factory() E Package(ns URI, ns Prefix) e Classifiers E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Parameter() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Parameter() e Operation E Operation() E Reference(containment, container, resolve Proxies) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Reference(containment, container, resolve Proxies) resolve Proxies E Boolean() E Reference(containment, container, resolve Proxies) e Reference Type E Class Not Matching(abstract, interface) E Reference(containment, container, resolve Proxies) e Keys E Attribute(i D) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) derived E Boolean() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) default Value Literal E String() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) default Value E Java Object() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) e Containing Class E Class Not Matching(abstract, interface) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Named Element(name) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) required E Boolean() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) upper Bound E Int() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) e Type E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) e Generic Type E Generic Type() E Big Decimal() E Big Integer() E Boolean() E Boolean Object() E Byte() E Byte Array() E Byte Object() E Char() E Character Object() E Date() E Diagnostic Chain() E Double() E Double Object() EE List() E Enumerator() E Feature Map() E Feature Map Entry() E Float() E Float Object() E Int() E Integer Object() E Java Class() E Java Object() E Long() E Long Object() E Map() E Resource() E Resource Set() E Short() E Short Object() E String() E String To String Map Entry(key, value) value E String() E Tree Iterator() E Generic Type() e Classifier E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Generic Type() e Type Parameter E Type Parameter() E Type Parameter() E Named Element(name) E Type Parameter() e Bounds E Generic Type() E Invocation Target Exception()
Label: petrinet, Text: Petri Net() resources Resource(name) Petri Net() places Place(name) Petri Net() transactions Transaction(name) Resource(name) Place(name) storages Storage(count, capacity) Storage(count, capacity) resource Ref Resource(name) Transaction(name) assure Statements Assure Statement(count) Transaction(name) take Statements Take Statement(count) Transaction(name) put Statements Put Statement(count) Assure Statement(count) resource Ref Resource(name) Assure Statement(count) place Ref Place(name) Take Statement(count) resource Ref Resource(name) Take Statement(count) place Ref Place(name) Put Statement(count) resource Ref Resource(name) Put Statement(count) place Ref Place(name)
Label: timed-automata, Text: NTA() Named Element(name) NTA() Commentable Element(comment) NTA() global Declarations Global Declarations() NTA() template Template() NTA() system Declarations System Declarations() NTA() void Predefined Type(type) Named Element(name) Commentable Element(comment) Type(base Type) Named Element(name) Type(base Type) index Index() Type(base Type) type Specification Type Specification() Predefined Type(type) Type(base Type) VOID() Declared Type() Type(base Type) Declared Type() type Declaration Type Declaration() Declared Type() type Definition Type Definition(base Type) Type Definition(base Type) type Specification Type Specification() Type Reference() Type Definition(base Type) Type Reference() referred Type Type(base Type) Type Specification() Type Definition(base Type) Scalar Type Specification() Type Specification() Scalar Type Specification() size Expression Expression() Struct Type Specification() Type Specification() Struct Type Specification() declaration Data Variable Declaration(prefix) Range Type Specification() Type Specification() Range Type Specification() bounds Integer Bounds() Integer Bounds() upper Bound Expression() Library() types Predefined Type(type) Declarations() declaration Declaration() Global Declarations() Declarations() Global Declarations() channel Priority Channel Priority() Local Declarations() Declarations() System Declarations() Declarations() System Declarations() system System() System Declarations() progress Measure Progress Measure() Declaration() Variable Declaration() Declaration() Variable Declaration() Variable Container() Channel Variable Declaration(urgent, broadcast) Variable Declaration() Clock Variable Declaration() Variable Declaration() Data Variable Declaration(prefix) Variable Declaration() META() Function Declaration() Declaration() Function Declaration() function Function() Function() Named Element(name) Function() return Type Type Definition(base Type) Function() block Block() Function() parameter Parameter(call Type) Type Declaration() Declaration() Type Declaration() type Declared Type() Type Declaration() type Definition Type Definition(base Type) Variable() Named Element(name) Variable() index Index() Variable() container Variable Container() Variable() type Definition Type Definition(base Type) Variable() initializer Initializer() Index() Value Index() Index() Value Index() size Expression Expression() Type Index() Index() Type Index() type Definition Type Definition(base Type) Variable Container() type Definition Type Definition(base Type) Variable Container() variable Variable() Parameter(call Type) variable Declaration Variable Declaration() CALL BY REFERENCE() Initializer() Expression Initializer() Initializer() Expression Initializer() expression Expression() Array Initializer() initializer Initializer() Channel Priority() item Channel Priority Item() Channel Priority Item() Channel List() Channel Priority Item() Channel List() channel Expression Identifier Expression() Default Channel Priority() Channel Priority Item() Template Declaration() Declaration() Template Declaration() declared Template Redefined Template() Template Declaration() argument Expression() System() instantiation List Instantiation List() Instantiation List() template Abstract Template() Progress Measure() expression Expression() Abstract Template() Named Element(name) Abstract Template() Commentable Element(comment) Abstract Template() parameter Parameter(call Type) Template() Abstract Template() Template() declarations Local Declarations() Template() init Location(location Time Kind) Template() edge Edge() Redefined Template() referred Template Abstract Template() Redefined Template() declaration Template Declaration() Location(location Time Kind) Named Element(name) Location(location Time Kind) Commentable Element(comment) Location(location Time Kind) Planar Element() Location(location Time Kind) Colored Element(color, color Code) Location(location Time Kind) parent Template Template() Location(location Time Kind) invariant Expression() COMMITED() Edge() Linear Element() Edge() Commentable Element(comment) Edge() Colored Element(color, color Code) Edge() target Location(location Time Kind) Edge() parent Template Template() Edge() update Expression() Edge() synchronization Synchronization(kind) Edge() selection Selection() Synchronization(kind) channel Expression Identifier Expression() SEND() Selection() Variable Container() Statement() Block() statement Statement() Block() declarations Local Declarations() Empty Statement() Statement() For Loop() statement Statement() For Loop() iteration Expression() Iteration() statement Statement() Iteration() Variable Container() While Loop() statement Statement() While Loop() expression Expression() Do While Loop() statement Statement() Do While Loop() expression Expression() If Statement() else Statement Statement() If Statement() if Expression Expression() Return Statement() Statement() Return Statement() return Expression Expression() Expression Statement() Statement() Expression Statement() expression Expression() Expression() Negation Expression() negated Expression Expression() Plus Expression() confirmed Expression Expression() Minus Expression() inverted Expression Expression() Binary Expression() second Expr Expression() Assignment Expression(operator) Binary Expression() BIT XOR EQUAL() Identifier Expression() index Expression() Identifier Expression() identifier Named Element(name) Literal Expression(text) Expression() Arithmetic Expression(operator) Binary Expression() MODULO() Logical Expression(operator) Binary Expression() IMPLY() Function Call Expression() argument Expression() Function Call Expression() function Function() Compare Expression(operator) Binary Expression() UNEQUAL() Condition Expression() else Expression Expression() Scoped Identifier Expression() scope Expression() Scoped Identifier Expression() identifier Identifier Expression() UNIVERSAL() Quantification Expression(quantifier) expression Expression() Quantification Expression(quantifier) Variable Container() Increment Decrement Expression(position, operator) expression Expression() DECREMENT() POST() Bit Shift Expression(operator) Binary Expression() RIGHT() Min Max Expression(operator) Binary Expression() MAX() Bitwise Expression(operator) Binary Expression() OR() Colored Element(color, color Code) Planar Element() position Point(x, y) Linear Element() bend Point Point(x, y) Point(x, y) SELF DEFINED()
Label: relationships, Text: World() things Thing(id) World() e1s Article(aid) Thing(id) Named Element(name) Thing(id) relations Related To(since) Thing(id) lines Line(quant, article Aid) Thing(id) e0s E Class0() Named Element(name) Related To(since) Named Element(name) Related To(since) to Thing Thing(id) Related To(since) e1s E Class1(foo, bar) Line(quant, article Aid) Named Element(name) Line(quant, article Aid) src Thing(id) Line(quant, article Aid) trg Article(aid) Article(aid) Named Element(name) E Class0() Named Element(name) E Class1(foo, bar) Named Element(name) E Class1(foo, bar) E Reference0 Related To(since) E Class1(foo, bar) E Reference1 E Class0()
Label: metamodelling, Text: E Attribute(i D) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Attribute(i D) i D E Boolean() E Attribute(i D) e Attribute Type E Data Type(serializable) E Annotation(source) e Model Element E Model Element() E Annotation(source) source E String() E Annotation(source) details E String To String Map Entry(key, value) E Annotation(source) references E Object() E Class(abstract, interface) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Class(abstract, interface) interface E Boolean() E Class(abstract, interface) e All Operations E Operation() E Class(abstract, interface) e ID Attribute E Attribute(i D) E Class(abstract, interface) e All Containments E Reference(containment, container, resolve Proxies) E Class(abstract, interface) e Structural Features E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Class(abstract, interface) e All Generic Super Types E Generic Type() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Named Element(name) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) instance Type Name E String() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) default Value E Java Object() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) e Package E Package(ns URI, ns Prefix) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) e Type Parameters E Type Parameter() E Data Type(serializable) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Data Type(serializable) serializable E Boolean() E Enum() E Data Type(serializable) E Enum() e Literals E Enum Literal(value, instance, literal) E Enum Literal(value, instance, literal) E Named Element(name) E Enum Literal(value, instance, literal) value E Int() E Enum Literal(value, instance, literal) instance E Enumerator() E Enum Literal(value, instance, literal) literal E String() E Enum Literal(value, instance, literal) e Enum E Enum() E Model Element() e Annotations E Annotation(source) E Named Element(name) E Model Element() E Named Element(name) name E String() E Object() E Operation() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Operation() e Containing Class E Class(abstract, interface) E Operation() e Type Parameters E Type Parameter() E Operation() e Parameters E Parameter() E Operation() e Exceptions E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Operation() e Generic Exceptions E Generic Type() E Package(ns URI, ns Prefix) E Named Element(name) E Package(ns URI, ns Prefix) ns Prefix E String() E Package(ns URI, ns Prefix) e Classifiers E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Parameter() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Parameter() e Operation E Operation() E Reference(containment, container, resolve Proxies) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Reference(containment, container, resolve Proxies) resolve Proxies E Boolean() E Reference(containment, container, resolve Proxies) e Reference Type E Class(abstract, interface) E Reference(containment, container, resolve Proxies) e Keys E Attribute(i D) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) derived E Boolean() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) default Value Literal E String() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) default Value E Java Object() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) e Containing Class E Class(abstract, interface) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Named Element(name) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) required E Boolean() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) upper Bound E Int() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) e Type E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) e Generic Type E Generic Type() E Big Decimal() E Big Integer() E Boolean() E Boolean Object() E Byte() E Byte Array() E Byte Object() E Char() E Character Object() E Date() E Diagnostic Chain() E Double() E Double Object() EE List() E Enumerator() E Feature Map() E Feature Map Entry() E Float() E Float Object() E Int() E Integer Object() E Java Class() E Java Object() E Long() E Long Object() E Map() E Resource() E Resource Set() E Short() E Short Object() E String() E String To String Map Entry(key, value) value E String() E Tree Iterator() E Generic Type() e Classifier E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Generic Type() e Type Parameter E Type Parameter() E Type Parameter() E Named Element(name) E Type Parameter() e Bounds E Generic Type() E Invocation Target Exception()
Label: transformation, Text: Located Element(file Location, file Object) annotations String To String Map(key, value) String To String Map(key, value) Matched Rule() Out Pattern Element() Callable() called By Property Call Exp(is Static Call) Callable() callable Parameters Callable Parameter(name) Callable Parameter(name) param Declaration Variable Declaration() Context Helper() polymorphic Called By Property Call Exp(is Static Call) Helper(has Context, is Attribute) Binding() resolved By Rule Resolution Info() Rule Resolution Info() all Involved Rules Matched Rule() Typed Element() Variable Declaration() Typed Element() Ocl Expression(implicitly Casted) Typed Element() Property Call Exp(is Static Call) static Resolver Callable() Property Call Exp(is Static Call) dynamic Resolvers Context Helper() Operation Call Exp() resolve Temp Resolved By Resolve Temp Resolution() Resolve Temp Resolution() Rule Resolution Info() Resolve Temp Resolution() element Out Pattern Element() Java Body() Ocl Expression(implicitly Casted) Get Applied Stereotypes Body() Java Body()
Label: features, Text: Feature Model() diagram Feature Diagram() Feature Model() constraints Constraints() Feature Diagram() root Child(mandatory, name) Child(mandatory, name) Leaf() Child(mandatory, name) Node(open relation, close relation) children Child(mandatory, name) Constraints() rules Rule() Rule() elements Formula() Rule Element(open operator, close operator) Formula() Rule Element(open operator, close operator) right side Var(not, name) Formula() Var(not, name) Formula()
Label: activities, Text: Activity() contains AD Element(name) AD Element(name) activity Diag Activity() Activity Node(current) AD Element(name) Activity Node(current) tedges Activity Edge(guard) Activity Edge(guard) AD Element(name) Activity Edge(guard) target Activity Node(current) Action Node() Activity Node(current) Control Node() Activity Node(current) Object Node() Activity Node(current) Signal Node(signal Id) Activity Node(current) Initial Node() Control Node() Final Node() Control Node() Fork Node() Control Node() Join Node() Control Node() Merge Node() Control Node() Decision Node() Control Node() Accept Signal Node(signal Id) Activity Node(current) Time Event Node(cycle) Activity Node(current) Activity Final Node() Final Node() Flow Final Node() Final Node() Activity Parameter Node(parameter) Object Node() Data Store Node() Object Node() Pin() Object Node() Expansion Node() Object Node()
Label: metrics, Text: Postgres() Database Type Type Object() Data Kind() One Week() Fixed Metric Retention Period Object() Identifier Data Kind(object Kind, object Property, pattern) Data Kind() AVG() Kind Hint Type Object() Mapping(first Data Row, header Row, interval Hint) data Mapping Columns Mapping Column(column) Mapping Column(column) data Type Data Kind() Mapping CSV(delimiter, filter Pattern) Mapping(first Data Row, header Row, interval Hint) Mapping External(class URI, plugin ID) Mapping(first Data Row, header Row, interval Hint) Mapping RDBMS(database Type, date Format, date Time Format, password, query, time Format, user) Mapping(first Data Row, header Row, interval Hint) Mapping Record(column, count, message) Mapping Statistic(interval Estimate, message, total Records) failed Records Mapping Record(column, count, message) Mapping XLS(filter Pattern, sheet Number) Mapping(first Data Row, header Row, interval Hint) Metric(description, measurement Kind, measurement Point, name) metric Source Ref Metric Source(filter Pattern, metric Location, name) Metric Aggregation Rule() Metric Aggregation Rules() metric Aggregation Rules Metric Aggregation Rule() Metric Retention Period() Metric Retention Periods(metric Retention Periods) metric Retention Periods Metric Retention Period() Metric Retention Rule(interval Hint, period) period Metric Retention Period() Metric Retention Rules() metric Retention Rules Metric Retention Rule(interval Hint, period) Metric Source(filter Pattern, metric Location, name) metric Mapping Mapping(first Data Row, header Row, interval Hint) Metric Source(filter Pattern, metric Location, name) statistics Mapping Statistic(interval Estimate, message, total Records) Metric Value Range(interval Hint, kind Hint) RELATIONSHIP() Object Kind Type Object() User Metric Retention Period() Value Data Kind(format, kind Hint, value Kind) Data Kind() Value Data Kind(format, kind Hint, value Kind) metric Ref Metric(description, measurement Kind, measurement Point, name) METRIC() Value Kind Type Object()
Label: modelling, Text: Accept Call Action() Accept Event Action() Read Structural Feature Action() Structural Feature Action() Data Type() Classifier() Structured Activity Node() Action() Time Observation Action() Write Structural Feature Action() Read Self Action() Action() Read Self Action() result Output Pin() Data Store Node() Central Buffer Node() Read Is Classified Object Action() Action() Interval() Value Specification() Input Pin() Pin() Read Link Object End Qualifier Action() Action() Encapsulated Classifier() Structured Classifier() Create Object Action() Action() Duration Observation Action() Write Structural Feature Action() Broadcast Signal Action() Invocation Action() Send Signal Action() Invocation Action() Activity Parameter Node() Object Node() Read Variable Action() Variable Action() Port() Property() Extension() Association() Literal Specification() Value Specification() Output Pin() Pin() Read Link Action() Link Action() Association Class() Class() Association Class() Association() State Machine() Behavior() Device() Node() Destroy Object Action() Action() Call Operation Action() Call Action() Start Owned Behavior Action() Action() Structural Feature() Typed Element() Variable() Typed Element() Primitive Type() Data Type() Actor() Classifier() Add Structural Feature Value Action() Write Structural Feature Action() Operation() Typed Element() Variable Action() Action() Enumeration() Data Type() Create Link Action() Write Link Action() Activity() Behavior() Call Action() Invocation Action() Structural Feature Action() Action() Remove Structural Feature Value Action() Write Structural Feature Action() Value Specification() Typed Element() Link Action() Action() Literal Null() Literal Specification() Pin() Object Node() Class() Behaviored Classifier() Class() Encapsulated Classifier() Destroy Link Action() Write Link Action() Accept Event Action() Action() Raise Exception Action() Action() Protocol State Machine() State Machine() Remove Variable Value Action() Write Variable Action() Behavior() Class() Templateable Classifier() Classifier() Add Variable Value Action() Write Variable Action() Read Link Object End Action() Action() Classifier() Type() Read Extent Action() Action() Clear Association Action() Action() Apply Function Action() Action() Conditional Node() Structured Activity Node() Literal String() Literal Specification() Behaviored Classifier() Classifier() Signal() Classifier() Time Interval() Interval() Reclassify Object Action() Action() Component() Class() Interface() Classifier() Stereotype() Class() Expansion Region() Structured Activity Node() Extension End() Property() Collaboration() Behaviored Classifier() Collaboration() Structured Classifier() Artifact() Classifier() Clear Structural Feature Action() Structural Feature Action() Loop Node() Structured Activity Node() Parameter() Typed Element() Property() Structural Feature() Duration() Value Specification() Call Behavior Action() Call Action() Parameterable Classifier() Classifier() Duration Interval() Interval() Opaque Expression() Value Specification() Write Variable Action() Variable Action() Invocation Action() Action() Object Node() Typed Element() Typed Element() type Type() Execution Environment() Node() Write Structural Feature Action() Structural Feature Action() Literal Integer() Literal Specification() Association() Classifier() Use Case() Behaviored Classifier() Test Identity Action() Action() Create Link Object Action() Create Link Action() Clear Variable Action() Variable Action() Information Item() Classifier() Literal Unlimited Natural() Literal Specification() Write Link Action() Link Action() Interaction() Behavior() Expansion Node() Object Node() Value Pin() Input Pin() Expression() Opaque Expression() Reply Action() Action() Literal Boolean() Literal Specification() Communication Path() Association() Node() Class() Type() Central Buffer Node() Object Node() Deployment Specification() Artifact() Instance Value() Value Specification() Send Object Action() Invocation Action() Action() context Classifier() Structured Classifier() Classifier() Time Expression() Value Specification()
Label: iot, Text: Board() alternatives State() Board() bricks Brick(pin) State() Named Element(name) State() actions Action() State() event Code Transition() Brick(pin) Named Element(name) Sensor() Brick(pin) Actuator() Brick(pin) Transition() Named Element(name) Transition() source State() Transition() trigger Trigger(value) Action() actuators Actuator() Off() Action() On() Action() Wait(waiting Time) Action() Trigger(value) sensors Sensor() Named Element(name) OFF()
Label: education, Text: One Roster() academicsession Academic Session(title, start Date, end Date, school Year, type) One Roster() org Org(name, type) One Roster() enrolment Enrolment(role, primary) Course(title, course Code) Base(source Id, status, date Last Modified) Course(title, course Code) class Class(title, class Code, class Type, location) Base(source Id, status, date Last Modified) metadata Metadata(key, value) Academic Session(title, start Date, end Date, school Year, type) Base(source Id, status, date Last Modified) Academic Session(title, start Date, end Date, school Year, type) course Course(title, course Code) Academic Session(title, start Date, end Date, school Year, type) user User(user Name, enabled User, role, identifier) Class(title, class Code, class Type, location) Base(source Id, status, date Last Modified) User(user Name, enabled User, role, identifier) Base(source Id, status, date Last Modified) User(user Name, enabled User, role, identifier) userid User Id(type, identifier) User Id(type, identifier) Misc() Org(name, type) Base(source Id, status, date Last Modified) Org(name, type) orgunit Org Unit() Org Unit() Org(name, type) Enrolment(role, primary) Base(source Id, status, date Last Modified) Enrolment(role, primary) user User(user Name, enabled User, role, identifier) Enrolment(role, primary) class Class(title, class Code, class Type, location) Enrolment(role, primary) orgunit Org Unit() teacher() Metadata(key, value)
Label: graphicaleditor, Text: D Analysis(semantic Resources, version) semantic Resources Resource Descriptor() D Analysis(semantic Resources, version) e Annotations D Annotation Entry(source, details) D Analysis(semantic Resources, version) selected Views D View() D Analysis(semantic Resources, version) owned Feature Extensions D Feature Extension() D Feature Extension() description Feature Extension Description() D Stylizable() D Refreshable() D Mapping Based() D Representation Container() D View() D Semantic Decorator() D Representation(name) Documented Element(documentation) D Representation(name) D Refreshable() D Representation(name) D Model Element() D Representation(name) representation Elements D Representation Element(name) D Representation(name) owned Annotation Entries Annotation Entry(source) D Representation(name) ui State UI State(inverse Selection Order) D Representation Element(name) D Mapping Based() D Representation Element(name) D Stylizable() D Representation Element(name) D Refreshable() D Representation Element(name) D Semantic Decorator() D View() D Refreshable() D View() owned Representations D Representation(name) D View() owned Extensions Meta Model Extension() D View() viewpoint Viewpoint(model File Extension, icon, conflicts, reuses, customizes) Meta Model Extension() Decoration() description Decoration Description(name, position, decorator Path, precondition Expression) D Analysis Custom Data(key) Label Style(label Alignment) Basic Label Style(label Size, label Format, show Icon, icon Path, label Color) strike through() Style() D Refreshable() Style() Customizable(custom Features) Style() description Style Description() RIGHT() RGB Values() D Analysis Session E Object(open, resources, controlled Resources, synchronization Status) activated Viewpoints Viewpoint(model File Extension, icon, conflicts, reuses, customizes) D Analysis Session E Object(open, resources, controlled Resources, synchronization Status) analyses D Analysis(semantic Resources, version) sync() Session Manager E Object() owned Sessions D Analysis Session E Object(open, resources, controlled Resources, synchronization Status) D Resource(name, path) D File() D Resource(name, path) D Resource Container() members D Resource(name, path) D Project() D Resource Container() D Folder() D Resource Container() D Model() D File() Basic Label Style(label Size, label Format, show Icon, icon Path, label Color) Customizable(custom Features) Basic Label Style(label Size, label Format, show Icon, icon Path, label Color) label Color RGB Values() Customizable(custom Features) Resource Descriptor() UI State(inverse Selection Order) Group(name, version) D Model Element() Group(name, version) Documented Element(documentation) Group(name, version) owned Viewpoints Viewpoint(model File Extension, icon, conflicts, reuses, customizes) Group(name, version) system Colors Palette Sytem Colors Palette() Group(name, version) user Colors Palettes User Colors Palette(name) Group(name, version) extensions Extension() Extension() Component() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) Documented Element(documentation) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) Component() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) End User Documented Element(end User Documentation) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) Identified Element(name, label) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) validation Set Validation Set(name) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Representations Representation Description(title Expression, initialisation, show On Startup) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Representation Extensions Representation Extension Description(name, viewpoint URI, representation Name) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Java Extensions Java Extension(qualified Class Name) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned MM Extensions Metamodel Extension Setting() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Feature Extensions Feature Extension Description() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) icon Image Path() Viewpoint(model File Extension, icon, conflicts, reuses, customizes) owned Templates Representation Template(name) Viewpoint(model File Extension, icon, conflicts, reuses, customizes) customizes URI() Feature Extension Description() Representation Description(title Expression, initialisation, show On Startup) Documented Element(documentation) Representation Description(title Expression, initialisation, show On Startup) End User Documented Element(end User Documentation) Representation Description(title Expression, initialisation, show On Startup) Identified Element(name, label) Representation Description(title Expression, initialisation, show On Startup) title Expression Interpreted Expression() Representation Template(name) owned Representations Representation Description(title Expression, initialisation, show On Startup) Representation Import Description() Representation Description(title Expression, initialisation, show On Startup) Representation Extension Description(name, viewpoint URI, representation Name) Metamodel Extension Setting() Java Extension(qualified Class Name) Representation Element Mapping() Identified Element(name, label) Representation Element Mapping() detail Descriptions Representation Creation Description(title Expression, browse Expression) Representation Element Mapping() navigation Descriptions Representation Navigation Description(browse Expression, navigation Name Expression) Abstract Mapping Import(hide Sub Mappings, inherits Ancestor Filters) Documented Element(documentation) D Model Element() e Annotations D Annotation(source) D Annotation(source) Conditional Style Description(predicate Expression) predicate Expression Interpreted Expression() Type Name() Interpreted Expression() Feature Name() Image Path() Paste Target Description() paste Descriptions Paste Description() Decoration Descriptions Set() decoration Descriptions Decoration Description(name, position, decorator Path, precondition Expression) Decoration Description(name, position, decorator Path, precondition Expression) decorator Path Image Path() Decoration Description(name, position, decorator Path, precondition Expression) precondition Expression Interpreted Expression() CENTER() Semantic Based Decoration(domain Class) Decoration Description(name, position, decorator Path, precondition Expression) Semantic Based Decoration(domain Class) domain Class Type Name() Customization() vsm Element Customizations IVSM Element Customization() IVSM Element Customization() VSM Element Customization(predicate Expression) IVSM Element Customization() VSM Element Customization(predicate Expression) predicate Expression Interpreted Expression() VSM Element Customization(predicate Expression) feature Customizations E Structural Feature Customization(apply On All) VSM Element Customization Reuse() IVSM Element Customization() VSM Element Customization Reuse() reuse E Structural Feature Customization(apply On All) E Structural Feature Customization(apply On All) E Attribute Customization(attribute Name, value) E Structural Feature Customization(apply On All) E Attribute Customization(attribute Name, value) value Interpreted Expression() E Reference Customization(reference Name) E Structural Feature Customization(apply On All) Selection Description(candidates Expression, multiple, tree, root Expression, children Expression, message) children Expression Interpreted Expression() Selection Description(candidates Expression, multiple, tree, root Expression, children Expression, message) message Translatable Message() Color Description() System Color(name) Fixed Color(red, green, blue) Interpolated Color(color Value Computation Expression, min Value Computation Expression, max Value Computation Expression) Color Description() Interpolated Color(color Value Computation Expression, min Value Computation Expression, max Value Computation Expression) User Color(name) Interpolated Color(color Value Computation Expression, min Value Computation Expression, max Value Computation Expression) max Value Computation Expression Interpreted Expression() Interpolated Color(color Value Computation Expression, min Value Computation Expression, max Value Computation Expression) color Steps Color Step(associated Value) Color Step(associated Value) associated Value Interpreted Expression() Color Step(associated Value) associated Color Fixed Color(red, green, blue) Fixed Color(red, green, blue) Color Description() User Fixed Color() Fixed Color(red, green, blue) User Fixed Color() User Color(name) User Color(name) light gray() Environment() system Colors Sytem Colors Palette() Environment() default Tools Tool Entry() Environment() label Border Styles Label Border Styles() Sytem Colors Palette() entries System Color(name) User Colors Palette(name) entries User Color(name) Annotation Entry(source) End User Documented Element(end User Documentation) Identified Element(name, label) label Translatable Message() Computed Color(red, green, blue) User Color(name) Computed Color(red, green, blue) Color Description() Computed Color(red, green, blue) blue Interpreted Expression() D Annotation Entry(source, details) URI() Abstract Variable(name) Sub Variable() Abstract Variable(name) Interactive Variable Description(user Documentation) Typed Variable(default Value Expression) Interactive Variable Description(user Documentation) Typed Variable(default Value Expression) Sub Variable() Typed Variable(default Value Expression) default Value Expression Interpreted Expression() Translatable Message() Style Description() Basic Label Style Description(label Size, label Format, show Icon, label Expression, icon Path) label Expression Interpreted Expression() Basic Label Style Description(label Size, label Format, show Icon, label Expression, icon Path) label Color Color Description() Basic Label Style Description(label Size, label Format, show Icon, label Expression, icon Path) icon Path Image Path() Label Style Description(label Alignment) Basic Label Style Description(label Size, label Format, show Icon, label Expression, icon Path) Label Border Styles() label Border Style Descriptions Label Border Style Description(id, name, corner Height, corner Width) Label Border Style Description(id, name, corner Height, corner Width) Tooltip Style Description(tooltip Expression) tooltip Expression Interpreted Expression() Tool Entry() Documented Element(documentation) Tool Entry() Identified Element(name, label) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Tool Entry() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) elements To Select Interpreted Expression() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) filters Tool Filter Description(precondition, elements To Listen) Mapping Based Tool Description() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Tool Description(icon Path) Mapping Based Tool Description() Tool Description(icon Path) icon Path Image Path() Tool Description(icon Path) element Element Variable() Tool Description(icon Path) element View Element View Variable() Tool Description(icon Path) initial Operation Initial Operation() Paste Description() Mapping Based Tool Description() Paste Description() container Drop Container Variable() Paste Description() container View Container View Variable() Paste Description() copied View Element View Variable() Paste Description() copied Element Element Variable() Paste Description() initial Operation Initial Operation() Selection Wizard Description(icon Path, window Title, window Image Path) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Selection Wizard Description(icon Path, window Title, window Image Path) Selection Description(candidates Expression, multiple, tree, root Expression, children Expression, message) Selection Wizard Description(icon Path, window Title, window Image Path) element Element Select Variable() Selection Wizard Description(icon Path, window Title, window Image Path) container View Container View Variable() Selection Wizard Description(icon Path, window Title, window Image Path) container Select Container Variable() Selection Wizard Description(icon Path, window Title, window Image Path) initial Operation Initial Operation() Selection Wizard Description(icon Path, window Title, window Image Path) window Image Path Image Path() Selection Wizard Description(icon Path, window Title, window Image Path) window Title Translatable Message() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) element Element Select Variable() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) container View Container View Variable() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) container Select Container Variable() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) initial Operation Initial Operation() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) window Image Path Image Path() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) selected Values Message Translatable Message() Pane Based Selection Wizard Description(icon Path, window Title, window Image Path, message, choice Of Values Message, candidates Expression, tree, root Expression, children Expression, selected Values Message, pre Selected Candidates Expression) pre Selected Candidates Expression Interpreted Expression() Representation Creation Description(title Expression, browse Expression) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Representation Creation Description(title Expression, browse Expression) browse Expression Interpreted Expression() Representation Creation Description(title Expression, browse Expression) representation Description Representation Description(title Expression, initialisation, show On Startup) Representation Creation Description(title Expression, browse Expression) initial Operation Initial Operation() Representation Creation Description(title Expression, browse Expression) container View Variable Container View Variable() Representation Creation Description(title Expression, browse Expression) representation Name Variable Name Variable() Representation Navigation Description(browse Expression, navigation Name Expression) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Representation Navigation Description(browse Expression, navigation Name Expression) navigation Name Expression Interpreted Expression() Representation Navigation Description(browse Expression, navigation Name Expression) representation Description Representation Description(title Expression, initialisation, show On Startup) Representation Navigation Description(browse Expression, navigation Name Expression) container View Variable Container View Variable() Representation Navigation Description(browse Expression, navigation Name Expression) container Variable Element Select Variable() Representation Navigation Description(browse Expression, navigation Name Expression) representation Name Variable Name Variable() Menu Item Or Ref() Menu Item Description(icon) Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Menu Item Description(icon) Menu Item Or Ref() Menu Item Description(icon) icon Image Path() Menu Item Description Reference() Menu Item Or Ref() Menu Item Description Reference() item Menu Item Description(icon) Operation Action() Menu Item Description(icon) Operation Action() view Container View Variable() Operation Action() initial Operation Initial Operation() External Java Action(id) Menu Item Description(icon) External Java Action(id) Container Model Operation() External Java Action(id) parameters External Java Action Parameter(name, value) External Java Action Call() Menu Item Description(icon) External Java Action Call() Container Model Operation() External Java Action Call() action External Java Action(id) Popup Menu() Abstract Tool Description(precondition, force Refresh, elements To Select, inverse Selection Order) Popup Menu() menu Item Description Menu Item Description(icon) Variable Container() sub Variables Sub Variable() Acceleo Variable(computation Expression) Variable Container() Acceleo Variable(computation Expression) Sub Variable() Acceleo Variable(computation Expression) computation Expression Interpreted Expression() Dialog Variable(dialog Prompt) Abstract Variable(name) Element Drop Variable() Abstract Variable(name) Element Drop Variable() Variable Container() Element Select Variable() Abstract Variable(name) Element Variable() Abstract Variable(name) Element Variable() Variable Container() Element View Variable() Abstract Variable(name) Element View Variable() Variable Container() Element Delete Variable() Abstract Variable(name) Element Delete Variable() Variable Container() Drop Container Variable() Abstract Variable(name) Drop Container Variable() Variable Container() Select Container Variable() Abstract Variable(name) Select Container Variable() Variable Container() Container View Variable() Abstract Variable(name) Container View Variable() Variable Container() Select Model Element Variable() Sub Variable() Select Model Element Variable() Selection Description(candidates Expression, multiple, tree, root Expression, children Expression, message) Select Model Element Variable() Interactive Variable Description(user Documentation) Edit Mask Variables(mask) Container Model Operation() sub Model Operations Model Operation() Model Operation() Initial Node Creation Operation() first Model Operations Model Operation() Initial Operation() first Model Operations Model Operation() Init Edge Creation Operation() first Model Operations Model Operation() Initial Container Drop Operation() first Model Operations Model Operation() Create Instance(type Name, reference Name, variable Name) Container Model Operation() Create Instance(type Name, reference Name, variable Name) type Name Type Name() Create Instance(type Name, reference Name, variable Name) reference Name Feature Name() Change Context(browse Expression) Container Model Operation() Change Context(browse Expression) browse Expression Interpreted Expression() Set Value(feature Name, value Expression) Container Model Operation() Set Value(feature Name, value Expression) feature Name Feature Name() Set Value(feature Name, value Expression) value Expression Interpreted Expression() Set Object(feature Name) Container Model Operation() Set Object(feature Name) feature Name Feature Name() Unset(feature Name, element Expression) Container Model Operation() Unset(feature Name, element Expression) feature Name Feature Name() Unset(feature Name, element Expression) element Expression Interpreted Expression() Move Element(new Container Expression, feature Name) Container Model Operation() Move Element(new Container Expression, feature Name) new Container Expression Interpreted Expression() Move Element(new Container Expression, feature Name) feature Name Feature Name() Remove Element() Container Model Operation() For(expression, iterator Name) Container Model Operation() For(expression, iterator Name) expression Interpreted Expression() BOTH() If(condition Expression) Container Model Operation() If(condition Expression) condition Expression Interpreted Expression() Delete View() Container Model Operation() Name Variable() Abstract Variable(name) External Java Action Parameter(name, value) value Interpreted Expression() Tool Filter Description(precondition, elements To Listen) elements To Listen Interpreted Expression() Tool Filter Description(precondition, elements To Listen) listeners Feature Change Listener(domain Class, feature Name) Feature Change Listener(domain Class, feature Name) domain Class Type Name() Feature Change Listener(domain Class, feature Name) feature Name Feature Name() Case(condition Expression) Switch Child() Case(condition Expression) condition Expression Interpreted Expression() Switch Child() sub Model Operations Model Operation() Default() Switch Child() Switch() Model Operation() Switch() cases Case(condition Expression) Switch() default Default() Validation Set(name) Documented Element(documentation) Validation Set(name) all Rules Validation Rule(level, message) Validation Rule(level, message) Identified Element(name, label) Validation Rule(level, message) message Interpreted Expression() Validation Rule(level, message) audits Rule Audit(audit Expression) Validation Rule(level, message) fixes Validation Fix(name) Semantic Validation Rule(target Class) Validation Rule(level, message) Semantic Validation Rule(target Class) target Class Type Name() View Validation Rule() Validation Rule(level, message) View Validation Rule() targets Representation Element Mapping() Rule Audit(audit Expression) audit Expression Interpreted Expression() ERROR() Validation Fix(name) initial Operation Initial Operation() Information Section() Template Information Section(template Path) Information Section()
Label: statemachine, Text: State Machine(nombre) states State(nombre) State Machine(nombre) properties Properties(application Address, media From Addr, media To Addr, media URI, record Path, scscf User, scscf Host, scscf Port, scscf Protocol, application Server Protocol, application Server Host, application Server Port, media Host, media Port, media Protocol, setup Conference) Properties(application Address, media From Addr, media To Addr, media URI, record Path, scscf User, scscf Host, scscf Port, scscf Protocol, application Server Protocol, application Server Host, application Server Port, media Host, media Port, media Protocol, setup Conference) State(nombre) outs Transition() Initial State() State(nombre) Final State() State(nombre) Composite State() State(nombre) Composite State() sm State Machine(nombre) Action() Ivr Action() Action() Play(base URL, media URI) Ivr Action() Terminate() Ivr Action() Send Sms() Action() Send Sms() sms SMS(from, to, text) SMS(from, to, text) Set Timer(millis) Action() Transition() action Action() Transition() default Tar State(nombre) IVR Event() Transition() Bye() IVR Event() Call(from, to) IVR Event() Pick Up() IVR Event() Played() IVR Event() Recorderd(record Id) IVR Event() Terminated() IVR Event() Init() IVR Event() Cancel() IVR Event() Collect Timeout() IVR Event() Managed(success, code) IVR Event() None Event() Transition() SMS Received() Transition() SMS Received() sms SMS(from, to, text) Timer() Transition() Collected() IVR Event() Collected() branches Branch() Branch() out State(nombre) Branch() action Action() Key(key) Branch() Otherwise() Branch()
Label: workflow, Text: finish To Finish() Process(name, min Time, max Time) process Elements Process Element() Process(name, min Time, max Time) guidance GFX Guidance(text) Process(name, min Time, max Time) resources Resource Type(name, occurrences) Work Definition(name, min Time, max Time) children Process Element() Work Definition(name, min Time, max Time) links To Successors Work Sequence(link Type) Work Definition(name, min Time, max Time) resource Conf Resource Conf(name) Work Sequence(link Type) Process Element() Work Sequence(link Type) successor Work Definition(name, min Time, max Time) Process Element() guides Guidance(text) Process Element() parent Work Definition(name, min Time, max Time) Guidance(text) Resource Type(name, occurrences) Resource(occurrences) type Resource Type(name, occurrences) Resource(occurrences) resource Conf Resource Conf(name) Resource Conf(name) work Definition Work Definition(name, min Time, max Time) Resource Conf(name) needed Resources Resource(occurrences)
Label: enterprisearchitecture, Text: Node Element() Application Component() Node Element() Application Collaboration() Node Element() Application Interface() Node Element() Application Function() Node Element() Application Interaction() Node Element() Application Service() Node Element() Data Object() Node Element() Grouping() Node Element() Junction() Node Element() Relationship() target Node Element() Association() Relationship() Aggregation() Relationship() Realization() Relationship() Access() Relationship() Used By() Relationship() Assignment() Relationship() Composition() Relationship() Flow() Relationship() Triggering() Relationship() Specialization() Relationship()
Label: mvc, Text: Exam() Observable() Exam() exam Items Exam Item(question) Exam() controllers Controller() Exam() views View(font Name, font Color) Exam Item(question) Observable() Open() Exam Item(question) Multiple Choice() Exam Item(question) Observable() observers Observer() Observer() Controller() Observer() View(font Name, font Color) Observer() View(font Name, font Color) controller Controller() Exam Controller() Controller() Exam Item Controller() Controller() Multiple Choice Controller() Exam Item Controller() Open Controller() Exam Item Controller() Exam View() View(font Name, font Color) Exam Item View() View(font Name, font Color) Open View Multiple Choice View() Exam Item View()
Label: education, Text: Department(name, abbreviation) study Program Study Generalization(name, education Level, nr Of Years, campus, abbreviation) Department(name, abbreviation) course Cource(code, name, location) Department(name, abbreviation) professor Professor(name, title) Cource(code, name, location) department Department(name, abbreviation) Cource(code, name, location) corse Specifications Cource Specification(specification Year, semester, language, version, credits, name) Student(nr) study Program Study Program(year) Study Program(year) cource Specialisation(name, start Semester) Study Program(year) generalization Study Generalization(name, education Level, nr Of Years, campus, abbreviation) Study Program(year) student Student(nr) spring() Exam(weight, form, lenght, date) evaluation Form Evaluation Form(evaluation Type) Evaluation Form(evaluation Type) exam Exam(weight, form, lenght, date) Evaluation Form(evaluation Type) work Work(weight) Evaluation Form(evaluation Type) cource Cource Specification(specification Year, semester, language, version, credits, name) Work(weight) evaluation Form Evaluation Form(evaluation Type) Study Cource Relation(status, year) cource Cource Specification(specification Year, semester, language, version, credits, name) Study Cource Relation(status, year) specialisation Specialisation(name, start Semester) home() Professor(name, title) department Department(name, abbreviation) Specialisation(name, start Semester) cource Study Cource Relation(status, year) Specialisation(name, start Semester) study Program Study Program(year) one Year() Cource Specification(specification Year, semester, language, version, credits, name) cource Cource(code, name, location) Cource Specification(specification Year, semester, language, version, credits, name) coordinator Professor(name, title) Cource Specification(specification Year, semester, language, version, credits, name) evaluation Form Evaluation Form(evaluation Type) approved() Study Generalization(name, education Level, nr Of Years, campus, abbreviation) study Program Study Program(year) Study Generalization(name, education Level, nr Of Years, campus, abbreviation) department Department(name, abbreviation) Ålesund()
Label: simple-pl, Text: Model() program Function(function Name) Function(function Name) function Definition Definition() Definition() intput Input(variables) Definition() body Commands() Definition() output Output(variables) Input(variables) Output(variables) Commands() commands Command() Command() While Command() Command() While Command() cond Expr() While Command() body Commands() For Command() Command() For Command() cond Expr() For Command() body Commands() If Command() Command() If Command() cond Expr() If Command() else Body Commands() Foreach Command(exp Element) Command() Foreach Command(exp Element) exp List Expr() Foreach Command(exp Element) body Commands() Vars Command() Command() Vars Command() variables Vars(variables) Vars Command() values Exprs() Vars(variables) Expr Simple(term) Expr Simple With L Expr(operation) lexpr L Expr() Expr Simple With Expr(operation) expr Expr() Expr Simple With Symbol L Expr(symbol) lexpr L Expr() L Expr() expressions Expr() Exprs() expressions Expr() Expr() Expr And() expressions Or Expr Or() Expr Or() expressions Not Expr Not(negation) Expr Not(negation) expression Eq Expr Eq() Expr Eq() expr R Simple Expr Simple(term) Expr Eq() expr Expr() Nop Command() Command()
Label: education, Text: Fall() Exercise() Participated() Person(first Name, sur Name, phone Nummber, email) Course Cordinator() Student(student ID) Person(first Name, sur Name, phone Nummber, email) Student(student ID) studyprograms Study Programs(study Program Code, study Program Name) Student(student ID) course Course(course Code, course Name, course Credits, course Content) Employee(position) Person(first Name, sur Name, phone Nummber, email) Employee(position) department Department(department Name, phone Nummber, email) Department(department Name, phone Nummber, email) employee Employee(position) Department(department Name, phone Nummber, email) studyprograms Study Programs(study Program Code, study Program Name) Department(department Name, phone Nummber, email) course Course(course Code, course Name, course Credits, course Content) Study Programs(study Program Code, study Program Name) belongs To Department Department(department Name, phone Nummber, email) Study Programs(study Program Code, study Program Name) student Student(student ID) Study Programs(study Program Code, study Program Name) course Course(course Code, course Name, course Credits, course Content) Evaluation Object(evaluations Form, term, credits, date) Evaluations() evaluationobject Evaluation Object(evaluations Form, term, credits, date) Course Work Object(course Work Type, room, day, start, end) Course Work() courseworkobject Course Work Object(course Work Type, room, day, start, end) Course(course Code, course Name, course Credits, course Content) courseinstance Course Instance(course Year, term) Course(course Code, course Name, course Credits, course Content) studyprograms Study Programs(study Program Code, study Program Name) Course(course Code, course Name, course Credits, course Content) courseworker Course Worker(course Role) Course(course Code, course Name, course Credits, course Content) precondition Precondition(precondition Status) Course(course Code, course Name, course Credits, course Content) reduction Reduction(credit Reduction) Course Instance(course Year, term) coursework Course Work() Course Instance(course Year, term) evaluations Evaluations() Course Worker(course Role) employee Employee(position) Precondition(precondition Status) course Course(course Code, course Name, course Credits, course Content) Recommended() Reduction(credit Reduction) course Course(course Code, course Name, course Credits, course Content)
Label: features, Text: Feature(name, value Type) children Node() Feature(name, value Type) typed Value Typed Value(integer Value, string Value, float Value) STRING() Typed Value(integer Value, string Value, float Value) feature Value Feature(name, value Type) Project(name Config File, name Constraints File, number Of Products, validated OCL, validated TEF) features Node() Project(name Config File, name Constraints File, number Of Products, validated OCL, validated TEF) relations Relation() Feature Group(lower Bound, upper Bound, type) Node() Feature Group(lower Bound, upper Bound, type) children Feature(name, value Type) Node() SIMPLE() SIMPLEGROUP() Relation() Relation FG() Relation() Relation FG() target Node() Relation Feature(lower Bound, upper Bound, type) Relation() Relation Feature(lower Bound, upper Bound, type) target Feature(name, value Type)
Label: workflow, Text: Classifier(is Abstract) Type() Classifier(is Abstract) is Abstract Boolean() Type() Packageable Element() Packageable Element() Named Element(name) Named Element(name) Element() Named Element(name) name String() Element() String() Boolean() Package() Namespace() Package() Packageable Element() Namespace() Named Element(name) Date() Uri() Set() Sequence() Integer() Double() Constraint(body) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Constraint(body) body String() Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Packageable Element() Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) ordering Guide String() Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) owned Rules Constraint(body) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) method Element Property Method Element Property(value) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) kind Kind() Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) suppressed Boolean() Method Element Property(value) Packageable Element() Method Element Property(value) value String() Kind() Content Element() Kind() applicable Meta Class Info Applicable Meta Class Info(is Primary Extension) Content Element() Describable Element(shapeicon, nodeicon) Content Element() Variability Element(variability Type) Content Element() supporting Materials Supporting Material() Content Element() concepts And Papers Concept() Content Element() checklists Checklist() Content Element() guidelines Guideline() Content Element() examples Example() Content Element() assets Reusable Asset() Content Element() termdefinition Term Definition() Describable Element(shapeicon, nodeicon) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Describable Element(shapeicon, nodeicon) Classifier(is Abstract) Describable Element(shapeicon, nodeicon) presentation Content Description(main Description, external Id, key Considerations, long Presentation Name) Describable Element(shapeicon, nodeicon) nodeicon Uri() Content Description(main Description, external Id, key Considerations, long Presentation Name) Method Unit(authors, change Date, change Description, version) Content Description(main Description, external Id, key Considerations, long Presentation Name) long Presentation Name String() Content Description(main Description, external Id, key Considerations, long Presentation Name) sections Section(section Name, section Description) Method Unit(authors, change Date, change Description, version) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Method Unit(authors, change Date, change Description, version) version String() Method Unit(authors, change Date, change Description, version) change Date Date() Method Unit(authors, change Date, change Description, version) copyright Statement Supporting Material() Supporting Material() Guidance() Guidance() Content Element() Section(section Name, section Description) Variability Element(variability Type) Section(section Name, section Description) section Description String() Variability Element(variability Type) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) extends Replaces() Concept() Guidance() Checklist() Guidance() Guideline() Guidance() Example() Guidance() Reusable Asset() Guidance() Term Definition() Guidance() Applicable Meta Class Info(is Primary Extension) Classifier(is Abstract) Applicable Meta Class Info(is Primary Extension) is Primary Extension Boolean() Artifact() Work Product() Work Product() Content Element() Work Product() Fulfillable Element() Work Product() reports Report() Work Product() templates Template() Work Product() tool Mentors Tool Mentor() Work Product() estimation Considerations Estimation Considerations() Fulfillable Element() Describable Element(shapeicon, nodeicon) Report() Guidance() Template() Guidance() Tool Mentor() Guidance() Estimation Considerations() Guidance() Deliverable() delivered Work Products Work Product() Outcome() Work Product() Step() Section(section Name, section Description) Step() Work Definition() Work Definition() Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Work Definition() postcondition Constraint(body) Whitepaper() Concept() Task() Content Element() Task() Work Definition() Task() additionally Performed By Role() Task() optional Input Work Product() Task() steps Step() Task() tool Mentors Tool Mentor() Task() estimation Considerations Estimation Considerations() Role() Content Element() Role() Fulfillable Element() Role() responsible For Work Product() Artifact Description(brief Outline, representation Options, representation, notation) Work Product Description(purpose, impact Of Not Having, reasons For Not Needing) Artifact Description(brief Outline, representation Options, representation, notation) notation String() Work Product Description(purpose, impact Of Not Having, reasons For Not Needing) Content Description(main Description, external Id, key Considerations, long Presentation Name) Work Product Description(purpose, impact Of Not Having, reasons For Not Needing) reasons For Not Needing String() Deliverable Description(external Description, packaging Guidance) Work Product Description(purpose, impact Of Not Having, reasons For Not Needing) Deliverable Description(external Description, packaging Guidance) packaging Guidance String() Role Description(skills, assignment Approaches, synonyms) Content Description(main Description, external Id, key Considerations, long Presentation Name) Role Description(skills, assignment Approaches, synonyms) synonyms String() Task Description(purpose, alternatives) Content Description(main Description, external Id, key Considerations, long Presentation Name) Task Description(purpose, alternatives) alternatives String() Guidance Description(attachments) Content Description(main Description, external Id, key Considerations, long Presentation Name) Guidance Description(attachments) attachments String() Practice Description(additional Info, problem, background, goals, application, levels Of Adoption) Content Description(main Description, external Id, key Considerations, long Presentation Name) Practice Description(additional Info, problem, background, goals, application, levels Of Adoption) levels Of Adoption String() Role Set() Content Category() Role Set() roles Role() Content Category() Content Element() Domain() Content Category() Domain() work Products Work Product() Work Product Type() Content Category() Work Product Type() work Products Work Product() Discipline Grouping() Content Category() Discipline Grouping() disciplines Discipline() Discipline() Content Category() Discipline() tasks Task() Discipline() reference Workflows Activity() Activity() Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) Activity() Fulfillable Element() Activity() Variability Element(variability Type) Activity() Work Definition() Activity() breakdown Elements Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Activity() roadmaps Roadmap() Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) is Event Driven Boolean() Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) link To Predecessor Work Order(link Type) Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Process Element() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) prefix String() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) is Optional Boolean() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) planning Data Planning Data(start Date, finish Date, rank) Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) super Activities Activity() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) checklists Checklist() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) concepts Concept() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) examples Example() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) guidelines Guideline() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) reusable Assets Reusable Asset() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) supporting Materials Supporting Material() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) templates Template() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) reports Report() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) estimationconsiderations Estimation Considerations() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) toolmentor Tool Mentor() Process Element() Describable Element(shapeicon, nodeicon) Planning Data(start Date, finish Date, rank) Process Element() Planning Data(start Date, finish Date, rank) finish Date Date() Planning Data(start Date, finish Date, rank) rank Integer() Work Order(link Type) Process Element() Work Order(link Type) pred Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) start To Finish() Roadmap() Guidance() Tool() Content Category() Tool() tool Mentors Tool Mentor() Role Set Grouping() Content Category() Role Set Grouping() role Sets Role Set() Custom Category() sub Categories Content Category() Custom Category() categorized Elements Describable Element(shapeicon, nodeicon) Method Package(global) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Method Package(global) Package() Method Package(global) global Boolean() Content Package() Method Package(global) Content Package() content Elements Content Element() Milestone() Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) Milestone() required Results Work Product Descriptor(activity Entry State, activity Exit State) Work Product Descriptor(activity Entry State, activity Exit State) Descriptor(is Synchronized With Source) Work Product Descriptor(activity Entry State, activity Exit State) activity Exit State String() Work Product Descriptor(activity Entry State, activity Exit State) deliverable Parts Exclude Work Product() Descriptor(is Synchronized With Source) Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Descriptor(is Synchronized With Source) is Synchronized With Source Boolean() Descriptor(is Synchronized With Source) guidance Additional Guidance() Iteration() Activity() Phase() Activity() Team Profile() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Team Profile() team Roles Role Descriptor() Role Descriptor() Descriptor(is Synchronized With Source) Role Descriptor() Role Role() Role Descriptor() responsible For Work Product Descriptor(activity Entry State, activity Exit State) Role Descriptor() responsible For Exclude Work Product() Task Descriptor() Work Breakdown Element(is Repeatable, is Ongoing, is Event Driven) Task Descriptor() Descriptor(is Synchronized With Source) Task Descriptor() Task Task() Task Descriptor() performed Primarily By Role Descriptor() Task Descriptor() output Work Product Descriptor(activity Entry State, activity Exit State) Task Descriptor() selected Steps Exclude Section(section Name, section Description) Task Descriptor() additionally Performed By Exclude Role() Task Descriptor() output Exclude Work Product() Composite Role() Role Descriptor() Composite Role() aggregated Roles Role() Delivery Process() Process() Delivery Process() communications Materials Supporting Material() Process() Activity() Process() includes Patterns Capability Pattern() Process() valid Context Method Configuration() Capability Pattern() Process() Method Configuration() Method Unit(authors, change Date, change Description, version) Method Configuration() method Plugin Selection Method Plugin(user Changeable, supporting) Method Configuration() method Package Selection Method Package(global) Method Configuration() added Category Content Category() Method Plugin(user Changeable, supporting) Method Unit(authors, change Date, change Description, version) Method Plugin(user Changeable, supporting) Package() Method Plugin(user Changeable, supporting) user Changeable Boolean() Method Plugin(user Changeable, supporting) method Packages Method Package(global) Process Planning Template() based On Processes Process() Practice() Guidance() Practice() content References Content Element() Practice() activity References Activity() Breakdown Element Description(usage Guidance) Content Description(main Description, external Id, key Considerations, long Presentation Name) Breakdown Element Description(usage Guidance) usage Guidance String() Activity Description(purpose, alternatives, howto Staff) Breakdown Element Description(usage Guidance) Activity Description(purpose, alternatives, howto Staff) howto Staff String() Delivery Process Description(scale, project Characteristics, risk Level, estimating Technique, project Member Expertise, type Of Contract) Process Description(scope, usage Notes) Delivery Process Description(scale, project Characteristics, risk Level, estimating Technique, project Member Expertise, type Of Contract) type Of Contract String() Process Description(scope, usage Notes) Activity Description(purpose, alternatives, howto Staff) Process Description(scope, usage Notes) usage Notes String() Descriptor Description(refined Description) Breakdown Element Description(usage Guidance) Descriptor Description(refined Description) refined Description String() Process Component Descriptor() Descriptor(is Synchronized With Source) Process Component Descriptor() process Component Process Component() Process Component() Process Package() Process Component() Method Unit(authors, change Date, change Description, version) Process Component() interfaces Process Component Interface() Process Component() process Process() Process Package() Method Package(global) Process Package() process Elements Process Element() Process Package() diagrams Diagram(zoom) Diagram(zoom) Graph Node() Diagram(zoom) diagram Link Diagram Link(zoom) Diagram(zoom) namespace Semantic Model Bridge(presentation) Diagram(zoom) zoom Double() Diagram(zoom) viewpoint Point(x, y) Graph Node() Graph Element() Graph Node() size Dimension(width, height) Graph Element() contained Diagram Element(is Visible) Graph Element() position Point(x, y) Graph Element() link Diagram Link(zoom) Graph Element() anchorage Graph Connector() Graph Element() semantic Model Semantic Model Bridge(presentation) Diagram Element(is Visible) Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Diagram Element(is Visible) is Visible Boolean() Diagram Element(is Visible) container Graph Element() Diagram Element(is Visible) reference Reference(is Individual Representation) Diagram Element(is Visible) property Property(key, value) Reference(is Individual Representation) referenced Diagram Element(is Visible) Reference(is Individual Representation) is Individual Representation Boolean() Property(key, value) Diagram Element(is Visible) Property(key, value) value String() Point(x, y) y Double() Diagram Link(zoom) Diagram Element(is Visible) Diagram Link(zoom) zoom Double() Diagram Link(zoom) viewport Point(x, y) Diagram Link(zoom) diagram Diagram(zoom) Diagram Link(zoom) graph Element Graph Element() Graph Connector() graph Element Graph Element() Graph Connector() graph Edge Graph Edge() Graph Edge() Graph Element() Graph Edge() waypoints Point(x, y) Graph Edge() anchor Graph Connector() Semantic Model Bridge(presentation) Diagram Element(is Visible) Semantic Model Bridge(presentation) presentation String() Semantic Model Bridge(presentation) diagram Diagram(zoom) Semantic Model Bridge(presentation) graph Element Graph Element() Dimension(width, height) height Double() Process Component Interface() Breakdown Element(prefix, is Planned, has Multiple Occurrences, is Optional) Process Component Interface() interface Specifications Task Descriptor() Process Component Interface() interface IO Work Product Descriptor(activity Entry State, activity Exit State) Simple Semantic Model Element(type Info) Semantic Model Bridge(presentation) Simple Semantic Model Element(type Info) type Info String() UMA Semantic Model Bridge() Semantic Model Bridge(presentation) UMA Semantic Model Bridge() element Method Element(guid, presentation Name, brief Description, suppressed, ordering Guide) Core Semantic Model Bridge() Semantic Model Bridge(presentation) Core Semantic Model Bridge() element Element() Leaf Element() Diagram Element(is Visible) Text Element(text) Leaf Element() Text Element(text) text String() Image(uri, mime Type) Leaf Element() Image(uri, mime Type) uri Uri() Image(uri, mime Type) mime Type String() Graphic Primitive() Leaf Element() Polyline(closed) Graphic Primitive() Polyline(closed) closed Boolean() Polyline(closed) waypoints Point(x, y) Ellipse(radius X, radius Y, rotation, start Angle, end Angle) Graphic Primitive() Ellipse(radius X, radius Y, rotation, start Angle, end Angle) center Point(x, y) Ellipse(radius X, radius Y, rotation, start Angle, end Angle) end Angle Double() Process Family() Method Configuration() Process Family() delivery Processes Delivery Process() Method Library() Method Unit(authors, change Date, change Description, version) Method Library() Package() Method Library() method Plugins Method Plugin(user Changeable, supporting) Method Library() predefined Configurations Method Configuration()
Label: metamodelling, Text: E Attribute(i D) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Attribute(i D) i D E Boolean() E Attribute(i D) e Attribute Type E Data Type(serializable) E Annotation(source) e Model Element E Model Element() E Annotation(source) source E String() E Annotation(source) details E String To String Map Entry(key, value) E Annotation(source) references E Object() E Class(abstract, interface) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Class(abstract, interface) FSM() E Class(abstract, interface) interface E Boolean() E Class(abstract, interface) e All Operations E Operation() E Class(abstract, interface) e ID Attribute E Attribute(i D) E Class(abstract, interface) e All Containments E Reference(containment, container, resolve Proxies) E Class(abstract, interface) e Structural Features E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Class(abstract, interface) e All Generic Super Types E Generic Type() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Named Element(name) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) instance Type Name E String() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) default Value E Java Object() E Classifier(instance Class Name, instance Class, default Value, instance Type Name) e Package E Package(ns URI, ns Prefix) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) e Type Parameters E Type Parameter() E Data Type(serializable) E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Data Type(serializable) serializable E Boolean() E Enum() E Data Type(serializable) E Enum() e Literals E Enum Literal(value, instance, literal) E Enum Literal(value, instance, literal) E Named Element(name) E Enum Literal(value, instance, literal) value E Int() E Enum Literal(value, instance, literal) instance E Enumerator() E Enum Literal(value, instance, literal) literal E String() E Enum Literal(value, instance, literal) e Enum E Enum() E Factory() E Model Element() E Factory() e Package E Package(ns URI, ns Prefix) E Model Element() e Annotations E Annotation(source) E Named Element(name) E Model Element() E Named Element(name) name E String() E Named Element(name) my FS Ms FSM() E Object() E Operation() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Operation() e Containing Class E Class(abstract, interface) E Operation() e Type Parameters E Type Parameter() E Operation() e Parameters E Parameter() E Operation() e Exceptions E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Operation() e Generic Exceptions E Generic Type() E Package(ns URI, ns Prefix) E Named Element(name) E Package(ns URI, ns Prefix) ns Prefix E String() E Package(ns URI, ns Prefix) e Factory Instance E Factory() E Package(ns URI, ns Prefix) e Classifiers E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Parameter() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Parameter() e Operation E Operation() E Reference(containment, container, resolve Proxies) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Reference(containment, container, resolve Proxies) resolve Proxies E Boolean() E Reference(containment, container, resolve Proxies) e Reference Type E Class(abstract, interface) E Reference(containment, container, resolve Proxies) e Keys E Attribute(i D) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) derived E Boolean() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) default Value Literal E String() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) default Value E Java Object() E Structural Feature(changeable, volatile, transient, default Value Literal, default Value, unsettable, derived) e Containing Class E Class(abstract, interface) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) E Named Element(name) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) required E Boolean() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) upper Bound E Int() E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) e Type E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Typed Element(ordered, unique, lower Bound, upper Bound, many, required) e Generic Type E Generic Type() E Big Decimal() E Big Integer() E Boolean() E Boolean Object() E Byte() E Byte Array() E Byte Object() E Char() E Character Object() E Date() E Diagnostic Chain() E Double() E Double Object() EE List() E Enumerator() E Feature Map() E Feature Map Entry() E Float() E Float Object() E Int() E Integer Object() E Java Class() E Java Object() E Long() E Long Object() E Map() E Resource() E Resource Set() E Short() E Short Object() E String() E String To String Map Entry(key, value) value E String() E Tree Iterator() E Generic Type() e Classifier E Classifier(instance Class Name, instance Class, default Value, instance Type Name) E Generic Type() e Type Parameter E Type Parameter() E Type Parameter() E Named Element(name) E Type Parameter() e Bounds E Generic Type() E Invocation Target Exception() FSM() final State State(name) State(name) owning FSM FSM() State(name) name E String() State(name) incoming Transition Transition(input, output) State(name) my Classes E Class(abstract, interface) Transition(input, output) target State(name) Transition(input, output) output E String()
Label: hotels, Text: Decision Support Component() Decision Support Component I Decision Support() Decision Support Component I Decision Support() Decision Support Component Booking DSS Info(number Of Guests, room Type, arrival Date, departure Date, customer First Name, customer Last Name, address) additional Services Decision Support Component Additional Service DSS Info(additional Service Name, additional Service Price) Decision Support Component Additional Service DSS Info(additional Service Name, additional Service Price) Decision Support Component DSS Controller() Decision Support Component I Decision Support() Decision Support Component DSS Controller() i Occupancy Decision Occupancy Component I Occupancy Decision() Decision Support Component DSS Controller() i Booking Decision Booking Component I Booking Decision() Decision Support Component DSS Controller() occupancy DSS Info Decision Support Component Occupancy DSS Info(room Number, check In Date Time, check Out Date Time, number Of Guests) Decision Support Component DSS Controller() additional Service DSS Info Decision Support Component Additional Service DSS Info(additional Service Name, additional Service Price) Decision Support Component DSS Controller() booking DSS Info Decision Support Component Booking DSS Info(number Of Guests, room Type, arrival Date, departure Date, customer First Name, customer Last Name, address) Occupancy Component I Occupancy Decision() Booking Component I Booking Decision() Decision Support Component Occupancy DSS Info(room Number, check In Date Time, check Out Date Time, number Of Guests) Occupancy Component() Occupancy Component Occupancy(room Number, check In Date Time, check Out Date Time, booking Reference) guests Occupancy Component Guest(first Name, last Name) Occupancy Component Guest(first Name, last Name) Occupancy Component I Occupancy() Occupancy Component Occupancy Handler() Occupancy Component I Occupancy Decision() Occupancy Component Occupancy Handler() Occupancy Component I Occupancy() Occupancy Component Occupancy Handler() i Room Information Room Component I Room Information() Occupancy Component Occupancy Handler() i Booking Booking Component I Booking Information() Occupancy Component Occupancy Handler() occupancy Occupancy Component Occupancy(room Number, check In Date Time, check Out Date Time, booking Reference) Room Component I Room Information() Booking Component I Booking Information() Payment Component() Payment Component I Payment() Payment Component I Payment() Payment Component Payment Handler() Payment Component I Payment() Payment Component Payment Handler() payment Payment Component Payment(cc Number, ccv, first Name, last Name, expiry Month, expiry Year, amount) Payment Component Payment Handler() customer Provides Bank Customer Provides() Payment Component Payment Handler() administrator Provides Bank Administrator Provides() Payment Component Payment(cc Number, ccv, first Name, last Name, expiry Month, expiry Year, amount) Bank Customer Provides() Bank Administrator Provides() Additional Service Component() Additional Service Component I Additional Service Administration() Additional Service Component() Additional Service Component I Event Management() Additional Service Component I Additional Service Administration() Additional Service Component I Event Management() Additional Service Component Additional Service(name, usable, price, description) temp Events Additional Service Component Additional Service Event(date Time, location, max Attendant, current Attendants) Additional Service Component Additional Service Event(date Time, location, max Attendant, current Attendants) Additional Service Component Additional Service Handler() Additional Service Component I Event Management() Additional Service Component Additional Service Handler() Additional Service Component I Additional Service Administration() Additional Service Component Additional Service Handler() additional Service Additional Service Component Additional Service(name, usable, price, description) Additional Service Component Additional Service Handler() i Authentication Staff Component I Authentication() Staff Component I Authentication() Booking Component() Booking Component Payment Details(first Name, last Name, address, cc Number, ccv, expiry Month, expiry Year) Booking Component Booking(arrival Date, departure Date, booking Reference, current Cost, is Paid, is Active) additional Services Booking Component Additional Service(name, guest Count, location, date Time, price) Booking Component Booking(arrival Date, departure Date, booking Reference, current Cost, is Paid, is Active) guests Booking Component Booking Guest(first Name, last Name, address, phone Number) Booking Component Booking(arrival Date, departure Date, booking Reference, current Cost, is Paid, is Active) payment Details Booking Component Payment Details(first Name, last Name, address, cc Number, ccv, expiry Month, expiry Year) Booking Component Booking(arrival Date, departure Date, booking Reference, current Cost, is Paid, is Active) rooms Booking Component Room Type(room Type, cost) Booking Component Additional Service(name, guest Count, location, date Time, price) Booking Component Booking Guest(first Name, last Name, address, phone Number) Booking Component Room Type(room Type, cost) Booking Component Booking Handler() Booking Component I Booking Information() Booking Component Booking Handler() Booking Component I Booking Decision() Booking Component Booking Handler() Booking Component I Booking Administration() Booking Component Booking Handler() bookings Booking Component Booking(arrival Date, departure Date, booking Reference, current Cost, is Paid, is Active) Booking Component Booking Handler() authentication Staff Component I Authentication() Booking Component Booking Handler() i Room Information Room Component I Room Information() Booking Component Booking Handler() i Additional Service Information Additional Service Component I Event Management() Booking Component Booking Handler() i Payment Payment Component I Payment() Booking Component I Booking Administration() Staff Component() Staff Component I Account Administration() Staff Component() Staff Component I Authentication() Staff Component I Account Administration() Staff Component Account Manager() i Authentication Staff Component I Authentication() Staff Component Account Manager() Staff Component I Account Administration() Staff Component Account Manager() employees Staff Component Employee(id, ssn, name, email, phone, password) Staff Component Employee(id, ssn, name, email, phone, password) Room Component() Room Component I Room Information() Room Component() Room Component I Room Administration() Room Component I Room Administration() Room Component Room(room Number, usable, price, room Type Name, description) Room Component Bedroom(bed Count) Room Component Room(room Number, usable, price, room Type Name, description) Room Component Conference Room(number Of Seats, projector, conference Phone) Room Component Room(room Number, usable, price, room Type Name, description) Room Component Room Handler() Room Component I Room Information() Room Component Room Handler() Room Component I Room Administration() Room Component Room Handler() authenticator Staff Component I Authentication() Room Component Room Handler() bed Rooms Room Component Bedroom(bed Count) Room Component Room Handler() conference Rooms Room Component Conference Room(number Of Seats, projector, conference Phone) Bank() Booking Component I Booking Decision() Bank() Booking Component I Booking Administration() Bank() Booking Component I Booking Information()
Label: class-diagram, Text: Class(name, abstract) attributes Attribute(name) Class(name, abstract) operations Operation(name) Class(name, abstract) invariants OCL Expression(expr) Model(name) classes Class(name, abstract) Model(name) enumerations Enumeration(name) Model(name) associations Association(name, kind) Attribute(name) type Type() Operation(name) parameters Parameter(name) Operation(name) post Condition OCL Expression(expr) Operation(name) type Type() Parameter(name) type Type() OCL Expression(expr) Type() Enumeration Type() Type() Enumeration Type() enum Enumeration(name) Collection Type(type) base Type Type() Simple Type(type) Type() Reference Type() Type() Reference Type() class Class(name, abstract) String() Sequence() Enumeration(name) literals Literal(name) Literal(name) Association(name, kind) role Role(lower Bound, name, ordered, upper Bound) Aggregation() Role(lower Bound, name, ordered, upper Bound) class Name Class(name, abstract)
Label: statemachine, Text: Node() outgoing Transition(trigger Event Name) Transition(trigger Event Name) target Node() Transition(trigger Event Name) guard Condition(expression) Initial Node() Node() Final Node() Node() Conditional Node() Node() Conditional Node() condition Condition(expression) State(name, duration) Node() State Machine(name) nodes Node() State Machine(name) transitions Transition(trigger Event Name) Condition(expression) Timeout Transition() Transition(trigger Event Name)
Label: education, Text: University(name) courses Course(name, code, study Points) University(name) studies Study(name, code) Course(name, code, study Points) code Course Code() Course(name, code, study Points) course Instances Course Instance(year, semester, instance Name) Course Instance(year, semester, instance Name) course Course(name, code, study Points) Study(name, code) study Instances Study Instance(year) Autumn() Course Code() Study Instance(year) study Study(name, code) Study Instance(year) start Year Study Year(program Name) Study Year(program Name) autumn Semester Semester(study Year Semester) Study Course(mandatory) course Instance Course Instance(year, semester, instance Name) Semester(study Year Semester) courses Course Instance(year, semester, instance Name)
Label: simple-pl, Text: Model() program Program() Program() function Function(name) Function(name) definition Definition() Definition() input Input(variable) Definition() commands Commands(command) Definition() output Output(variable) Input(variable) Output(variable) Commands(command)
Label: education, Text: Academy(name) teachers Teacher(name) Academy(name) students Student(name, age) Academy(name) schools School(name, rank) School(name, rank) rooms Class Room(number) School(name, rank) teachers Teacher(name) School(name, rank) students Student(name, age) Teacher(name) Class Room(number) teacher Teacher(name) Class Room(number) children Student(name, age) Student(name, age) notations Notation(value) Matter() Math() Matter() Notation(value)
Label: activities, Text: Activity(is Read Only, is Single Execution) node Activity Node() Activity(is Read Only, is Single Execution) group Activity Group() Activity(is Read Only, is Single Execution) edge Activity Edge() Activity(is Read Only, is Single Execution) partition Activity Partition() Activity(is Read Only, is Single Execution) structured Node Structured Activity Node(must Isolate) Activity Node() in Group Activity Group() Activity Node() outgoing Activity Edge() Activity Node() in Partition Activity Partition() Activity Node() in Interruptible Region Interruptible Activity Region() Activity Node() in Structured Node Structured Activity Node(must Isolate) Activity Group() in Activity Activity(is Read Only, is Single Execution) Activity Group() contained Node Activity Node() Activity Group() contained Edge Activity Edge() Object Node() Activity Node() Activity Parameter Node() Object Node() Control Node() Activity Node() Activity Final Node() Control Node() Activity Final Node() Final Node() Initial Node() Control Node() Activity Edge() source Activity Node() Activity Edge() in Group Activity Group() Activity Edge() in Partition Activity Partition() Activity Edge() interrupts Interruptible Activity Region() Activity Edge() in Structured Node Structured Activity Node(must Isolate) Control Flow() Activity Edge() Object Flow(is Multicast, is Multireceive, is Control Type) Activity Edge() Central Buffer Node() Object Node() Final Node() Control Node() Flow Final Node() Final Node() Fork Node() Control Node() Join Node(is Combine Duplicate) Control Node() Merge Node() Control Node() Decision Node() Control Node() Decision Node() decision Input Flow Object Flow(is Multicast, is Multireceive, is Control Type) Activity Partition() Activity Group() Activity Partition() edge Activity Edge() Activity Partition() node Activity Node() Data Store Node() Central Buffer Node() Parameter Set() Interruptible Activity Region() Activity Group() Interruptible Activity Region() interrupting Edge Activity Edge() Interruptible Activity Region() node Activity Node() Structured Activity Node(must Isolate) Executable Node() Structured Activity Node(must Isolate) Activity Group() Structured Activity Node(must Isolate) activity Activity(is Read Only, is Single Execution) Structured Activity Node(must Isolate) node Activity Node() Structured Activity Node(must Isolate) edge Activity Edge() Executable Node() Activity Node() Executable Node() handler Exception Handler() Loop Node(is Tested First) Structured Activity Node(must Isolate) Loop Node(is Tested First) test Executable Node() Conditional Node(is Determinate, is Assumed) Structured Activity Node(must Isolate) Conditional Node(is Determinate, is Assumed) clause Clause() Conditional Node(is Determinate, is Assumed) body Executable Node() Clause() Sequence Node() Structured Activity Node(must Isolate) Sequence Node() executable Node Executable Node() Exception Handler() protected Node Executable Node() Exception Handler() exception Input Object Node() Expansion Region() Structured Activity Node(must Isolate) Expansion Region() output Element Expansion Node() Expansion Node() Object Node() Expansion Node() region As Output Expansion Region()
Label: class-diagram, Text: private() Model Element(name) Data Type() Model Element(name) Class() Model Element(name) Class() properties Property(visibility) Class() operations Operation() Operation() Typed Element() Operation() class Class() Operation() owned Parameter Parameter() Property(visibility) Typed Element() Property(visibility) class Class() Parameter() Typed Element() Typed Element() Model Element(name) Typed Element() type Data Type() Model() model Elements Model Element(name)
Label: graphicaleditor, Text: Canvas() Identity(name) Canvas() figures Figure Gallery(implementation Bundle) Canvas() nodes Node(resize Constraint, affixed Parent Side) Canvas() connections Connection() Canvas() compartments Compartment(collapsible, needs Title) Canvas() labels Diagram Label(element Icon, external) Figure Gallery(implementation Bundle) Identity(name) Figure Gallery(implementation Bundle) figures Real Figure(name) Figure Gallery(implementation Bundle) descriptors Figure Descriptor() Figure Gallery(implementation Bundle) borders Border() Figure Gallery(implementation Bundle) layouts Layout() Identity(name) Diagram Element() Identity(name) Diagram Element() figure Figure Descriptor() Diagram Element() facets Visual Facet() Abstract Node() Diagram Element() Node(resize Constraint, affixed Parent Side) Abstract Node() Node(resize Constraint, affixed Parent Side) content Pane Child Access(accessor) Connection() Diagram Element() Compartment(collapsible, needs Title) Diagram Element() Compartment(collapsible, needs Title) accessor Child Access(accessor) Diagram Label(element Icon, external) Node(resize Constraint, affixed Parent Side) Diagram Label(element Icon, external) container Child Access(accessor) Visual Facet() General Facet(identifier, data) Visual Facet() Alignment Facet(alignment) Visual Facet() Gradient Facet(direction) Visual Facet() Label Offset Facet(x, y) Visual Facet() Default Size Facet() Visual Facet() Default Size Facet() default Size Dimension(dx, dy) Figure() Layoutable() Figure() descriptor Figure Descriptor() Figure() background Color Color() Figure() preferred Size Dimension(dx, dy) Figure() font Font() Figure() insets Insets(top, left, bottom, right) Figure() border Border() Figure() size Point(x, y) Abstract Figure() Figure() Figure Descriptor() Identity(name) Figure Descriptor() actual Figure Figure() Figure Descriptor() accessors Child Access(accessor) Child Access(accessor) owner Figure Descriptor() Child Access(accessor) figure Figure() Real Figure(name) Abstract Figure() Real Figure(name) children Figure() Figure Ref() Abstract Figure() Figure Ref() figure Real Figure(name) Connection Figure() Real Figure(name) Decoration Figure() Real Figure(name) Shape(outline, fill, line Width, line Kind, xor Fill, xor Outline) Real Figure(name) Shape(outline, fill, line Width, line Kind, xor Fill, xor Outline) resolved Children Figure() Label(text) Real Figure(name) Labeled Container() Real Figure(name) Rectangle() Shape(outline, fill, line Width, line Kind, xor Fill, xor Outline) Rounded Rectangle(corner Width, corner Height) Shape(outline, fill, line Width, line Kind, xor Fill, xor Outline) Ellipse() Shape(outline, fill, line Width, line Kind, xor Fill, xor Outline) Polyline() Shape(outline, fill, line Width, line Kind, xor Fill, xor Outline) Polyline() template Point(x, y) Polygon() Polyline() Scalable Polygon() Polygon() Polyline Connection() Polyline() Polyline Connection() Connection Figure() Polyline Connection() target Decoration Decoration Figure() Polyline Decoration() Polyline() Polyline Decoration() Decoration Figure() Polygon Decoration() Polygon() Polygon Decoration() Decoration Figure() Custom Class(qualified Class Name) attributes Custom Attribute(name, value, direct Access, multi Statement Value) Custom Attribute(name, value, direct Access, multi Statement Value) Figure Accessor(accessor) typed Figure Real Figure(name) Custom Figure() Real Figure(name) Custom Figure() Custom Class(qualified Class Name) Custom Figure() custom Children Figure Accessor(accessor) Custom Decoration() Custom Figure() Custom Decoration() Decoration Figure() Custom Connection() Custom Figure() Custom Connection() Connection Figure() Color() RGB Color(red, green, blue) Color() Constant Color(value) Color() dark Blue() Font() Basic Font(face Name, height, style) Font() ITALIC() Point(x, y) Dimension(dx, dy) Insets(top, left, bottom, right) Border() Border Ref() actual Border() Line Border(width) Border() Line Border(width) color Color() Margin Border() Border() Margin Border() insets Insets(top, left, bottom, right) Compound Border() inner Border() Custom Border() Border() Custom Border() Custom Class(qualified Class Name) NSEW() LINE CUSTOM() Layout Data() owner Layoutable() Custom Layout Data() Layout Data() Custom Layout Data() Custom Class(qualified Class Name) Grid Layout Data(grab Excess Horizontal Space, grab Excess Vertical Space, vertical Alignment, horizontal Alignment, vertical Span, horizontal Span, horizontal Indent) Layout Data() Grid Layout Data(grab Excess Horizontal Space, grab Excess Vertical Space, vertical Alignment, horizontal Alignment, vertical Span, horizontal Span, horizontal Indent) size Hint Dimension(dx, dy) Border Layout Data(alignment, vertical) Layout Data() FILL() Layoutable() layout Data Layout Data() Layoutable() layout Layout() Layout() Layout Ref() actual Layout() Custom Layout() Layout() Custom Layout() Custom Class(qualified Class Name) Grid Layout(num Columns, equal Width) Layout() Grid Layout(num Columns, equal Width) spacing Dimension(dx, dy) Border Layout() Layout() Border Layout() spacing Dimension(dx, dy) Flow Layout(vertical, match Minor Size, force Single Line, major Alignment, minor Alignment, major Spacing, minor Spacing) Layout() XY Layout() Layout() XY Layout Data() Layout Data() XY Layout Data() top Left Point(x, y) XY Layout Data() size Dimension(dx, dy) Stack Layout() Layout() SVG Figure(document URI, no Canvas Width, no Canvas Height) Real Figure(name) SVG Figure(document URI, no Canvas Width, no Canvas Height) properties SVG Property(query, attribute, type, getter, setter, call Super) SVG Figure(document URI, no Canvas Width, no Canvas Height) area Of Interest Rectangle2D(x, y, width, height) SVG Property(query, attribute, type, getter, setter, call Super) FLOAT() Rectangle2D(x, y, width, height)
Label: enterprisearchitecture, Text: Activity(Activity Duration, ending Status) Enterprise Processor(processor Origin) Activity(Activity Duration, ending Status) tasks Task(task Duration) Activity(Activity Duration, ending Status) activity Of Business Process(Process Priority) Application(application Editor, application Maintainer) Enterprise Resource(resource Origin) Business Process(Process Priority) Enterprise Processor(processor Origin) Business Process(Process Priority) activities Activity(Activity Duration, ending Status) Business Process(Process Priority) business Process Of Domain(domain Characterization, performance Indicators) Business Rules() impacts Enterprise Object(reference, properties) Capability(capability Type) Enterprise Object(reference, properties) Capability(capability Type) defines Capacity(value, unit) Capacity(value, unit) Enterprise Object(reference, properties) Company Member(full Name, social Security Number, address) Enterprise Resource(resource Origin) Company Member(full Name, social Security Number, address) Stakeholder(stakeholder Type, stakeholder Organism) Company Member(full Name, social Security Number, address) responsible Of Workstation(Profile Deescription) Company Member(full Name, social Security Number, address) responsible Of Cell Organisation Cell(organisation Level) Company Member(full Name, social Security Number, address) responsible Of File Objects File View(file Priority, file State) Device Machine(manufacturer, machine Maintainer) Enterprise Resource(resource Origin) Domain(domain Characterization, performance Indicators) SIPME object(name, description, UUID) Domain(domain Characterization, performance Indicators) Enterprise Processor(processor Origin) Domain(domain Characterization, performance Indicators) covered By Organisation Cell(organisation Level) Domain(domain Characterization, performance Indicators) business Processes Business Process(Process Priority) Domain(domain Characterization, performance Indicators) induces Business Rules() Enterprise(acronym, status) Enterprise Processor(processor Origin) Enterprise(acronym, status) strategic Objectives Objective(objective Type, objective Nature) Enterprise(acronym, status) concerns Domain(domain Characterization, performance Indicators) Enterprise(acronym, status) refers Enterprise Object(reference, properties) Enterprise(acronym, status) proposes Services Enterprise Service(service State) Enterprise(acronym, status) proposes Products Enterprise Product(product State, product Narure) Enterprise(acronym, status) company Members Company Member(full Name, social Security Number, address) Enterprise(acronym, status) organization Cells Organisation Cell(organisation Level) Enterprise Object(reference, properties) SIPME object(name, description, UUID) Enterprise Object(reference, properties) represented By Object View(view Point) Enterprise Processor(processor Origin) Enterprise Object(reference, properties) Enterprise Processor(processor Origin) initiated By Event(occurence Probability, frequency, time Stamp, source) Enterprise Processor(processor Origin) has Control Inputs Object View(view Point) Enterprise Processor(processor Origin) implements Role Function(role Type) Enterprise Processor(processor Origin) has Capacity Capacity(value, unit) Enterprise Processor(processor Origin) requires Capabilities Capability(capability Type) Enterprise Product(product State, product Narure) Enterprise Object(reference, properties) Enterprise Resource(resource Origin) Enterprise Object(reference, properties) Enterprise Resource(resource Origin) executes Task(task Duration) Enterprise Resource(resource Origin) is Able To Play Role Function(role Type) Enterprise Resource(resource Origin) provides Capability Capability(capability Type) Enterprise Service(service State) Enterprise Object(reference, properties) Event(occurence Probability, frequency, time Stamp, source) SIPME object(name, description, UUID) Event(occurence Probability, frequency, time Stamp, source) initiates Enterprise Processor(processor Origin) Event(occurence Probability, frequency, time Stamp, source) has Associated Events Object View(view Point) Objective(objective Type, objective Nature) Enterprise Object(reference, properties) Objective(objective Type, objective Nature) taken Into Account By Requirement(requirement Origin, requirement Nature, requirement Version, requirement Date, requirement Statement, requirement Priority, requirement Maturity, requirement Status) Object View(view Point) SIPME object(name, description, UUID) Object View(view Point) represents Enterprise Object(reference, properties) Object View(view Point) events Event(occurence Probability, frequency, time Stamp, source) Organisation Cell(organisation Level) Enterprise Processor(processor Origin) Organisation Cell(organisation Level) workstations Workstation(Profile Deescription) Organisation Cell(organisation Level) covers Domain(domain Characterization, performance Indicators) Organisation Cell(organisation Level) cell Responsible Company Member(full Name, social Security Number, address) Objects File View(file Priority, file State) object Views Object View(view Point) Objects File View(file Priority, file State) file Responsible Company Member(full Name, social Security Number, address) Requirement(requirement Origin, requirement Nature, requirement Version, requirement Date, requirement Statement, requirement Priority, requirement Maturity, requirement Status) SIPME object(name, description, UUID) Requirement(requirement Origin, requirement Nature, requirement Version, requirement Date, requirement Statement, requirement Priority, requirement Maturity, requirement Status) associated Objective Objective(objective Type, objective Nature) Requirement(requirement Origin, requirement Nature, requirement Version, requirement Date, requirement Statement, requirement Priority, requirement Maturity, requirement Status) expresse Commonlyd By Stakeholder(stakeholder Type, stakeholder Organism) Requirement(requirement Origin, requirement Nature, requirement Version, requirement Date, requirement Statement, requirement Priority, requirement Maturity, requirement Status) concerns Resources Enterprise Resource(resource Origin) Requirement(requirement Origin, requirement Nature, requirement Version, requirement Date, requirement Statement, requirement Priority, requirement Maturity, requirement Status) concerns Processors Enterprise Processor(processor Origin) Requirement(requirement Origin, requirement Nature, requirement Version, requirement Date, requirement Statement, requirement Priority, requirement Maturity, requirement Status) concerns Activity Activity(Activity Duration, ending Status) Role Function(role Type) implemented By Enterprise Processor(processor Origin) Role Function(role Type) requires Tasks Task(task Duration) Role Function(role Type) can Be Played By Enterprise Resource(resource Origin) Role Function(role Type) respects Role Rules Business Rules() SIPME object(name, description, UUID) Stakeholder(stakeholder Type, stakeholder Organism) SIPME object(name, description, UUID) Stakeholder(stakeholder Type, stakeholder Organism) expresses Requirement(requirement Origin, requirement Nature, requirement Version, requirement Date, requirement Statement, requirement Priority, requirement Maturity, requirement Status) Task(task Duration) Enterprise Processor(processor Origin) Task(task Duration) respects Task Rules Business Rules() Task(task Duration) task Of Activity(Activity Duration, ending Status) Workstation(Profile Deescription) Enterprise Processor(processor Origin) Workstation(Profile Deescription) organisation Cell Organisation Cell(organisation Level) Workstation(Profile Deescription) owners Company Member(full Name, social Security Number, address) Operational() Other() External provider() Verification and Validation() Expectation() Controle() Intermediary() For internal usage() Information() E Enum Literal0()
Label: modelmanagement, Text: Dummy Class() Assignment(is Cast) value Expression() Assignment(is Cast) target Call Expression(name) Assignment(is Cast) is Cast Boolean() Expression() Object() Expression() Type Container() Expression() static Type Type() Call Expression(name) parameters Expression() Call Expression(name) name String() Call Expression(name) static Type Variable Bindings Type() Block() statement Expression() Block() rescue Block Rescue(exception Name) Call Variable(is Atpre) Call Expression(name) Call Variable(is Atpre) is Atpre Boolean() Call Feature(is Atpre) Call Expression(name) Call Feature(is Atpre) target Expression() Call Feature(is Atpre) is Atpre Boolean() Call Feature(is Atpre) static Property Property(is Read Only, default, is Composite, is Derived, is ID, is Getter Abstract, is Setter Abstract) Call Feature(is Atpre) static Operation Operation(is Abstract) Call Feature(is Atpre) static Enum Literal Enumeration Literal() Call Super Operation() Call Expression(name) Call Result() Call Variable(is Atpre) Call Value() Call Expression(name) Conditional() condition Expression() Raise() expression Expression() Rescue(exception Name) Object() Rescue(exception Name) body Expression() Rescue(exception Name) exception Type Type Reference() Rescue(exception Name) exception Name String() Type Reference() Multiplicity Element(is Ordered, is Unique, lower, upper) Literal() Expression() Empty Expression() Expression() Java Static Call(jclass, jmethod) parameters Expression() Java Static Call(jclass, jmethod) jmethod String() Lambda Expression() body Expression() Lambda Expression() parameters Lambda Parameter(name) Lambda Parameter(name) Object() Lambda Parameter(name) name String() Lambda Parameter(name) type Type Reference() Integer Literal(value) Literal() Integer Literal(value) value Integer() String Literal(value) Literal() String Literal(value) value String() Boolean Literal(value) Literal() Boolean Literal(value) value Boolean() Type Literal() Literal() Type Literal() typeref Type Reference() Void Literal() Literal() Loop() stop Condition Expression() Self Expression() Expression() Variable Decl(identifier) initialization Expression() Variable Decl(identifier) identifier String() Variable Decl(identifier) type Type Reference() String() Boolean() Class(is Abstract, name) Parameterized Type() Class(is Abstract, name) owned Attribute Property(is Read Only, default, is Composite, is Derived, is ID, is Getter Abstract, is Setter Abstract) Class(is Abstract, name) owned Operation Operation(is Abstract) Class(is Abstract, name) is Abstract Boolean() Class(is Abstract, name) name String() Object() owned Tags Tag(name, value) Model() contents Object() Model Type() Type() Model Type() included Type Definition Type Definition(is Aspect) Integer() Operation(is Abstract) Multiplicity Element(is Ordered, is Unique, lower, upper) Operation(is Abstract) is Abstract Boolean() Operation(is Abstract) raised Exception Type() Operation(is Abstract) owned Parameter Parameter() Operation(is Abstract) post Constraint(stereotype, language) Operation(is Abstract) body Expression() Operation(is Abstract) owning Class Class Definition(is Abstract) Operation(is Abstract) type Parameter Type Variable() Property(is Read Only, default, is Composite, is Derived, is ID, is Getter Abstract, is Setter Abstract) Multiplicity Element(is Ordered, is Unique, lower, upper) Property(is Read Only, default, is Composite, is Derived, is ID, is Getter Abstract, is Setter Abstract) is Setter Abstract Boolean() Property(is Read Only, default, is Composite, is Derived, is ID, is Getter Abstract, is Setter Abstract) default String() Property(is Read Only, default, is Composite, is Derived, is ID, is Getter Abstract, is Setter Abstract) setter Body Expression() Property(is Read Only, default, is Composite, is Derived, is ID, is Getter Abstract, is Setter Abstract) owning Class Class Definition(is Abstract) Type() Object() Type() type Container Type Container() Type Container() Object() Type Container() contained Type Type() Enumeration Literal() Named Element(name) Enumeration Literal() enumeration Enumeration() Type Variable Binding() Type Container() Type Variable Binding() Object() Type Variable Binding() variable Type Variable() Type Variable Binding() type Type() Multiplicity Element(is Ordered, is Unique, lower, upper) Typed Element() Multiplicity Element(is Ordered, is Unique, lower, upper) is Unique Boolean() Multiplicity Element(is Ordered, is Unique, lower, upper) lower Integer() Multiplicity Element(is Ordered, is Unique, lower, upper) upper Unlimited Natural() Type Definition(is Aspect) Named Element(name) Type Definition(is Aspect) is Aspect Boolean() Data Type() Type() Data Type() Type Definition(is Aspect) Enumeration() Data Type() Enumeration() owned Literal Enumeration Literal() Named Element(name) Object() Named Element(name) name String() Package(uri) Named Element(name) Package(uri) Type Definition Container() Package(uri) uri String() Parameter() Multiplicity Element(is Ordered, is Unique, lower, upper) Parameter() operation Operation(is Abstract) Primitive Type() Data Type() Primitive Type() Type Container() Primitive Type() instance Type Type() Typed Element() Type Container() Typed Element() Named Element(name) Typed Element() type Type() Unlimited Natural() Tag(name, value) object Object() Tag(name, value) value String() Constraint(stereotype, language) Named Element(name) Constraint(stereotype, language) body Expression() Constraint(stereotype, language) inv Owner Class Definition(is Abstract) Constraint(stereotype, language) post Owner Operation(is Abstract) ocl() Class Definition(is Abstract) Generic Type Definition() Class Definition(is Abstract) Type Container() Class Definition(is Abstract) inv Constraint(stereotype, language) Class Definition(is Abstract) is Abstract Boolean() Class Definition(is Abstract) owned Attribute Property(is Read Only, default, is Composite, is Derived, is ID, is Getter Abstract, is Setter Abstract) Class Definition(is Abstract) owned Operation Operation(is Abstract) Class Definition(is Abstract) super Type Type() post() Modeling Unit() Object() Modeling Unit() packages Package(uri) Modeling Unit() requires Require(uri) Modeling Unit() usings Using(qualified Name) Modeling Unit() exclude Filters Filter(qualified Name) Require(uri) Object() Require(uri) uri String() Using(qualified Name) Object() Using(qualified Name) qualified Name String() Filter(qualified Name) Object() Filter(qualified Name) qualified Name String() Generic Type Definition() Type Definition(is Aspect) Generic Type Definition() type Parameter Type Variable() Parameterized Type() Type() Parameterized Type() type Param Binding Type Variable Binding() Parameterized Type() type Definition Generic Type Definition() Type Variable() Type Container() Type Variable() supertype Type() Type Variable() Named Element(name) Object Type Variable() Type Variable() Model Type Variable() Type Variable() Model Type Variable() virtual Type Virtual Type() Virtual Type() Object Type Variable() Virtual Type() class Definition Class Definition(is Abstract) Virtual Type() model Type Model Type Variable() Virtual Type() type Param Binding Type Variable Binding() Product Type() Type Container() Product Type() type Type() Function Type() Type Container() Function Type() right Type() Void Type() Type() Type Definition Container() Named Element(name) Type Definition Container() owned Type Definition Type Definition(is Aspect)