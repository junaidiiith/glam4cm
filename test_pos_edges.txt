Vertex()<edge_begin><edge_end>Transition(priority)
State(orthogonal, submachine, simple, composite, leaf)<edge_begin><edge_end>Reactive Element()
Region(priority)<edge_begin><edge_end>Named Element(name)
Exit()<edge_begin><edge_end>Pseudostate()
State(orthogonal, submachine, simple, composite, leaf)<edge_begin><edge_end>Statechart()
State(orthogonal, submachine, simple, composite, leaf)<edge_begin><edge_end>Region(priority)
Transition(priority)<edge_begin><edge_end>Vertex()
Operator Expression(operator)<edge_begin><edge_end>Expression()
Where Clause()<edge_begin><edge_end>Expression()
Operator Expression(operator)<edge_begin><edge_end>Variable()
Alias Attribute Expression(attributes)<edge_begin><edge_end>Variable()
Value()<edge_begin><edge_end>Variable()
Like Expression(is Not, pattern)<edge_begin><edge_end>Expression()
In Expression(is Not)<edge_begin><edge_end>Variable()
Update Statement()<edge_begin><edge_end>Set Clause()
Query Module()<edge_begin><edge_end>Import(import URI)
Select Aggregate Expression(is Distinct)<edge_begin><edge_end>Select Expression()
Collection Expression(is Not)<edge_begin><edge_end>Expression()
All Expression()<edge_begin><edge_end>Select Statement()
Variable()<edge_begin><edge_end>Expression Term()
M Query()<edge_begin><edge_end>Where Clause()
Integer Expression(value)<edge_begin><edge_end>Value()
Count Aggregate()<edge_begin><edge_end>Select Aggregate Expression(is Distinct)
Date Time Expression(value)<edge_begin><edge_end>Value()
Alias Attribute Expression(attributes)<edge_begin><edge_end>Select Expression()
Event Raising Expression()<edge_begin><edge_end>Expression()
Internal Scope()<edge_begin><edge_end>Statechart Scope()
Numerical Add Subtract Expression(operator)<edge_begin><edge_end>Expression()
Reaction Trigger()<edge_begin><edge_end>Event Spec()
Active State Reference Expression()<edge_begin><edge_end>Expression()
Regular Event Spec()<edge_begin><edge_end>Expression()
Logical Or Expression()<edge_begin><edge_end>Expression()
Entry Event()<edge_begin><edge_end>Builtin Event Spec()
Real Literal(value)<edge_begin><edge_end>Literal()
XML(context Class Name, resource)<edge_begin><edge_end>Fragment()
Subsection()<edge_begin><edge_end>Named Element(id, name)
Documentation(title)<edge_begin><edge_end>Term Entry(description)
Line(text)<edge_begin><edge_end>Fragment()
Text Fragment Container()<edge_begin><edge_end>Fragment()
Transition()<edge_begin><edge_end>TP Arc()
PT Arc()<edge_begin><edge_end>Arc(weight)
Token()<edge_begin><edge_end>Place()
Cell(array Range, formula, h Ref, merge Across, merge Down)<edge_begin><edge_end>Comment(author, show Always)
Page Setup()<edge_begin><edge_end>Footer()
Number Format Type(format)<edge_begin><edge_end>Style Type(id, name)
Layout(orientation, center Horizontal, center Vertical, start Page Number)<edge_begin><edge_end>Boolean()
Worksheet Options Elt(fit To Page, do Not Display Col Headers, do Not Display Row Headers, gridline Color, name, excel Worksheet Type, intl Macro, unsynced, selected, code Name, display Page Break, transition Expression Evaluation, transition Formula Entry, zoom, page Break Zoom, show Page Break Zoom, default Row Height, default Column Width, standard Width, visible, left Column Visible, display Right To Left, gridline Color Index, display Formulas, do Not Display Gridlines, do Not Display Headings, do Not Display Outline, apply Automatic Outline Styles, no Summary Rows Below Detail, no Summary Columns Right Detail, do Not Display Zeros, active Row, active Column, filter On, range Selection, top Row Visible, top Row Bottom Pane, left Column Right Pane, active Pane, split Horizontal, split Vertical, freeze Panes, frozen No Split, tab Color Index, protect Contentst, protect Objects, protect Scenarios, enable Selection, allow Format Cells, allow Size Cols, allow Size Rows, allow Insert Cols, allow Insert Rows, allow Insert Hyperlinks, allow Delete Cols, allow Delete Rows, allow Sort, allow Filter, allow Use Pivot Tables)<edge_begin><edge_end>Integer()
Border Type(position, color, line Style, weight)<edge_begin><edge_end>String()
Cell(array Range, formula, h Ref, merge Across, merge Down)<edge_begin><edge_end>Row(auto Fit Height, height)
Workbook()<edge_begin><edge_end>Worksheet(name, protected, right To Left)
Style Type(id, name)<edge_begin><edge_end>String()
Smart Tag Type(namespaceuri, name, url)<edge_begin><edge_end>Smart Tags Collection()
Header Or Footer Elt(margin, data)<edge_begin><edge_end>String()
Page Setup()<edge_begin><edge_end>Layout(orientation, center Horizontal, center Vertical, start Page Number)
Custom Document Property(name)<edge_begin><edge_end>Custom Document Properties Collection()
Col Or Row Element(hidden, span)<edge_begin><edge_end>Table Element(index)
Workbook()<edge_begin><edge_end>Names Type()
Worksheet Options Elt(fit To Page, do Not Display Col Headers, do Not Display Row Headers, gridline Color, name, excel Worksheet Type, intl Macro, unsynced, selected, code Name, display Page Break, transition Expression Evaluation, transition Formula Entry, zoom, page Break Zoom, show Page Break Zoom, default Row Height, default Column Width, standard Width, visible, left Column Visible, display Right To Left, gridline Color Index, display Formulas, do Not Display Gridlines, do Not Display Headings, do Not Display Outline, apply Automatic Outline Styles, no Summary Rows Below Detail, no Summary Columns Right Detail, do Not Display Zeros, active Row, active Column, filter On, range Selection, top Row Visible, top Row Bottom Pane, left Column Right Pane, active Pane, split Horizontal, split Vertical, freeze Panes, frozen No Split, tab Color Index, protect Contentst, protect Objects, protect Scenarios, enable Selection, allow Format Cells, allow Size Cols, allow Size Rows, allow Insert Cols, allow Insert Rows, allow Insert Hyperlinks, allow Delete Cols, allow Delete Rows, allow Sort, allow Filter, allow Use Pivot Tables)<edge_begin><edge_end>Worksheet(name, protected, right To Left)
Date Time Type(year, month, day, hour, minute, second)<edge_begin><edge_end>Integer()
Cell(array Range, formula, h Ref, merge Across, merge Down)<edge_begin><edge_end>Table Element(index)
Style Type(id, name)<edge_begin><edge_end>Protection Type(protected)
Worksheet Options Elt(fit To Page, do Not Display Col Headers, do Not Display Row Headers, gridline Color, name, excel Worksheet Type, intl Macro, unsynced, selected, code Name, display Page Break, transition Expression Evaluation, transition Formula Entry, zoom, page Break Zoom, show Page Break Zoom, default Row Height, default Column Width, standard Width, visible, left Column Visible, display Right To Left, gridline Color Index, display Formulas, do Not Display Gridlines, do Not Display Headings, do Not Display Outline, apply Automatic Outline Styles, no Summary Rows Below Detail, no Summary Columns Right Detail, do Not Display Zeros, active Row, active Column, filter On, range Selection, top Row Visible, top Row Bottom Pane, left Column Right Pane, active Pane, split Horizontal, split Vertical, freeze Panes, frozen No Split, tab Color Index, protect Contentst, protect Objects, protect Scenarios, enable Selection, allow Format Cells, allow Size Cols, allow Size Rows, allow Insert Cols, allow Insert Rows, allow Insert Hyperlinks, allow Delete Cols, allow Delete Rows, allow Sort, allow Filter, allow Use Pivot Tables)<edge_begin><edge_end>Boolean()
Document Properties Collection(title, subject, keywords, description, category, author, last Author, manager, company, hyperlink Base, revision, presentation Format, guid, app Name, total Time, pages, words, characters, characters With Spaces, bytes, lines, paragraphs)<edge_begin><edge_end>String()
Excel Workbook(selected Sheets, window Hidden, hide Horizontal Scroll Bar, hide Vertical Scroll Bar, hide Workbook Tabs, window Height, window Width, window Top X, window Top Y, active Sheet, active Chart, first Visible Sheet, hide Pivot Table Field List, protect Structure, protect Windows, display Ink Notes, embed Save Smart Tags, future Ver, tab Ratio, window Iconic, display Drawing Objects, create Backup, calculation, do Not Calculate Before Save, date1904, ref Mode R1C1, iteration, max Iterations, max Change, precision As Displayed, do Not Save Link Values, no Auto Recover, accept Labels In Formulas, uncalced)<edge_begin><edge_end>Integer()
Custom Document Properties Collection()<edge_begin><edge_end>Workbook()
Font Type(bold, color, font Name, italic, outline, shadow, size, strike Through, underline, vertical Align)<edge_begin><edge_end>Style Type(id, name)
Borders Type()<edge_begin><edge_end>Border Type(position, color, line Style, weight)
Error Value()<edge_begin><edge_end>Value Type()
Layout(orientation, center Horizontal, center Vertical, start Page Number)<edge_begin><edge_end>String()
Date Time Type Value()<edge_begin><edge_end>Date Time Type(year, month, day, hour, minute, second)
Select Aggregate Expression(is Distinct)<edge_begin><edge_end>Select Expression()
From Collection()<edge_begin><edge_end>Alias Attribute Expression(attributes)
Some Expression()<edge_begin><edge_end>Expression()
Delete Statement()<edge_begin><edge_end>Delete Clause()
Update Item()<edge_begin><edge_end>Alias Attribute Expression(attributes)
All Expression()<edge_begin><edge_end>Select Statement()
Collection Expression(is Not)<edge_begin><edge_end>Expression()
From Join(is Fetch)<edge_begin><edge_end>Variable Declaration(name)
Alias Attribute Expression(attributes)<edge_begin><edge_end>Select Expression()
Any Expression()<edge_begin><edge_end>Expression()
From Entry()<edge_begin><edge_end>Variable Declaration(name)
Delete Statement()<edge_begin><edge_end>JPQL Query()
Null Comparison Expression(is Not)<edge_begin><edge_end>Variable()
Select Statement()<edge_begin><edge_end>JPQL Query()
Operator Expression(operator)<edge_begin><edge_end>Expression Term()
Exists Expression(is Not)<edge_begin><edge_end>Select Statement()
Function(name)<edge_begin><edge_end>Variable()
Delete Clause()<edge_begin><edge_end>From Clause()
File Association Task(file Pattern, default Editor ID)<edge_begin><edge_end>Setup Task(disabled, scope, excluded Triggers, documentation)
Branch(name)<edge_begin><edge_end>Project(name, label)
Component(name, type, version Range)<edge_begin><edge_end>Version Range()
Query(summary, u RL)<edge_begin><edge_end>Mylyn Queries Task(connector Kind, repository URL, user ID, password)
Mylyn Builds Task(connector Kind, server URL, user ID, password)<edge_begin><edge_end>Build Plan(name)
Projects Import Task()<edge_begin><edge_end>Setup Task(disabled, scope, excluded Triggers, documentation)
Setup Task(disabled, scope, excluded Triggers, documentation)<edge_begin><edge_end>Setup Task(disabled, scope, excluded Triggers, documentation)
Api Baseline Task(version, container Folder, zip Location)<edge_begin><edge_end>Setup Task(disabled, scope, excluded Triggers, documentation)
Context Variable Task(type, name, value, string Substitution, label)<edge_begin><edge_end>Setup Task(disabled, scope, excluded Triggers, documentation)
Basic Materialization Task(target Platform, bundle Pool)<edge_begin><edge_end>Setup Task(disabled, scope, excluded Triggers, documentation)
Project(name, label)<edge_begin><edge_end>Configurable Item()
Materialization Task()<edge_begin><edge_end>Source Locator()
Targlet Import Task(targlet URI)<edge_begin><edge_end>Setup Task(disabled, scope, excluded Triggers, documentation)
Index(name, u RI, old UR Is)<edge_begin><edge_end>URI()
Setup()<edge_begin><edge_end>Branch(name)
Branch(name)<edge_begin><edge_end>Configurable Item()
Paper(name)<edge_begin><edge_end>Paragraph(name, id, content)
Researcher(name, for Name)<edge_begin><edge_end>Position(name, description)
Flow Of Events(name)<edge_begin><edge_end>Step(name)
Use Case(name, description)<edge_begin><edge_end>Condition(expression)
Action(description)<edge_begin><edge_end>Step(name)
Use Case Model()<edge_begin><edge_end>Actor()
Step(name)<edge_begin><edge_end>Statement()
Alternative Flow()<edge_begin><edge_end>Use Case(name, description)
Active conference participant()<edge_begin><edge_end>Conference contributor()
Meal Break()<edge_begin><edge_end>Break Event()
Reviewer()<edge_begin><edge_end>Conference Member()
Break Event()<edge_begin><edge_end>Non Academic Event()
Power Point presentation()<edge_begin><edge_end>Presentation()
full paper submission date()<edge_begin><edge_end>date()
Camera Ready Paper()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
Conference volume(has a location)<edge_begin><edge_end>Track()
reviewing proces()<edge_begin><edge_end>Activity(is dated on)
PC Member()<edge_begin><edge_end>Possible Reviewer()
Reviewer()<edge_begin><edge_end>Speaker()
Social Event()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Author attendee book registration fee()<edge_begin><edge_end>Registration fee()
Administrative event()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Conference Event(has End Date Time, has Start Date Time)<edge_begin><edge_end>Programme()
start date of conference()<edge_begin><edge_end>date of conference()
article()<edge_begin><edge_end>Activity(is dated on)
Email Template()<edge_begin><edge_end>Event Setup()
Bank transfer()<edge_begin><edge_end>Payment document()
Initial manuscipt()<edge_begin><edge_end>Submission()
Information for participants()<edge_begin><edge_end>Conference document()
Senior Reviewer URL()<edge_begin><edge_end>URL()
Event Setup()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>any URI()
human(e-mail, last name, first name)<edge_begin><edge_end>Topic()
Accommodation Place()<edge_begin><edge_end>Place()
Medicine Topic()<edge_begin><edge_end>Topic()
Group Email()<edge_begin><edge_end>Email()
Operating Topicsystems()<edge_begin><edge_end>Topic()
Conference participant()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, email)
Chairman()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, email)
Conference airport()<edge_begin><edge_end>Building()
Author book proceedings included()<edge_begin><edge_end>Author()
Abstract()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
Activity(is dated on)<edge_begin><edge_end>date Time()
Paper(paper ID, title, full paper size)<edge_begin><edge_end>Contribution(remark, abstract, contact Email, has Keyword, has Title)
Paper(paper ID, title, full paper size)<edge_begin><edge_end>Decision()
LCD projector()<edge_begin><edge_end>Audiovisual equipment()
Role()<edge_begin><edge_end>Thing()
Workshop Chair()<edge_begin><edge_end>PC Member()
Associated Chair()<edge_begin><edge_end>Conference Member()
Reviewer()<edge_begin><edge_end>Bid()
Sponsorship(has Cost Currency, has Cost Amount)<edge_begin><edge_end>Organization()
Important dates()<edge_begin><edge_end>Conference volume(has a location)
Demo Session()<edge_begin><edge_end>Session()
Coffee Break()<edge_begin><edge_end>Break Event()
article()<edge_begin><edge_end>Reviewer()
notification()<edge_begin><edge_end>article()
Regular Session()<edge_begin><edge_end>Session()
Admin Role()<edge_begin><edge_end>Role()
Chair()<edge_begin><edge_end>Committee member()
Activity(is dated on)<edge_begin><edge_end>Time()
Listener()<edge_begin><edge_end>Delegate()
Call For Papers()<edge_begin><edge_end>Call(has Submission Instructions, has Submission Deadline)
Review preference(has a degree)<edge_begin><edge_end>Thing()
Tutorial Chair()<edge_begin><edge_end>Conference Participant()
Call For Reviews()<edge_begin><edge_end>Call(has Submission Instructions, has Submission Deadline)
Computer Networks Management Topic()<edge_begin><edge_end>Computer Networks Topic()
Important dates()<edge_begin><edge_end>date()
Video cassette player()<edge_begin><edge_end>Audiovisual equipment()
Contribution(remark, abstract, contact Email, has Keyword, has Title)<edge_begin><edge_end>Thing()
Meeting Room Place()<edge_begin><edge_end>Place()
One day presenter()<edge_begin><edge_end>Delegate()
human(e-mail, last name, first name)<edge_begin><edge_end>Activity(is dated on)
Program Committee Member(max Papers)<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, email)
Conference days()<edge_begin><edge_end>Time()
Conference volume(has a location)<edge_begin><edge_end>Tutorial()
Meal Event()<edge_begin><edge_end>Non Academic Event()
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>Event Setup()
Conference Participant()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, email)
Demo Paper()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
Chair URL()<edge_begin><edge_end>URL()
Sponsorship(has Cost Currency, has Cost Amount)<edge_begin><edge_end>Integer()
Communication Theory Topic()<edge_begin><edge_end>Topic()
Reviewer()<edge_begin><edge_end>User()
Poster()<edge_begin><edge_end>Contribution(remark, abstract, contact Email, has Keyword, has Title)
Security Topic()<edge_begin><edge_end>Topic()
Academic Institution()<edge_begin><edge_end>Organisation()
Account()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, email)
Two Level Conference()<edge_begin><edge_end>Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
Committee member()<edge_begin><edge_end>Committee()
Published Paper()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
Call for paper()<edge_begin><edge_end>Conference document()
Welcome address()<edge_begin><edge_end>Conference activity()
lower tier reviewing process()<edge_begin><edge_end>reviewing proces()
Company()<edge_begin><edge_end>Organization()
Transport vehicle()<edge_begin><edge_end>Item()
Closing Talk()<edge_begin><edge_end>Talk Event()
Tip()<edge_begin><edge_end>Money()
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>Approval Email()
Conference Paper()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
User()<edge_begin><edge_end>Thing()
Call(has Submission Instructions, has Submission Deadline)<edge_begin><edge_end>String()
Detail()<edge_begin><edge_end>Thing()
Author()<edge_begin><edge_end>Contribution(remark, abstract, contact Email, has Keyword, has Title)
Automatic Paper Assignment()<edge_begin><edge_end>Program Committee member()
Value added tax()<edge_begin><edge_end>Tax()
conference setup()<edge_begin><edge_end>human(e-mail, last name, first name)
Invited talk()<edge_begin><edge_end>Presentation()
group email()<edge_begin><edge_end>article()
Computer Networks Enterprise Topic()<edge_begin><edge_end>Computer Networks Topic()
Reviewer Role()<edge_begin><edge_end>Role()
Organizer()<edge_begin><edge_end>Thing()
Submission event()<edge_begin><edge_end>Administrative event()
Coffee break()<edge_begin><edge_end>Conference activity()
Presentation()<edge_begin><edge_end>Conference contribution()
Paper(paper ID, title, full paper size)<edge_begin><edge_end>article()
Antennas Topic()<edge_begin><edge_end>Topic()
chair()<edge_begin><edge_end>Reviewer()
Reject Rating()<edge_begin><edge_end>Review Rating()
Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, email)<edge_begin><edge_end>Organization()
Author()<edge_begin><edge_end>Speaker()
notification email()<edge_begin><edge_end>article()
Introduction of speaker()<edge_begin><edge_end>Introduction()
URL()<edge_begin><edge_end>Thing()
Program Committee member()<edge_begin><edge_end>human(e-mail, last name, first name)
Money()<edge_begin><edge_end>Item()
Proceedings()<edge_begin><edge_end>Multi-author Volume()
Program Committee Chair()<edge_begin><edge_end>human(e-mail, last name, first name)
Full Paper()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
Paper(paper ID, title, full paper size)<edge_begin><edge_end>Regular contribution()
Review expertise(has an expertise)<edge_begin><edge_end>Submitted contribution()
Wireless Communications Topic()<edge_begin><edge_end>Topic()
Reviewed contribution()<edge_begin><edge_end>Submitted contribution()
Co-author()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
Meal Menu()<edge_begin><edge_end>Document()
Item()<edge_begin><edge_end>Thing()
Call For Manuscripts()<edge_begin><edge_end>Call(has Submission Instructions, has Submission Deadline)
Program committee()<edge_begin><edge_end>Committee()
Rejection Email()<edge_begin><edge_end>Email()
Non speaker()<edge_begin><edge_end>Delegate()
Event Creation()<edge_begin><edge_end>Activity(is dated on)
Introduction()<edge_begin><edge_end>Conference activity()
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>date Time()
Test Only Topic()<edge_begin><edge_end>Topic()
Regular author()<edge_begin><edge_end>Conference contributor()
submission process()<edge_begin><edge_end>human(e-mail, last name, first name)
University()<edge_begin><edge_end>Organization()
Reviewer()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, email)
Tutorial Abstract()<edge_begin><edge_end>Abstract()
Author()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
Book()<edge_begin><edge_end>Entry(key)
Entry(key)<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Pages()<edge_begin><edge_end>Field(value)
Day()<edge_begin><edge_end>Field(value)
Doi()<edge_begin><edge_end>Field(value)
Located Element(location, comments Before, comments After)<edge_begin><edge_end>String()
Manual()<edge_begin><edge_end>Entry(key)
Title()<edge_begin><edge_end>Field(value)
Howpublished()<edge_begin><edge_end>Field(value)
Paper Keywords(weight)<edge_begin><edge_end>Keyword(key, description)
Collaboration(ratio)<edge_begin><edge_end>Paper(name)
Paper(name)<edge_begin><edge_end>Paper Keywords(weight)
Structural Feature(changeability, target Scope, ordering)<edge_begin><edge_end>Multiplicity()
Component Instance()<edge_begin><edge_end>Instance()
Extend()<edge_begin><edge_end>Boolean Expression()
Feature(owner Scope)<edge_begin><edge_end>Model Element(name, visibility, is Specification)
Model Element(name, visibility, is Specification)<edge_begin><edge_end>Boolean()
Link End()<edge_begin><edge_end>Attribute Link()
Component Instance()<edge_begin><edge_end>Node Instance()
Link()<edge_begin><edge_end>Model Element(name, visibility, is Specification)
Include()<edge_begin><edge_end>Use Case()
Structural Feature(changeability, target Scope, ordering)<edge_begin><edge_end>Classifier()
Link End()<edge_begin><edge_end>Model Element(name, visibility, is Specification)
Link()<edge_begin><edge_end>Link End()
Classifier()<edge_begin><edge_end>Feature(owner Scope)
Extension Point(location)<edge_begin><edge_end>Use Case()
Use Case()<edge_begin><edge_end>Extension Point(location)
Contribution(label)<edge_begin><edge_end>Product()
Contribution(label)<edge_begin><edge_end>Repository(location, label)
Build(type, build Root, fetch Tag, label, date, time, launch VM, builder URL, sendmail)<edge_begin><edge_end>Map(root, repo, tag)
Product()<edge_begin><edge_end>Installation Unit(id, version)
Connector(public)<edge_begin><edge_end>Node(name)
Transition(priority number)<edge_begin><edge_end>Function(sourcecode)
Build(default Goal, source Directory, unit Test Source Directory)<edge_begin><edge_end>Resource(target Path, filtering, directory, includes, excludes)
Mailing List(name, subscribe, unsubscribe, post, archive, other Archives)<edge_begin><edge_end>String()
Symbolic Timeout Event()<edge_begin><edge_end>Symbolic Event()
Transition()<edge_begin><edge_end>Event Guard()
Symbolic Event()<edge_begin><edge_end>Symbolic Parameter(name)
Timer Action()<edge_begin><edge_end>Symbolic Timer(name)
Constant Binding()<edge_begin><edge_end>Binding()
Free Parameter(excluded Values)<edge_begin><edge_end>Parameter()
Event()<edge_begin><edge_end>Symbolic Event()
Review(date)<edge_begin><edge_end>Labelled(lname)
Review(date)<edge_begin><edge_end>Review Note(content)
Paper()<edge_begin><edge_end>Researcher(name, for Name)
Researcher(name, for Name)<edge_begin><edge_end>Write(time Spent)
Researcher(name, for Name)<edge_begin><edge_end>Review(date)
Paragraph(content)<edge_begin><edge_end>Review Note(content)
Progress(percent)<edge_begin><edge_end>Paper()
Variable(data Type)<edge_begin><edge_end>Data Element(name, io Type, port)
Statechart(name, UUID)<edge_begin><edge_end>Transition(priority, expression, id)
Action(is Asynchronous)<edge_begin><edge_end>Action Sequence()
Create Action()<edge_begin><edge_end>Classifier()
Create Action()<edge_begin><edge_end>Action(is Asynchronous)
State()<edge_begin><edge_end>State Machine()
Transition()<edge_begin><edge_end>Event()
Model Element(name, visibility, is Specification)<edge_begin><edge_end>Boolean()
Action(is Asynchronous)<edge_begin><edge_end>Iteration Expression()
Composite State(is Concurrent)<edge_begin><edge_end>Boolean()
State Machine()<edge_begin><edge_end>State()
State Vertex()<edge_begin><edge_end>Transition()
Action(is Asynchronous)<edge_begin><edge_end>Action Expression()
State()<edge_begin><edge_end>Event()
Classifier()<edge_begin><edge_end>Feature(owner Scope)
Reception(specification, is Root, is Leaf, is Abstract)<edge_begin><edge_end>Behavioral Feature(is Query)
Iteration Expression()<edge_begin><edge_end>Expression(language, body)
Synch State(bound)<edge_begin><edge_end>State Vertex()
State Vertex()<edge_begin><edge_end>Model Element(name, visibility, is Specification)
Pseudostate(kind)<edge_begin><edge_end>State Vertex()
Operation(concurrency, is Root, is Leaf, is Abstract, specification)<edge_begin><edge_end>Behavioral Feature(is Query)
Exception()<edge_begin><edge_end>Signal()
Signal()<edge_begin><edge_end>Classifier()
Titled Entry(title)<edge_begin><edge_end>String()
Proceedings()<edge_begin><edge_end>Dated Entry(year)
Book(publisher)<edge_begin><edge_end>Dated Entry(year)
Article(journal)<edge_begin><edge_end>String()
Book(publisher)<edge_begin><edge_end>Titled Entry(title)
Tech Report()<edge_begin><edge_end>Dated Entry(year)
Book(publisher)<edge_begin><edge_end>String()
In Book(chapter)<edge_begin><edge_end>Book(publisher)
Excel Workbook(selected Sheets, window Hidden, hide Horizontal Scroll Bar, hide Vertical Scroll Bar, hide Workbook Tabs, window Height, window Width, window Top X, window Top Y, active Sheet, active Chart, first Visible Sheet, hide Pivot Table Field List, protect Structure, protect Windows, display Ink Notes, embed Save Smart Tags, future Ver, tab Ratio, window Iconic, display Drawing Objects, create Backup, calculation, do Not Calculate Before Save, date1904, ref Mode R1C1, iteration, max Iterations, max Change, precision As Displayed, do Not Save Link Values, no Auto Recover, accept Labels In Formulas, uncalced)<edge_begin><edge_end>String()
Excel Workbook(selected Sheets, window Hidden, hide Horizontal Scroll Bar, hide Vertical Scroll Bar, hide Workbook Tabs, window Height, window Width, window Top X, window Top Y, active Sheet, active Chart, first Visible Sheet, hide Pivot Table Field List, protect Structure, protect Windows, display Ink Notes, embed Save Smart Tags, future Ver, tab Ratio, window Iconic, display Drawing Objects, create Backup, calculation, do Not Calculate Before Save, date1904, ref Mode R1C1, iteration, max Iterations, max Change, precision As Displayed, do Not Save Link Values, no Auto Recover, accept Labels In Formulas, uncalced)<edge_begin><edge_end>Boolean()
Table Element(index)<edge_begin><edge_end>Styled Element()
Workbook()<edge_begin><edge_end>Excel Workbook(selected Sheets, window Hidden, hide Horizontal Scroll Bar, hide Vertical Scroll Bar, hide Workbook Tabs, window Height, window Width, window Top X, window Top Y, active Sheet, active Chart, first Visible Sheet, hide Pivot Table Field List, protect Structure, protect Windows, display Ink Notes, embed Save Smart Tags, future Ver, tab Ratio, window Iconic, display Drawing Objects, create Backup, calculation, do Not Calculate Before Save, date1904, ref Mode R1C1, iteration, max Iterations, max Change, precision As Displayed, do Not Save Link Values, no Auto Recover, accept Labels In Formulas, uncalced)
Document Properties Collection(title, subject, keywords, description, category, author, last Author, manager, company, hyperlink Base, revision, presentation Format, guid, app Name, total Time, pages, words, characters, characters With Spaces, bytes, lines, paragraphs)<edge_begin><edge_end>Integer()
Smart Tags Collection()<edge_begin><edge_end>Cell(array Range, formula, h Ref, merge Across, merge Down)
Data()<edge_begin><edge_end>Comment(author, show Always)
Boolean Value(value)<edge_begin><edge_end>Value Type()
Document Properties Collection(title, subject, keywords, description, category, author, last Author, manager, company, hyperlink Base, revision, presentation Format, guid, app Name, total Time, pages, words, characters, characters With Spaces, bytes, lines, paragraphs)<edge_begin><edge_end>Version Type(n, nn)
Custom Document Property(name)<edge_begin><edge_end>Custom Document Properties Collection()
Cell(array Range, formula, h Ref, merge Across, merge Down)<edge_begin><edge_end>Table Element(index)
Excel Workbook(selected Sheets, window Hidden, hide Horizontal Scroll Bar, hide Vertical Scroll Bar, hide Workbook Tabs, window Height, window Width, window Top X, window Top Y, active Sheet, active Chart, first Visible Sheet, hide Pivot Table Field List, protect Structure, protect Windows, display Ink Notes, embed Save Smart Tags, future Ver, tab Ratio, window Iconic, display Drawing Objects, create Backup, calculation, do Not Calculate Before Save, date1904, ref Mode R1C1, iteration, max Iterations, max Change, precision As Displayed, do Not Save Link Values, no Auto Recover, accept Labels In Formulas, uncalced)<edge_begin><edge_end>Double()
Boolean Value(value)<edge_begin><edge_end>Boolean()
Row(auto Fit Height, height)<edge_begin><edge_end>Col Or Row Element(hidden, span)
Cell(array Range, formula, h Ref, merge Across, merge Down)<edge_begin><edge_end>Smart Tags Collection()
Miscellaneous()<edge_begin><edge_end>Other IU()
Metadata Repository Reference(location, nature)<edge_begin><edge_end>Status Provider()
Category()<edge_begin><edge_end>IU Details()
Valid Configurations Rule()<edge_begin><edge_end>Map Rule()
Maven Mapping(name Pattern, group Id, artifact Id)<edge_begin><edge_end>Infos Provider(errors, warnings, infos)
Product()<edge_begin><edge_end>IU Presentation With Details(details Resolved)
Installable Units()<edge_begin><edge_end>Bundles()
Valid Configurations Rule()<edge_begin><edge_end>Configuration(operating System, window System, architecture)
Mapped Unit()<edge_begin><edge_end>Identification Provider()
Category()<edge_begin><edge_end>IU Presentation(id, version, name, label, description, type, filter)
Installable Unit Request(name, version Range)<edge_begin><edge_end>Description Provider(description)
Product()<edge_begin><edge_end>Features()
IU Details()<edge_begin><edge_end>Requirements()
Contribution(label)<edge_begin><edge_end>Enabled Status Provider(branch Enabled, enabled)
Status Provider()<edge_begin><edge_end>Status(code, message)
Other IU()<edge_begin><edge_end>IU Presentation With Details(details Resolved)
Contribution(label)<edge_begin><edge_end>Mapped Repository(mirror Artifacts, category Prefix)
Provided Capability Wrapper()<edge_begin><edge_end>Label Provider(label)
Installable Units()<edge_begin><edge_end>Categories()
Provided Capabilities()<edge_begin><edge_end>Provided Capability Wrapper()
Aggregation(label, build Root, packed Strategy, sendmail, type, maven Result)<edge_begin><edge_end>Infos Provider(errors, warnings, infos)
Automaton(event Pattern Id)<edge_begin><edge_end>Event Token()
Transition()<edge_begin><edge_end>State(label)
State(label)<edge_begin><edge_end>Timed Zone(time)
Automaton(event Pattern Id)<edge_begin><edge_end>State(label)
Event Token()<edge_begin><edge_end>Timed Zone(time)
Event Token()<edge_begin><edge_end>Parameter Table()
Text(text)<edge_begin><edge_end>Fragment()
Link(uri)<edge_begin><edge_end>Named Element(id, name, label)
Subsection()<edge_begin><edge_end>Named Element(id, name, label)
Reference(referred Label)<edge_begin><edge_end>Named Element(id, name, label)
Table()<edge_begin><edge_end>Table Header()
Table Header()<edge_begin><edge_end>Table Cell(content, span)
Documentation(title)<edge_begin><edge_end>Section()
SAP Function Parameter Table()<edge_begin><edge_end>Abstract Metadata Object(properties, id, comment, label, read Only, synchronised, divergency)
Td View()<edge_begin><edge_end>Metadata Table(source Name, table Type, attached CDC, activated CDC)
Xml File Connection(Xsd File Path, Xml File Path, Guess, Mask X Pattern, Encoding, input Model, output File Path, file Content)<edge_begin><edge_end>Connection(version, Context Mode, Context Id, context Name)
Subscriber Table(system)<edge_begin><edge_end>Td Table()
Concept(Loop Expression, Loop Limit, input Model, concept Type, x Path Prefix)<edge_begin><edge_end>XML File Node(XML Path, Related Column, Default Value, Attribute, Order, Type)
BRMS Connection(xml Field, url Name, tac Webapp Name, class Name, module Used, package)<edge_begin><edge_end>Connection(version, Context Mode, Context Id, context Name)
Output SAP Function Parameter Table()<edge_begin><edge_end>SAP Function Unit(Output Type, Output Table Name, as Xml Schema)
Queries Connection()<edge_begin><edge_end>Query(value, context Mode)
Td Xml Element Type(java Type)<edge_begin><edge_end>Td Xml Schema(xsd File Path)
MDM Connection(Username, Password, Port, Server, Universe, Datamodel, Datacluster, protocol, context, server Url)<edge_begin><edge_end>Concept(Loop Expression, Loop Limit, input Model, concept Type, x Path Prefix)
Metadata Table(source Name, table Type, attached CDC, activated CDC)<edge_begin><edge_end>Abstract Metadata Object(properties, id, comment, label, read Only, synchronised, divergency)
Abstract Metadata Object(properties, id, comment, label, read Only, synchronised, divergency)<edge_begin><edge_end>Map()
File Excel Connection(Sheet Name, sheet Columns, first Column, last Column, thousand Separator, decimal Separator, advanced Spearator, select All Sheets, sheet List, generation Mode)<edge_begin><edge_end>List()
SAP Function Param Data()<edge_begin><edge_end>SAP Function Parameter(name, type, description, length, changing, test Value, table Reside In Tables)
Td Xml Content()<edge_begin><edge_end>Td Xml Element Type(java Type)
CDC Connection()<edge_begin><edge_end>CDC Type(link DB, journal Name)
EDIFACT Column(EDI Column Name, EDI Xpath)<edge_begin><edge_end>Metadata Column(source Type, default Value, talend Type, key, nullable, original Field, pattern, display Field, original Length, related Entity, relationship Type)
Queries Connection()<edge_begin><edge_end>Connection(version, Context Mode, Context Id, context Name)
Ebcdic Connection(Mid File, Data File, Code Page, Source File Start, Source File End)<edge_begin><edge_end>File Connection(Server, File Path, Format, Encoding, Field Separator Value, Row Separator Type, Row Separator Value, Text Identifier, Use Header, Header Value, Use Footer, Footer Value, Use Limit, Limit Value, First Line Caption, Remove Empty Row, Escape Type, Escape Char, Text Enclosure, Csv Option)
Validation Rules Connection(is Select, is Insert, is Update, is Delete, type, base Schema, base Column Names, ref Schema, ref Column Names, java Condition, sql Condition, logical Operator, is Disallow, is Reject Link)<edge_begin><edge_end>Inner Join Map(key, value)
Execute Command(operation)<edge_begin><edge_end>Command()
State Property Expression(property)<edge_begin><edge_end>State(initial, final, id, name)
Local Alternative(description)<edge_begin><edge_end>Condition(condition)
Exception Flow(condition)<edge_begin><edge_end>Named Flow(name)
Alternative Flow Alternative()<edge_begin><edge_end>Named Flow(name)
Use Case(name, uc Name, goals)<edge_begin><edge_end>Page Ref()
Condition(condition)<edge_begin><edge_end>Step Alternative(finalize Flow, final State)
Use Cases Model()<edge_begin><edge_end>Namespace Import()
Dynamic Column Family()<edge_begin><edge_end>Column(name)
Primitive Type(kind)<edge_begin><edge_end>Type()
Hex Literal(value)<edge_begin><edge_end>Literal()
Reaction Trigger()<edge_begin><edge_end>Event Spec()
Assignment(operator)<edge_begin><edge_end>Expression()
Element Reference Expression()<edge_begin><edge_end>Expression()
Local Reaction()<edge_begin><edge_end>Reaction Properties()
Bitwise Xor Expression()<edge_begin><edge_end>Expression()
Variable Definition(readonly, external)<edge_begin><edge_end>Expression()
Exit Point Spec()<edge_begin><edge_end>Exitpoint()
Logical Or Expression()<edge_begin><edge_end>Expression()
Regular Event Spec()<edge_begin><edge_end>Event Spec()
Custom Pragmatics()<edge_begin><edge_end>Pragmatic(name)
Explicit()<edge_begin><edge_end>Pragmatic(name)
Atomic()<edge_begin><edge_end>Transition()
Abstract Template Tree()<edge_begin><edge_end>Principal()
Has Name()<edge_begin><edge_end>Name()
Arc()<edge_begin><edge_end>HL Arc Addin(kind)
Name()<edge_begin><edge_end>HL Annotation()
Loop()<edge_begin><edge_end>Container()
Page()<edge_begin><edge_end>Petri Net(kind, time Type)
Place()<edge_begin><edge_end>Place Node()
Proceedings(editor, volume, number, series, address, organization, publisher, note)<edge_begin><edge_end>Dated Entry(year, month)
Titled Entry(title)<edge_begin><edge_end>String()
Masters Thesis()<edge_begin><edge_end>Thesis Entry(type, address, note)
Manual(organization, address, edition, note)<edge_begin><edge_end>Titled Entry(title)
Booklet(howpublished, address, note)<edge_begin><edge_end>Dated Entry(year, month)
In Proceedings(pages)<edge_begin><edge_end>Book Titled Entry(booktitle)
Publishered Entry(publisher)<edge_begin><edge_end>String()
Authored Entry()<edge_begin><edge_end>Entry(id, abstract)
In Book(chapter, type)<edge_begin><edge_end>Book(volume, number, series, address, edition, note)
Manual(organization, address, edition, note)<edge_begin><edge_end>Dated Entry(year, month)
Article(volume, number, pages, note)<edge_begin><edge_end>Journal Entry(journal)
Tech Report(type, number, address, note)<edge_begin><edge_end>Authored Entry()
Tech Report(type, number, address, note)<edge_begin><edge_end>Dated Entry(year, month)
Article(volume, number, pages, note)<edge_begin><edge_end>Dated Entry(year, month)
Geom()<edge_begin><edge_end>Arc To()
Tp()<edge_begin><edge_end>Text Elt()
Pages Collection()<edge_begin><edge_end>Page(background, back Page, view Scale, view Center X, View Center Y, reviewer ID, associated Page)
Face Name(name, unicode Ranges, char Set, panos, flags)<edge_begin><edge_end>Integer()
Shape(line Style, fill Style, text Style)<edge_begin><edge_end>Shape Elt()
Move To()<edge_begin><edge_end>Geom()
Master(base ID, match By Name, icon Size, pattern Flags, prompt, hidden, icon Update, align Name)<edge_begin><edge_end>Master Elt()
Visio Document(start, key, metric, buildnum, version, doc Lang Id)<edge_begin><edge_end>Pages Collection()
Infinite Line()<edge_begin><edge_end>Geom()
Document Sheet()<edge_begin><edge_end>Page Sheet()
Text()<edge_begin><edge_end>Text Elt()
Fld()<edge_begin><edge_end>Text Elt()
Ellipse()<edge_begin><edge_end>Geom()
IX Elt(i X)<edge_begin><edge_end>Integer()
Tab()<edge_begin><edge_end>Cell Type(unit, formula, err, value)
Shape Elt()<edge_begin><edge_end>Shape(line Style, fill Style, text Style)
Visio Document(start, key, metric, buildnum, version, doc Lang Id)<edge_begin><edge_end>Document Settings Elt()
Tabs Collection()<edge_begin><edge_end>Del Elt(del)
Field()<edge_begin><edge_end>Cell Type(unit, formula, err, value)
Face Name(name, unicode Ranges, char Set, panos, flags)<edge_begin><edge_end>Identified Elt(ID)
Infinite Line()<edge_begin><edge_end>XYAB Elt()
Cp()<edge_begin><edge_end>I Xrequired Elt(i X)
NURBS To()<edge_begin><edge_end>XYABCDE Elt()
Connect(from Sheet, to Sheet, from Cell, to Cell, from Part, to Part)<edge_begin><edge_end>String()
Document Properties Collection(title, subject, creator, manager, company, category, keywords, description, hyperlink Base href, alternate Names, template, build Number Created, build Number Edited)<edge_begin><edge_end>Date Time Type(year, month, day, hour, minute, second)
Visio Document(start, key, metric, buildnum, version, doc Lang Id)<edge_begin><edge_end>Masters Collection()
XYA Elt()<edge_begin><edge_end>XY Elt()
Page(background, back Page, view Scale, view Center X, View Center Y, reviewer ID, associated Page)<edge_begin><edge_end>Identified Elt(ID)
Face Names Table()<edge_begin><edge_end>Face Name(name, unicode Ranges, char Set, panos, flags)
Colors Table()<edge_begin><edge_end>Visio Document(start, key, metric, buildnum, version, doc Lang Id)
Font Entry(name, char Set, pitch And Family, attributes, weight, unicode)<edge_begin><edge_end>Integer()
Ellipse()<edge_begin><edge_end>XYABCD Elt()
Para()<edge_begin><edge_end>Cell Type(unit, formula, err, value)
Page(background, back Page, view Scale, view Center X, View Center Y, reviewer ID, associated Page)<edge_begin><edge_end>Page Elt()
Geom()<edge_begin><edge_end>Del Elt(del)
Font Entry(name, char Set, pitch And Family, attributes, weight, unicode)<edge_begin><edge_end>Boolean()
Solution XML()<edge_begin><edge_end>Visio Document(start, key, metric, buildnum, version, doc Lang Id)
Connect(from Sheet, to Sheet, from Cell, to Cell, from Part, to Part)<edge_begin><edge_end>Integer()
Page Sheet()<edge_begin><edge_end>Shape(line Style, fill Style, text Style)
Design Element Reference(evaluation Result)<edge_begin><edge_end>Referenced Design Elements(agregation Type)
Stakeholder()<edge_begin><edge_end>Identified Element(name, id, description)
Satisfiable Design Element Ref()<edge_begin><edge_end>Satisfiable Element(satisfaction Level)
Syst Overview Design Elem Ref()<edge_begin><edge_end>Design Element Reference(evaluation Result)
Textual Contractual Element(priority)<edge_begin><edge_end>Normalized Ratio()
Textual Contractual Element(priority)<edge_begin><edge_end>Textual Contractual Element(priority)
Conflict(degree)<edge_begin><edge_end>Abstract Goal()
Abstract Goal()<edge_begin><edge_end>Satisfiable Element(satisfaction Level)
Abstract Requirement(risk)<edge_begin><edge_end>Verification Activity(passed)
Ref Manually Selected Design Elements()<edge_begin><edge_end>Referenced Design Elements(agregation Type)
Goals Package()<edge_begin><edge_end>Goal Refinement()
Requirements Package()<edge_begin><edge_end>Satisfiable Element(satisfaction Level)
Verification Activity(passed)<edge_begin><edge_end>Abstract Requirement(risk)
Capability()<edge_begin><edge_end>Identified Element(name, id, description)
Specification(version)<edge_begin><edge_end>Rdal Org Package(contractual Element Entries, refinement Entries)
System Context()<edge_begin><edge_end>Actor Reference()
Requirement Refinement()<edge_begin><edge_end>Element Refinement(sub Element Ref Entries, refined Element Entries)
Requirement()<edge_begin><edge_end>Refineable Element()
Sensitivity()<edge_begin><edge_end>Traceable To Design Elements Element()
Specification(version)<edge_begin><edge_end>Satisfiable Element(satisfaction Level)
Abstract Contractual Element(origin Date, schedule Date, sources, dropped)<edge_begin><edge_end>Contact Information(address, email, phone Number, country)
Abstract Contractual Element(origin Date, schedule Date, sources, dropped)<edge_begin><edge_end>Stakeholder()
Goals Package()<edge_begin><edge_end>Satisfiable Element(satisfaction Level)
Verification Activity(passed)<edge_begin><edge_end>Identified Element(name, id, description)
Sub Element Reference(weight, referenced Element Entries)<edge_begin><edge_end>Normalized Ratio()
Specification(version)<edge_begin><edge_end>Non Functional Property()
S Column(simple Type)<edge_begin><edge_end>S Ext Declared SQL Type()
S Enum()<edge_begin><edge_end>S Artifact(name)
S Model(generated File)<edge_begin><edge_end>S Artifact(name)
Project()<edge_begin><edge_end>Describable Element(description)
Task Parameter()<edge_begin><edge_end>Task Element()
Task Element()<edge_begin><edge_end>Attribute(value)
Describable Element(description)<edge_begin><edge_end>String()
Association Data State Base()<edge_begin><edge_end>State Base(default Transition, marked)
Primitive State()<edge_begin><edge_end>State Base(default Transition, marked)
State()<edge_begin><edge_end>Primitive State()
Association State State()<edge_begin><edge_end>Transition(guard, trigger, action, is Sync)
Association State State()<edge_begin><edge_end>State Base(default Transition, marked)
Init()<edge_begin><edge_end>Primitive State()
And State()<edge_begin><edge_end>Compound State()
Or State()<edge_begin><edge_end>Transition(guard, trigger, action, is Sync)
Transition(guard, trigger, action, is Sync)<edge_begin><edge_end>Mga Object(name, position)
Classifier(is Abstract)<edge_begin><edge_end>Use Case()
Element()<edge_begin><edge_end>Element()
Named Element(name, visibility, qualified Name)<edge_begin><edge_end>String()
Classifier(is Abstract)<edge_begin><edge_end>Redefinable Element(is Leaf)
Classifier(is Abstract)<edge_begin><edge_end>Named Element(name, visibility, qualified Name)
Redefinable Element(is Leaf)<edge_begin><edge_end>Boolean()
Use Case()<edge_begin><edge_end>Extension Point()
Extend()<edge_begin><edge_end>Directed Relationship()
Character String Type(descriptor, length def)<edge_begin><edge_end>Predefined Type()
Structural Component(name)<edge_begin><edge_end>Domain(name, expression, default)
Table(name)<edge_begin><edge_end>Column(default)
View()<edge_begin><edge_end>Derived Table(query expression)
Method Parameter()<edge_begin><edge_end>Method(name, body)
Domain(name, expression, default)<edge_begin><edge_end>Structural Component(name)
Reference Type()<edge_begin><edge_end>Constructed Type(name)
ROW()<edge_begin><edge_end>ROW()
Numeric Feature(key, value)<edge_begin><edge_end>Feature()
Schema(name)<edge_begin><edge_end>Behavioural Component(name, body)
Predefined Type()<edge_begin><edge_end>Data Type()
Schema(name)<edge_begin><edge_end>Domain(name, expression, default)
Referential Constraint(delete action, update action, match)<edge_begin><edge_end>Unique Constraint()
Table Constraint(name)<edge_begin><edge_end>Restriction()
Field()<edge_begin><edge_end>Structural Component(name)
Binary String Type(descriptor, length def)<edge_begin><edge_end>Predefined Type()
Distinct Type()<edge_begin><edge_end>Feature()
Primary Key()<edge_begin><edge_end>Unique Constraint()
Era Type(calendar, style)<edge_begin><edge_end>Calendar Type()
Document Root(mixed, text, automatic Order, calendar, country, decimal Places, decimal Replacement, denominator Value, display Factor, format Source, grouping, language, min Denominator Digits, min Exponent Digits, min Integer Digits, min Numerator Digits, position, possessive Form, style, textual, title, transliteration Country, transliteration Format, transliteration Language, transliteration Style, truncate On Overflow)<edge_begin><edge_end>Day Type(calendar, style)
Date Style Type(text, group, text1, automatic Order, country, format Source, language, name, title, transliteration Country, transliteration Format, transliteration Language, transliteration Style, volatile)<edge_begin><edge_end>Day Type(calendar, style)
Document Root(mixed, text, automatic Order, calendar, country, decimal Places, decimal Replacement, denominator Value, display Factor, format Source, grouping, language, min Denominator Digits, min Exponent Digits, min Integer Digits, min Numerator Digits, position, possessive Form, style, textual, title, transliteration Country, transliteration Format, transliteration Language, transliteration Style, truncate On Overflow)<edge_begin><edge_end>Boolean Style Type(text, text1, country, language, name, title, transliteration Country, transliteration Format, transliteration Language, transliteration Style, volatile)
Document Root(mixed, text, automatic Order, calendar, country, decimal Places, decimal Replacement, denominator Value, display Factor, format Source, grouping, language, min Denominator Digits, min Exponent Digits, min Integer Digits, min Numerator Digits, position, possessive Form, style, textual, title, transliteration Country, transliteration Format, transliteration Language, transliteration Style, truncate On Overflow)<edge_begin><edge_end>Am Pm Type()
Quarter Type(calendar, style)<edge_begin><edge_end>Calendar Type()
Document Root(mixed, text, automatic Order, calendar, country, decimal Places, decimal Replacement, denominator Value, display Factor, format Source, grouping, language, min Denominator Digits, min Exponent Digits, min Integer Digits, min Numerator Digits, position, possessive Form, style, textual, title, transliteration Country, transliteration Format, transliteration Language, transliteration Style, truncate On Overflow)<edge_begin><edge_end>Currency Symbol Type(mixed, country, language)
Date Style Type(text, group, text1, automatic Order, country, format Source, language, name, title, transliteration Country, transliteration Format, transliteration Language, transliteration Style, volatile)<edge_begin><edge_end>Day Of Week Type(calendar, style)
Day Type(calendar, style)<edge_begin><edge_end>Calendar Type()
Date Style Type(text, group, text1, automatic Order, country, format Source, language, name, title, transliteration Country, transliteration Format, transliteration Language, transliteration Style, volatile)<edge_begin><edge_end>Am Pm Type()
Lang Tag(lang)<edge_begin><edge_end>RDF Tag()
Describe Query()<edge_begin><edge_end>Selection Query()
Delete Data Query(graph)<edge_begin><edge_end>Modify Query(with Graph)
Filter Pattern()<edge_begin><edge_end>Graph Pattern()
Optional Graph Pattern()<edge_begin><edge_end>Graph Pattern()
Modify Query(with Graph)<edge_begin><edge_end>Update Operation()
Count Aggregate(is Distinct, is All)<edge_begin><edge_end>Aggregate()
Max Aggregate()<edge_begin><edge_end>Expr Agg Arg(is Distinct)
String Value(value)<edge_begin><edge_end>Value()
Value()<edge_begin><edge_end>RDF Tag()
Update Query()<edge_begin><edge_end>SPARQL Query()
Sub Select Query()<edge_begin><edge_end>Group Graph Pattern()
Integer Value(value)<edge_begin><edge_end>Value()
Variable(name)<edge_begin><edge_end>Group Condition()
Delete Query(graph)<edge_begin><edge_end>Group Graph Pattern()
Group Graph Pattern Sub()<edge_begin><edge_end>Graph Pattern()
Expression Filter Expression(operator)<edge_begin><edge_end>Filter Node()
Expr Agg Arg(is Distinct)<edge_begin><edge_end>Expression()
Sub Select Query()<edge_begin><edge_end>Variable(name)
Expression()<edge_begin><edge_end>Constraint()
Count Aggregate(is Distinct, is All)<edge_begin><edge_end>Expression()
Describe Query()<edge_begin><edge_end>Graph Node()
Graph Graph Pattern()<edge_begin><edge_end>Group Graph Pattern()
I Installable Unit(filter, id, version, resolved, singleton)<edge_begin><edge_end>I Touchpoint Type(id, version)
Installable Unit Request(name, version Range)<edge_begin><edge_end>Infos Provider(errors, warnings, infos)
Categories()<edge_begin><edge_end>Category()
Metadata Repository Reference(location, nature)<edge_begin><edge_end>Enabled Status Provider(enabled)
Installable Unit()<edge_begin><edge_end>Provided Capability()
Mapped Unit()<edge_begin><edge_end>Configuration(operating System, window System, architecture)
Installable Unit()<edge_begin><edge_end>Touchpoint Data()
Feature()<edge_begin><edge_end>Features()
Installable Unit Fragment()<edge_begin><edge_end>I Installable Unit Fragment()
Installable Unit Fragment()<edge_begin><edge_end>Required Capability()
Installable Unit()<edge_begin><edge_end>Property(key, value)
Aggregator(label, build Root, packed Strategy, sendmail, type, maven Result)<edge_begin><edge_end>Metadata Repository Reference(location, nature)
Mapped Unit()<edge_begin><edge_end>Enabled Status Provider(enabled)
I Artifact Key(classifier, id, version)<edge_begin><edge_end>Version()
Aggregator(label, build Root, packed Strategy, sendmail, type, maven Result)<edge_begin><edge_end>Status Provider()
Feature()<edge_begin><edge_end>IU Presentation With Details(details Resolved)
Metadata Repository Structured View(name, loaded)<edge_begin><edge_end>Installable Units()
Contribution(label)<edge_begin><edge_end>Enabled Status Provider(enabled)
Installable Unit Request(name, version Range)<edge_begin><edge_end>Status Provider()
Metadata Repository Reference(location, nature)<edge_begin><edge_end>Infos Provider(errors, warnings, infos)
Provided Capability Wrapper()<edge_begin><edge_end>Label Provider(label)
Category()<edge_begin><edge_end>Categories()
Touchpoint Type()<edge_begin><edge_end>I Touchpoint Type(id, version)
Required Capability()<edge_begin><edge_end>I Required Capability(filter, name, namespace, range, negation, selector List, multiple, optional, greedy)
Repository Reference(location, type, options, nickname)<edge_begin><edge_end>URI()
I Installable Unit(filter, id, version, resolved, singleton)<edge_begin><edge_end>Version()
I Installable Unit(filter, id, version, resolved, singleton)<edge_begin><edge_end>I License(location, body, digest)
Metadata Repository Reference(location, nature)<edge_begin><edge_end>Metadata Repository()
Net Element()<edge_begin><edge_end>URI(value)
Ided Element(id)<edge_begin><edge_end>String()
URI(value)<edge_begin><edge_end>String()
Label(text)<edge_begin><edge_end>String()
Label(text)<edge_begin><edge_end>Located Element(location)
PNML Document()<edge_begin><edge_end>Net Element()
Node(name)<edge_begin><edge_end>Arc(kind, weight)
Petri Net Event()<edge_begin><edge_end>PN Sim Event(internal, date, name)
Place dynamic(marking)<edge_begin><edge_end>Place(initial Marking)
Use Case(extension Point)<edge_begin><edge_end>Include()
Extension Point()<edge_begin><edge_end>Location Reference(value)
Use Case(extension Point)<edge_begin><edge_end>Classifier()
Include()<edge_begin><edge_end>Use Case(extension Point)
Conference(date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Integer()
Paper(paper ID, title)<edge_begin><edge_end>Document()
Author()<edge_begin><edge_end>Conference Member()
Reviewer()<edge_begin><edge_end>Review()
Submission Template()<edge_begin><edge_end>Event Setup()
Author()<edge_begin><edge_end>Paper(paper ID, title)
Review()<edge_begin><edge_end>Document()
Short Paper()<edge_begin><edge_end>Paper(paper ID, title)
Review Form Setup()<edge_begin><edge_end>Review Form()
User()<edge_begin><edge_end>Thing()
Person(email)<edge_begin><edge_end>Document()
Event URL()<edge_begin><edge_end>URL()
Paper Full Version()<edge_begin><edge_end>Paper(paper ID, title)
Review()<edge_begin><edge_end>Reviewer()
Conference(date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Administrator()
Paper Abstract()<edge_begin><edge_end>Paper(paper ID, title)
Paper(paper ID, title)<edge_begin><edge_end>Decision()
Person(email)<edge_begin><edge_end>Thing()
Reviewer()<edge_begin><edge_end>Paper(paper ID, title)
Chairman()<edge_begin><edge_end>Person(email)
Event()<edge_begin><edge_end>Approval Email()
Program Committee Chair()<edge_begin><edge_end>Program Committee Member(max Papers)
Bid()<edge_begin><edge_end>Reviewer()
Administrator()<edge_begin><edge_end>Role()
Administrator()<edge_begin><edge_end>Program Committee Member(max Papers)
Administrator()<edge_begin><edge_end>Paper(paper ID, title)
Todo(text)<edge_begin><edge_end>Mark Up()
Unordered List()<edge_begin><edge_end>Item()
Section3()<edge_begin><edge_end>Section4()
Xdoc File()<edge_begin><edge_end>Abstract Section()
Part()<edge_begin><edge_end>Abstract Section()
Chapter Ref()<edge_begin><edge_end>Chapter()
Table()<edge_begin><edge_end>Mark Up()
Section2()<edge_begin><edge_end>Section3()
Image Ref(name, path, clazz, style, caption)<edge_begin><edge_end>Mark Up()
Table Row()<edge_begin><edge_end>Table Data()
Ph D Thesis(title, year, month)<edge_begin><edge_end>Record(ee, url, key, mdate)
Article(title, from Page, to Page, number, volume, month, year)<edge_begin><edge_end>Record(ee, url, key, mdate)
Article(title, from Page, to Page, number, volume, month, year)<edge_begin><edge_end>Journal(name)
Proceedings(title, year, month, isbn)<edge_begin><edge_end>Publisher(name, address)
Book(title, year, month, volume, series, edition, isbn)<edge_begin><edge_end>Record(ee, url, key, mdate)
Bitwise And Expression()<edge_begin><edge_end>Expression()
Reaction Trigger()<edge_begin><edge_end>Expression()
Event Derivation()<edge_begin><edge_end>Expression()
Operation Call()<edge_begin><edge_end>Expression()
Logical Relation Expression(operator)<edge_begin><edge_end>Expression()
Int Literal(value)<edge_begin><edge_end>Literal()
Transition Reaction()<edge_begin><edge_end>Reaction Properties()
Operation Call()<edge_begin><edge_end>Operation(param Types, type)
Bool Literal(value)<edge_begin><edge_end>Literal()
Regular Event Spec()<edge_begin><edge_end>Event Spec()
Logical Not Expression()<edge_begin><edge_end>Expression()
Scope()<edge_begin><edge_end>Event()
Reaction()<edge_begin><edge_end>Trigger()
Transition(priority)<edge_begin><edge_end>Reaction()
Statechart()<edge_begin><edge_end>Composite Element()
Transition(priority)<edge_begin><edge_end>Vertex()
Final State()<edge_begin><edge_end>Regular State()
Build()<edge_begin><edge_end>Source(comment, handled, mark, content)
Plugin(extra)<edge_begin><edge_end>Extension(point Id, clazz, id, name, extra, diagraph)
Project(id, workspace)<edge_begin><edge_end>Build()
Project(id, workspace)<edge_begin><edge_end>Java(package)
Java(package)<edge_begin><edge_end>Project(id, workspace)
Manifest(symbolic Name, singleton, vendor, version, version Id, version Qualifier, lazy, execution Environment, diagraph)<edge_begin><edge_end>Export(name)
Turning Left Action(duration, start Tick, speed)<edge_begin><edge_end>Action()
Stop Action()<edge_begin><edge_end>Action()
FSM Event()<edge_begin><edge_end>Named Element(name)
Guard()<edge_begin><edge_end>Named Element(name)
State()<edge_begin><edge_end>Action()
Acceleratet Action(ratio, start Tick)<edge_begin><edge_end>Action()
TFSM()<edge_begin><edge_end>FSM Event()
Move Forward And Turning Right Action(duration, start Tick, diff, speed)<edge_begin><edge_end>Action()
Event Guard()<edge_begin><edge_end>FSM Event()
Goal(priority, synopsis)<edge_begin><edge_end>Annotable Element()
Agent(is Human)<edge_begin><edge_end>Goal(priority, synopsis)
Organization()<edge_begin><edge_end>Annotable Element()
Goal(priority, synopsis)<edge_begin><edge_end>Goal Step()
Privilege Group(documentation)<edge_begin><edge_end>Model Element()
SAP Test Input Parameter Table()<edge_begin><edge_end>SAP Function Parameter Table()
Ebcdic Connection(Mid File, Data File)<edge_begin><edge_end>File Connection(Server, File Path, Format, Encoding, Field Separator Value, Row Separator Type, Row Separator Value, Text Identifier, Use Header, Header Value, Use Footer, Footer Value, Use Limit, Limit Value, First Line Caption, Remove Empty Row, Escape Type, Escape Char, Text Enclosure, Csv Option)
HL7Connection(Start Char, End Char)<edge_begin><edge_end>File Connection(Server, File Path, Format, Encoding, Field Separator Value, Row Separator Type, Row Separator Value, Text Identifier, Use Header, Header Value, Use Footer, Footer Value, Use Limit, Limit Value, First Line Caption, Remove Empty Row, Escape Type, Escape Char, Text Enclosure, Csv Option)
Xml File Connection(Xsd File Path, Xml File Path, Guess, Mask X Pattern, Encoding)<edge_begin><edge_end>Xml X Path Loop Descriptor(Limit Boucle, Absolute X Path Query)
CDC Connection()<edge_begin><edge_end>Database Connection(Database Type, Driver Jar Path, Driver Class, URL, db Version String, Port, Username, Password, Server Name, Datasource Name, File Field Name, SID, Sql Synthax, String Quote, Null Char, Dbms Id, Product Id, DB Root Path, Additional Params, Standard SQL, System SQL, cdc Type Mode, SQL Mode, Ui Schema)
SAP Function Unit(Output Type, Output Table Name)<edge_begin><edge_end>Abstract Metadata Object(properties, id, comment, label, read Only, synchronised, divergency)
Connection(version, Context Mode, Context Id)<edge_begin><edge_end>Queries Connection()
MDM Connection(Username, Password, Port, Server, Universe, Datamodel, Datacluster)<edge_begin><edge_end>Connection(version, Context Mode, Context Id)
Output SAP Function Parameter Table()<edge_begin><edge_end>SAP Function Parameter Table()
SAP Function Unit(Output Type, Output Table Name)<edge_begin><edge_end>SAP Connection(Host, Username, Password, Client, System Number, Language, current Fucntion)
Concept Target(target Name, Relative Loop Expression)<edge_begin><edge_end>Concept(Loop Expression, Loop Limit)
Xml X Path Loop Descriptor(Limit Boucle, Absolute X Path Query)<edge_begin><edge_end>Xml File Connection(Xsd File Path, Xml File Path, Guess, Mask X Pattern, Encoding)
State Machine()<edge_begin><edge_end>State()
Activity()<edge_begin><edge_end>State Machine()
Model Element(name)<edge_begin><edge_end>Partition()
Object Flow State()<edge_begin><edge_end>State()
Paper()<edge_begin><edge_end>Progress(percent)
Paragraph(content)<edge_begin><edge_end>Review Note(content)
Publication Structure()<edge_begin><edge_end>Named(name)
Researcher(name, for Name, position)<edge_begin><edge_end>Place Holder Rs()
Place Holder PP()<edge_begin><edge_end>Place Holder()
Publication System()<edge_begin><edge_end>Publication Process(min Time, max Time)
Progress(percent)<edge_begin><edge_end>Publication Process(min Time, max Time)
Table Def()<edge_begin><edge_end>Database Object Def(label)
Connection Config(vendor, version, url, catalog, persistent)<edge_begin><edge_end>Connection Credentials()
Primary Constraint()<edge_begin><edge_end>Conflict Clause(resolution)
Unique Table Constraint()<edge_begin><edge_end>Conflict Clause(resolution)
Create View Statement(temporary)<edge_begin><edge_end>Select Statement()
Content Uri Param Segment(num, text)<edge_begin><edge_end>Content Uri Segment(name)
Select Statement()<edge_begin><edge_end>Expression()
Nested Expression()<edge_begin><edge_end>Expression()
Drop Table Statement(if Exists)<edge_begin><edge_end>Table Definition(name)
Update Statement(conflict Resolution)<edge_begin><edge_end>Expression()
Create Index Statement(unique, name)<edge_begin><edge_end>Table Definition(name)
Alter Table Add Column Statement()<edge_begin><edge_end>Table Definition(name)
Single Source Table()<edge_begin><edge_end>Table Definition(name)
Database Block(name)<edge_begin><edge_end>Config Block()
Single Source Table()<edge_begin><edge_end>Select Source(name)
Primary Constraint()<edge_begin><edge_end>Indexed Column(collation Name, asc, desc)
Result Column()<edge_begin><edge_end>Column Source(name)
Insert Statement(conflict Resolution)<edge_begin><edge_end>Column Def(type)
Literal Default Value()<edge_begin><edge_end>Default Value()
Update Statement(conflict Resolution)<edge_begin><edge_end>Table Definition(name)
Update Statement(conflict Resolution)<edge_begin><edge_end>DML Statement()
Init Block()<edge_begin><edge_end>DDL Statement()
Unique Table Constraint()<edge_begin><edge_end>Table Constraint(name)
Model(package Name)<edge_begin><edge_end>Database Block(name)
Unique Constraint()<edge_begin><edge_end>Column Constraint()
Database Block(name)<edge_begin><edge_end>Migration Block()
Expr And(op)<edge_begin><edge_end>Expression()
Migration Block()<edge_begin><edge_end>DDL Statement()
Function(all)<edge_begin><edge_end>Function Arg(type, name)
Delete Statement()<edge_begin><edge_end>Table Definition(name)
Object Property Domain()<edge_begin><edge_end>Object Property Expression()
Select Query()<edge_begin><edge_end>Templateable Element()
Datatype Property Declaration()<edge_begin><edge_end>Data Property Variable()
Disjoint Union()<edge_begin><edge_end>Class()
Different Individuals()<edge_begin><edge_end>Individual()
Asymmetric Object Property()<edge_begin><edge_end>Object Property Atom()
Equivalent Data Properties()<edge_begin><edge_end>Data Property Expression()
Parameterable Element()<edge_begin><edge_end>Template Parameter()
Template Binding()<edge_begin><edge_end>Templateable Element()
Datatype Restriction()<edge_begin><edge_end>Datatype()
Facet Restriction()<edge_begin><edge_end>Abstract Literal()
Data One Of()<edge_begin><edge_end>Data Range()
Data Has Value()<edge_begin><edge_end>Class Expression()
Template Parameter Substitution()<edge_begin><edge_end>Parameterable Element()
Sub Class Of()<edge_begin><edge_end>Class Atom()
Class Variable()<edge_begin><edge_end>Variable(symbol)
Sub Object Property Of()<edge_begin><edge_end>Object Property Atom()
Functional Object Property()<edge_begin><edge_end>Object Property Expression()
Describe Query()<edge_begin><edge_end>Query()
Has Key()<edge_begin><edge_end>Class Expression()
Template Signature()<edge_begin><edge_end>Template Parameter()
Construct Query()<edge_begin><edge_end>Templateable Element()
Inverse Object Property Atom()<edge_begin><edge_end>Object Property Expression()
Object Has Value()<edge_begin><edge_end>Class Expression()
Object Property Assertion()<edge_begin><edge_end>Assertion()
Disjoint Union()<edge_begin><edge_end>Class Expression()
Symmetric Object Property()<edge_begin><edge_end>Object Property Expression()
Object Has Value()<edge_begin><edge_end>Individual()
Object Property()<edge_begin><edge_end>Constant()
Data Exact Cardinality(cardinality)<edge_begin><edge_end>Class Expression()
Disjoint Classes()<edge_begin><edge_end>Class Atom()
Data Property Assertion()<edge_begin><edge_end>Abstract Literal()
Template Parameter()<edge_begin><edge_end>Parameterable Element()
Data Exact Cardinality(cardinality)<edge_begin><edge_end>Data Range()
Functional Data Property()<edge_begin><edge_end>Data Property Expression()
Data Property Domain()<edge_begin><edge_end>Data Property Atom()
Functional Data Property()<edge_begin><edge_end>Data Property Atom()
Transitive Object Property()<edge_begin><edge_end>Object Property Atom()
Class()<edge_begin><edge_end>Constant()
Disjoint Data Properties()<edge_begin><edge_end>Data Property Atom()
Data All Values From()<edge_begin><edge_end>Data Property Expression()
Template Parameter()<edge_begin><edge_end>Template Signature()
Template Binding()<edge_begin><edge_end>Template Parameter Substitution()
State(label, id)<edge_begin><edge_end>Declaration()
State(label, id)<edge_begin><edge_end>Transition(label, source Label, target Label, guard Label, action Label, guard Expression, action Statement)
Path(id, refid)<edge_begin><edge_end>Path(id, refid)
Tstamp()<edge_begin><edge_end>Miscellaneous Task()
Execution Task()<edge_begin><edge_end>Pre Defined Task(id, taskname, description)
Filter Set(starttoken, endtoken)<edge_begin><edge_end>Set()
In Excludes(name, if Condition, unless)<edge_begin><edge_end>String()
Java(classname, jar, fork)<edge_begin><edge_end>Execution Task()
Project(name, basedir, description)<edge_begin><edge_end>Task Def(name, classname)
Excludes()<edge_begin><edge_end>In Excludes(name, if Condition, unless)
Compile Task()<edge_begin><edge_end>Pre Defined Task(id, taskname, description)
Javac(srcdir, destdir, debug, fork, optimize, deprecation)<edge_begin><edge_end>String()
Jar(jarfile, basedir, compress, encoding, manifest)<edge_begin><edge_end>Archive Task()
Filter Set(starttoken, endtoken)<edge_begin><edge_end>String()
Filter(token, value)<edge_begin><edge_end>Basic()
Format Tstamp(property, pattern, offset, unit, locale)<edge_begin><edge_end>String()
Path Element(path, location)<edge_begin><edge_end>String()
Javac(srcdir, destdir, debug, fork, optimize, deprecation)<edge_begin><edge_end>Class Path(refid)
Javadoc(sourcepath, destdir, packagenames, defaultexcludes, author, version, use, windowtitle)<edge_begin><edge_end>Documentation Task()
Property Env(environment)<edge_begin><edge_end>Property()
Project(name, basedir, description)<edge_begin><edge_end>String()
Attribute(value)<edge_begin><edge_end>String()
Abstract Requirement()<edge_begin><edge_end>Text Element(description)
Text Element(description)<edge_begin><edge_end>String()
Document()<edge_begin><edge_end>Project()
PNML Document()<edge_begin><edge_end>Net Element()
Position()<edge_begin><edge_end>Node Graphics()
Reference()<edge_begin><edge_end>Node()
Fill(gradientrotation)<edge_begin><edge_end>Edge Graphics()
Reference()<edge_begin><edge_end>NC Name(value)
Net Graphics()<edge_begin><edge_end>Graphics()
Net Element()<edge_begin><edge_end>Tool Specific(tool, version)
Interface()<edge_begin><edge_end>Module()
Page()<edge_begin><edge_end>Ided Element(id)
Font(family, style, weight, size, decoration, align, rotation)<edge_begin><edge_end>String()
Tool Specific(tool, version)<edge_begin><edge_end>Any Element(name, text)
Instance()<edge_begin><edge_end>Net Content()
Annotation Graphics()<edge_begin><edge_end>Offset()
Net Element()<edge_begin><edge_end>Name()
Reference()<edge_begin><edge_end>Import Node()
Instance()<edge_begin><edge_end>URI(value)
Arc()<edge_begin><edge_end>Net Content()
Fill(gradientrotation)<edge_begin><edge_end>Node Graphics()
PNML Document()<edge_begin><edge_end>URI(value)
Net Content()<edge_begin><edge_end>Net Element()
Line(width, shape, style)<edge_begin><edge_end>Integer()
Annotation Graphics()<edge_begin><edge_end>Labeled Element()
Node()<edge_begin><edge_end>Ided Element(id)
Data Base(SGB Dname)<edge_begin><edge_end>Table()
Table()<edge_begin><edge_end>Data Base(SGB Dname)
TABLE(border, width, cellspacing, cellpadding)<edge_begin><edge_end>TR(valign, align)
DIV(align)<edge_begin><edge_end>String()
TABLE(border, width, cellspacing, cellpadding)<edge_begin><edge_end>String()
BR(clear)<edge_begin><edge_end>String()
STRONG()<edge_begin><edge_end>BODY Element()
TD(colspan, rowspan, valign, align, width)<edge_begin><edge_end>TABLE Element(bgcolor, background)
H2()<edge_begin><edge_end>BODY Element()
BBODY(background, bgcolor, text, link, alink, vlink)<edge_begin><edge_end>HTML()
BODY Element()<edge_begin><edge_end>HTML Element(value)
H5()<edge_begin><edge_end>BODY Element()
A(ahref, name, id)<edge_begin><edge_end>String()
LINK(rel, title, ahref, type)<edge_begin><edge_end>String()
Functional Requirement()<edge_begin><edge_end>Abstract Feature()
Goal(soft, type)<edge_begin><edge_end>Goal Reference(weight)
Abstract Feature()<edge_begin><edge_end>Abstract Feature()
Goal Reference(weight)<edge_begin><edge_end>Urml Model Element(reviewed)
Actor()<edge_begin><edge_end>Asset()
Danger()<edge_begin><edge_end>Asset()
Use Case()<edge_begin><edge_end>Actor()
Goal(soft, type)<edge_begin><edge_end>Goal(soft, type)
Variation Point Instance()<edge_begin><edge_end>Variation Point(multiplicity)
Abstract Feature()<edge_begin><edge_end>Variation Point(multiplicity)
Abstract Feature()<edge_begin><edge_end>Goal(soft, type)
Feature()<edge_begin><edge_end>Product()
Place(group, id)<edge_begin><edge_end>Initial Marking(text)
Processing Time()<edge_begin><edge_end>Stat(text)
Arc Type(text)<edge_begin><edge_end>Text Type()
Arc(group, id, source, target)<edge_begin><edge_end>Arc Type(text)
Pnml(group)<edge_begin><edge_end>Net(group, id, type)
Edge Graphics()<edge_begin><edge_end>Two Dim Vector(x, y)
Page(group, id)<edge_begin><edge_end>Transition(group, id)
Net(group, id, type)<edge_begin><edge_end>Page(group, id)
Place(group, id)<edge_begin><edge_end>Toolspecific Type(mixed, group, any, tool, version)
Net(group, id, type)<edge_begin><edge_end>Transition(group, id)
Page(group, id)<edge_begin><edge_end>Transition Type(text)
Petri Net(kind, time Type)<edge_begin><edge_end>Has Tool Info()
Petri Net(kind, time Type)<edge_begin><edge_end>Has Label()
HL Declaration()<edge_begin><edge_end>Annotation()
Ref Trans()<edge_begin><edge_end>Transition Node()
Page()<edge_begin><edge_end>Arc()
Place()<edge_begin><edge_end>Place Node()
Petri Net(kind, time Type)<edge_begin><edge_end>Has Id(id)
Object()<edge_begin><edge_end>Has Name()
Annotation()<edge_begin><edge_end>Label()
Object()<edge_begin><edge_end>Has Label()
Fusion Group()<edge_begin><edge_end>Petri Net(kind, time Type)
Has Name()<edge_begin><edge_end>Name()
Page()<edge_begin><edge_end>Object()
Paper Keyword(weight)<edge_begin><edge_end>Keyword(word)
Paper()<edge_begin><edge_end>Researcher(name, for Name)
Review(date)<edge_begin><edge_end>Review Note(content)
Paper()<edge_begin><edge_end>Paper Keyword(weight)
Researcher(name, for Name)<edge_begin><edge_end>Position(description)
Paragraph(content)<edge_begin><edge_end>Named(name)
Publication Structure()<edge_begin><edge_end>Position(description)
Researcher(name, for Name)<edge_begin><edge_end>Write(time Spent)
Paper()<edge_begin><edge_end>Paper Keyword(weight)
Researcher(name, for Name)<edge_begin><edge_end>Review(date)
Bytes Type(value)<edge_begin><edge_end>Data Type()
Super Column(key)<edge_begin><edge_end>Column(key, timestamp)
Bytes Type(value)<edge_begin><edge_end>Bytes()
Decimal Type(value)<edge_begin><edge_end>Data Type()
Number Value()<edge_begin><edge_end>Constant Value(value)
G Composite State()<edge_begin><edge_end>G State()
Call(action Id)<edge_begin><edge_end>Value()
G Statemachine(package)<edge_begin><edge_end>Parameter()
Abstract Node()<edge_begin><edge_end>Transition(operations)
State(active)<edge_begin><edge_end>State(active)
Arc()<edge_begin><edge_end>Arc()
Place()<edge_begin><edge_end>Sort()
Publication Status(label)<edge_begin><edge_end>State(id, kind, name)
Publication System()<edge_begin><edge_end>Publication Status(label)
Researcher(name, for Name)<edge_begin><edge_end>Write(time Spent)
Paper()<edge_begin><edge_end>State(id, kind, name)
Researcher(name, for Name)<edge_begin><edge_end>Position(description)
Action(action Label, action Statement)<edge_begin><edge_end>Action(action Label, action Statement)
Transition(guard Label, guard Expression)<edge_begin><edge_end>Action(action Label, action Statement)
State(id, kind, name)<edge_begin><edge_end>Action(action Label, action Statement)
Keyword(word)<edge_begin><edge_end>Named(name)
Paper()<edge_begin><edge_end>Paper Keyword(weight)
State Transition()<edge_begin><edge_end>Event()
State()<edge_begin><edge_end>State Transition()
State Machine()<edge_begin><edge_end>Transition()
State Vertex()<edge_begin><edge_end>Transition()
Boolean Expression(value)<edge_begin><edge_end>String()
Event()<edge_begin><edge_end>State()
Expression(unary Operator, is Not)<edge_begin><edge_end>Literal()
Expression(unary Operator, is Not)<edge_begin><edge_end>Select Statement()
Where Clause()<edge_begin><edge_end>Expression(unary Operator, is Not)
Update Statement()<edge_begin><edge_end>Set Clause()
Parameter Expression(name, index)<edge_begin><edge_end>Variable()
Null Literal(value)<edge_begin><edge_end>Literal()
Variable()<edge_begin><edge_end>Expression(unary Operator, is Not)
Boolean Literal(value)<edge_begin><edge_end>Literal()
From Clause()<edge_begin><edge_end>From Entry()
Select Statement()<edge_begin><edge_end>Expression Term()
Expression(unary Operator, is Not)<edge_begin><edge_end>Expression(unary Operator, is Not)
From Class(type)<edge_begin><edge_end>From Entry()
Select Constructor Expression(name)<edge_begin><edge_end>Select Expression()
Behavioural Component(name, body)<edge_begin><edge_end>Schema(name)
MULTISET()<edge_begin><edge_end>Collection Type()
Structured Type(is final, is instantiable)<edge_begin><edge_end>User Defined Type(name)
Column(default)<edge_begin><edge_end>Structural Component(name)
Method(name, body)<edge_begin><edge_end>Method(name, body)
Behavioural Component(name, body)<edge_begin><edge_end>Parameter With Mode(mode)
Interval Feature(key, value)<edge_begin><edge_end>Feature()
Field()<edge_begin><edge_end>ROW()
Schema(name)<edge_begin><edge_end>Behavioural Component(name, body)
Structural Component(name)<edge_begin><edge_end>Domain(name, expression, default)
Datetime Type(descriptor)<edge_begin><edge_end>Predefined Type()
Attribute(default)<edge_begin><edge_end>Structural Component(name)
Procedure()<edge_begin><edge_end>Behavioural Component(name, body)
Interval Type(descriptor)<edge_begin><edge_end>Predefined Type()
Table(name)<edge_begin><edge_end>Schema(name)
View()<edge_begin><edge_end>Structural Component(name)
Domain(name, expression, default)<edge_begin><edge_end>Schema(name)
Binary String Type(descriptor, length def)<edge_begin><edge_end>Predefined Type()
Paper(title, url4pdf, state)<edge_begin><edge_end>Publication()
In Proceedings()<edge_begin><edge_end>Publication()
Team(name, meaning, status, url Page)<edge_begin><edge_end>Publication()
Person(name, firstname, affiliation, phone, mail)<edge_begin><edge_end>Seminar(title, abstract, place, date From, date Until, url4slides)
String Value(value)<edge_begin><edge_end>Value Type()
Cell(array Range, formula, h Ref, merge Across, merge Down)<edge_begin><edge_end>Row(auto Fit Height, height)
Column(auto Fit Width, width)<edge_begin><edge_end>Col Or Row Element(hidden, span)
Row(auto Fit Height, height)<edge_begin><edge_end>Col Or Row Element(hidden, span)
Task(group, name, pre Reboot Device, timeout)<edge_begin><edge_end>Retrieve From Symbian(group)
Test Execute Script(p C Path, symbian Path)<edge_begin><edge_end>Symbian Path()
Task(group, name, pre Reboot Device, timeout)<edge_begin><edge_end>Flash ROM(p C Path)
Document Root(mixed)<edge_begin><edge_end>Driver()
Task(group, name, pre Reboot Device, timeout)<edge_begin><edge_end>Execute On Symbian(group)
Template(type)<edge_begin><edge_end>Paragraph Types()
Heading4()<edge_begin><edge_end>Paragraph Types()
Any Text()<edge_begin><edge_end>Paragraph Types()
Quote Template()<edge_begin><edge_end>Template(type)
Italic()<edge_begin><edge_end>Abstract Formatted Inline Content()
Heading2()<edge_begin><edge_end>Abstract Unformatted Inline Content()
Ordered List()<edge_begin><edge_end>Paragraph Types()
Block Quote()<edge_begin><edge_end>Paragraph Types()
Italic Bold()<edge_begin><edge_end>Abstract Formatted Inline Content()
Verifiable Element(verified)<edge_begin><edge_end>Contractual Element(sources, origin Date, schedule Date, dropped, dropping Reason, satisfaction Level, time Criticality)
Requirements Coverage Data(nb Requirements, verification Level)<edge_begin><edge_end>Ratio()
Actor(address, email, phone Number)<edge_begin><edge_end>Interaction(direction)
Contractual Element(sources, origin Date, schedule Date, dropped, dropping Reason, satisfaction Level, time Criticality)<edge_begin><edge_end>Uncertainty(volatility, costs Impact, schedule Impact, precedence, risk Index, prop Risk Index, maturity Index)
Contractual Element(sources, origin Date, schedule Date, dropped, dropping Reason, satisfaction Level, time Criticality)<edge_begin><edge_end>Actor(address, email, phone Number)
Trace()<edge_begin><edge_end>Specification(version)
Requirement()<edge_begin><edge_end>Assumption(type)
Specification(version)<edge_begin><edge_end>Conflict(degree)
Requirement()<edge_begin><edge_end>Requirement()
Conflict(degree)<edge_begin><edge_end>Ratio()
Requirements Group()<edge_begin><edge_end>Specification(version)
System Overview(purpose, capabilities)<edge_begin><edge_end>Variable(type)
System Context()<edge_begin><edge_end>Variable(type)
Rationale()<edge_begin><edge_end>Identified Element(id, name, description)
Right(value)<edge_begin><edge_end>Class(name)
Join Left()<edge_begin><edge_end>Metamodel Name(name)
Select Attribute()<edge_begin><edge_end>Class(name)
Join()<edge_begin><edge_end>Join Right()
Model(view Name)<edge_begin><edge_end>Expression()
Step To Transition()<edge_begin><edge_end>Step(is Initial, is Active, action)
Step To Transition()<edge_begin><edge_end>Transition(condition)
Element()<edge_begin><edge_end>Named Element(name)
Transition To Step()<edge_begin><edge_end>Step(is Initial, is Active, action)
Transition(condition)<edge_begin><edge_end>Transition To Step()
Sistedes Member()<edge_begin><edge_end>Edition(year, location)
Publication()<edge_begin><edge_end>Person(name, surname, email, nationality)
Root()<edge_begin><edge_end>Def Root()
Logical Relation Expression(operator)<edge_begin><edge_end>Expression()
State Root()<edge_begin><edge_end>Def Root()
Event Definition(direction, type)<edge_begin><edge_end>Event Derivation()
Operation Call()<edge_begin><edge_end>Expression()
Bitwise And Expression()<edge_begin><edge_end>Expression()
Assignment(operator)<edge_begin><edge_end>Expression()
Conditional Expression()<edge_begin><edge_end>Expression()
Entry Point Spec()<edge_begin><edge_end>Reaction Property()
Simple State()<edge_begin><edge_end>State(name)
State Machine()<edge_begin><edge_end>Final state()
Init()<edge_begin><edge_end>Expression()
Field()<edge_begin><edge_end>Literal()
Arithmetic Expression(operator)<edge_begin><edge_end>Expression()
Policy(name, parser URI)<edge_begin><edge_end>Automata(name)
Has Label()<edge_begin><edge_end>Label()
Object()<edge_begin><edge_end>Has Name()
Has Name()<edge_begin><edge_end>Name()
Page()<edge_begin><edge_end>Has Id(id)
Arc()<edge_begin><edge_end>Has Id(id)
Parameter Assignment(parameter, value)<edge_begin><edge_end>Instance(sub Page ID)
Page()<edge_begin><edge_end>Object()
Name()<edge_begin><edge_end>HL Annotation()
Object()<edge_begin><edge_end>Has Tool Info()
Place Node()<edge_begin><edge_end>HL Place Addin()
Transition Node()<edge_begin><edge_end>CPN Tools Transition Addin()
Petri Net(type)<edge_begin><edge_end>Page()
Automaton(name)<edge_begin><edge_end>Input(name)
Output(name)<edge_begin><edge_end>Return Value(name, is Void)
Document Properties Collection(title, subject, keywords, description, category, author, last Author, manager, company, hyperlink Base, revision, presentation Format, guid, app Name, total Time, pages, words, characters, characters With Spaces, bytes, lines, paragraphs)<edge_begin><edge_end>Date Time Type(year, month, day, hour, minute, second)
Del Text()<edge_begin><edge_end>Run Content Elt()
Body Elt()<edge_begin><edge_end>Word Document()
Endnote Ref()<edge_begin><edge_end>Run Content Elt()
Custom Document Properties Collection()<edge_begin><edge_end>Word Document()
Symbol()<edge_begin><edge_end>Run Content Elt()
Float Value(value)<edge_begin><edge_end>Double()
Boolean Value(value)<edge_begin><edge_end>Boolean()
Del Instr Text()<edge_begin><edge_end>Run Content Elt()
Picture()<edge_begin><edge_end>Run Content Elt()
Doc Pr Elt()<edge_begin><edge_end>Word Document()
Fld Char()<edge_begin><edge_end>Run Content Elt()
Endnote()<edge_begin><edge_end>Note Elt(type, suppress Ref)
Document Properties Collection(title, subject, keywords, description, category, author, last Author, manager, company, hyperlink Base, revision, presentation Format, guid, app Name, total Time, pages, words, characters, characters With Spaces, bytes, lines, paragraphs)<edge_begin><edge_end>Word Document()
Custom Document Property(name)<edge_begin><edge_end>Value Type()
Sym Elt()<edge_begin><edge_end>String Type(val)
Del Text()<edge_begin><edge_end>String Type(val)
Custom Document Property(name)<edge_begin><edge_end>String()
X Expr(xf)<edge_begin><edge_end>Operands()
From Table Join(join)<edge_begin><edge_end>Table Or Alias(alias)
Full Expression(c, not Prm, isnull)<edge_begin><edge_end>Or Expr()
SQL Case Operand()<edge_begin><edge_end>Or Expr()
Select(select)<edge_begin><edge_end>Or Column()
Like(op Like)<edge_begin><edge_end>Like Operand(op2)
Col()<edge_begin><edge_end>Db Object Name(dbname)
Full Expression(c, not Prm, isnull)<edge_begin><edge_end>X Expr(xf)
Column Or Alias(alias, all Cols)<edge_begin><edge_end>Db Object Name(dbname)
When List()<edge_begin><edge_end>Sql Case When()
When List()<edge_begin><edge_end>SQL Case Whens()
Db Object Name(dbname)<edge_begin><edge_end>Table Full()
Plus()<edge_begin><edge_end>Operands()
Column Or Alias(alias, all Cols)<edge_begin><edge_end>Or Column()
Operand()<edge_begin><edge_end>Column Operand()
From Table()<edge_begin><edge_end>Or Table()
Op F List()<edge_begin><edge_end>Op Function Arg()
Or Group By Column()<edge_begin><edge_end>Group By Column Full()
Place(token, final Marking)<edge_begin><edge_end>Node(name, type)
Arc To Transition()<edge_begin><edge_end>Arc(weight)
Pt Net()<edge_begin><edge_end>Arc(weight)
Step(name)<edge_begin><edge_end>String()
Operator(op Name)<edge_begin><edge_end>String()
Sequence Term()<edge_begin><edge_end>Term()
Set Type()<edge_begin><edge_end>Type(with Null)
Integer Constant(val)<edge_begin><edge_end>Constant()
For All Term()<edge_begin><edge_end>Predicate Term()
Body()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Method(is Abstract, is Shared, is Entry Point, is Override)<edge_begin><edge_end>Var Or Method()
Method Invocation()<edge_begin><edge_end>Rule()
Boolean Constant(val)<edge_begin><edge_end>Boolean()
Method Invocation()<edge_begin><edge_end>Method Call Term(name)
Class(name, is Abstract, super Class Name)<edge_begin><edge_end>Asm L Element()
Update Field Rule()<edge_begin><edge_end>Var Term(name)
Body()<edge_begin><edge_end>Rule()
Method(is Abstract, is Shared, is Entry Point, is Override)<edge_begin><edge_end>Type(with Null)
Asm L Element()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Add Rule()<edge_begin><edge_end>Rule()
Boolean Constant(val)<edge_begin><edge_end>Constant()
Add Rule()<edge_begin><edge_end>Var Term(name)
Forall Rule()<edge_begin><edge_end>Body()
Enumerator(name)<edge_begin><edge_end>String()
Class(name, is Abstract, super Class Name)<edge_begin><edge_end>Boolean()
Rule()<edge_begin><edge_end>Body()
Predicate Term()<edge_begin><edge_end>Term()
Case(name)<edge_begin><edge_end>Var Declaration(is Constant, is Declaration, is Local, name)
Var Term(name)<edge_begin><edge_end>Term()
Sequence Type()<edge_begin><edge_end>Type(with Null)
Asm L File()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Step(name)<edge_begin><edge_end>Rule()
Check Con(check Condition)<edge_begin><edge_end>Constraints(deferrable, deferred)
Database()<edge_begin><edge_end>Model Element(name)
Table()<edge_begin><edge_end>Model Element(name)
Database()<edge_begin><edge_end>User Defined Data Type(precision, length, default Value)
P Key And Unique()<edge_begin><edge_end>Constraints(deferrable, deferred)
View()<edge_begin><edge_end>Database()
Column(type)<edge_begin><edge_end>Name Provider(name)
Check Column Constraint()<edge_begin><edge_end>Column Constraint(name)
Index()<edge_begin><edge_end>Database()
Trigger()<edge_begin><edge_end>Database()
Column Constraint(name)<edge_begin><edge_end>Column(type)
Column(type)<edge_begin><edge_end>Column Constraint(name)
Table Constraint(name)<edge_begin><edge_end>Table()
Foreign Key Column Constraint()<edge_begin><edge_end>Table()
Row(Row Index)<edge_begin><edge_end>Sheet(Sheet Name, Sheet Index)
Sheet(Sheet Name, Sheet Index)<edge_begin><edge_end>Spreadsheet(File Path, Label)
State Machine Transition(priority)<edge_begin><edge_end>Named Element(name)
Dataflow System(protocol)<edge_begin><edge_end>Channel()
Firing Rule(comp Type)<edge_begin><edge_end>Token(value)
Dataflow System(protocol)<edge_begin><edge_end>Process(host)
LI(li Value)<edge_begin><edge_end>List Element(type)
SUP()<edge_begin><edge_end>BODY Element()
DIV(align)<edge_begin><edge_end>String()
TABLE(border, width, cellspacing, cellpadding)<edge_begin><edge_end>String()
OBJECT(classid, id, data, type, standby)<edge_begin><edge_end>String()
TH()<edge_begin><edge_end>TD(colspan, rowspan, valign, align, width)
A(ahref, name, id)<edge_begin><edge_end>BODY Element()
TABLE(border, width, cellspacing, cellpadding)<edge_begin><edge_end>TABLE Element(bgcolor, background)
FRAMESET(rows, cols, framespacing, frameborder, border)<edge_begin><edge_end>String()
UL()<edge_begin><edge_end>List Element(type)
HTML()<edge_begin><edge_end>HEAD()
APPLET(applet, class, src, align, width, height)<edge_begin><edge_end>String()
TABLE Element(bgcolor, background)<edge_begin><edge_end>String()
HTML Element(value)<edge_begin><edge_end>HTML Element(value)
BODY Element()<edge_begin><edge_end>BODY(background, bgcolor, text, link, alink, vlink)
OL(start)<edge_begin><edge_end>String()
Publication System()<edge_begin><edge_end>Named(name)
Position(description)<edge_begin><edge_end>Position(description)
Researcher(name, for Name)<edge_begin><edge_end>Skill(description)
Researcher(name, for Name)<edge_begin><edge_end>Paper()
Paper Keyword(weight)<edge_begin><edge_end>Keyword(description)
Paper()<edge_begin><edge_end>Progress(percent)
Publication Structure()<edge_begin><edge_end>Knowledge Manager()
Keyword(description)<edge_begin><edge_end>Named(name)
Select Statement()<edge_begin><edge_end>Select Expression()
Path Expression()<edge_begin><edge_end>Path Element(name)
Output Port()<edge_begin><edge_end>Port(type)
Component()<edge_begin><edge_end>Port(type)
Transition Segment()<edge_begin><edge_end>State(is Initial)
Action()<edge_begin><edge_end>Var(identifier)
Generalization()<edge_begin><edge_end>Directed Relationship()
Namespace()<edge_begin><edge_end>Named Element(name)
Generalization()<edge_begin><edge_end>Classifier()
Include()<edge_begin><edge_end>Use Case()
Use Case()<edge_begin><edge_end>Extend c(Expression)
State Machine(name)<edge_begin><edge_end>Transition(trigger Event Name)
Transition(trigger Event Name)<edge_begin><edge_end>Node()
Foreign Key(table Name, attribute Name)<edge_begin><edge_end>Property()
Nullable(nullable)<edge_begin><edge_end>Property()
Primary Key()<edge_begin><edge_end>Table()
Foreign Key()<edge_begin><edge_end>Table()
Table Container()<edge_begin><edge_end>Abstract Table()
Primary Key()<edge_begin><edge_end>Named Element(name)
Foreign Key()<edge_begin><edge_end>Named Element(name)
Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique)<edge_begin><edge_end>Index(qualifier, unique, cardinality, index Type)
Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique)<edge_begin><edge_end>Abstract Table()
Index(qualifier, unique, cardinality, index Type)<edge_begin><edge_end>Index Element(asc)
String Value(value)<edge_begin><edge_end>Value Type()
Number Value(value)<edge_begin><edge_end>Value Type()
Row()<edge_begin><edge_end>Col Or Row Element(hidden, span)
Query Writer()<edge_begin><edge_end>Statement Writer()
Definition Parse Result()<edge_begin><edge_end>Definition Parse Error()
Declare Cursor Statement(cursor Name, cursor Type, for Query, for Statement Name, hold)<edge_begin><edge_end>Binding Statement()
Fetch Statement(cursor Name, into, position, relative Position)<edge_begin><edge_end>Multiple Row Fetch Clause(descriptor, rows Number, using Descriptor)
Query Parser()<edge_begin><edge_end>Statement Parser()
Definition Parse Result()<edge_begin><edge_end>Definition Statement()
Close Statement(cursor)<edge_begin><edge_end>Binding Statement()
Saflet Project(enabled)<edge_begin><edge_end>Prompt(system, extension)
Saflet(code, subsystem Id)<edge_begin><edge_end>Saflet Project(enabled)
Safi Driver Manager()<edge_begin><edge_end>DB Resource(name, last Modified, last Updated, id)
Role()<edge_begin><edge_end>Server Resource(name, last Modified, last Updated, id, description)
Safi Result Set(use Cache, scrollable, read Only, scroll Mode, holdability Mode)<edge_begin><edge_end>DB Resource(name, last Modified, last Updated, id)
Query(query Type, query Sql, catalog)<edge_begin><edge_end>DB Resource(name, last Modified, last Updated, id)
Logical Or Expression()<edge_begin><edge_end>Expression()
Feature Call(operation Call)<edge_begin><edge_end>Expression()
Active State Reference Expression()<edge_begin><edge_end>Expression()
Primitive Value Expression()<edge_begin><edge_end>Expression()
Event Definition(direction)<edge_begin><edge_end>Event Derivation()
Bitwise Xor Expression()<edge_begin><edge_end>Expression()
Bitwise Or Expression()<edge_begin><edge_end>Expression()
State Root()<edge_begin><edge_end>Def Root()
Logical Not Expression()<edge_begin><edge_end>Expression()
Exit Point Spec()<edge_begin><edge_end>Reaction Property()
State Root()<edge_begin><edge_end>State Specification()
Database Vendor Definition(vendor, version, constraints Supported, maximum Identifier Length, trigger Supported, snapshot View Supported, join Supported, view Trigger Supported, tablespaces Supported, maximum Comment Length, sequence Supported, m QT Supported, schema Supported, alias Supported, synonym Supported, user Defined Type Supported, domain Supported, SQL Statement Supported, nickname Supported, quoted DML Supported, quoted DDL Supported, xml Supported, m QT Index Supported, event Supported, sql UDF Supported, stored Procedure Supported, package Supported, authorization Identifier Supported, role Supported, group Supported, user Supported, role Authorization Supported, constructed Data Type Supported, u DF Supported)<edge_begin><edge_end>Table Space Definition(type Supported, extent Size Supported, prefetch Size Supported, managed By Supported, page Size Supported, buffer Pool Supported, default Supported, container Maximum Size Supported, container Initial Size Supported, container Extent Size Supported, table Space Type, maximum Identifier Length)
Database Vendor Definition(vendor, version, constraints Supported, maximum Identifier Length, trigger Supported, snapshot View Supported, join Supported, view Trigger Supported, tablespaces Supported, maximum Comment Length, sequence Supported, m QT Supported, schema Supported, alias Supported, synonym Supported, user Defined Type Supported, domain Supported, SQL Statement Supported, nickname Supported, quoted DML Supported, quoted DDL Supported, xml Supported, m QT Index Supported, event Supported, sql UDF Supported, stored Procedure Supported, package Supported, authorization Identifier Supported, role Supported, group Supported, user Supported, role Authorization Supported, constructed Data Type Supported, u DF Supported)<edge_begin><edge_end>View Definition(maximum Identifier Length, index Supported, check Option Supported, check Option Levels Supported)
Privilege Definition(name)<edge_begin><edge_end>Privileged Element Definition(name)
Database Vendor Definition(vendor, version, constraints Supported, maximum Identifier Length, trigger Supported, snapshot View Supported, join Supported, view Trigger Supported, tablespaces Supported, maximum Comment Length, sequence Supported, m QT Supported, schema Supported, alias Supported, synonym Supported, user Defined Type Supported, domain Supported, SQL Statement Supported, nickname Supported, quoted DML Supported, quoted DDL Supported, xml Supported, m QT Index Supported, event Supported, sql UDF Supported, stored Procedure Supported, package Supported, authorization Identifier Supported, role Supported, group Supported, user Supported, role Authorization Supported, constructed Data Type Supported, u DF Supported)<edge_begin><edge_end>Nickname Definition(constraint Supported, index Supported, maximum Identifier Length)
Database Vendor Definition(vendor, version, constraints Supported, maximum Identifier Length, trigger Supported, snapshot View Supported, join Supported, view Trigger Supported, tablespaces Supported, maximum Comment Length, sequence Supported, m QT Supported, schema Supported, alias Supported, synonym Supported, user Defined Type Supported, domain Supported, SQL Statement Supported, nickname Supported, quoted DML Supported, quoted DDL Supported, xml Supported, m QT Index Supported, event Supported, sql UDF Supported, stored Procedure Supported, package Supported, authorization Identifier Supported, role Supported, group Supported, user Supported, role Authorization Supported, constructed Data Type Supported, u DF Supported)<edge_begin><edge_end>Predefined Data Type Definition(length Supported, scale Supported, precision Supported, key Constraint Supported, identity Supported, multiple Columns Supported, nullable Supported, default Supported, clustering Supported, fill Factor Supported, bit Data Supported, maximum Value, minimum Value, maximum Length, maximum Precision, maximum Scale, minimum Scale, default Value Types, primitive Type, name, jdbc Enum Type, character Set, encoding Scheme, character Set Suffix, encoding Scheme Suffix, java Class Name, default Length, default Precision, default Scale, cutoff Precision, length Unit, ordering Supported, grouping Supported, display Name, display Name Supported, leading Field Qualifier Supported, trailing Field Qualifier Supported, field Qualifier Separator, large Value Specifier Supported, large Value Specifier Name, large Value Specifier Length, length Semantic Supported, length Semantic, language Type)
Logical Or Expression()<edge_begin><edge_end>Expression()
Primitive Value Expression()<edge_begin><edge_end>Literal()
Time Event Spec(type, unit)<edge_begin><edge_end>Expression()
State Root()<edge_begin><edge_end>Def Root()
State Root()<edge_begin><edge_end>State Specification()
Variable Definition(readonly, external)<edge_begin><edge_end>Expression()
Root()<edge_begin><edge_end>Def Root()
Default Event()<edge_begin><edge_end>Builtin Event Spec()
Reaction Trigger()<edge_begin><edge_end>Expression()
Builtin Event Spec()<edge_begin><edge_end>Event Spec()
Arc PT()<edge_begin><edge_end>Token Variadic Expression()
N Pnet()<edge_begin><edge_end>Token Type Element Net()
Transition()<edge_begin><edge_end>Context Variable()
High Level Petri Net()<edge_begin><edge_end>Context Variable()
Token Net()<edge_begin><edge_end>Token()
Arc TP()<edge_begin><edge_end>Place()
NPN Symbol Place SN()<edge_begin><edge_end>NPN Symbol Arc PTSN()
Token Expression Binding()<edge_begin><edge_end>Token Binding()
Variable(name)<edge_begin><edge_end>Context Variable()
Token Type Element Net()<edge_begin><edge_end>Element Net Marked()
NPN Symbol Transition SN()<edge_begin><edge_end>NPN Symbol Arc PTSN()
Arc TP()<edge_begin><edge_end>Transition()
NPN Symbol Arc TPSN()<edge_begin><edge_end>NPN Symbol Arc SN(bendpoints)
NPN Symbol Place SN()<edge_begin><edge_end>NPN Symbol Node SN(constraints)
N Pnet()<edge_begin><edge_end>Token Type Atomic()
Node()<edge_begin><edge_end>High Level Petri Net()
Transition()<edge_begin><edge_end>Arc PT()
Token Type Element Net()<edge_begin><edge_end>Token Net()
NPN Symbol Node SN(constraints)<edge_begin><edge_end>I Entity Identifiable(uuid)
NPN Symbol Arc SN(bendpoints)<edge_begin><edge_end>Point()
NPN Symbol Arc SN(bendpoints)<edge_begin><edge_end>Arc()
Token Atomic()<edge_begin><edge_end>Token Type Atomic()
Token()<edge_begin><edge_end>I Net Element(name, comment)
High Level Petri Net Marked()<edge_begin><edge_end>High Level Petri Net()
Token Type Element Net()<edge_begin><edge_end>High Level Petri Net()
Output SAP Function Parameter Table()<edge_begin><edge_end>SAP Function Parameter Table()
LDAP Schema Connection(Host, Port, Protocol, Filter, Separator, Use Advanced, Store Path, Use Limit, Use Authen, Bind Principal, Bind Password, Limit Value, Encryption Method Name, Value, Save Password, Aliases, Referrals, Count Limit, Time Out Limit, Base D Ns, Get Base D Ns From Root, Return Attributes, Selected DN)<edge_begin><edge_end>Connection(version, Context Mode, Context Id)
Xml X Path Loop Descriptor(Limit Boucle, Absolute X Path Query)<edge_begin><edge_end>Xml File Connection(Xsd File Path, Xml File Path, Guess, Mask X Pattern, Encoding, input Model, output File Path)
SAPI Doc Unit(program Id, gateway Service, use Xml Output, xml File, use Html Output, html File)<edge_begin><edge_end>Abstract Metadata Object(properties, id, comment, label, read Only, synchronised, divergency)
HL7Connection(Start Char, End Char, output File Path)<edge_begin><edge_end>File Connection(Server, File Path, Format, Encoding, Field Separator Value, Row Separator Type, Row Separator Value, Text Identifier, Use Header, Header Value, Use Footer, Footer Value, Use Limit, Limit Value, First Line Caption, Remove Empty Row, Escape Type, Escape Char, Text Enclosure, Csv Option)
MDM Connection(Username, Password, Port, Server, Universe, Datamodel, Datacluster, protocol, context)<edge_begin><edge_end>Connection(version, Context Mode, Context Id)
File Connection(Server, File Path, Format, Encoding, Field Separator Value, Row Separator Type, Row Separator Value, Text Identifier, Use Header, Header Value, Use Footer, Footer Value, Use Limit, Limit Value, First Line Caption, Remove Empty Row, Escape Type, Escape Char, Text Enclosure, Csv Option)<edge_begin><edge_end>Connection(version, Context Mode, Context Id)
Input SAP Function Parameter Table()<edge_begin><edge_end>SAP Function Unit(Output Type, Output Table Name)
Delimited File Connection(Field Separator Type, split Record)<edge_begin><edge_end>File Connection(Server, File Path, Format, Encoding, Field Separator Value, Row Separator Type, Row Separator Value, Text Identifier, Use Header, Header Value, Use Footer, Footer Value, Use Limit, Limit Value, First Line Caption, Remove Empty Row, Escape Type, Escape Char, Text Enclosure, Csv Option)
SAP Connection(Host, Username, Password, Client, System Number, Language, current Fucntion)<edge_begin><edge_end>SAPI Doc Unit(program Id, gateway Service, use Xml Output, xml File, use Html Output, html File)
Input SAP Function Parameter Table()<edge_begin><edge_end>SAP Function Parameter Table()
Abstract Metadata Object(properties, id, comment, label, read Only, synchronised, divergency)<edge_begin><edge_end>Map()
Td View()<edge_begin><edge_end>Metadata Table(source Name, table Type, attached CDC, activated CDC)
CDC Type(link DB, journal Name)<edge_begin><edge_end>CDC Connection()
Xml File Connection(Xsd File Path, Xml File Path, Guess, Mask X Pattern, Encoding, input Model, output File Path)<edge_begin><edge_end>Connection(version, Context Mode, Context Id)
SAP Function Unit(Output Type, Output Table Name)<edge_begin><edge_end>Metadata Table(source Name, table Type, attached CDC, activated CDC)
D Cell(label)<edge_begin><edge_end>D Table Element()
D Table(header Column Width)<edge_begin><edge_end>Table Description(precondition Expression, domain Class, initial Header Column Width)
D Cell(label)<edge_begin><edge_end>D Cell Style()
D Cell Style()<edge_begin><edge_end>D Table Element Style(label Size, label Format, default Foreground Style, default Background Style)
Column Mapping(header Label Expression, initial Width)<edge_begin><edge_end>Table Mapping(semantic Elements)
Delete Tool()<edge_begin><edge_end>Table Tool()
D Column(label, visible, width)<edge_begin><edge_end>D Table(header Column Width)
D Table(header Column Width)<edge_begin><edge_end>D Column(label, visible, width)
Element Column Mapping(domain Class, semantic Candidates Expression)<edge_begin><edge_end>Delete Column Tool()
Line Mapping(domain Class, semantic Candidates Expression, header Label Expression)<edge_begin><edge_end>Table Mapping(semantic Elements)
Line Container()<edge_begin><edge_end>D Line(label, visible, collapsed)
D Cell(label)<edge_begin><edge_end>Cell Updater(can Edit)
D Cell(label)<edge_begin><edge_end>D Table Element Updater()
Cross Table Description()<edge_begin><edge_end>Table Description(precondition Expression, domain Class, initial Header Column Width)
Style Updater()<edge_begin><edge_end>Foreground Conditional Style(predicate Expression)
Element Column Mapping(domain Class, semantic Candidates Expression)<edge_begin><edge_end>Create Column Tool()
State(initial Time, final Time)<edge_begin><edge_end>State Machine()
State Machine()<edge_begin><edge_end>Transition(initial Time, final Time, time)
Transition(initial Time, final Time, time)<edge_begin><edge_end>State Machine()
Foreign Key()<edge_begin><edge_end>Table Column(type)
Rename Column(new Column Name)<edge_begin><edge_end>Operation()
Unique Index()<edge_begin><edge_end>Table Constraint()
Model Root()<edge_begin><edge_end>Database()
Model Root()<edge_begin><edge_end>Operation()
Rename Column(new Column Name)<edge_begin><edge_end>Table Column(type)
Table Constraint()<edge_begin><edge_end>Constraint()
Create Table(table Name)<edge_begin><edge_end>Sequence(cache Size)
Database()<edge_begin><edge_end>Named Element(name)
Table Column(type)<edge_begin><edge_end>Column()
Create Table(table Name)<edge_begin><edge_end>Operation()
Column Reference()<edge_begin><edge_end>Column()
FSM Event(is Triggered)<edge_begin><edge_end>Named Element(name)
Evaluate Guard(condition)<edge_begin><edge_end>Guard()
TFSM(step Number, last State Change Step Number)<edge_begin><edge_end>Named Element(name)
Transition(action)<edge_begin><edge_end>Named Element(name)
Temporal Guard(after Duration)<edge_begin><edge_end>Guard()
Inproceedings()<edge_begin><edge_end>Publisher(publisher)
Bib Type()<edge_begin><edge_end>Title(title)
Bib Type()<edge_begin><edge_end>Note(note)
Bib Type()<edge_begin><edge_end>Month(month)
Phdthesis()<edge_begin><edge_end>Author(author)
Article()<edge_begin><edge_end>Number(number)
Article()<edge_begin><edge_end>Pages(pages)
Phdthesis()<edge_begin><edge_end>Bib Type()
Bib Type()<edge_begin><edge_end>Cite Key(cite Key)
Phdthesis()<edge_begin><edge_end>Address(address)
Proceedings()<edge_begin><edge_end>Publisher(publisher)
Booklet()<edge_begin><edge_end>Bib Type()
Conference()<edge_begin><edge_end>Bib Type()
Mastersthesis()<edge_begin><edge_end>School(school)
Mastersthesis()<edge_begin><edge_end>Address(address)
Techreport()<edge_begin><edge_end>Author(author)
Book()<edge_begin><edge_end>Author(author)
Flow(final State)<edge_begin><edge_end>Step(label, name)
Local Alternative(description)<edge_begin><edge_end>Use Case(description, name, postcondition, pre Conditions)
Step(label, name)<edge_begin><edge_end>Use Case(description, name, postcondition, pre Conditions)
Normal Step(custom Step Type)<edge_begin><edge_end>Actor(description, name, type)
Alternative Flow Alternative()<edge_begin><edge_end>Named Flow(name)
Arc(weight)<edge_begin><edge_end>Integer()
Token()<edge_begin><edge_end>Marking()
Petri Net()<edge_begin><edge_end>Named Element(name)
Place To Transition()<edge_begin><edge_end>Arc(weight)
Execution()<edge_begin><edge_end>Movement()
Token()<edge_begin><edge_end>Place()
Personal Review History()<edge_begin><edge_end>Reviewer()
start date of camera-ready submission()<edge_begin><edge_end>camera-ready submission date()
Regular Paper()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
Document()<edge_begin><edge_end>Document()
Computer Networks Security Topic()<edge_begin><edge_end>Computer Networks Topic()
Overhead projector()<edge_begin><edge_end>Audiovisual equipment()
Main office()<edge_begin><edge_end>Place()
Conference(annual Order, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL, has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date)<edge_begin><edge_end>Thing()
Conference volume(has a location)<edge_begin><edge_end>String()
Numerical Review Question()<edge_begin><edge_end>Review Question()
IASTED member()<edge_begin><edge_end>Delegate()
Call for participation()<edge_begin><edge_end>Conference document()
Camera Ready event()<edge_begin><edge_end>Administrative event()
Talk Event()<edge_begin><edge_end>Academic Event()
Administrator()<edge_begin><edge_end>Program Committee Member(max Papers)
Notification Email()<edge_begin><edge_end>Email()
Participant(early Registration)<edge_begin><edge_end>Boolean()
activity()<edge_begin><edge_end>intensity()
Conference(annual Order, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL, has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date)<edge_begin><edge_end>String()
Request()<edge_begin><edge_end>Activity(is dated on, expected Attendance)
Author()<edge_begin><edge_end>User()
Security Topic()<edge_begin><edge_end>Topic()
Poster Session()<edge_begin><edge_end>Session()
Reviewer()<edge_begin><edge_end>External Reviewer()
Sponzorship()<edge_begin><edge_end>Money()
Member PC()<edge_begin><edge_end>Contribution(remark, abstract, contact Email, has Keyword, has Title)
Paper(paper ID, title, full paper size)<edge_begin><edge_end>String()
Reviewing results event()<edge_begin><edge_end>Administrative event()
Conference(annual Order, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL, has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date)<edge_begin><edge_end>date()
Book proceeding()<edge_begin><edge_end>Publication()
Cheque()<edge_begin><edge_end>Payment document()
Active conference participant()<edge_begin><edge_end>Conference contributor()
Dining Place()<edge_begin><edge_end>Place()
Author()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
Tutorial Proposal()<edge_begin><edge_end>Activity Submission Form(submission Deadline)
Medicine Topic()<edge_begin><edge_end>Topic()
Conference(annual Order, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL, has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date)<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Review Form Setup()<edge_begin><edge_end>Review Form()
Review preference(has a degree)<edge_begin><edge_end>Integer()
Meeting Room Place()<edge_begin><edge_end>Place()
Departure tax()<edge_begin><edge_end>Tax()
Admin Role()<edge_begin><edge_end>Role()
Evaluated Paper()<edge_begin><edge_end>Assigned Paper()
Session Chair()<edge_begin><edge_end>Conference Participant()
Regular author()<edge_begin><edge_end>Conference contributor()
Sponsor city()<edge_begin><edge_end>City()
Program Committee Chair()<edge_begin><edge_end>Program Committee Member(max Papers)
Item()<edge_begin><edge_end>Item()
Paper(paper ID, title, full paper size)<edge_begin><edge_end>Possible Reviewer()
Invited speaker()<edge_begin><edge_end>Conference contributor()
Conference(annual Order, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL, has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date)<edge_begin><edge_end>Conference Member()
conference setup()<edge_begin><edge_end>human(e-mail, last name, first name)
Scholar()<edge_begin><edge_end>University()
Accpet If Room Rating()<edge_begin><edge_end>Review Rating()
Reviewer()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
Organizer()<edge_begin><edge_end>Thing()
Workshop()<edge_begin><edge_end>Academic Event()
Assigned Paper()<edge_begin><edge_end>Possible Reviewer()
Activity Submission Form(submission Deadline)<edge_begin><edge_end>Thing()
Activity(is dated on, expected Attendance)<edge_begin><edge_end>Person(has Mail, works For Company, email, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>Approval Email()
Tutorial speaker()<edge_begin><edge_end>Author()
Company()<edge_begin><edge_end>Organization()
Committee()<edge_begin><edge_end>User()
upper tier reviewing process()<edge_begin><edge_end>reviewing proces()
Proceedings()<edge_begin><edge_end>Multi-author Volume()
Person(has Mail, works For Company, email, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)<edge_begin><edge_end>Conference Event(has End Date Time, has Start Date Time)
Reviewing event()<edge_begin><edge_end>Administrative event()
Contributed Talk()<edge_begin><edge_end>Individual Presentation()
conference setup()<edge_begin><edge_end>date()
Conference contributor()<edge_begin><edge_end>Person(has Mail, works For Company, email, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
session()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Rated Papers()<edge_begin><edge_end>Active Paper()
Conference document()<edge_begin><edge_end>Person(has Mail, works For Company, email, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
Co-chair()<edge_begin><edge_end>Committee member()
Sponsorship(has Cost Currency, has Cost Amount)<edge_begin><edge_end>String()
Conference contribution()<edge_begin><edge_end>Conference volume(has a location)
Program Committee Member(max Papers)<edge_begin><edge_end>Program Committee()
article()<edge_begin><edge_end>human(e-mail, last name, first name)
Place()<edge_begin><edge_end>Conference Event(has End Date Time, has Start Date Time)
Demo Paper()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
Document()<edge_begin><edge_end>User()
Paper(paper ID, title, full paper size)<edge_begin><edge_end>Document()
Meta-Reviewer()<edge_begin><edge_end>Reviewer()
chair()<edge_begin><edge_end>Reviewer()
Workshop()<edge_begin><edge_end>Scientific Event()
Regular()<edge_begin><edge_end>Participant(early Registration)
Radio Communications Topic()<edge_begin><edge_end>Topic()
Deadline hotel reservation()<edge_begin><edge_end>Deadline()
Registeered applicant()<edge_begin><edge_end>Conference applicant()
Paper(paper ID, title, full paper size)<edge_begin><edge_end>Subject Area()
Paper Full Version()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
Presenter()<edge_begin><edge_end>Author()
Reject Rating()<edge_begin><edge_end>Review Rating()
program()<edge_begin><edge_end>chair()
Paper(paper ID, title, full paper size)<edge_begin><edge_end>Reviewer()
Account()<edge_begin><edge_end>Person(has Mail, works For Company, email, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
paper assignment()<edge_begin><edge_end>Program Committee member()
Invited Talk()<edge_begin><edge_end>Individual Presentation()
Chair()<edge_begin><edge_end>Committee()
Role()<edge_begin><edge_end>Thing()
Regular Reviewer URL()<edge_begin><edge_end>URL()
Banquet()<edge_begin><edge_end>Social event()
One conference day()<edge_begin><edge_end>Conference days()
Program committee()<edge_begin><edge_end>Conference volume(has a location)
Conference volume(has a location)<edge_begin><edge_end>Conference contribution()
Conference(annual Order, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL, has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date)<edge_begin><edge_end>Integer()
Conference part()<edge_begin><edge_end>Topic()
Presentation()<edge_begin><edge_end>Active conference participant()
Paper(paper ID, title, full paper size)<edge_begin><edge_end>Contribution(remark, abstract, contact Email, has Keyword, has Title)
Senior Reviewer URL()<edge_begin><edge_end>URL()
Symposium()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Computer Networks Sensor Topic()<edge_begin><edge_end>Computer Networks Topic()
Paper Abstract()<edge_begin><edge_end>Paper(paper ID, title, full paper size)
Person(has Mail, works For Company, email, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)<edge_begin><edge_end>Presenter city()
Activity(is dated on, expected Attendance)<edge_begin><edge_end>Topic()
Document()<edge_begin><edge_end>Person(has Mail, works For Company, email, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
Publisher()<edge_begin><edge_end>Conference proceedings(has an ISBN, has a volume)
Dinner banquet()<edge_begin><edge_end>Social program()
Reviewed contribution()<edge_begin><edge_end>Submitted contribution()
User()<edge_begin><edge_end>Person(has Mail, works For Company, email, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
Social Event()<edge_begin><edge_end>Non Academic Event()
Meal Event()<edge_begin><edge_end>Non Academic Event()
Programme()<edge_begin><edge_end>Conference Event(has End Date Time, has Start Date Time)
Travel Grant()<edge_begin><edge_end>Sponsorship(has Cost Currency, has Cost Amount)
Conference Session()<edge_begin><edge_end>Session()
Chair PC()<edge_begin><edge_end>Person(has Mail, works For Company, email, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
Modelling()<edge_begin><edge_end>Research()
Introduction of speaker()<edge_begin><edge_end>Introduction()
Conference activity()<edge_begin><edge_end>Activity(is dated on, expected Attendance)
Two Level Conference()<edge_begin><edge_end>Conference(annual Order, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL, has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date)
Computer Networks Topic()<edge_begin><edge_end>Topic()
Paid applicant()<edge_begin><edge_end>Registeered applicant()
Accepted Paper()<edge_begin><edge_end>Paper Presentation()
Mobile Computing Topic()<edge_begin><edge_end>Topic()
Signal Processing Topic()<edge_begin><edge_end>Topic()
Registration form()<edge_begin><edge_end>Form()
Video presentation()<edge_begin><edge_end>Presentation()
Assistance()<edge_begin><edge_end>Help Request()
Conference Venue Place()<edge_begin><edge_end>Place()
Review()<edge_begin><edge_end>Reviewer()
Author()<edge_begin><edge_end>article()
Activity(is dated on, expected Attendance)<edge_begin><edge_end>Conference(annual Order, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL, has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date)
Topic()<edge_begin><edge_end>Review preference(has a degree)
Volunteer()<edge_begin><edge_end>Person(has Mail, works For Company, email, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
Place()<edge_begin><edge_end>Thing()
Multi-author Volume()<edge_begin><edge_end>Document()
Organizational Meeting()<edge_begin><edge_end>Academic Event()
Item()<edge_begin><edge_end>Activity(is dated on, expected Attendance)
Filters File(file)<edge_begin><edge_end>Basic()
File Set(dir)<edge_begin><edge_end>Excludes()
Java(classname, jar, fork)<edge_begin><edge_end>Class Path(refid)
Jar(jarfile, basedir, compress, encoding, manifest)<edge_begin><edge_end>Archive Task()
Path(id, refid)<edge_begin><edge_end>Path Element(path, location)
Property Value(value)<edge_begin><edge_end>Property Name(name)
Basic()<edge_begin><edge_end>Pattern()
Property File(file)<edge_begin><edge_end>Property()
Excludes File()<edge_begin><edge_end>In Excludes(name, if Condition, unless)
Java(classname, jar, fork)<edge_begin><edge_end>Execution Task()
Delete(file, dir, verbose, quiet, failonerror, include Empty Dirs, includes, includesfile, excludes, excludesfile, defaultexcludes)<edge_begin><edge_end>File Task()
New Task()<edge_begin><edge_end>Task Def(name, classname)
Copy(file, presservelastmodified, tofile, todir, overwrite, filtering, flatten, include Empty Dirs)<edge_begin><edge_end>Filter Set(starttoken, endtoken)
Label(text)<edge_begin><edge_end>String()
Net Element()<edge_begin><edge_end>Net Content()
Tool Specific(tool, version)<edge_begin><edge_end>Arc()
Node Graphics()<edge_begin><edge_end>Dimension(width, height)
Net Content Element()<edge_begin><edge_end>Net Content()
Arc()<edge_begin><edge_end>Tool Specific(tool, version)
Offset()<edge_begin><edge_end>Annotation Graphics()
PNML Document()<edge_begin><edge_end>Net Element()
Arc()<edge_begin><edge_end>Net Content()
Line(width, shape, style)<edge_begin><edge_end>Edge Graphics()
Tool Specific(tool, version)<edge_begin><edge_end>Net Element()
Net Graphics()<edge_begin><edge_end>Net Element()
Annotation Graphics()<edge_begin><edge_end>Line(width, shape, style)
Font(family, style, weight, size, decoration, align, rotation)<edge_begin><edge_end>String()
Edge Graphics()<edge_begin><edge_end>Graphics()
Label(text)<edge_begin><edge_end>Labeled Element()
Labeled Element()<edge_begin><edge_end>Label(text)
Column Operand(ora)<edge_begin><edge_end>Column Full()
From Table()<edge_begin><edge_end>From Table Join(join)
Analytic Expr Arg()<edge_begin><edge_end>Analytic Expr Args()
Query Partition Clause()<edge_begin><edge_end>Analytic Expr Args()
Operand()<edge_begin><edge_end>SQL Case Operand()
Plus()<edge_begin><edge_end>Operands()
SQL Case Operand()<edge_begin><edge_end>SQL Case Whens()
SQL Case Operand()<edge_begin><edge_end>Or Expr()
Like Operand(op2)<edge_begin><edge_end>Op Function Cast(type, p, p2)
Group By Column Full()<edge_begin><edge_end>Op Function(fname)
Group By Column Full()<edge_begin><edge_end>Or Group By Column()
Or Column()<edge_begin><edge_end>Pivot For Clause()
Windowing Clause Operand Preceding()<edge_begin><edge_end>Analytic Expr Arg()
Limit(l1)<edge_begin><edge_end>Integer Value(integer)
Full Expression(c, not Prm, isnull)<edge_begin><edge_end>Exists Oper(op)
Db Object Name(dbname)<edge_begin><edge_end>Column Full()
uicargs()<edge_begin><edge_end>Unpivot In Clause Arg()
X Expr(xf)<edge_begin><edge_end>Prms()
Function Analytical()<edge_begin><edge_end>Analytic Clause()
From Table Join(join)<edge_begin><edge_end>Table Or Alias(alias)
Operand()<edge_begin><edge_end>Operand()
pcols()<edge_begin><edge_end>Pivot Col()
Or Expr()<edge_begin><edge_end>Full Expression(c, not Prm, isnull)
Minus()<edge_begin><edge_end>Operands()
Exists Oper(op)<edge_begin><edge_end>Sub Query Operand()
Unpivot Table()<edge_begin><edge_end>Pivot For Clause()
Windowing Clause Operand Preceding()<edge_begin><edge_end>Windowing Clause()
Full Expression(c, not Prm, isnull)<edge_begin><edge_end>Full Expression(c, not Prm, isnull)
Windowing Clause Between()<edge_begin><edge_end>Windowing Clause Operand Preceding()
Order By Column Full(col Order Int, direction)<edge_begin><edge_end>Or Order By Column()
Select(select)<edge_begin><edge_end>Select Query()
Type()<edge_begin><edge_end>Described Element(description)
File(files, number Of Header Lines)<edge_begin><edge_end>Separated Element(separator)
Task File()<edge_begin><edge_end>Mapping File()
Database(dsn)<edge_begin><edge_end>Schema()
Field(length, position, type)<edge_begin><edge_end>I Column()
View(sql)<edge_begin><edge_end>SQL()
Task Import()<edge_begin><edge_end>Task(file Name)
Database(dsn)<edge_begin><edge_end>Named Element(name)
Mapping Export()<edge_begin><edge_end>I Column()
Task File()<edge_begin><edge_end>Task(file Name)
Task Export()<edge_begin><edge_end>Mapping Export()
Schema()<edge_begin><edge_end>Table()
File Set(hostname)<edge_begin><edge_end>Described Element(description)
Task SQL()<edge_begin><edge_end>Mapping SQL()
Database(dsn)<edge_begin><edge_end>Described Element(description)
I File()<edge_begin><edge_end>Named Element(name)
Final State()<edge_begin><edge_end>State(label)
Init State()<edge_begin><edge_end>State(label)
Automaton()<edge_begin><edge_end>Timed Zone(time)
Event Token()<edge_begin><edge_end>Timed Zone(time)
Data Base(SGB Dname)<edge_begin><edge_end>Named Element(name)
Named Element(name)<edge_begin><edge_end>String()
Model(resource, e Graph, object Keys, object Count)<edge_begin><edge_end>Integer Array()
Transition(match, parameter Count, parameter Keys)<edge_begin><edge_end>State(index, hash Code, derived From, open, goal, pruned, location, object Count, object Keys)
State Space(state Count, transition Count, layout Zoom Level, layout State Repulsion, layout Transition Attraction, layout Hide Labels, layout Hide Indizes, max State Distance, all Parameter Keys)<edge_begin><edge_end>Integer Array()
Publication System()<edge_begin><edge_end>Publication Process(min Time, max Time)
Researcher(name, for Name, position)<edge_begin><edge_end>Publication Phase(name, min Time, max Time)
Write()<edge_begin><edge_end>Paragraph(content)
Publication Structure()<edge_begin><edge_end>Researcher(name, for Name, position)
Publication Process(min Time, max Time)<edge_begin><edge_end>Named(name)
Review()<edge_begin><edge_end>Review Note(content)
State(orthogonal, substatechart Id, submachine, simple, composite, leaf)<edge_begin><edge_end>Region(priority)
Pseudostate()<edge_begin><edge_end>Vertex()
Statechart()<edge_begin><edge_end>Scoped Element(namespace)
Exit()<edge_begin><edge_end>Pseudostate()
Transition(priority)<edge_begin><edge_end>Reaction()
Reaction()<edge_begin><edge_end>Effect()
State(orthogonal, substatechart Id, submachine, simple, composite, leaf)<edge_begin><edge_end>Reactive Element()
Transition(label, source Label, target Label, guard Label, action Label, guard Expression, action Statement)<edge_begin><edge_end>State(label, id)
Final State()<edge_begin><edge_end>State(label, id)
Use Case()<edge_begin><edge_end>Extend()
Named Element(name)<edge_begin><edge_end>String()
TP Arc()<edge_begin><edge_end>Arc()
Net()<edge_begin><edge_end>Place(name)
PT Arc()<edge_begin><edge_end>Arc()
Primary Key()<edge_begin><edge_end>Named Element(name)
Table()<edge_begin><edge_end>Index(qualifier, unique, cardinality, index Type)
Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique)<edge_begin><edge_end>Primary Key()
Foreign Key()<edge_begin><edge_end>Table()
Schema()<edge_begin><edge_end>Table Container()
Data Base(url)<edge_begin><edge_end>Schema()
Table()<edge_begin><edge_end>Primary Key()
Index Element(asc)<edge_begin><edge_end>Database Element(ID, comments, tech ID)
Web Link(identifiant)<edge_begin><edge_end>String()
Art Revue()<edge_begin><edge_end>Art Revue Type(urldoi, journal, volume, page, annee)
Affiliation Type(institution, prive, ecole, universite)<edge_begin><edge_end>String()
Article()<edge_begin><edge_end>Entry()
Tampon Type(id)<edge_begin><edge_end>String()
Autre Type(urldoi, annee, description)<edge_begin><edge_end>String()
Art Journal()<edge_begin><edge_end>Art Revue Type(urldoi, journal, volume, page, annee)
Meta Art Notice Type(domain, abstract)<edge_begin><edge_end>Reference Biblio Type()
Meta Lab(id)<edge_begin><edge_end>String()
Conference()<edge_begin><edge_end>Workshop Type(urldoi, titconf, ville, pays, edcom, annee, page, edsci, serie)
Meta Type(langue, title, comment, ref Interne, idext, is Epj, is Epl, classification, collaboration, keyword, datevisible, financement, researchteam)<edge_begin><edge_end>Integer()
Meta Art Notice Type(domain, abstract)<edge_begin><edge_end>Meta Type(langue, title, comment, ref Interne, idext, is Epj, is Epl, classification, collaboration, keyword, datevisible, financement, researchteam)
Story(goal, benefit, completed)<edge_begin><edge_end>Goal(name, details)
Story(goal, benefit, completed)<edge_begin><edge_end>Protagonist()
Persona(picture)<edge_begin><edge_end>User()
Role()<edge_begin><edge_end>Role()
Story Container()<edge_begin><edge_end>Story Base()
Dated Entry(year)<edge_begin><edge_end>Bib Te X Entry(id)
In Collection()<edge_begin><edge_end>Book(publisher)
Master Thesis()<edge_begin><edge_end>Thesis Entry(school)
In Book(chapter)<edge_begin><edge_end>Book(publisher)
Manual()<edge_begin><edge_end>Titled Entry(title)
Unpublished(note)<edge_begin><edge_end>Authored Entry()
Transition(description)<edge_begin><edge_end>Guard(expression)
State Vertex()<edge_begin><edge_end>Transition(description)
State()<edge_begin><edge_end>State Action()
Event(name)<edge_begin><edge_end>Transition(description)
State Action()<edge_begin><edge_end>Action(value)
Composite State(is Concurrent)<edge_begin><edge_end>State()
Chair PC()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, email)
Detail()<edge_begin><edge_end>Thing()
Chair URL()<edge_begin><edge_end>URL()
Written contribution()<edge_begin><edge_end>Conference contribution()
Accepted contribution()<edge_begin><edge_end>Reviewed contribution()
URL()<edge_begin><edge_end>Thing()
Document()<edge_begin><edge_end>Thing()
Co-author()<edge_begin><edge_end>Author()
Member PC()<edge_begin><edge_end>Topic()
Conference(reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Event(starts on, ends on)
Review preference(has a degree)<edge_begin><edge_end>Integer()
Paper(paper ID, title)<edge_begin><edge_end>Bid()
Rejected contribution()<edge_begin><edge_end>Reviewed contribution()
Publisher()<edge_begin><edge_end>Conference proceedings(has an ISBN, has a volume)
Workshop()<edge_begin><edge_end>Working event()
Research Topic()<edge_begin><edge_end>Event Setup()
Regular Program Committee member()<edge_begin><edge_end>Program Committee member()
Conference proceedings(has an ISBN, has a volume)<edge_begin><edge_end>String()
lower tier reviewing process()<edge_begin><edge_end>reviewing proces()
Conference volume(has a location)<edge_begin><edge_end>Workshop()
Conference part()<edge_begin><edge_end>Conference volume(has a location)
article()<edge_begin><edge_end>classification()
Feature Request()<edge_begin><edge_end>Help Request()
Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, email)<edge_begin><edge_end>Event(starts on, ends on)
Activity()<edge_begin><edge_end>Thing()
Contact Person()<edge_begin><edge_end>human(e-mail, last name, first name)
Role()<edge_begin><edge_end>Administrator()
conference setup()<edge_begin><edge_end>topic()
Conference announcement()<edge_begin><edge_end>Conference document()
Senior Program Committee member()<edge_begin><edge_end>Program Committee member()
Preview()<edge_begin><edge_end>Review Form()
Information for participants()<edge_begin><edge_end>Conference document()
Senior Program Committee member()<edge_begin><edge_end>activity()
conference setup()<edge_begin><edge_end>URL()
Presentation()<edge_begin><edge_end>Conference contribution()
Administrator()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, email)
Reviewer()<edge_begin><edge_end>Review()
paper assignment()<edge_begin><edge_end>Program Committee member()
Conference volume(has a location)<edge_begin><edge_end>Steering committee()
review()<edge_begin><edge_end>classification()
Contact Person URL()<edge_begin><edge_end>URL()
Event(starts on, ends on)<edge_begin><edge_end>Thing()
Program Committee Member(max Papers)<edge_begin><edge_end>Program Committee()
Conference part()<edge_begin><edge_end>Track-workshop chair()
Conference Member()<edge_begin><edge_end>Conference(reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
abstract of paper()<edge_begin><edge_end>article()
Approval Email()<edge_begin><edge_end>Email()
Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, email)<edge_begin><edge_end>Activity()
Regular contribution()<edge_begin><edge_end>Written contribution()
Undecided Paper()<edge_begin><edge_end>paper(full paper size)
Administrator()<edge_begin><edge_end>Reviewer()
Paper Abstract()<edge_begin><edge_end>Paper(paper ID, title)
bidding of reviewer()<edge_begin><edge_end>activity()
Conference proceedings(has an ISBN, has a volume)<edge_begin><edge_end>Publisher()
paper assignment()<edge_begin><edge_end>human(e-mail, last name, first name)
Administrator()<edge_begin><edge_end>Program Committee Member(max Papers)
Automatic Paper Assignment()<edge_begin><edge_end>paper assignment()
Conference applicant()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, email)
paper(full paper size)<edge_begin><edge_end>human(e-mail, last name, first name)
Reviewing event()<edge_begin><edge_end>Administrative event()
Important dates()<edge_begin><edge_end>Conference volume(has a location)
Steering committee()<edge_begin><edge_end>Conference volume(has a location)
paper assignment()<edge_begin><edge_end>activity()
paper(full paper size)<edge_begin><edge_end>Integer()
conference setup()<edge_begin><edge_end>date()
Author()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, email)
activity()<edge_begin><edge_end>activity()
acceptance notification email()<edge_begin><edge_end>notification email()
Co-chair()<edge_begin><edge_end>Committee()
Company()<edge_begin><edge_end>Organization()
Filters File(file)<edge_begin><edge_end>Basic()
File Set(dir)<edge_begin><edge_end>Set()
Tstamp()<edge_begin><edge_end>Miscellaneous Task()
Goal(name)<edge_begin><edge_end>Post Goal()
Goal(name)<edge_begin><edge_end>Abstract Goal()
File Set(dir)<edge_begin><edge_end>Pattern Set()
Project()<edge_begin><edge_end>Goal(name)
Tstamp()<edge_begin><edge_end>Format Tstamp(property, pattern, offset, unit, locale)
Project()<edge_begin><edge_end>Pre Post Goal()
Path(id, refid)<edge_begin><edge_end>Path Element(path, location)
Javac(srcdir, destdir, debug, fork, optimize, deprecation)<edge_begin><edge_end>Compile Task()
Filter Set(starttoken, endtoken)<edge_begin><edge_end>Set()
Echo(message, file, append)<edge_begin><edge_end>Miscellaneous Task()
Compile Task()<edge_begin><edge_end>Pre Defined Task(id, taskname, description)
Pre Post Goal()<edge_begin><edge_end>Abstract Goal()
Copy(file, presservelastmodified, tofile, todir, overwrite, filtering, flatten, include Empty Dirs)<edge_begin><edge_end>File Set(dir)
Place tokens Value()<edge_begin><edge_end>Traced Place()
Transition clock Value(clock)<edge_begin><edge_end>Traced Transition()
Trace()<edge_begin><edge_end>Petrinetv3 Net Run()
Trace()<edge_begin><edge_end>State()
Small Step()<edge_begin><edge_end>Step()
Trace()<edge_begin><edge_end>Traced Token()
Typed Table()<edge_begin><edge_end>Structured Type(is final, is instantiable)
Column Constraint()<edge_begin><edge_end>Restriction()
Structural Component(name)<edge_begin><edge_end>Data Type()
View()<edge_begin><edge_end>Derived Table(query expression)
Parameter(name)<edge_begin><edge_end>Data Type()
Function()<edge_begin><edge_end>Behavioural Component(name, body)
Character String Type(descriptor, length def)<edge_begin><edge_end>Predefined Type()
Reference Type()<edge_begin><edge_end>Structured Type(is final, is instantiable)
User Defined Type(name)<edge_begin><edge_end>Data Type()
Field()<edge_begin><edge_end>Structural Component(name)
Structured Type(is final, is instantiable)<edge_begin><edge_end>Attribute(default)
Distinct Type()<edge_begin><edge_end>Predefined Type()
Schema(name)<edge_begin><edge_end>Data Type()
Field()<edge_begin><edge_end>ROW()
Typed Table()<edge_begin><edge_end>Base Table()
Interval Feature(key, value)<edge_begin><edge_end>Feature()
Boolean Type(descriptor)<edge_begin><edge_end>Predefined Type()
Column(name, can Be Null)<edge_begin><edge_end>String()
Integer Val(value)<edge_begin><edge_end>Value()
Primary Key()<edge_begin><edge_end>Key(is Unique, name)
Located Element(location, comments Before, comments After)<edge_begin><edge_end>String()
Column(name, can Be Null)<edge_begin><edge_end>Table Element()
Column(name, can Be Null)<edge_begin><edge_end>Type(length, is Unsigned)
Table Element()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Column(name, can Be Null)<edge_begin><edge_end>Value()
Abstract Transition()<edge_begin><edge_end>Condition(script)
Uri Literal(uri Value)<edge_begin><edge_end>EURI()
Transition Event()<edge_begin><edge_end>State(name)
State Machine()<edge_begin><edge_end>State(name)
Domain Model Import()<edge_begin><edge_end>Resource Import(import URI)
Internal Transition()<edge_begin><edge_end>Abstract Transition()
Abstract State()<edge_begin><edge_end>State(name)
Assignment Action()<edge_begin><edge_end>Var Def(name)
State Machine()<edge_begin><edge_end>Abstract State()
Var Ref()<edge_begin><edge_end>Var Def(name)
Symbolic Action(name)<edge_begin><edge_end>Action()
Fork()<edge_begin><edge_end>Pseudostate()
State()<edge_begin><edge_end>Program()
Program()<edge_begin><edge_end>Statement()
Join()<edge_begin><edge_end>Pseudostate()
Region()<edge_begin><edge_end>State()
NOT Operator()<edge_begin><edge_end>Argument()
Category(name)<edge_begin><edge_end>Person(name)
Category(name)<edge_begin><edge_end>Requirement(identifier, name, priority, is Mandatory)
Requirement(identifier, name, priority, is Mandatory)<edge_begin><edge_end>Dependency()
Simple Expression()<edge_begin><edge_end>Condition()
Column Operation Every()<edge_begin><edge_end>Column Operation()
Table List Expression()<edge_begin><edge_end>Table Expression(label)
Value Front Operation()<edge_begin><edge_end>Value Operation()
Join Operation Inner()<edge_begin><edge_end>Join Operation()
Float()<edge_begin><edge_end>Data Type()
From Expression()<edge_begin><edge_end>Table List Expression()
Set Operation Intersect()<edge_begin><edge_end>Select Parameter Distinct()
Set Expression()<edge_begin><edge_end>Set Operation()
Select Expression()<edge_begin><edge_end>Order By Expression()
Select Parameter Distinct()<edge_begin><edge_end>Select Parameter()
Simple Term Char()<edge_begin><edge_end>Simple Term(value)
Exists Condition()<edge_begin><edge_end>Simple Condition()
Set Operation Minus()<edge_begin><edge_end>Select Parameter Distinct()
Join Operation Outer()<edge_begin><edge_end>Join Operation()
Having Expression()<edge_begin><edge_end>Expression()
Group By Expression()<edge_begin><edge_end>Expression()
Select Expression()<edge_begin><edge_end>Column Expression()
Column Term()<edge_begin><edge_end>Table(name)
Boolean()<edge_begin><edge_end>Data Type()
Condition Operation Un Equal()<edge_begin><edge_end>Condition Operation()
Order By Column Expression()<edge_begin><edge_end>Order By Expression()
Star Term()<edge_begin><edge_end>Term()
Requirement Project()<edge_begin><edge_end>Special Chapter()
Requirement Project()<edge_begin><edge_end>Attribute Configuration()
Default Attribute Value()<edge_begin><edge_end>Attribute Value(value)
Configurated Attribute(name, type)<edge_begin><edge_end>Default Attribute Value()
Current Requirement(impacted)<edge_begin><edge_end>Requirement(external Resources)
Petri Net()<edge_begin><edge_end>Arc(weight)
Trans To Place Arc()<edge_begin><edge_end>Transition()
Transition()<edge_begin><edge_end>Element(name)
Method Parameter()<edge_begin><edge_end>Method(name, body)
Base Table()<edge_begin><edge_end>Table(name)
Collection Type()<edge_begin><edge_end>Constructed Type(name)
Structural Component(name)<edge_begin><edge_end>View()
Interval Type(descriptor)<edge_begin><edge_end>Predefined Type()
Structural Component(name)<edge_begin><edge_end>Data Type()
Function()<edge_begin><edge_end>Behavioural Component(name, body)
Structured Type(is final, is instantiable)<edge_begin><edge_end>User Defined Type(name)
ROW()<edge_begin><edge_end>Constructed Type(name)
Structured Type(is final, is instantiable)<edge_begin><edge_end>Structured Type(is final, is instantiable)
Function()<edge_begin><edge_end>Data Type()
Trigger(name)<edge_begin><edge_end>Restriction()
View()<edge_begin><edge_end>Derived Table(query expression)
Predefined Type()<edge_begin><edge_end>Data Type()
Restriction()<edge_begin><edge_end>Table(name)
Typed Table()<edge_begin><edge_end>Typed Table()
Numeric Type(descriptor)<edge_begin><edge_end>Predefined Type()
None Event()<edge_begin><edge_end>Transition()
State Machine(nombre)<edge_begin><edge_end>Properties(application Address, media From Addr, media To Addr, media URI, record Path, scscf User, scscf Host, scscf Port, scscf Protocol, application Server Protocol, application Server Host, application Server Port, media Host, media Port, media Protocol, setup Conference)
Initial State()<edge_begin><edge_end>State(nombre)
Recorderd(record Id)<edge_begin><edge_end>IVR Event()
Transition()<edge_begin><edge_end>Action()
Played()<edge_begin><edge_end>IVR Event()
Cancel()<edge_begin><edge_end>IVR Event()
Ivr Action()<edge_begin><edge_end>Action()
SAP Function Parameter Column(Name, Parameter Type, Structure Or Table Name, Data Type, Length, Description, Value)<edge_begin><edge_end>SAP Function Parameter Table()
Concept(Loop Expression, Loop Limit)<edge_begin><edge_end>Metadata Table(source Name, table Type, attached CDC, activated CDC)
Delimited File Connection(Field Separator Type, split Record)<edge_begin><edge_end>File Connection(Server, File Path, Format, Encoding, Field Separator Value, Row Separator Type, Row Separator Value, Text Identifier, Use Header, Header Value, Use Footer, Footer Value, Use Limit, Limit Value, First Line Caption, Remove Empty Row, Escape Type, Escape Char, Text Enclosure, Csv Option)
Query(value, context Mode)<edge_begin><edge_end>Queries Connection()
SAP Function Unit(Name, Output Type, Output Table Name, Document)<edge_begin><edge_end>SAP Connection(Host, Username, Password, Client, System Number, Language, current Fucntion)
Regexp File Connection(Field Separator Type)<edge_begin><edge_end>File Connection(Server, File Path, Format, Encoding, Field Separator Value, Row Separator Type, Row Separator Value, Text Identifier, Use Header, Header Value, Use Footer, Footer Value, Use Limit, Limit Value, First Line Caption, Remove Empty Row, Escape Type, Escape Char, Text Enclosure, Csv Option)
Metadata Column(source Type, default Value, talend Type, key, nullable, length, precision, original Field, pattern, display Field)<edge_begin><edge_end>Metadata Table(source Name, table Type, attached CDC, activated CDC)
Metadata()<edge_begin><edge_end>Connection(version, Context Mode, Context Id)
CDC Type(link DB, journal Name)<edge_begin><edge_end>Subscriber Table(system)
Concept(Loop Expression, Loop Limit)<edge_begin><edge_end>Concept Target(target Name, Relative Loop Expression)
Queries Connection()<edge_begin><edge_end>Connection(version, Context Mode, Context Id)
Ebcdic Connection(Mid File, Data File)<edge_begin><edge_end>File Connection(Server, File Path, Format, Encoding, Field Separator Value, Row Separator Type, Row Separator Value, Text Identifier, Use Header, Header Value, Use Footer, Footer Value, Use Limit, Limit Value, First Line Caption, Remove Empty Row, Escape Type, Escape Char, Text Enclosure, Csv Option)
State Event()<edge_begin><edge_end>System(system, name)
Param Event(action)<edge_begin><edge_end>Value(val, value)
Model()<edge_begin><edge_end>Requirement()
Prefix Condition(prefix Fixed Syntax)<edge_begin><edge_end>Operator(operator)
Masters Collection()<edge_begin><edge_end>Master(base ID, match By Name, icon Size, pattern Flags, prompt, hidden, icon Update, align Name)
Master(base ID, match By Name, icon Size, pattern Flags, prompt, hidden, icon Update, align Name)<edge_begin><edge_end>Master Elt()
Page Elt()<edge_begin><edge_end>Page(background, back Page, view Scale, view Center X, View Center Y, reviewer ID, associated Page)
Infinite Line()<edge_begin><edge_end>XYAB Elt()
Pages Collection()<edge_begin><edge_end>Page(background, back Page, view Scale, view Center X, View Center Y, reviewer ID, associated Page)
Master Short Cut(icon Size, pattern Flags, prompt, shortcut URL, shortcut Help, align Name)<edge_begin><edge_end>Named Elt(name, name U)
Master Short Cut(icon Size, pattern Flags, prompt, shortcut URL, shortcut Help, align Name)<edge_begin><edge_end>Identified Elt(ID)
Text()<edge_begin><edge_end>Shape Elt()
Master(base ID, match By Name, icon Size, pattern Flags, prompt, hidden, icon Update, align Name)<edge_begin><edge_end>Named Elt(name, name U)
Shape(line Style, fill Style, text Style)<edge_begin><edge_end>Shapes Collection()
Connects Collection()<edge_begin><edge_end>Page Elt()
Page Sheet()<edge_begin><edge_end>Page Elt()
Page(background, back Page, view Scale, view Center X, View Center Y, reviewer ID, associated Page)<edge_begin><edge_end>Double()
Icon(value)<edge_begin><edge_end>Master Elt()
Icon(value)<edge_begin><edge_end>Master Short Cut(icon Size, pattern Flags, prompt, shortcut URL, shortcut Help, align Name)
String Elt(value)<edge_begin><edge_end>Text Elt()
Masters Collection()<edge_begin><edge_end>Visio Document()
Page Sheet()<edge_begin><edge_end>Master Elt()
Icon(value)<edge_begin><edge_end>String()
Spline Knot()<edge_begin><edge_end>Geom()
Polyline To()<edge_begin><edge_end>XYA Elt()
State()<edge_begin><edge_end>Behavior(/name)
Transition(/name)<edge_begin><edge_end>Behavior(/name)
Smart Tag Type(namespaceuri, name, url)<edge_begin><edge_end>Smart Tags Collection()
Column(auto Fit Width, width)<edge_begin><edge_end>Col Or Row Element(hidden, span)
Number Value(value)<edge_begin><edge_end>Value Type()
Excel Workbook(selected Sheets, window Hidden, hide Horizontal Scroll Bar, hide Vertical Scroll Bar, hide Workbook Tabs, window Height, window Width, window Top X, window Top Y, active Sheet, active Chart, first Visible Sheet, hide Pivot Table Field List, protect Structure, protect Windows, display Ink Notes, embed Save Smart Tags, future Ver, tab Ratio, window Iconic, display Drawing Objects, create Backup, calculation, do Not Calculate Before Save, date1904, ref Mode R1C1, iteration, max Iterations, max Change, precision As Displayed, do Not Save Link Values, no Auto Recover, accept Labels In Formulas, uncalced)<edge_begin><edge_end>Boolean()
Column(auto Fit Width, width)<edge_begin><edge_end>Table(default Column Width, default Row Height, expanded Column Count, expanded Row Count, left Cell, top Cell, full Columns, full Rows)
Table(default Column Width, default Row Height, expanded Column Count, expanded Row Count, left Cell, top Cell, full Columns, full Rows)<edge_begin><edge_end>Row(auto Fit Height, height)
Smart Tags Collection()<edge_begin><edge_end>Cell(array Range, formula, h Ref, merge Across, merge Down)
Excel Workbook(selected Sheets, window Hidden, hide Horizontal Scroll Bar, hide Vertical Scroll Bar, hide Workbook Tabs, window Height, window Width, window Top X, window Top Y, active Sheet, active Chart, first Visible Sheet, hide Pivot Table Field List, protect Structure, protect Windows, display Ink Notes, embed Save Smart Tags, future Ver, tab Ratio, window Iconic, display Drawing Objects, create Backup, calculation, do Not Calculate Before Save, date1904, ref Mode R1C1, iteration, max Iterations, max Change, precision As Displayed, do Not Save Link Values, no Auto Recover, accept Labels In Formulas, uncalced)<edge_begin><edge_end>String()
String Value(value)<edge_begin><edge_end>Value Type()
Date Time Type Value()<edge_begin><edge_end>Date Time Type(year, month, day, hour, minute, second)
Workbook()<edge_begin><edge_end>Custom Document Properties Collection()
Boolean Value(value)<edge_begin><edge_end>Value Type()
Col Or Row Element(hidden, span)<edge_begin><edge_end>Integer()
Excel Workbook(selected Sheets, window Hidden, hide Horizontal Scroll Bar, hide Vertical Scroll Bar, hide Workbook Tabs, window Height, window Width, window Top X, window Top Y, active Sheet, active Chart, first Visible Sheet, hide Pivot Table Field List, protect Structure, protect Windows, display Ink Notes, embed Save Smart Tags, future Ver, tab Ratio, window Iconic, display Drawing Objects, create Backup, calculation, do Not Calculate Before Save, date1904, ref Mode R1C1, iteration, max Iterations, max Change, precision As Displayed, do Not Save Link Values, no Auto Recover, accept Labels In Formulas, uncalced)<edge_begin><edge_end>Double()
Workbook()<edge_begin><edge_end>Document Properties Collection(title, subject, keywords, description, category, author, last Author, manager, company, hyperlink Base, revision, presentation Format, guid, app Name, total Time, pages, words, characters, characters With Spaces, bytes, lines, paragraphs)
Cell(array Range, formula, h Ref, merge Across, merge Down)<edge_begin><edge_end>Comment(author, show Always)
Researcher()<edge_begin><edge_end>Revision Note()
Session(year)<edge_begin><edge_end>Program Comitee()
System()<edge_begin><edge_end>Conference()
System()<edge_begin><edge_end>Laboratory()
Table(nb Columns)<edge_begin><edge_end>Row()
Spreadsheet File(nb Sheet)<edge_begin><edge_end>Sheet(name)
Region(name)<edge_begin><edge_end>Region(name)
State Machine()<edge_begin><edge_end>Top Region()
Style Elt(type, default, sti, auto Redefine, hidden, semi Hidden, locked, personal, personal Compose, personal Reply)<edge_begin><edge_end>String Type(val)
Table Row Pr Elt()<edge_begin><edge_end>Style Elt(type, default, sti, auto Redefine, hidden, semi Hidden, locked, personal, personal Compose, personal Reply)
Smart Tag Type(namespaceuri, name, url)<edge_begin><edge_end>Smart Tags Collection()
Para Elt()<edge_begin><edge_end>Block Level Chunk Elt()
String Value(value)<edge_begin><edge_end>String()
Float Value(value)<edge_begin><edge_end>Value Type()
Run Pr Elt(bold, bold cs, italic, italic cs, capitals, small Capitals, strike, double Strike, outline, shadow, emboss, imprint, no Proof, vanish, spec Vanish, rtl, cs, color, highlight, vertical Align)<edge_begin><edge_end>String Property()
Footnote()<edge_begin><edge_end>Note Elt(type, suppress Ref)
Text()<edge_begin><edge_end>Run Content Elt()
Table Cell Elt()<edge_begin><edge_end>Table Cell Pr Elt()
Table Elt()<edge_begin><edge_end>Table Content Elt()
Word Document()<edge_begin><edge_end>Document Properties Collection(title, subject, keywords, description, category, author, last Author, manager, company, hyperlink Base, revision, presentation Format, guid, app Name, total Time, pages, words, characters, characters With Spaces, bytes, lines, paragraphs)
Run Pr Elt(bold, bold cs, italic, italic cs, capitals, small Capitals, strike, double Strike, outline, shadow, emboss, imprint, no Proof, vanish, spec Vanish, rtl, cs, color, highlight, vertical Align)<edge_begin><edge_end>Fonts Elt(hint)
Table Grid Elt()<edge_begin><edge_end>Table Elt()
Para Pr Elt(keep Next, keep Lines, page Break Before, supress Line Numbers, suppress Auto Hyphens, contextual Spacing, bidi, justification)<edge_begin><edge_end>Style Elt(type, default, sti, auto Redefine, hidden, semi Hidden, locked, personal, personal Compose, personal Reply)
Para Pr Elt(keep Next, keep Lines, page Break Before, supress Line Numbers, suppress Auto Hyphens, contextual Spacing, bidi, justification)<edge_begin><edge_end>String Property()
Body Elt()<edge_begin><edge_end>Block Level Elt()
String Property()<edge_begin><edge_end>String Type(val)
Custom Document Property(name)<edge_begin><edge_end>Value Type()
Smart Tag Type(namespaceuri, name, url)<edge_begin><edge_end>String()
Table Pr Elt()<edge_begin><edge_end>Table Elt()
Del Text()<edge_begin><edge_end>String Type(val)
Style Elt(type, default, sti, auto Redefine, hidden, semi Hidden, locked, personal, personal Compose, personal Reply)<edge_begin><edge_end>Para Pr Elt(keep Next, keep Lines, page Break Before, supress Line Numbers, suppress Auto Hyphens, contextual Spacing, bidi, justification)
String Value(value)<edge_begin><edge_end>Value Type()
Font Elt()<edge_begin><edge_end>Fonts List Elt()
Para Elt()<edge_begin><edge_end>Para Content Elt()
Row Elt()<edge_begin><edge_end>Table Content Elt()
Document Properties Collection(title, subject, keywords, description, category, author, last Author, manager, company, hyperlink Base, revision, presentation Format, guid, app Name, total Time, pages, words, characters, characters With Spaces, bytes, lines, paragraphs)<edge_begin><edge_end>Integer()
Del Text()<edge_begin><edge_end>Run Content Elt()
Smart Tags Collection()<edge_begin><edge_end>Word Document()
Foreign Key()<edge_begin><edge_end>Table()
Table()<edge_begin><edge_end>Index(qualifier, unique, cardinality, index Type)
Index Element(asc)<edge_begin><edge_end>Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique)
Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique)<edge_begin><edge_end>Foreign Key Element()
Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique)<edge_begin><edge_end>Foreign Key()
Table Container()<edge_begin><edge_end>Sequence(start, increment, min Value, max Value)
Column(nullable, default Value, autoincrement, in Primary Key, in Foreign Key, unique)<edge_begin><edge_end>Index Element(asc)
Abstract Table()<edge_begin><edge_end>Table Container()
Page(background, back Page, view Scale, view Center X, View Center Y, reviewer ID, associated Page)<edge_begin><edge_end>Pages Collection()
Geom()<edge_begin><edge_end>Polyline To()
XY Elt()<edge_begin><edge_end>IX Elt(i X)
Visio Document(start, key, metric, buildnum, version, doc Lang Id)<edge_begin><edge_end>Integer()
Visio Document(start, key, metric, buildnum, version, doc Lang Id)<edge_begin><edge_end>Header Footer()
Document Sheet()<edge_begin><edge_end>Page Sheet()
Visio Document(start, key, metric, buildnum, version, doc Lang Id)<edge_begin><edge_end>Masters Collection()
Email Routing Data(data, size)<edge_begin><edge_end>Integer()
Line To()<edge_begin><edge_end>Geom()
XYABCD Elt()<edge_begin><edge_end>Cell Type(unit, formula, err, value)
Style Sheet()<edge_begin><edge_end>Shape(line Style, fill Style, text Style)
Visio Document(start, key, metric, buildnum, version, doc Lang Id)<edge_begin><edge_end>Print Setup()
XY Elt()<edge_begin><edge_end>Cell Type(unit, formula, err, value)
Document Sheet()<edge_begin><edge_end>Visio Document(start, key, metric, buildnum, version, doc Lang Id)
Page Sheet()<edge_begin><edge_end>Unique Id Elt(Unique ID)
Visio Document(start, key, metric, buildnum, version, doc Lang Id)<edge_begin><edge_end>Document Settings Elt()
Visio Document(start, key, metric, buildnum, version, doc Lang Id)<edge_begin><edge_end>Event List()
Geom()<edge_begin><edge_end>Move To()
XYABCD Elt()<edge_begin><edge_end>XYAB Elt()
Elliptical Arc To()<edge_begin><edge_end>XYABCD Elt()
Masters Collection()<edge_begin><edge_end>Master(base ID, match By Name, icon Size, pattern Flags, prompt, hidden, icon Update, align Name)
XY Elt()<edge_begin><edge_end>Del Elt(del)
Cell Type(unit, formula, err, value)<edge_begin><edge_end>String()
Style Sheet()<edge_begin><edge_end>Named Elt(name, name U)
Page(background, back Page, view Scale, view Center X, View Center Y, reviewer ID, associated Page)<edge_begin><edge_end>Integer()
Ellipse()<edge_begin><edge_end>Geom()
Named Elt(name, name U)<edge_begin><edge_end>String()
Page(background, back Page, view Scale, view Center X, View Center Y, reviewer ID, associated Page)<edge_begin><edge_end>Boolean()
Page Sheet()<edge_begin><edge_end>Page Elt()
XYA Elt()<edge_begin><edge_end>Cell Type(unit, formula, err, value)
Document Properties Collection(title, subject, creator, manager, company, category, keywords, description, hyperlink Base href, alternate Names, template, build Number Created, build Number Edited)<edge_begin><edge_end>Date Time Type(year, month, day, hour, minute, second)
Timer Action()<edge_begin><edge_end>Symbolic Timer(name)
Symbolic Token Parameter()<edge_begin><edge_end>Symbolic Parameter(name)
Binding()<edge_begin><edge_end>Symbolic Event Parameter()
Automaton(name)<edge_begin><edge_end>Symbolic Parameter(name)
Reset Timer Action()<edge_begin><edge_end>Timer Action()
Constant Binding()<edge_begin><edge_end>Fix Parameter(value)
Token()<edge_begin><edge_end>Parameter()
Book()<edge_begin><edge_end>Series Field(series)
Book()<edge_begin><edge_end>Edition Field(edition)
Book()<edge_begin><edge_end>Address Field(address)
Article()<edge_begin><edge_end>Bibtex Entry Types()
Place()<edge_begin><edge_end>TP Arc()
TP Arc()<edge_begin><edge_end>Arc()
U State Machine()<edge_begin><edge_end>State Machine(name)
State(name)<edge_begin><edge_end>Traced Class(trace)
UI State(is Initial, pic)<edge_begin><edge_end>Abstract State()
UI Condition()<edge_begin><edge_end>UISUT Element(name, description, id)
UI Transition(trigger Str, guard Str, action Str, script Str)<edge_begin><edge_end>Action()
UI Control(variable Name, value Expression)<edge_begin><edge_end>UI Data Variable(constraint RE)
Action()<edge_begin><edge_end>UISUT Element(name, description, id)
External Reviewer()<edge_begin><edge_end>Person(email, has an email, has the first name, has gender, has the last name)
Paper(full paper size, paper ID, title)<edge_begin><edge_end>Document()
conference setup()<edge_begin><edge_end>human(e-mail, last name, first name)
Reviewer()<edge_begin><edge_end>User()
Admin Role()<edge_begin><edge_end>Role()
Committee()<edge_begin><edge_end>Committee member()
Administrator()<edge_begin><edge_end>Person(email, has an email, has the first name, has gender, has the last name)
Program Committee Member(max Papers)<edge_begin><edge_end>Integer()
Conference(reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Administrator()
Associated Chair()<edge_begin><edge_end>Conference Member()
Reviewed contribution()<edge_begin><edge_end>Submitted contribution()
Publisher()<edge_begin><edge_end>Conference proceedings(has an ISBN, has a volume)
Rejected contribution()<edge_begin><edge_end>Reviewed contribution()
Chairman()<edge_begin><edge_end>Conference Member()
Review Form()<edge_begin><edge_end>Event Setup()
Preview()<edge_begin><edge_end>Review Form()
Chair URL()<edge_begin><edge_end>URL()
Late paid applicant()<edge_begin><edge_end>Paid applicant()
Conference volume(has a location)<edge_begin><edge_end>Steering committee()
lower tier reviewing process()<edge_begin><edge_end>reviewing proces()
Activity()<edge_begin><edge_end>Thing()
Assistance()<edge_begin><edge_end>Help Request()
URL()<edge_begin><edge_end>Thing()
Presentation()<edge_begin><edge_end>Active conference participant()
Person(email, has an email, has the first name, has gender, has the last name)<edge_begin><edge_end>String()
Invited Paper()<edge_begin><edge_end>Paper(full paper size, paper ID, title)
Abstract()<edge_begin><edge_end>Extended abstract()
Event URL()<edge_begin><edge_end>URL()
Template()<edge_begin><edge_end>Document()
Automatic Paper Assignment()<edge_begin><edge_end>Program Committee member()
Bid()<edge_begin><edge_end>Reviewer()
date of notification()<edge_begin><edge_end>date()
Conference Chair()<edge_begin><edge_end>Conference Member()
Reviewer()<edge_begin><edge_end>Conference Member()
Meta-Review()<edge_begin><edge_end>Review()
conference setup()<edge_begin><edge_end>Thing()
review form()<edge_begin><edge_end>activity()
Administrator()<edge_begin><edge_end>Event()
Person(email, has an email, has the first name, has gender, has the last name)<edge_begin><edge_end>Activity()
notification email()<edge_begin><edge_end>article()
group email()<edge_begin><edge_end>article()
Review expertise(has an expertise)<edge_begin><edge_end>Thing()
Conference(reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>phase of conference()
Conference volume(has a location)<edge_begin><edge_end>Organizing committee()
Program Committee Chair()<edge_begin><edge_end>Review()
Chairman()<edge_begin><edge_end>Person(email, has an email, has the first name, has gender, has the last name)
Feature Request()<edge_begin><edge_end>Help Request()
activity()<edge_begin><edge_end>human(e-mail, last name, first name)
Review expertise(has an expertise)<edge_begin><edge_end>Submitted contribution()
notification()<edge_begin><edge_end>article()
Conference proceedings(has an ISBN, has a volume)<edge_begin><edge_end>String()
Conference volume(has a location)<edge_begin><edge_end>Track()
Person(email, has an email, has the first name, has gender, has the last name)<edge_begin><edge_end>Thing()
Regular Program Committee member()<edge_begin><edge_end>Program Committee member()
Program Committee Member(max Papers)<edge_begin><edge_end>Administrator()
Help Request()<edge_begin><edge_end>Request()
Camera ready contribution()<edge_begin><edge_end>Accepted contribution()
Rejection()<edge_begin><edge_end>Decision()
Abstract()<edge_begin><edge_end>Thing()
date()<edge_begin><edge_end>Thing()
Active conference participant()<edge_begin><edge_end>Conference contributor()
Content(name)<edge_begin><edge_end>Operation(name)
Message()<edge_begin><edge_end>Operation(name)
Message()<edge_begin><edge_end>Value(value)
Transition(priority)<edge_begin><edge_end>Specification Element(specification)
Region(priority)<edge_begin><edge_end>Vertex()
Statechart()<edge_begin><edge_end>Composite Element()
Statechart()<edge_begin><edge_end>Specification Element(specification)
Reaction()<edge_begin><edge_end>Effect()
Exit()<edge_begin><edge_end>Pseudostate()
Vertex()<edge_begin><edge_end>Named Element(name)
Syntax(is id, is string, is int, token)<edge_begin><edge_end>Rule()
Rule()<edge_begin><edge_end>Element(name)
Block()<edge_begin><edge_end>Element(name)
Foreign Key()<edge_begin><edge_end>R Model Element(kind, name)
Foreign Key()<edge_begin><edge_end>Key()
Schema()<edge_begin><edge_end>Table()
Init Straight State()<edge_begin><edge_end>SMACH State(goal, goal type, remap overwrite)
SMACH State Machine(Skill Interface)<edge_begin><edge_end>Init Action State()
Petri Net()<edge_begin><edge_end>Type(name)
Place()<edge_begin><edge_end>Token(values)
Petri Net()<edge_begin><edge_end>Identifiable Element(name, author)
Table(name)<edge_begin><edge_end>Scheme(name)
Column(name)<edge_begin><edge_end>Table(name)
Transition()<edge_begin><edge_end>TP Arc()
PT Arc()<edge_begin><edge_end>Place()
State Machine()<edge_begin><edge_end>Model Element(name)
Partition()<edge_begin><edge_end>Model Element(name)
Transition()<edge_begin><edge_end>Model Element(name)
Activity Graph()<edge_begin><edge_end>State Machine()
Place(capacity)<edge_begin><edge_end>Generic Place(name, number Of Tokens)
Input Arc(weight)<edge_begin><edge_end>Generic Place(name, number Of Tokens)
NPN Diagram Net System()<edge_begin><edge_end>I Diagram Holder()
Arc TP()<edge_begin><edge_end>Transition()
Token Type()<edge_begin><edge_end>I Net Element(name, comment)
Token Type Element Net()<edge_begin><edge_end>High Level Petri Net()
N Pnet()<edge_begin><edge_end>Token Type Element Net()
N Pnet()<edge_begin><edge_end>High Level Petri Net()
Token Attribute(type, name, value)<edge_begin><edge_end>I Entity Identifiable(id)
Place()<edge_begin><edge_end>Node()
Token()<edge_begin><edge_end>Token Attribute(type, name, value)
Place Marking()<edge_begin><edge_end>Place()
Token Atomic()<edge_begin><edge_end>Token Type Atomic()
Monom Constant(power)<edge_begin><edge_end>Token()
Monom Constant(power)<edge_begin><edge_end>Variable(name)
NPN Symbol Arc SN(bendpoints)<edge_begin><edge_end>Arc()
Token Weight(weight)<edge_begin><edge_end>Token()
Arc TP()<edge_begin><edge_end>Arc()
Token Weight(weight)<edge_begin><edge_end>I Entity Identifiable(id)
NPN Symbol Arc TPSN()<edge_begin><edge_end>NPN Symbol Arc SN(bendpoints)
Arc TP()<edge_begin><edge_end>Place()
N Pnet Marked()<edge_begin><edge_end>I Net Element(name, comment)
NPN Symbol Node SN(constraints)<edge_begin><edge_end>Rectangle()
High Level Petri Net()<edge_begin><edge_end>Context Variable()
Token Binding()<edge_begin><edge_end>Variable(name)
Element Net Marked()<edge_begin><edge_end>Token Type Element Net()
Program Committee Chair()<edge_begin><edge_end>Review()
Committe Role()<edge_begin><edge_end>Role()
Administrator()<edge_begin><edge_end>Reviewer()
Workshop()<edge_begin><edge_end>Conference part()
Event()<edge_begin><edge_end>Event Tracks()
Accepted contribution()<edge_begin><edge_end>Reviewed contribution()
Author()<edge_begin><edge_end>Conference Member()
Feature Request()<edge_begin><edge_end>Help Request()
Conference participant()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, email)
Acceptance()<edge_begin><edge_end>Decision()
Person(has an email, has the first name, has gender, has the last name, email)<edge_begin><edge_end>String()
Review preference(has a degree)<edge_begin><edge_end>Integer()
Committee()<edge_begin><edge_end>Conference volume(has a location)
Call for participation()<edge_begin><edge_end>Conference document(has a date of issue)
Review Form Setup()<edge_begin><edge_end>Review Form()
Paper(paper ID, title)<edge_begin><edge_end>String()
Program Committee Member(max Papers)<edge_begin><edge_end>Conference Member()
Abstract()<edge_begin><edge_end>Thing()
Administrator()<edge_begin><edge_end>Role()
Conference proceedings(has an ISBN, has a volume)<edge_begin><edge_end>String()
Reviewed contribution()<edge_begin><edge_end>Submitted contribution()
Author()<edge_begin><edge_end>Paper(paper ID, title)
Document()<edge_begin><edge_end>User()
Person(has an email, has the first name, has gender, has the last name, email)<edge_begin><edge_end>Thing()
Registration()<edge_begin><edge_end>Activity()
Paper(paper ID, title)<edge_begin><edge_end>Author()
Paper(paper ID, title)<edge_begin><edge_end>Regular contribution()
Steering committee()<edge_begin><edge_end>Conference volume(has a location)
Conference(date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Conference Member()
Event Creation()<edge_begin><edge_end>Activity()
Co-author()<edge_begin><edge_end>Paper(paper ID, title)
Person(has an email, has the first name, has gender, has the last name, email)<edge_begin><edge_end>Activity()
User()<edge_begin><edge_end>Document()
Review()<edge_begin><edge_end>Reviewed contribution()
Notification Email()<edge_begin><edge_end>Email()
Program Committee Chair()<edge_begin><edge_end>Chairman()
Paper(paper ID, title)<edge_begin><edge_end>Meta-Reviewer()
Review()<edge_begin><edge_end>Reviewer()
Event Setup()<edge_begin><edge_end>Event()
Conference volume(has a location)<edge_begin><edge_end>Conference(date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
Rejection Email()<edge_begin><edge_end>Email()
Reviewer()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, email)
Reviewer()<edge_begin><edge_end>Thing()
User()<edge_begin><edge_end>Thing()
Reviewer()<edge_begin><edge_end>Administrator()
Differential Relation(lower Bound, upper Bound, operator, value)<edge_begin><edge_end>Aw Req(increment Coefficient)
Goal Model(internal Id)<edge_begin><edge_end>Configuration()
Parameter(type, unit, value, metric)<edge_begin><edge_end>Configuration()
Task()<edge_begin><edge_end>Performative Requirement(start Time)
Null Value()<edge_begin><edge_end>Value()
Boolean Value(value)<edge_begin><edge_end>Value()
Structural Feature Value()<edge_begin><edge_end>Sml E Structural Feature(name)
Binary Operation Expression(operator)<edge_begin><edge_end>Expression()
Message()<edge_begin><edge_end>Parameter Binding()
Collaboration(name)<edge_begin><edge_end>Role(static, name)
Event Parameter Ranges()<edge_begin><edge_end>Sml E Typed Element(name)
String Value(value)<edge_begin><edge_end>Value()
Feature Access Binding Expression()<edge_begin><edge_end>Binding Expression()
Collection Access(collection Operation)<edge_begin><edge_end>Expression()
Feature Access()<edge_begin><edge_end>Variable(name)
Loop()<edge_begin><edge_end>Interaction Fragment()
Feature Access()<edge_begin><edge_end>Collection Access(collection Operation)
Document()<edge_begin><edge_end>Sml E Package(name)
Case Condition()<edge_begin><edge_end>Condition Expression()
String Ranges(values)<edge_begin><edge_end>Abstract Ranges()
Variable Fragment()<edge_begin><edge_end>Variable Expression()
Feature Access()<edge_begin><edge_end>Structural Feature Value()
XML Value Function Comment Content()<edge_begin><edge_end>XML Value Function Comment(returning Option)
XML Value Function Validate Content()<edge_begin><edge_end>XML Value Function Validate(content Option)
XML Value Function Parse(content Option, whitespace Handling Option)<edge_begin><edge_end>XML Value Function Parse Content()
XML Value Function Validate(content Option)<edge_begin><edge_end>XML Value Function Validate Content()
XML Value Function Query(empty Handling Option)<edge_begin><edge_end>XML Value Function Query Returning(returning Option, passing Option)
XML Value Function Validate According To()<edge_begin><edge_end>XML Value Function Validate Element()
XML Table Function(table Row Pattern)<edge_begin><edge_end>XML Table Column Definition Item()
XML Table Column Definition Regular(passing Option, table Column Pattern)<edge_begin><edge_end>XML Table Column Definition Default()
XML Query Expression(xquery Expr Content)<edge_begin><edge_end>XML Value Function Query(empty Handling Option)
XML Value Function PI Content()<edge_begin><edge_end>XML Value Function PI(target Name, returning Option)
XML Predicate Document()<edge_begin><edge_end>XML Predicate()
XML Value Function Element Content Item()<edge_begin><edge_end>XML Value Function Element Content List(null Handling Option)
XML Query Argument Item(passing Mechanism)<edge_begin><edge_end>XML Query Argument List(passing Mechanism)
XML Attributes Declaration()<edge_begin><edge_end>XML Value Function Element(element Name, returning Option)
XML Value Function Validate According To()<edge_begin><edge_end>XML Value Function Validate(content Option)
XML Table Column Definition Default()<edge_begin><edge_end>XML Table Column Definition Regular(passing Option, table Column Pattern)
m Comp(type, name)<edge_begin><edge_end>m Variable(name, type)
m Transition(name, trigger Exp, guard, action)<edge_begin><edge_end>m State(name)
m Port(name, io, type)<edge_begin><edge_end>m Port(name, io, type)
Document Root(mixed)<edge_begin><edge_end>Qsar Type()
Structurelist Type()<edge_begin><edge_end>Resource Type(checksum, excluded, file, id, name, no2d, no3d, no Mols, type, u RL)
Responses List Type()<edge_begin><edge_end>Response Type(value, array Values, structure ID, unit)
Create Index(unique, sort Orders)<edge_begin><edge_end>Create Table()
Drop(object)<edge_begin><edge_end>Ddl Statement()
Primary Key Constraint()<edge_begin><edge_end>Constraint()
Create Index(unique, sort Orders)<edge_begin><edge_end>Create(name)
Comment(comment)<edge_begin><edge_end>Ddl Statement()
Sql Number(has Precision, precision, scale)<edge_begin><edge_end>Sql Data Type(name)
Foreign Key Constraint()<edge_begin><edge_end>Constraint()
Constraint()<edge_begin><edge_end>Table Property(name)
Foreign Key Constraint()<edge_begin><edge_end>Column(sorted, default)
Post Goal()<edge_begin><edge_end>Pre Post Goal()
Filter Set(starttoken, endtoken)<edge_begin><edge_end>Filters File(file)
Copy(file, presservelastmodified, tofile, todir, overwrite, filtering, flatten, include Empty Dirs)<edge_begin><edge_end>Filter Set(starttoken, endtoken)
Exec(executable, dir)<edge_begin><edge_end>Execution Task()
Ant Property Value(value)<edge_begin><edge_end>String()
Goal(name)<edge_begin><edge_end>Abstract Goal()
Set()<edge_begin><edge_end>Pattern()
Javadoc(sourcepath, destdir, packagenames, defaultexcludes, author, version, use, windowtitle)<edge_begin><edge_end>String()
Xmlns(name, value)<edge_begin><edge_end>String()
New Task()<edge_begin><edge_end>Task()
Path Element(path, location)<edge_begin><edge_end>Basic()
Jelly Set(var, value)<edge_begin><edge_end>Jelly Command()
Task()<edge_begin><edge_end>Contents Goal()
Ant Property Location(location)<edge_begin><edge_end>String()
Basic()<edge_begin><edge_end>Pattern()
Copy(file, presservelastmodified, tofile, todir, overwrite, filtering, flatten, include Empty Dirs)<edge_begin><edge_end>Mapper(type, classname, classpath, classpathref, from, to)
Path(id, refid)<edge_begin><edge_end>Path Element(path, location)
Delete(file, dir, verbose, quiet, failonerror, include Empty Dirs, includes, includesfile, excludes, excludesfile, defaultexcludes)<edge_begin><edge_end>String()
Archive Task()<edge_begin><edge_end>Pre Defined Task(id, taskname, description)
Echo(message, file, append)<edge_begin><edge_end>String()
Echo(message, file, append)<edge_begin><edge_end>Miscellaneous Task()
Includes()<edge_begin><edge_end>In Excludes(name, if Condition, unless)
Bibliography(bibstyle)<edge_begin><edge_end>Endbib(Endbibprefix)
Document(documenttype, prefix, fontsize, papertype)<edge_begin><edge_end>Packages(packageprefix, packagetype)
Section(sectionprefix, sectionname, sectiontext)<edge_begin><edge_end>Subsection(subsectionprefix, subsectionname, subsectiontext)
Section(sectionprefix, sectionname, sectiontext)<edge_begin><edge_end>General(genprefix, genname, gentext)
PNML Document()<edge_begin><edge_end>URI(value)
Line(width, shape, style)<edge_begin><edge_end>Color()
Edge Graphics()<edge_begin><edge_end>Graphics()
Place()<edge_begin><edge_end>Initial Marking()
Net Element()<edge_begin><edge_end>Tool Specific(tool, version)
Page Graphics()<edge_begin><edge_end>Graphics()
Fill(gradientrotation)<edge_begin><edge_end>Node Graphics()
Node Graphics()<edge_begin><edge_end>Fill(gradientrotation)
Label(text)<edge_begin><edge_end>String()
Tool Specific(tool, version)<edge_begin><edge_end>Arc()
Tool Specific(tool, version)<edge_begin><edge_end>Net Element()
Annotation Graphics()<edge_begin><edge_end>Offset()
Name()<edge_begin><edge_end>Labeled Element()
Node Graphics()<edge_begin><edge_end>Position()
Net Graphics()<edge_begin><edge_end>Graphics()
Arc()<edge_begin><edge_end>Tool Specific(tool, version)
Arc()<edge_begin><edge_end>Edge Graphics()
Node Graphics()<edge_begin><edge_end>Line(width, shape, style)
Any Element(name, text)<edge_begin><edge_end>String()
If Eq()<edge_begin><edge_end>Build Entry()
Object String()<edge_begin><edge_end>Value()
Object Shell Char(value)<edge_begin><edge_end>Value()
Object Variable(additional)<edge_begin><edge_end>Value()
Object Dir()<edge_begin><edge_end>Value()
Values()<edge_begin><edge_end>Value()
Host Program(name)<edge_begin><edge_end>Assign()
Domain(name)<edge_begin><edge_end>Constraint(name, description)
Table(name)<edge_begin><edge_end>Candidate Key(name)
Simple System()<edge_begin><edge_end>Identifier(name)
While Loop Statement()<edge_begin><edge_end>Statement()
Updates()<edge_begin><edge_end>Expression()
Project(id)<edge_begin><edge_end>System Definition()
Struct()<edge_begin><edge_end>Type(prefix)
Template()<edge_begin><edge_end>TA Element()
Array Variable Expression()<edge_begin><edge_end>Expression()
Identifier Expression()<edge_begin><edge_end>Identifier(name)
Unary Expression(operator)<edge_begin><edge_end>Expression()
Variable Identifier()<edge_begin><edge_end>Identifier(name)
Array Expression Type()<edge_begin><edge_end>Expression()
Do While Loop Statement()<edge_begin><edge_end>Expression()
If Statement()<edge_begin><edge_end>Expression()
Variable Expression()<edge_begin><edge_end>Expression()
Block Statement()<edge_begin><edge_end>Block()
While Loop Statement()<edge_begin><edge_end>Expression()
Binary Expression(operator)<edge_begin><edge_end>Expression()
Field Declaration()<edge_begin><edge_end>Type(prefix)
Channel Priority Declaration()<edge_begin><edge_end>Declaration()
Scalar()<edge_begin><edge_end>Type(prefix)
Edge()<edge_begin><edge_end>Selections()
Declaration()<edge_begin><edge_end>Commentable(comment)
Identifier Type()<edge_begin><edge_end>Type(prefix)
Expression Channel Expression()<edge_begin><edge_end>Expression()
Expression()<edge_begin><edge_end>Commentable(comment)
Sql Function()<edge_begin><edge_end>Sql Expr()
Sql Binary Expr(op)<edge_begin><edge_end>Sql Expr()
Trigger(name, time)<edge_begin><edge_end>Table(name)
Sql Method(array, name)<edge_begin><edge_end>Table(name)
Table(name)<edge_begin><edge_end>Table Constraint()
Sql Method Ref()<edge_begin><edge_end>Sql Method(array, name)
Sql Type()<edge_begin><edge_end>Sql Expr()
Insert Statement()<edge_begin><edge_end>Sql Expr()
Insert()<edge_begin><edge_end>Table(name)
Trigger Delete()<edge_begin><edge_end>Trigger Action()
Sql Number Literal(value)<edge_begin><edge_end>Sql Expr()
Sql Method(array, name)<edge_begin><edge_end>Sql Sentence()
Column Ref()<edge_begin><edge_end>Column(name, null, primary Key)
Fill(color, gradientcolor, gradientrotation, image)<edge_begin><edge_end>Node Graphics()
PT Arc Annotation(text)<edge_begin><edge_end>Positive Integer()
Arc Graphics()<edge_begin><edge_end>Arc()
Position()<edge_begin><edge_end>Arc Graphics()
Pn Object(id)<edge_begin><edge_end>Page()
Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI)<edge_begin><edge_end>Any Object()
Petri Net(id, type)<edge_begin><edge_end>Petri Net Doc(xmlns)
Annotation()<edge_begin><edge_end>Annotation Graphics()
Arc()<edge_begin><edge_end>Node()
Petri Net(id, type)<edge_begin><edge_end>Name(text)
Node Graphics()<edge_begin><edge_end>Graphics()
Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI)<edge_begin><edge_end>URI()
Font(align, decoration, family, rotation, size, style, weight)<edge_begin><edge_end>Annotation Graphics()
Node Graphics()<edge_begin><edge_end>Page()
Node Graphics()<edge_begin><edge_end>Fill(color, gradientcolor, gradientrotation, image)
Translations(default)<edge_begin><edge_end>Link Collection()
Pages Type()<edge_begin><edge_end>Link Collection()
Document Root(mixed)<edge_begin><edge_end>Space(id, wiki, name, home, xwiki Relative Url, xwiki Absolute Url)
Wiki(id, name, description, owner)<edge_begin><edge_end>Link Collection()
Properties Type()<edge_begin><edge_end>Property(value, name, type)
History Type()<edge_begin><edge_end>Link Collection()
Search Result(type, id, page Full Name, title, wiki, space, page Name, modified, author, author Name, version, language, class Name, object Number, filename, score)<edge_begin><edge_end>Object()
Object Summary(id, guid, page Id, page Version, wiki, space, page Name, page Author, page Author Name, class Name, number, headline)<edge_begin><edge_end>Link Collection()
Search Results Type(template)<edge_begin><edge_end>Search Result(type, id, page Full Name, title, wiki, space, page Name, modified, author, author Name, version, language, class Name, object Number, filename, score)
Document Root(mixed)<edge_begin><edge_end>Class(id, name)
Document Root(mixed)<edge_begin><edge_end>Properties Type()
Page Summary(id, full Name, wiki, space, name, title, parent, parent Id, version, author, author Name, xwiki Relative Url, xwiki Absolute Url, syntax)<edge_begin><edge_end>Link Collection()
Document Root(mixed)<edge_begin><edge_end>X Wiki(version)
Spaces Type()<edge_begin><edge_end>Link Collection()
Extend Rule()<edge_begin><edge_end>Rule(in Sequence)
Access Update Function(type)<edge_begin><edge_end>Function(return Type, is External)
Declaration()<edge_begin><edge_end>Located Element(location)
Extension()<edge_begin><edge_end>Variable Decl()
Operator Term(op Name)<edge_begin><edge_end>Term()
String Constant(value)<edge_begin><edge_end>Constant()
Element Decl(name)<edge_begin><edge_end>Located Element(location)
Parameter(name, type)<edge_begin><edge_end>Located Element(location)
Rule(in Sequence)<edge_begin><edge_end>Located Element(location)
Asm Invocation(asm Name)<edge_begin><edge_end>Rule(in Sequence)
Body()<edge_begin><edge_end>Declaration()
Function(return Type, is External)<edge_begin><edge_end>Term()
Do Forall Rule()<edge_begin><edge_end>Universe(name, contents)
Else If()<edge_begin><edge_end>Rule(in Sequence)
Body()<edge_begin><edge_end>X Asm File()
Function Or Variable Term()<edge_begin><edge_end>Term()
Body()<edge_begin><edge_end>Rule(in Sequence)
Arc Place2Transition()<edge_begin><edge_end>Place Element(name, tokens)
Transition Element(name)<edge_begin><edge_end>Element(id, location)
Administrator()<edge_begin><edge_end>Person(email, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name)
Conference Chair()<edge_begin><edge_end>Person(email, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name)
Accepted Paper()<edge_begin><edge_end>Paper Presentation()
Chairman()<edge_begin><edge_end>Person(email, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name)
Request()<edge_begin><edge_end>Activity()
Paper(full paper size, paper ID, title)<edge_begin><edge_end>String()
Numerical Review Question()<edge_begin><edge_end>Review Question()
Academic Event()<edge_begin><edge_end>Call(has Submission Instructions, has Submission Deadline)
Paper(full paper size, paper ID, title)<edge_begin><edge_end>Subject Area()
Conference volume(has a location)<edge_begin><edge_end>Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
Science Worker()<edge_begin><edge_end>Person(email, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name)
pc meeting()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
notification()<edge_begin><edge_end>activity()
Approval Email()<edge_begin><edge_end>Email()
Accept Rating()<edge_begin><edge_end>Review Rating()
Track-workshop chair()<edge_begin><edge_end>Person(email, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name)
Administrator()<edge_begin><edge_end>Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
Paper(full paper size, paper ID, title)<edge_begin><edge_end>Bid()
Personal Publication History()<edge_begin><edge_end>Personal History()
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Boolean()
Senior Program Committee member()<edge_begin><edge_end>Program Committee member()
Early paid applicant()<edge_begin><edge_end>Paid applicant()
Registration of participants event()<edge_begin><edge_end>Administrative event()
Contribution(remark, abstract, contact Email, has Keyword, has Title)<edge_begin><edge_end>Thing()
Social Event()<edge_begin><edge_end>Non Academic Event()
article()<edge_begin><edge_end>Document()
Regular()<edge_begin><edge_end>Participant(early Registration)
Co-author()<edge_begin><edge_end>Paper(full paper size, paper ID, title)
session()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Contribution(remark, abstract, contact Email, has Keyword, has Title)<edge_begin><edge_end>Author()
Published Paper()<edge_begin><edge_end>Paper(full paper size, paper ID, title)
Medicine Topic()<edge_begin><edge_end>Topic()
Administrator()<edge_begin><edge_end>User()
Rejection()<edge_begin><edge_end>Decision()
end date of abstract submission()<edge_begin><edge_end>abstract submission date()
External Reviewer()<edge_begin><edge_end>Reviewer()
Co-chair()<edge_begin><edge_end>Committee member()
group email()<edge_begin><edge_end>article()
Active Paper()<edge_begin><edge_end>Review Rating()
Reviewer()<edge_begin><edge_end>Administrator()
Call(has Submission Instructions, has Submission Deadline)<edge_begin><edge_end>Person(email, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name)
Review expertise(has an expertise)<edge_begin><edge_end>Thing()
Person(email, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name)<edge_begin><edge_end>String()
Conference volume(has a location)<edge_begin><edge_end>Important dates()
Administrator()<edge_begin><edge_end>Reviewer()
Person(email, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name)<edge_begin><edge_end>Document()
Symposium()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Conference part()<edge_begin><edge_end>Topic()
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>date Time()
bidding of reviewer()<edge_begin><edge_end>activity()
full paper submission date()<edge_begin><edge_end>date()
Communications Topic()<edge_begin><edge_end>Topic()
Paper(full paper size, paper ID, title)<edge_begin><edge_end>article()
Performance Topic()<edge_begin><edge_end>Topic()
Review()<edge_begin><edge_end>classification()
Conference applicant()<edge_begin><edge_end>Person(email, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name)
Sponsorship(has Cost Currency, has Cost Amount)<edge_begin><edge_end>Organization()
Associated Chair()<edge_begin><edge_end>Chairman()
program()<edge_begin><edge_end>chair()
Paper Full Version()<edge_begin><edge_end>Paper(full paper size, paper ID, title)
Meal Menu()<edge_begin><edge_end>Meal Event()
paper assignment()<edge_begin><edge_end>activity()
Program Committee Chair()<edge_begin><edge_end>Review()
Workshop()<edge_begin><edge_end>Working event()
Meta-Reviewer()<edge_begin><edge_end>Reviewer()
Computer Networks Security Topic()<edge_begin><edge_end>Computer Networks Topic()
Review expertise(has an expertise)<edge_begin><edge_end>Submitted contribution()
Topic()<edge_begin><edge_end>Review preference(has a degree)
Person(email, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name)<edge_begin><edge_end>Conference Event(has End Date Time, has Start Date Time)
Committee member()<edge_begin><edge_end>Committee()
Activity()<edge_begin><edge_end>Person(email, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name)
Social event()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Industry Organization()<edge_begin><edge_end>Organization()
activity()<edge_begin><edge_end>intensity()
human(e-mail, last name, first name)<edge_begin><edge_end>String()
User()<edge_begin><edge_end>Person(email, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name)
Company()<edge_begin><edge_end>Organization()
submission process()<edge_begin><edge_end>human(e-mail, last name, first name)
Feature Request()<edge_begin><edge_end>Help Request()
Computer Networks Topic()<edge_begin><edge_end>Topic()
Regular Program Committee member()<edge_begin><edge_end>Program Committee member()
Cryptography Topic()<edge_begin><edge_end>Topic()
Reviewer()<edge_begin><edge_end>Personal Review History()
Submission()<edge_begin><edge_end>Document()
Invited Paper()<edge_begin><edge_end>Paper(full paper size, paper ID, title)
Tutorial()<edge_begin><edge_end>Working event()
Computer Networks Aapplications Topic()<edge_begin><edge_end>Computer Networks Topic()
Camera Ready event()<edge_begin><edge_end>Administrative event()
Accepted Paper()<edge_begin><edge_end>Paper(full paper size, paper ID, title)
Bid()<edge_begin><edge_end>Reviewer()
Reception()<edge_begin><edge_end>Social Event()
Paper(full paper size, paper ID, title)<edge_begin><edge_end>Contribution(remark, abstract, contact Email, has Keyword, has Title)
Active Paper()<edge_begin><edge_end>Paper(full paper size, paper ID, title)
Reject Rating()<edge_begin><edge_end>Review Rating()
Committee()<edge_begin><edge_end>User()
human(e-mail, last name, first name)<edge_begin><edge_end>article()
Final State()<edge_begin><edge_end>State(description)
Regular State()<edge_begin><edge_end>State(description)
Petri Net()<edge_begin><edge_end>Pragmatics Ontology(manager)
Pragmatics Ontology(manager)<edge_begin><edge_end>Petri Net()
Transition()<edge_begin><edge_end>Transition()
Smart Tags Collection()<edge_begin><edge_end>Smart Tag Type(namespaceuri, name, url)
Workbook()<edge_begin><edge_end>Document Properties Collection(title, subject, keywords, description, category, author, last Author, manager, company, hyperlink Base, revision, presentation Format, guid, app Name, total Time, pages, words, characters, characters With Spaces, bytes, lines, paragraphs)
Custom Document Property(name)<edge_begin><edge_end>Value Type()
Document Properties Collection(title, subject, keywords, description, category, author, last Author, manager, company, hyperlink Base, revision, presentation Format, guid, app Name, total Time, pages, words, characters, characters With Spaces, bytes, lines, paragraphs)<edge_begin><edge_end>Date Time Type(year, month, day, hour, minute, second)
Table(default Column Width, default Row Height, expanded Column Count, expanded Row Count, left Cell, top Cell, full Columns, full Rows)<edge_begin><edge_end>Column(auto Fit Width, width)
Row(auto Fit Height, height)<edge_begin><edge_end>Double()
Row(auto Fit Height, height)<edge_begin><edge_end>Col Or Row Element(hidden, span)
Data()<edge_begin><edge_end>Value Type()
Number Value(value)<edge_begin><edge_end>Value Type()
Cell(array Range, formula, h Ref, merge Across, merge Down)<edge_begin><edge_end>String()
Table(default Column Width, default Row Height, expanded Column Count, expanded Row Count, left Cell, top Cell, full Columns, full Rows)<edge_begin><edge_end>Worksheet(name)
Boolean Value(value)<edge_begin><edge_end>Boolean()
Custom Document Properties Collection()<edge_begin><edge_end>Workbook()
Composite State()<edge_begin><edge_end>State(initial Time, final Time)
Transition(initial Time, final Time)<edge_begin><edge_end>Guard(expression)
Region()<edge_begin><edge_end>Composite State()
Pseudostate()<edge_begin><edge_end>State(initial Time, final Time)
Transition(initial Time, final Time)<edge_begin><edge_end>Action(variable, value)
Highlighting Values()<edge_begin><edge_end>Color Or Gradient()
Gradient Color Area(offset)<edge_begin><edge_end>Color()
Style()<edge_begin><edge_end>Style()
RGB Color(red, green, blue)<edge_begin><edge_end>Color()
conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>date Time()
Call(has Submission Instructions, has Submission Deadline)<edge_begin><edge_end>String()
Call For Papers()<edge_begin><edge_end>Call(has Submission Instructions, has Submission Deadline)
Written contribution()<edge_begin><edge_end>Conference contribution()
rejection notification email()<edge_begin><edge_end>notification email()
Organizational Meeting()<edge_begin><edge_end>Academic Event()
Paper(full paper size, paper ID, title)<edge_begin><edge_end>Regular contribution()
Conference document()<edge_begin><edge_end>Person(has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, email)
article()<edge_begin><edge_end>Reviewer()
Proceedings Publisher()<edge_begin><edge_end>Organisation()
Activity()<edge_begin><edge_end>article()
Conference Banquet()<edge_begin><edge_end>Social Event()
Coffee Break()<edge_begin><edge_end>Break Event()
Approval Email()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Conference Event(has End Date Time, has Start Date Time)<edge_begin><edge_end>Place()
Regular author()<edge_begin><edge_end>Conference contributor()
Science Worker()<edge_begin><edge_end>Person(has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, email)
Signal Processing Topic()<edge_begin><edge_end>Topic()
Paper(full paper size, paper ID, title)<edge_begin><edge_end>Review()
Computer Architecture Topic()<edge_begin><edge_end>Topic()
Organizing committee()<edge_begin><edge_end>Committee()
Important dates()<edge_begin><edge_end>date()
Submission()<edge_begin><edge_end>Document()
Undecided Paper()<edge_begin><edge_end>Paper(full paper size, paper ID, title)
participant()<edge_begin><edge_end>Person(has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, email)
Conference volume(has a location)<edge_begin><edge_end>Program committee()
Co-author()<edge_begin><edge_end>Paper(full paper size, paper ID, title)
conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Person(has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, email)
human(e-mail, last name, first name)<edge_begin><edge_end>article()
Meal Break()<edge_begin><edge_end>Break Event()
CAD Topic()<edge_begin><edge_end>Topic()
Person(has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, email)<edge_begin><edge_end>Person(has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, email)
Presenter()<edge_begin><edge_end>Author()
Committee()<edge_begin><edge_end>User()
Non Academic Event()<edge_begin><edge_end>Conference Event(has End Date Time, has Start Date Time)
Conference Event(has End Date Time, has Start Date Time)<edge_begin><edge_end>Programme()
Program Committee Member(max Papers)<edge_begin><edge_end>Administrator()
Bid()<edge_begin><edge_end>Reviewer()
Multi-author Volume()<edge_begin><edge_end>Document()
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Track-workshop chair()<edge_begin><edge_end>Conference part()
Place()<edge_begin><edge_end>Conference Event(has End Date Time, has Start Date Time)
Wireless Communications Topic()<edge_begin><edge_end>Topic()
Manual Paper Assignment()<edge_begin><edge_end>Program Committee member()
Administrator()<edge_begin><edge_end>Paper(full paper size, paper ID, title)
Operating Topicsystems()<edge_begin><edge_end>Topic()
Regular contribution()<edge_begin><edge_end>Written contribution()
Sponsorship(has Cost Currency, has Cost Amount)<edge_begin><edge_end>String()
Paper(full paper size, paper ID, title)<edge_begin><edge_end>Person(has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, email)
Working event()<edge_begin><edge_end>Administrative event()
Workshop()<edge_begin><edge_end>Academic Event()
bidding of reviewer()<edge_begin><edge_end>activity()
Pending Paper()<edge_begin><edge_end>Paper(full paper size, paper ID, title)
paper assignment()<edge_begin><edge_end>Program Committee member()
reviewing proces()<edge_begin><edge_end>activity()
abstract submission date()<edge_begin><edge_end>date()
notification()<edge_begin><edge_end>activity()
activity()<edge_begin><edge_end>activity()
Author()<edge_begin><edge_end>User()
Conference participant()<edge_begin><edge_end>Person(has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, email)
Computer Networks Enterprise Topic()<edge_begin><edge_end>Computer Networks Topic()
conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>phase of conference()
Registration of participants event()<edge_begin><edge_end>Administrative event()
Review()<edge_begin><edge_end>article()
Preview()<edge_begin><edge_end>Review Form()
Research Institute()<edge_begin><edge_end>Academic Institution()
Personal Publication History()<edge_begin><edge_end>Personal History()
abstract of paper()<edge_begin><edge_end>article()
Conference volume(has a location)<edge_begin><edge_end>Track()
PC Chair()<edge_begin><edge_end>Conference Participant()
Call(has Submission Instructions, has Submission Deadline)<edge_begin><edge_end>Person(has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, email)
Information for participants()<edge_begin><edge_end>Conference document()
Person(has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, email)<edge_begin><edge_end>Conference Event(has End Date Time, has Start Date Time)
Evaluated Paper()<edge_begin><edge_end>Assigned Paper()
Paper(full paper size, paper ID, title)<edge_begin><edge_end>String()
Banquet()<edge_begin><edge_end>Social event()
Contribution(remark, abstract, contact Email, has Keyword, has Title)<edge_begin><edge_end>Author()
Automatic Paper Assignment()<edge_begin><edge_end>paper assignment()
Conference Member()<edge_begin><edge_end>conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
human(e-mail, last name, first name)<edge_begin><edge_end>institute()
Early-Registered Participant()<edge_begin><edge_end>Conference Participant()
Review Form()<edge_begin><edge_end>Event Setup()
Assigned Paper()<edge_begin><edge_end>Possible Reviewer()
Presenter()<edge_begin><edge_end>Conference Participant()
Administrator()<edge_begin><edge_end>Program Committee Member(max Papers)
Radio Communications Topic()<edge_begin><edge_end>Topic()
Medicine Topic()<edge_begin><edge_end>Topic()
Email Template()<edge_begin><edge_end>Event Setup()
Conference volume(has a location)<edge_begin><edge_end>Steering committee()
Active conference participant()<edge_begin><edge_end>Presentation()
Workshop Paper()<edge_begin><edge_end>Paper(full paper size, paper ID, title)
Excursion()<edge_begin><edge_end>Social Event()
Author Role()<edge_begin><edge_end>Role()
Accepted Paper()<edge_begin><edge_end>Paper(full paper size, paper ID, title)
Powerline Transmission Topic()<edge_begin><edge_end>Topic()
Conference volume(has a location)<edge_begin><edge_end>conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
Regular Reviewer URL()<edge_begin><edge_end>URL()
conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>String()
Conference proceedings(has an ISBN, has a volume)<edge_begin><edge_end>String()
Active conference participant()<edge_begin><edge_end>Conference contributor()
Program Committee Chair()<edge_begin><edge_end>Review()
Session Chair()<edge_begin><edge_end>PC Member()
Author()<edge_begin><edge_end>article()
Document()<edge_begin><edge_end>Person(has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, email)
Administrator()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Demo Chair()<edge_begin><edge_end>Conference Participant()
start date of conference()<edge_begin><edge_end>date of conference()
Member PC()<edge_begin><edge_end>Contribution(remark, abstract, contact Email, has Keyword, has Title)
Program committee()<edge_begin><edge_end>Committee()
Document()<edge_begin><edge_end>Document()
Security Topic()<edge_begin><edge_end>Topic()
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>Location()
Unit Resolution Info()<edge_begin><edge_end>Build Unit(documentation, execution Mode, source Location, output Location, platform Filter)
Builder Wrapper(input Advised, output Advised, unit Type Advised, provides Advised, default Properties Advised, source Advised)<edge_begin><edge_end>I Builder(unit Type)
Builder Concern Context(var Args, match Parameters, remove Pre Condition, remove Post Condition, remove Post Input Condition, output Annotations Removals, source Annotations Removals)<edge_begin><edge_end>Input Predicate()
Build Call Multiple()<edge_begin><edge_end>Builder Call(builder Name)
Versioned Capability(version)<edge_begin><edge_end>Version()
Bee Hive(resolutions)<edge_begin><edge_end>Bee Hive(resolutions)
Build Call Single()<edge_begin><edge_end>Required Capability(version Range, greedy, max, min)
Builder Concern Context(var Args, match Parameters, remove Pre Condition, remove Post Condition, remove Post Input Condition, output Annotations Removals, source Annotations Removals)<edge_begin><edge_end>Builder Input()
I Builder(unit Type)<edge_begin><edge_end>Path Group()
Builder Input Name Decorator()<edge_begin><edge_end>Builder Input Decorator()
Unit Repository Description(evaluated Options)<edge_begin><edge_end>Repository(name, documentation, handler Type)
Unit Concern Context(source Location, output Location)<edge_begin><edge_end>Builder Concern Context(var Args, match Parameters, remove Pre Condition, remove Post Condition, remove Post Input Condition, output Annotations Removals, source Annotations Removals)
Bee Model()<edge_begin><edge_end>Repository(name, documentation, handler Type)
Effective Builder Call Facade()<edge_begin><edge_end>Builder Call Facade(aliases)
Delegating Unit Provider()<edge_begin><edge_end>Unit Provider(documentation)
Switch Unit Provider()<edge_begin><edge_end>Unit Provider(documentation)
Builder Java()<edge_begin><edge_end>I Builder(unit Type)
I Required Capability Container()<edge_begin><edge_end>Required Capability(version Range, greedy, max, min)
Compound Build Unit Repository()<edge_begin><edge_end>I Build Unit Repository()
Repository(name, documentation, handler Type)<edge_begin><edge_end>Branch(name, documentation, branch Point Type, merge Strategy, checkout, accept Dirty, update, replace)
Unit Concern Context(source Location, output Location)<edge_begin><edge_end>Provides Predicate()
Build Unit(documentation, execution Mode, source Location, output Location, platform Filter)<edge_begin><edge_end>I Build Unit Container()
Background(dashboard)<edge_begin><edge_end>View(name, desc)
Project(name)<edge_begin><edge_end>Feature(name, desc)
Multiplicative Expression()<edge_begin><edge_end>Unary Expression()
Order Condition Left NE()<edge_begin><edge_end>Asc Or Decs()
DOUBLE(double)<edge_begin><edge_end>Numeric Literal()
IR Ireference()<edge_begin><edge_end>Graph Term()
Triples Same Subject Right NE()<edge_begin><edge_end>Triples Same Subject()
Additive Expression()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Default Graph Clause()<edge_begin><edge_end>Graph Clause NE()
Multiplicative Expression()<edge_begin><edge_end>Additional Unary Expression NE()
Blank Node Property List()<edge_begin><edge_end>Property List Not Empty()
Numeric Literal Unsigned()<edge_begin><edge_end>Numeric Literal()
Order Condition Right NE()<edge_begin><edge_end>Order Condition()
Solution Modifier()<edge_begin><edge_end>Order Clause()
Optional Graph Pattern()<edge_begin><edge_end>Graph Pattern Not Triples()
Prefixed Name()<edge_begin><edge_end>IR Ireference()
Bracketted Expression()<edge_begin><edge_end>Constraint()
Describe Query()<edge_begin><edge_end>Solution Modifier()
Numeric Literal()<edge_begin><edge_end>Additional Multiplicative Expression NE()
PN LOCAL(pn local)<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Select Query()<edge_begin><edge_end>Dataset Clause()
Arg List NILNE()<edge_begin><edge_end>Arg List()
Reduced NE()<edge_begin><edge_end>Solutions Display NE()
Regex Expression()<edge_begin><edge_end>Built In Call()
Limit Clause()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
RDF Literal()<edge_begin><edge_end>String Literal()
Some Variables NE()<edge_begin><edge_end>Var(varname)
Regex Expression()<edge_begin><edge_end>Additional Expression NE()
Construct Query()<edge_begin><edge_end>Where Clause()
Construct Query()<edge_begin><edge_end>Construct Template()
Limit Offset Clauses()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
False Boolean Literal NE()<edge_begin><edge_end>Boolean Literal()
Equals Numeric Expression NE()<edge_begin><edge_end>Additional Numeric Expression NE()
Group Graph Pattern()<edge_begin><edge_end>Triples Block()
Minus Primary Expression NE()<edge_begin><edge_end>Primary Expression()
Var Or Term()<edge_begin><edge_end>Graph Node()
Conditional And Expression()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Solution Modifier()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Optional Graph Pattern()<edge_begin><edge_end>Group Graph Pattern()
Sparql Queries()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Lang Built In Call NE()<edge_begin><edge_end>Expression()
Named Graph Clause()<edge_begin><edge_end>Graph Clause NE()
Var(varname)<edge_begin><edge_end>Var Or Term()
Construct Template()<edge_begin><edge_end>Triples Same Subject()
Bigger Or Equal Numeric Expression NE()<edge_begin><edge_end>Additional Numeric Expression NE()
DECIMAL(decimal)<edge_begin><edge_end>Numeric Literal()
Group Graph Pattern()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Additional Expression NE()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Prologue()<edge_begin><edge_end>Base Decl()
IR Iref Or Function()<edge_begin><edge_end>Arg List()
Ask Query()<edge_begin><edge_end>Where Clause()
Up IR Iref NE()<edge_begin><edge_end>LANGTAG Or IR Iref NE()
Var Or IR Iref()<edge_begin><edge_end>Verb()
Select Query()<edge_begin><edge_end>Solution Modifier()
Additional GGP Element()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Graph Node()<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Order By Clause()<edge_begin><edge_end>Order By Spec()
Simple And Expression()<edge_begin><edge_end>Expression(direction, cast Type, unary Operator, literal, this, id, parameter Name, name, is Distinct)
Multiplication Expression(operator)<edge_begin><edge_end>Expression(direction, cast Type, unary Operator, literal, this, id, parameter Name, name, is Distinct)
Expression(direction, cast Type, unary Operator, literal, this, id, parameter Name, name, is Distinct)<edge_begin><edge_end>Result Spec()
Select Clause(is Unique)<edge_begin><edge_end>Subquery Select Clause()
Subquery()<edge_begin><edge_end>Where Clause()
Single String JDOQL()<edge_begin><edge_end>Where Clause()
Variables Clause()<edge_begin><edge_end>Variable Declaration(type, variable Name)
Instr Text()<edge_begin><edge_end>Run Content Elt()
Word Document()<edge_begin><edge_end>String Property()
No Break Hyphen()<edge_begin><edge_end>Run Content Elt()
Note Elt(type, suppress Ref)<edge_begin><edge_end>Block Level Elt()
Annotation Ref()<edge_begin><edge_end>Run Content Elt()
Pg Num()<edge_begin><edge_end>Run Content Elt()
Word Document()<edge_begin><edge_end>Body Elt()
Endnote Ref()<edge_begin><edge_end>Run Content Elt()
Break Elt(type)<edge_begin><edge_end>Run Content Elt()
Sequence Change()<edge_begin><edge_end>DB Diff()
Remove Constraint()<edge_begin><edge_end>Constraint Change()
Update Foreign Key()<edge_begin><edge_end>Foreign Key Change()
Rename Table Change()<edge_begin><edge_end>Table Change()
Add Constraint()<edge_begin><edge_end>Constraint Change()
Add Primary Key()<edge_begin><edge_end>Primary Key Change()
Foreign Key Change()<edge_begin><edge_end>DB Diff()
Index(filter Condition, nullable, auto Update, unique)<edge_begin><edge_end>Column(native Type, length, fixed Length, precision, scale, nullable, auto Incremented, default Value, minimum Value, maximum Value, format, character Set Name, collation Name, selectable, updateable, case Sensitive, searchability, currency, radix, signed, distinct Value Count, null Value Count)
Catalog()<edge_begin><edge_end>Table(system, cardinality, supports Update, materialized)
Logical Relationship()<edge_begin><edge_end>Logical Relationship End(multiplicity)
Column Set()<edge_begin><edge_end>Relational Entity(name, name In Source)
Foreign Key(foreign Key Multiplicity, primary Key Multiplicity)<edge_begin><edge_end>Column(native Type, length, fixed Length, precision, scale, nullable, auto Incremented, default Value, minimum Value, maximum Value, format, character Set Name, collation Name, selectable, updateable, case Sensitive, searchability, currency, radix, signed, distinct Value Count, null Value Count)
Schema()<edge_begin><edge_end>Relational Entity(name, name In Source)
Base Table()<edge_begin><edge_end>Foreign Key(foreign Key Multiplicity, primary Key Multiplicity)
Unique Constraint()<edge_begin><edge_end>Unique Key()
Logical Relationship()<edge_begin><edge_end>Schema()
Catalog()<edge_begin><edge_end>Logical Relationship()
Procedure(function, update Count)<edge_begin><edge_end>Procedure Result()
Logical Relationship End(multiplicity)<edge_begin><edge_end>Table(system, cardinality, supports Update, materialized)
Primary Key()<edge_begin><edge_end>Unique Key()
Miscellaneous Task()<edge_begin><edge_end>Pre Defined Task(id, taskname, description)
Ant Property File(file)<edge_begin><edge_end>String()
Attain Goal()<edge_begin><edge_end>Contents Goal()
Project()<edge_begin><edge_end>Goal(name)
File Task()<edge_begin><edge_end>Pre Defined Task(id, taskname, description)
Ant Property Value(value)<edge_begin><edge_end>Ant Property Name(name)
Pre Post Goal()<edge_begin><edge_end>Abstract Goal()
Path(id, refid)<edge_begin><edge_end>File Set(dir)
Project()<edge_begin><edge_end>Ant Task Def(name, classname)
Java(classname, jar, fork)<edge_begin><edge_end>Execution Task()
Goal(name)<edge_begin><edge_end>Pre Goal()
Javadoc(sourcepath, destdir, packagenames, defaultexcludes, author, version, use, windowtitle)<edge_begin><edge_end>Documentation Task()
Jelly Command()<edge_begin><edge_end>Contents Goal()
Ant Property()<edge_begin><edge_end>Contents Goal()
Archive Task()<edge_begin><edge_end>Pre Defined Task(id, taskname, description)
Exec(executable, dir)<edge_begin><edge_end>Execution Task()
Ant Property Env(environment)<edge_begin><edge_end>String()
Jar(jarfile, basedir, compress, encoding, manifest)<edge_begin><edge_end>String()
Goal(name)<edge_begin><edge_end>String()
Execution Task()<edge_begin><edge_end>Pre Defined Task(id, taskname, description)
Basic()<edge_begin><edge_end>Pattern()
Filter Set(starttoken, endtoken)<edge_begin><edge_end>Set()
Documentation Task()<edge_begin><edge_end>Pre Defined Task(id, taskname, description)
Rich String Img(src, alt, width, height)<edge_begin><edge_end>Rich String Markup(id, style Class)
Rich String DTO Ref()<edge_begin><edge_end>DTO Document(dto Class)
UI Document(ui)<edge_begin><edge_end>Lunifera Doc Document()
Rich String Subsection(name)<edge_begin><edge_end>Rich String Markup(id, style Class)
DTO Document(dto Class)<edge_begin><edge_end>DTO Properties()
Rich String H2()<edge_begin><edge_end>Rich String Markup(id, style Class)
Rich String H6()<edge_begin><edge_end>Rich String Markup(id, style Class)
Rich String Table Data()<edge_begin><edge_end>Rich String Markup(id, style Class)
Rich String Entity Ref()<edge_begin><edge_end>Rich String Markup(id, style Class)
Rich String Ordered List()<edge_begin><edge_end>Rich String Markup(id, style Class)
Lunifera Doc Layout()<edge_begin><edge_end>Named Document(name)
Rich String List Element()<edge_begin><edge_end>Rich String Markup(id, style Class)
Entity Document(entity Class)<edge_begin><edge_end>Entity Description()
DTO Layout()<edge_begin><edge_end>Lunifera Doc Layout()
Rich String Section(name)<edge_begin><edge_end>Rich String Markup(id, style Class)
Rich String Example()<edge_begin><edge_end>Rich String Markup(id, style Class)
Review Note(content)<edge_begin><edge_end>Named(name)
Keyword(description)<edge_begin><edge_end>Named(name)
Paper()<edge_begin><edge_end>Progress(percent)
Write(time Spent)<edge_begin><edge_end>Paragraph(content)
Researcher(name, for Name)<edge_begin><edge_end>Write(time Spent)
Paper()<edge_begin><edge_end>Keyword(description)
Document Root(mixed)<edge_begin><edge_end>o ID(o ID)
Document Root(mixed)<edge_begin><edge_end>table(kind, name, o ID)
column(kind, name, o ID, type)<edge_begin><edge_end>has Foreign Keys(group)
tables(group)<edge_begin><edge_end>table(kind, name, o ID)
Document Root(mixed)<edge_begin><edge_end>referenced Columns(group)
Document Root(mixed)<edge_begin><edge_end>columns(group)
Test Only Topic()<edge_begin><edge_end>Topic()
Corel Word Perfect()<edge_begin><edge_end>Format()
Best Research Paper Award()<edge_begin><edge_end>Award()
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>Thing()
Program Comitee Chair()<edge_begin><edge_end>Phase Of Conference Preparation(has Phase Status)
Presentation()<edge_begin><edge_end>Conference activity()
Departure tax()<edge_begin><edge_end>Tax()
Author attendee cd registration fee()<edge_begin><edge_end>Registration fee(Date, Price, Currency)
Research Topic()<edge_begin><edge_end>Thing()
Program Chair()<edge_begin><edge_end>Organizator()
Session(room)<edge_begin><edge_end>Chair()
One day presenter()<edge_begin><edge_end>Delegate()
Closing Talk()<edge_begin><edge_end>Talk Event()
Webmaster()<edge_begin><edge_end>Organizator()
Registration fee(Date, Price, Currency)<edge_begin><edge_end>Person(Nation, Name, has Email, has Name, has Affiliation, has First Name, has Last Name, has Mail, works For Company, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, E-mail, email)
Scholar()<edge_begin><edge_end>University()
Bidding And Paper Submission Phase()<edge_begin><edge_end>Bidding Phase()
Meal Menu()<edge_begin><edge_end>Document(Document ID)
Fee()<edge_begin><edge_end>Money()
Program Committee()<edge_begin><edge_end>Thing()
Submitted contribution()<edge_begin><edge_end>Review expertise(has an expertise)
LCD projector()<edge_begin><edge_end>Audiovisual equipment()
Review()<edge_begin><edge_end>Reviewed contribution()
Money()<edge_begin><edge_end>Thing()
Worker non speaker()<edge_begin><edge_end>Non speaker()
upper tier reviewing process()<edge_begin><edge_end>human(e-mail, last name, first name)
Accepted Paper()<edge_begin><edge_end>Session(room)
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Title, Summary, paper ID, title)<edge_begin><edge_end>Co-author()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Title, Summary, paper ID, title)<edge_begin><edge_end>Decision()
start date of camera-ready submission()<edge_begin><edge_end>camera-ready submission date()
Research()<edge_begin><edge_end>Activity before conference()
Meal Event()<edge_begin><edge_end>Non Academic Event()
Administrator()<edge_begin><edge_end>User()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Title, Summary, paper ID, title)<edge_begin><edge_end>Bid()
Lecture(has Acronym)<edge_begin><edge_end>Activity(is dated on, expected Attendance)
Automatic Paper Assignment()<edge_begin><edge_end>paper assignment()
Introduction of speaker()<edge_begin><edge_end>Introduction()
ACM SIGKDD()<edge_begin><edge_end>Deadline(Date)
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Title, Summary, paper ID, title)<edge_begin><edge_end>Domain Topic()
Program Comitee()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Title, Summary, paper ID, title)
Card()<edge_begin><edge_end>Item()
date of notification()<edge_begin><edge_end>date()
conference setup()<edge_begin><edge_end>Thing()
Activity Submission Form(submission Deadline)<edge_begin><edge_end>Author()
ACM SIGKDD()<edge_begin><edge_end>Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, Web Site, Topic of conference, Name of conference, Start of conference, City of conference, End of conference, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
Invitation letter()<edge_begin><edge_end>Document(Document ID)
Person(Nation, Name, has Email, has Name, has Affiliation, has First Name, has Last Name, has Mail, works For Company, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, E-mail, email)<edge_begin><edge_end>Time()
Evaluated Paper()<edge_begin><edge_end>Assigned Paper()
Main Author()<edge_begin><edge_end>Author()
Review expertise(has an expertise)<edge_begin><edge_end>Thing()
SC Member()<edge_begin><edge_end>PC Member()
Personal Review History()<edge_begin><edge_end>Personal History()
Symposium()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Meta-Reviewer()<edge_begin><edge_end>Reviewer(User Name, Comments to Chair, Other Areas)
Organization()<edge_begin><edge_end>Sponsorship(has Cost Currency, has Cost Amount)
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, Web Site, Topic of conference, Name of conference, Start of conference, City of conference, End of conference, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Organizing Committee()
abstract submission date()<edge_begin><edge_end>date()
Approval Email()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
PC Chair()<edge_begin><edge_end>Conference Participant()
Item()<edge_begin><edge_end>Thing()
Email(Receiver of email, Message of email, Subject of email)<edge_begin><edge_end>Administrator()
Submitted Paper(Paper Id, Comments To Chair)<edge_begin><edge_end>Paper File()
Evaluation()<edge_begin><edge_end>Document(Document ID)
Registration form()<edge_begin><edge_end>Form()
Bronze Supporter()<edge_begin><edge_end>Sponzor(Name of sponsor)
Deadline(Date)<edge_begin><edge_end>Time()
Conference volume(has a location)<edge_begin><edge_end>Tutorial()
Rejection()<edge_begin><edge_end>Decision()
Conference participant()<edge_begin><edge_end>Person(Nation, Name, has Email, has Name, has Affiliation, has First Name, has Last Name, has Mail, works For Company, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, E-mail, email)
Overhead projector()<edge_begin><edge_end>Audiovisual equipment()
Attendee()<edge_begin><edge_end>Person(Nation, Name, has Email, has Name, has Affiliation, has First Name, has Last Name, has Mail, works For Company, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, E-mail, email)
Break Event()<edge_begin><edge_end>Non Academic Event()
Positive Review()<edge_begin><edge_end>Review()
Video presentation()<edge_begin><edge_end>Presentation()
Session Chair()<edge_begin><edge_end>PC Member()
Trip city()<edge_begin><edge_end>City()
Video cassette player()<edge_begin><edge_end>Audiovisual equipment()
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, Web Site, Topic of conference, Name of conference, Start of conference, City of conference, End of conference, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Topic()
Paper Review(Comments for Author, Comments for Program Committee)<edge_begin><edge_end>Reccommendation()
Activity(is dated on, expected Attendance)<edge_begin><edge_end>Thing()
Portable Reject()<edge_begin><edge_end>Reccommendation()
Track()<edge_begin><edge_end>Conference part()
Program Committee Member(max Papers, has Password)<edge_begin><edge_end>String()
Radio Communications Topic()<edge_begin><edge_end>Topic()
Activity(is dated on, expected Attendance)<edge_begin><edge_end>human(e-mail, last name, first name)
Demo Paper()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Title, Summary, paper ID, title)
Award()<edge_begin><edge_end>Organizator()
Slot(ends At, begins At)<edge_begin><edge_end>Thing()
Best Student Paper Award()<edge_begin><edge_end>Award()
Computer Networks Switching Topic()<edge_begin><edge_end>Computer Networks Topic()
Security Topic()<edge_begin><edge_end>Topic()
Paper File()<edge_begin><edge_end>Format()
Active conference participant()<edge_begin><edge_end>Conference participant()
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>Paper Review(Comments for Author, Comments for Program Committee)
Program Committee Chair()<edge_begin><edge_end>Program Committee Member(max Papers, has Password)
Misc()<edge_begin><edge_end>Help Request()
Email Template()<edge_begin><edge_end>Event Setup()
Short Paper()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Title, Summary, paper ID, title)
Conference volume(has a location)<edge_begin><edge_end>Workshop()
Regular author()<edge_begin><edge_end>Conference contributor()
Person(Nation, Name, has Email, has Name, has Affiliation, has First Name, has Last Name, has Mail, works For Company, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, E-mail, email)<edge_begin><edge_end>Presenter city()
Program chair()<edge_begin><edge_end>Member(Web address)
Accepted contribution()<edge_begin><edge_end>Reviewed contribution()
Web Site()<edge_begin><edge_end>Document(Document ID)
Registeered applicant()<edge_begin><edge_end>Conference applicant()
Computer Networks Measurements Topic()<edge_begin><edge_end>Computer Networks Topic()
Computer Networks Management Topic()<edge_begin><edge_end>Computer Networks Topic()
Manual Paper Assignment()<edge_begin><edge_end>paper assignment()
Invitation()<edge_begin><edge_end>Email(Receiver of email, Message of email, Subject of email)
Abstract And Paper Submission Phase()<edge_begin><edge_end>Phase Of Conference Preparation(has Phase Status)
Workshop Paper()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Title, Summary, paper ID, title)
Primary Reviewer()<edge_begin><edge_end>Review()
Associated Chair()<edge_begin><edge_end>Conference Member()
Organising Agency()<edge_begin><edge_end>Organisation()
Conference volume(has a location)<edge_begin><edge_end>Track()
Administrative event()<edge_begin><edge_end>Administrative event()
Conference volume(has a location)<edge_begin><edge_end>Program committee()
Review()<edge_begin><edge_end>Evaluation()
Program Comitee Meeting()<edge_begin><edge_end>Thing()
article()<edge_begin><edge_end>Document(Document ID)
Event URL()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Computer Networks Enterprise Topic()<edge_begin><edge_end>Computer Networks Topic()
Submitted Paper(Paper Id, Comments To Chair)<edge_begin><edge_end>Contact Author(Alternate Email)
Advocate()<edge_begin><edge_end>Member(Web address)
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, Web Site, Topic of conference, Name of conference, Start of conference, City of conference, End of conference, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Person(Nation, Name, has Email, has Name, has Affiliation, has First Name, has Last Name, has Mail, works For Company, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, E-mail, email)
article()<edge_begin><edge_end>Abstract()
Memeber registration fee()<edge_begin><edge_end>Registration fee(Date, Price, Currency)
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Title, Summary, paper ID, title)<edge_begin><edge_end>String()
Organizer()<edge_begin><edge_end>Thing()
Session(room)<edge_begin><edge_end>Slot(ends At, begins At)
Session(room)<edge_begin><edge_end>Lecture(has Acronym)
Person(Nation, Name, has Email, has Name, has Affiliation, has First Name, has Last Name, has Mail, works For Company, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, E-mail, email)<edge_begin><edge_end>Place()
Neutral Review()<edge_begin><edge_end>Review()
human(e-mail, last name, first name)<edge_begin><edge_end>String()
Presenter house()<edge_begin><edge_end>Building()
Deadline Abstract Submission()<edge_begin><edge_end>Deadline(Date)
Tends Towards Practical()<edge_begin><edge_end>Paper Categorization()
Committee()<edge_begin><edge_end>Conference volume(has a location)
High()<edge_begin><edge_end>Reviewer Famliliarity()
Call(has Submission Instructions, has Submission Deadline)<edge_begin><edge_end>String()
Social event()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Detail()<edge_begin><edge_end>Thing()
Dinner banquet()<edge_begin><edge_end>Social program()
Tutorial()<edge_begin><edge_end>Conference part()
Template()<edge_begin><edge_end>Document(Document ID)
Criterion(has Weight)<edge_begin><edge_end>Thing()
Workshop()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Topic()<edge_begin><edge_end>Conference part()
Best Student Paper Supporter()<edge_begin><edge_end>Sponzor(Name of sponsor)
Tutorial speaker()<edge_begin><edge_end>Author()
Co-author()<edge_begin><edge_end>Author()
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>Personal Review History()
Activity(is dated on, expected Attendance)<edge_begin><edge_end>date Time()
Activity before conference()<edge_begin><edge_end>Activity(is dated on, expected Attendance)
article()<edge_begin><edge_end>human(e-mail, last name, first name)
Networking()<edge_begin><edge_end>Topics()
Coffee break()<edge_begin><edge_end>Conference activity()
Marginal Tend to Reject()<edge_begin><edge_end>Reccommendation()
Person(Nation, Name, has Email, has Name, has Affiliation, has First Name, has Last Name, has Mail, works For Company, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, E-mail, email)<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Author cd proceedings included()<edge_begin><edge_end>Author()
Negative Review()<edge_begin><edge_end>Review()
Computer Networks Sensor Topic()<edge_begin><edge_end>Computer Networks Topic()
Academic Institution()<edge_begin><edge_end>Academic Institution()
Review()<edge_begin><edge_end>article()
Chairman()<edge_begin><edge_end>Person(Nation, Name, has Email, has Name, has Affiliation, has First Name, has Last Name, has Mail, works For Company, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, E-mail, email)
Member PC()<edge_begin><edge_end>Topic()
Administrator()<edge_begin><edge_end>Program Committee Member(max Papers, has Password)
Program Comitee Chair()<edge_begin><edge_end>Program Comitee()
Plenary lecture()<edge_begin><edge_end>Lecture(has Acronym)
Conference www(has a URL)<edge_begin><edge_end>String()
Confirmed Conflict()<edge_begin><edge_end>Conflict Of Interest()
Conference Session()<edge_begin><edge_end>Session(room)
Meal Menu()<edge_begin><edge_end>Meal Event()
Item()<edge_begin><edge_end>Time()
Slides()<edge_begin><edge_end>Contribution File(has Contribution File Status)
E-mail PC Meeting()<edge_begin><edge_end>Program Comitee Meeting()
Program Committee Member(max Papers, has Password)<edge_begin><edge_end>Administrator()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Title, Summary, paper ID, title)<edge_begin><edge_end>Document(Document ID)
Paper Categorization()<edge_begin><edge_end>Review Values()
Chair()<edge_begin><edge_end>Committee member()
Bank transfer()<edge_begin><edge_end>Payment document()
Conference Program()<edge_begin><edge_end>Program chair()
Conference Program()<edge_begin><edge_end>Planed Paper()
Committee Member()<edge_begin><edge_end>Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, Web Site, Topic of conference, Name of conference, Start of conference, City of conference, End of conference, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
Registration()<edge_begin><edge_end>Conference activity()
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>date Time()
Accepted Paper()<edge_begin><edge_end>Paper Presentation()
Individual Presentation()<edge_begin><edge_end>Scientific Event()
Document(Document ID)<edge_begin><edge_end>Speaker()
PC Meeting()<edge_begin><edge_end>Program Comitee Meeting()
Hotel()<edge_begin><edge_end>Place()
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>Approval Email()
Meeting Room Place()<edge_begin><edge_end>Place()
Conference part()<edge_begin><edge_end>Topic()
Tax()<edge_begin><edge_end>Money()
List Of Abstracts()<edge_begin><edge_end>Output Document()
Conference Participant()<edge_begin><edge_end>Person(Nation, Name, has Email, has Name, has Affiliation, has First Name, has Last Name, has Mail, works For Company, has First Name, has Biography, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has an email, has the first name, has gender, has the last name, E-mail, email)
Money()<edge_begin><edge_end>Building()
Single Level Conference()<edge_begin><edge_end>Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, Web Site, Topic of conference, Name of conference, Start of conference, City of conference, End of conference, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
Main office()<edge_begin><edge_end>Place()
Dining Place()<edge_begin><edge_end>Place()
Boolean And Expression()<edge_begin><edge_end>Bitwise Xor Expression()
Action Expression()<edge_begin><edge_end>Statement()
Variable Reference()<edge_begin><edge_end>Variable(identifier)
Variable Assignment(operator)<edge_begin><edge_end>Conditional Expression()
Time Event()<edge_begin><edge_end>Time Expression()
Bitwise Xor Expression()<edge_begin><edge_end>Bitwise Or Expression()
Unary Expression(operator)<edge_begin><edge_end>Primary Expression()
Statechart(domain ID)<edge_begin><edge_end>Specification Element(specification)
Scope()<edge_begin><edge_end>Event()
State(orthogonal, substatechart Id, subchart, simple, composite, leaf)<edge_begin><edge_end>Reactive Element()
State(orthogonal, substatechart Id, subchart, simple, composite, leaf)<edge_begin><edge_end>Scoped Element(namespace)
Regular State()<edge_begin><edge_end>Vertex()
Vertex()<edge_begin><edge_end>Transition()
Scoped Element(namespace)<edge_begin><edge_end>Scope()
Statechart Root()<edge_begin><edge_end>Statechart Specification()
Logical And Expression()<edge_begin><edge_end>Expression()
Reaction Trigger()<edge_begin><edge_end>Event Spec()
Shift Expression(operator)<edge_begin><edge_end>Expression()
Interface Scope()<edge_begin><edge_end>Statechart Scope()
Always Event()<edge_begin><edge_end>Builtin Event Spec()
Active State Reference Expression()<edge_begin><edge_end>Expression()
Element Reference Expression(operation Call)<edge_begin><edge_end>Expression()
Builtin Event Spec()<edge_begin><edge_end>Event Spec()
Cell(is Heading, align, style, content)<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Caption(content)<edge_begin><edge_end>Located Element(location, comments Before, comments After)
Cursor Reference()<edge_begin><edge_end>Query Delete Statement()
Value Expression Function(special Register, distinct, column Function)<edge_begin><edge_end>Value Expression Atomic()
Grouping Sets Element()<edge_begin><edge_end>SQL Query Object()
With Table Specification()<edge_begin><edge_end>SQL Query Object()
Update Source()<edge_begin><edge_end>SQL Query Object()
Value Expression Variable()<edge_begin><edge_end>Query Select(distinct)
Predicate In Value Row Select()<edge_begin><edge_end>Query Value Expression(unary Operator)
Update Source Query()<edge_begin><edge_end>Update Source()
Merge Target Table()<edge_begin><edge_end>Table Expression()
Predicate Exists()<edge_begin><edge_end>Query Expression Body(row Fetch Limit)
Procedure Reference()<edge_begin><edge_end>SQL Query Object()
Query Merge Statement()<edge_begin><edge_end>Merge Target Table()
Query Merge Statement()<edge_begin><edge_end>Merge On Condition()
Query Delete Statement()<edge_begin><edge_end>Table In Database()
Table Nested()<edge_begin><edge_end>Table Reference()
Value Expression Simple(value)<edge_begin><edge_end>Value Expression Atomic()
Grouping Sets Element Expression()<edge_begin><edge_end>Grouping Sets Element()
Grouping Sets Element Expression()<edge_begin><edge_end>Grouping()
Query Value Expression(unary Operator)<edge_begin><edge_end>Predicate Is Null(not Null)
Value Expression Column()<edge_begin><edge_end>Table Expression()
Table Query Lateral()<edge_begin><edge_end>Table Expression()
Update Source Expr List()<edge_begin><edge_end>Update Source()
Merge Target Table()<edge_begin><edge_end>Query Merge Statement()
Query Value Expression(unary Operator)<edge_begin><edge_end>Call Statement()
Super Group(super Group Type)<edge_begin><edge_end>Super Group Element()
Order By Ordinal(ordinal Value)<edge_begin><edge_end>Order By Specification(descending, Ordering Spec Option, Null Ordering Option)
Value Expression Case Else()<edge_begin><edge_end>SQL Query Object()
Predicate In Value Select()<edge_begin><edge_end>Query Expression Root()
Query Value Expression(unary Operator)<edge_begin><edge_end>Value Expression Case Simple()
Query Insert Statement()<edge_begin><edge_end>Table In Database()
Merge Update Specification()<edge_begin><edge_end>Merge Operation Specification()
Result Table All Columns()<edge_begin><edge_end>Table Expression()
Query Value Expression(unary Operator)<edge_begin><edge_end>Predicate In Value List()
Query Expression Body(row Fetch Limit)<edge_begin><edge_end>Table Expression()
Values Row()<edge_begin><edge_end>SQL Query Object()
Result Table All Columns()<edge_begin><edge_end>Query Result Specification()
Query Value Expression(unary Operator)<edge_begin><edge_end>Value Expression Case Simple Content()
Order By Value Expression()<edge_begin><edge_end>Order By Specification(descending, Ordering Spec Option, Null Ordering Option)
Procedure Reference()<edge_begin><edge_end>Call Statement()
Grouping Sets()<edge_begin><edge_end>Grouping Specification()
Value Expression Case Search Content()<edge_begin><edge_end>Query Search Condition(negated Condition)
Merge Insert Specification()<edge_begin><edge_end>Values Row()
Query Value Expression(unary Operator)<edge_begin><edge_end>Values Row()
Column Name()<edge_begin><edge_end>Table Correlation()
Table In Database()<edge_begin><edge_end>Query Update Statement()
Query Expression Root()<edge_begin><edge_end>Predicate Quantified Row Select(quantified Type)
Value Expression Case Simple()<edge_begin><edge_end>Value Expression Case()
Query Select(distinct)<edge_begin><edge_end>Query Result Specification()
Table Correlation()<edge_begin><edge_end>SQL Query Object()
Query Merge Statement()<edge_begin><edge_end>Query Change Statement()
Query Value Expression(unary Operator)<edge_begin><edge_end>Table Function()
Grouping Expression()<edge_begin><edge_end>Query Value Expression(unary Operator)
Query Merge Statement()<edge_begin><edge_end>Merge Source Table()
Predicate Between(not Between)<edge_begin><edge_end>Predicate(negated Predicate, has Selectivity, selectivity Value)
Value Expression Atomic()<edge_begin><edge_end>Query Value Expression(unary Operator)
Data Base()<edge_begin><edge_end>Named Element(name)
Enum Column()<edge_begin><edge_end>Enum Set()
Data Base()<edge_begin><edge_end>Table()
Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI)<edge_begin><edge_end>Petri Net(id, type)
HL Core Annotation(text)<edge_begin><edge_end>Annotation()
Place Node()<edge_begin><edge_end>Ref Place()
Dimension()<edge_begin><edge_end>Coordinate(x, y)
Condition()<edge_begin><edge_end>HL Core Annotation(text)
Node()<edge_begin><edge_end>Node Graphics()
Pn Object(id)<edge_begin><edge_end>Name(text)
Fill(color, gradientcolor, gradientrotation, image)<edge_begin><edge_end>Node Graphics()
Line(color, shape, width, style)<edge_begin><edge_end>Arc Graphics()
HL Annotation()<edge_begin><edge_end>Arc()
Name(text)<edge_begin><edge_end>Petri Net(id, type)
Pn Object(id)<edge_begin><edge_end>Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI)
Annotation()<edge_begin><edge_end>Label()
Attribute()<edge_begin><edge_end>Label()
Arc Graphics()<edge_begin><edge_end>Graphics()
Position()<edge_begin><edge_end>Node Graphics()
Line(color, shape, width, style)<edge_begin><edge_end>Annotation Graphics()
System Context()<edge_begin><edge_end>Actor(address, email, phone Number)
Goal(priority)<edge_begin><edge_end>Conflict(degree)
Specification(version)<edge_begin><edge_end>Actor(address, email, phone Number)
Specification(version)<edge_begin><edge_end>System Overview(purpose, capabilities)
Requirement()<edge_begin><edge_end>Requirements Container(type)
Contractual Element(sources, origin Date, schedule Date, dropped, dropping Reason, satisfaction Level, time Criticality)<edge_begin><edge_end>Uncertainty(volatility, costs Impact, schedule Impact, precedence, risk Index, prop Risk Index, maturity Index)
System Overview(purpose, capabilities)<edge_begin><edge_end>System Context()
Referenced Model Elements(agregation Type)<edge_begin><edge_end>Identified Element(id, name, description)
Model Element Reference(weight, verifies, satisfaction Level, reason)<edge_begin><edge_end>Referenced Model Elements(agregation Type)
Trace()<edge_begin><edge_end>Specification(version)
Contractual Element(sources, origin Date, schedule Date, dropped, dropping Reason, satisfaction Level, time Criticality)<edge_begin><edge_end>Ratio()
Contractual Element(sources, origin Date, schedule Date, dropped, dropping Reason, satisfaction Level, time Criticality)<edge_begin><edge_end>Actor(address, email, phone Number)
Stake Holder()<edge_begin><edge_end>Rationale()
Requirements Group()<edge_begin><edge_end>Verifiable Element(verified)
Choice Parameter Definition(options, default Value)<edge_begin><edge_end>Parameter Definition(name, description)
Test Suite()<edge_begin><edge_end>Test Case(class Name, skipped, status, message, stack Trace)
Build Cause(description)<edge_begin><edge_end>Build Reference(plan, build)
Parameter Definition(name, description)<edge_begin><edge_end>Build Plan(health, id, info, selected, summary, state, status, description, flags)
Build(id, build Number, timestamp, duration, display Name, state, status, label, summary)<edge_begin><edge_end>Change Set(kind)
Build Plan(health, id, info, selected, summary, state, status, description, flags)<edge_begin><edge_end>Build Plan(health, id, info, selected, summary, state, status, description, flags)
Build Plan(health, id, info, selected, summary, state, status, description, flags)<edge_begin><edge_end>Build State()
Build(id, build Number, timestamp, duration, display Name, state, status, label, summary)<edge_begin><edge_end>Build Element(url, name, operations, element Status, refresh Date)
Build Model()<edge_begin><edge_end>Build(id, build Number, timestamp, duration, display Name, state, status, label, summary)
Build Element(url, name, operations, element Status, refresh Date)<edge_begin><edge_end>I Operation()
Styling()<edge_begin><edge_end>Styling Model(mode Name)
Case Style()<edge_begin><edge_end>Icon(image)
Segment()<edge_begin><edge_end>Pattern()
Function Implementation()<edge_begin><edge_end>Declare Section()
Procedure Definition()<edge_begin><edge_end>Name Declaration(name)
Procedure Implementation()<edge_begin><edge_end>Statement Body(end Name)
Goto Statement()<edge_begin><edge_end>Label(name)
Package(schema Name, end Name)<edge_begin><edge_end>Procedure Invoker Rights Clause(right)
Variable Declaration(is Constant, data Type, is Not Null)<edge_begin><edge_end>Item Declaration()
If Statement()<edge_begin><edge_end>If Statement Else Branch()
Case Statement When Branch()<edge_begin><edge_end>Statement()
Case Statement(end Label)<edge_begin><edge_end>Statement()
Loop Statement(end Label)<edge_begin><edge_end>Statement()
If Statement Elsif Branch()<edge_begin><edge_end>Expression()
Variable Ref Expression()<edge_begin><edge_end>Variable Ref(is Host Ref)
Procedure Definition()<edge_begin><edge_end>Procedure Implementation()
Basic Loop Statement()<edge_begin><edge_end>Loop Statement(end Label)
Procedure Definition()<edge_begin><edge_end>Parameter Sequence()
Declare Section()<edge_begin><edge_end>Item()
Case Statement When Branch()<edge_begin><edge_end>Expression()
While Loop Statement()<edge_begin><edge_end>Expression()
Int Literal Expression(value)<edge_begin><edge_end>Expression()
Continue Statement(label Name)<edge_begin><edge_end>Expression()
Abstract State(name)<edge_begin><edge_end>Transition()
Literal()<edge_begin><edge_end>Expression()
Transition()<edge_begin><edge_end>Trigger(expression)
Assignation()<edge_begin><edge_end>Expression()
Transition()<edge_begin><edge_end>Statement()
Relational Expression(operator)<edge_begin><edge_end>Expression()
Loop()<edge_begin><edge_end>Program()
And Operartor()<edge_begin><edge_end>Binary Operator()
Requirement(name, identifier, priority, mandatory)<edge_begin><edge_end>Dependency()
Category(name)<edge_begin><edge_end>Requirement(name, identifier, priority, mandatory)
C Value()<edge_begin><edge_end>Simple Dependency(name)
I Cost()<edge_begin><edge_end>Simple Dependency(name)
Shell Line(command, display)<edge_begin><edge_end>Rule()
Rule()<edge_begin><edge_end>Dependency()
Comment(text)<edge_begin><edge_end>String()
Credit card()<edge_begin><edge_end>Card()
Submissions deadline()<edge_begin><edge_end>Deadline()
Computer Networks Security Topic()<edge_begin><edge_end>Computer Networks Topic()
NGO()<edge_begin><edge_end>Organization()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Summary, paper ID, title)<edge_begin><edge_end>Bid()
Proceedings()<edge_begin><edge_end>Multi-author Volume()
Two Level Conference()<edge_begin><edge_end>Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, Web Site, Topic of conference, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
Working event()<edge_begin><edge_end>Administrative event()
Setup Phase()<edge_begin><edge_end>Phase Of Conference Preparation(has Phase Status)
Submission(remark, abstract, contact Email, has Keyword, has Title)<edge_begin><edge_end>Thing()
Brief introduction for Session chair()<edge_begin><edge_end>Document(Document ID)
Research Institute()<edge_begin><edge_end>Academic Institution()
Conference Chair()<edge_begin><edge_end>Person(E-mail, has Mail, works For Company, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, has Affiliation, has First Name, has Last Name, has Email, has Name, email, has an email, has the first name, has gender, has the last name)
Rejected paper()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Summary, paper ID, title)
Van()<edge_begin><edge_end>Transport vehicle()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Summary, paper ID, title)<edge_begin><edge_end>Decision()
Student registration fee()<edge_begin><edge_end>Registration fee()
Activity(expected Attendance, is dated on)<edge_begin><edge_end>Thing()
Positive Review()<edge_begin><edge_end>Review()
Person(E-mail, has Mail, works For Company, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, has Affiliation, has First Name, has Last Name, has Email, has Name, email, has an email, has the first name, has gender, has the last name)<edge_begin><edge_end>Document(Document ID)
review form()<edge_begin><edge_end>Activity(expected Attendance, is dated on)
Role()<edge_begin><edge_end>Thing()
Student lecturer()<edge_begin><edge_end>Lecturer()
IASTED member()<edge_begin><edge_end>Delegate()
date of conference()<edge_begin><edge_end>date()
Author()<edge_begin><edge_end>Contribution(remark, abstract, contact Email, has Keyword, has Title, has Contribution Status)
Senior Reviewer URL()<edge_begin><edge_end>URL()
Double Blind Review()<edge_begin><edge_end>Reviewer(User Name, Comments to Chair, Other Areas)
bidding of reviewer()<edge_begin><edge_end>human(e-mail, last name, first name)
Regular author()<edge_begin><edge_end>Conference contributor()
Operating Topicsystems()<edge_begin><edge_end>Topic()
Conference city()<edge_begin><edge_end>City()
Organizing committee()<edge_begin><edge_end>Committee()
Steering committee()<edge_begin><edge_end>Conference volume(has a location)
Money()<edge_begin><edge_end>Money()
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>Review()
Registration of participants event()<edge_begin><edge_end>Administrative event()
Paper Review(Comments for Author, Comments for Program Committee)<edge_begin><edge_end>Long bool()
Slot(ends At, begins At)<edge_begin><edge_end>Session(room)
Conference volume(has a location)<edge_begin><edge_end>Track()
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, Web Site, Topic of conference, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>program()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Summary, paper ID, title)<edge_begin><edge_end>Chair()
Activity(expected Attendance, is dated on)<edge_begin><edge_end>Time()
Welcome address()<edge_begin><edge_end>Conference activity()
Invited Speaker()<edge_begin><edge_end>Presenter()
Tends Towards Practical()<edge_begin><edge_end>Paper Categorization()
Paper Presentation()<edge_begin><edge_end>Accepted Paper()
Long bool()<edge_begin><edge_end>Value Partition()
Review Values()<edge_begin><edge_end>Value Partition()
notification()<edge_begin><edge_end>human(e-mail, last name, first name)
Person(E-mail, has Mail, works For Company, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, has Affiliation, has First Name, has Last Name, has Email, has Name, email, has an email, has the first name, has gender, has the last name)<edge_begin><edge_end>Person(E-mail, has Mail, works For Company, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, has Affiliation, has First Name, has Last Name, has Email, has Name, email, has an email, has the first name, has gender, has the last name)
Member(Web address)<edge_begin><edge_end>String()
Accept Rating()<edge_begin><edge_end>Review Rating()
Meal Break()<edge_begin><edge_end>Break Event()
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>Paper Review(Comments for Author, Comments for Program Committee)
Committee()<edge_begin><edge_end>Committee member()
Program Committee member()<edge_begin><edge_end>human(e-mail, last name, first name)
Working event()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Review preference(has a degree)<edge_begin><edge_end>Thing()
Admin Role()<edge_begin><edge_end>Role()
Document(Document ID)<edge_begin><edge_end>String()
notification()<edge_begin><edge_end>Activity(expected Attendance, is dated on)
conference setup()<edge_begin><edge_end>Topic()
Paper File()<edge_begin><edge_end>Domain Topic()
Contributed Talk()<edge_begin><edge_end>Individual Presentation()
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>Administrator()
Multimedia Topic()<edge_begin><edge_end>Topic()
Author()<edge_begin><edge_end>Thing()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Summary, paper ID, title)<edge_begin><edge_end>Program Comitee Chair()
Workshop Session()<edge_begin><edge_end>Session(room)
Reviewer Role()<edge_begin><edge_end>Role()
Neutral Review()<edge_begin><edge_end>Review()
Author()<edge_begin><edge_end>article()
Tip()<edge_begin><edge_end>Money()
Accepted contribution()<edge_begin><edge_end>Reviewed contribution()
Presenter city()<edge_begin><edge_end>City()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Summary, paper ID, title)<edge_begin><edge_end>Author()
Conference Attendant(has Adress, paid, has Phone)<edge_begin><edge_end>Boolean()
Test Only Topic()<edge_begin><edge_end>Topic()
Computer Networks Management Topic()<edge_begin><edge_end>Computer Networks Topic()
Assigned Paper()<edge_begin><edge_end>Possible Reviewer()
Accepting manuscript()<edge_begin><edge_end>Activity before conference()
Worker non speaker()<edge_begin><edge_end>Non speaker()
Feature Request()<edge_begin><edge_end>Help Request()
Simulating()<edge_begin><edge_end>Research()
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>Double Blind Review()
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, Web Site, Topic of conference, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Person(E-mail, has Mail, works For Company, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, has Affiliation, has First Name, has Last Name, has Email, has Name, email, has an email, has the first name, has gender, has the last name)
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, Web Site, Topic of conference, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>any URI()
Criterion(has Weight)<edge_begin><edge_end>double()
Contact Information(has City, has Street, has Postal Code, has Phone)<edge_begin><edge_end>String()
Programme Brochure()<edge_begin><edge_end>Document(Document ID)
Social event()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Corresponding Author()<edge_begin><edge_end>Author()
paper assignment()<edge_begin><edge_end>Program Committee member()
Review()<edge_begin><edge_end>Primary Reviewer()
Author Not Reviewer()<edge_begin><edge_end>Author()
RTF()<edge_begin><edge_end>Format()
Administrator()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Conference part()<edge_begin><edge_end>Conference volume(has a location)
Workshop Paper()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Summary, paper ID, title)
article()<edge_begin><edge_end>human(e-mail, last name, first name)
Balanced Theory and Practice()<edge_begin><edge_end>Paper Categorization()
Scholar()<edge_begin><edge_end>University()
Active conference participant()<edge_begin><edge_end>Conference contributor()
Reviewer Famliliarity()<edge_begin><edge_end>Review Values()
Conference Program()<edge_begin><edge_end>Planed Paper()
Person(E-mail, has Mail, works For Company, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, has Affiliation, has First Name, has Last Name, has Email, has Name, email, has an email, has the first name, has gender, has the last name)<edge_begin><edge_end>Item()
Overhead projector()<edge_begin><edge_end>Audiovisual equipment()
Sponsor state()<edge_begin><edge_end>State()
Publisher()<edge_begin><edge_end>Conference proceedings(has an ISBN, has a volume)
Chair()<edge_begin><edge_end>Thing()
Deleted Conflict()<edge_begin><edge_end>Conflict Of Interest()
Accepted Paper()<edge_begin><edge_end>Session(room)
end date of camera-ready submission()<edge_begin><edge_end>camera-ready submission date()
Company()<edge_begin><edge_end>Organization()
Event Tracks()<edge_begin><edge_end>Event Setup()
Conference volume(has a location)<edge_begin><edge_end>Important dates()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Summary, paper ID, title)<edge_begin><edge_end>Possible Reviewer()
program()<edge_begin><edge_end>chair()
end date of abstract submission()<edge_begin><edge_end>abstract submission date()
Paper Abstract()<edge_begin><edge_end>Document(Document ID)
Meal Menu()<edge_begin><edge_end>Meal Event()
User()<edge_begin><edge_end>Document(Document ID)
program()<edge_begin><edge_end>session()
Rejected Paper()<edge_begin><edge_end>Evaluated Paper()
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, Web Site, Topic of conference, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>date()
Person(E-mail, has Mail, works For Company, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, has Affiliation, has First Name, has Last Name, has Email, has Name, email, has an email, has the first name, has gender, has the last name)<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Manual Paper Assignment()<edge_begin><edge_end>paper assignment()
Paper Abstract()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Summary, paper ID, title)
Short paper()<edge_begin><edge_end>Contribution(remark, abstract, contact Email, has Keyword, has Title, has Contribution Status)
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Personal Publication History()<edge_begin><edge_end>Personal History()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Summary, paper ID, title)<edge_begin><edge_end>Paper Abstract()
Meal Event()<edge_begin><edge_end>Non Academic Event()
Program committee()<edge_begin><edge_end>Committees()
Early-Registered Participant()<edge_begin><edge_end>Conference Participant()
Author()<edge_begin><edge_end>People(Surname, Name, Country, E-mail, Organisation)
Review Phase()<edge_begin><edge_end>Phase Of Conference Preparation(has Phase Status)
Call(has Submission Instructions, has Submission Deadline)<edge_begin><edge_end>Person(E-mail, has Mail, works For Company, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, has Affiliation, has First Name, has Last Name, has Email, has Name, email, has an email, has the first name, has gender, has the last name)
Coctail reception()<edge_begin><edge_end>Conference activity()
Demo Chair()<edge_begin><edge_end>Conference Participant()
High()<edge_begin><edge_end>Reviewer Famliliarity()
Submission event()<edge_begin><edge_end>Administrative event()
Programme()<edge_begin><edge_end>Conference Event(has End Date Time, has Start Date Time)
Personal Review History()<edge_begin><edge_end>Personal History()
Item()<edge_begin><edge_end>Thing()
Review()<edge_begin><edge_end>Possible Reviewer()
E-mail PC Meeting()<edge_begin><edge_end>Program Comitee Meeting()
Program Co Chair()<edge_begin><edge_end>Organizing Committee()
Email Template()<edge_begin><edge_end>Event Setup()
Person(E-mail, has Mail, works For Company, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, has Affiliation, has First Name, has Last Name, has Email, has Name, email, has an email, has the first name, has gender, has the last name)<edge_begin><edge_end>Thing()
Conference proceedings(has an ISBN, has a volume)<edge_begin><edge_end>String()
date of notification()<edge_begin><edge_end>date()
Research Topic()<edge_begin><edge_end>Thing()
Computer Networks Enterprise Topic()<edge_begin><edge_end>Computer Networks Topic()
Transparency()<edge_begin><edge_end>Document(Document ID)
Possible Reviewer()<edge_begin><edge_end>Person(E-mail, has Mail, works For Company, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, has Affiliation, has First Name, has Last Name, has Email, has Name, email, has an email, has the first name, has gender, has the last name)
Introduction of speaker()<edge_begin><edge_end>Introduction()
Invited Talk Abstract()<edge_begin><edge_end>Abstract()
Submitted contribution()<edge_begin><edge_end>Written contribution()
Participant(early Registration)<edge_begin><edge_end>Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, Web Site, Topic of conference, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
Highly Practical()<edge_begin><edge_end>Paper Categorization()
Review()<edge_begin><edge_end>Evaluation()
Conference Event(has End Date Time, has Start Date Time)<edge_begin><edge_end>Place()
Tax()<edge_begin><edge_end>Money()
Slot(ends At, begins At)<edge_begin><edge_end>Thing()
Member(Web address)<edge_begin><edge_end>People(Surname, Name, Country, E-mail, Organisation)
Traditional Lecture()<edge_begin><edge_end>Lecture(has Acronym)
Administrator()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Summary, paper ID, title)
Event Setup()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Organizer()<edge_begin><edge_end>Thing()
Conference part()<edge_begin><edge_end>Track-workshop chair()
Advocated Paper()<edge_begin><edge_end>Submitted Paper(Paper Id, Comments To Chair)
Worker lecturer()<edge_begin><edge_end>Lecturer()
Submission(remark, abstract, contact Email, has Keyword, has Title)<edge_begin><edge_end>Document(Document ID)
Computer Networks Measurements Topic()<edge_begin><edge_end>Computer Networks Topic()
Regular contribution()<edge_begin><edge_end>Written contribution()
Hotel room()<edge_begin><edge_end>Place()
Published Paper()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Summary, paper ID, title)
Member PC()<edge_begin><edge_end>Person(E-mail, has Mail, works For Company, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, has Affiliation, has First Name, has Last Name, has Email, has Name, email, has an email, has the first name, has gender, has the last name)
Automatic Paper Assignment()<edge_begin><edge_end>paper assignment()
User()<edge_begin><edge_end>Person(E-mail, has Mail, works For Company, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name, has Affiliation, has First Name, has Last Name, has Email, has Name, email, has an email, has the first name, has gender, has the last name)
Information for participants()<edge_begin><edge_end>Conference document()
Administrator()<edge_begin><edge_end>Role()
Publicity Web Chair()<edge_begin><edge_end>Organizing Committee()
CD()<edge_begin><edge_end>Electronic proceeding()
Short Paper()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, Summary, paper ID, title)
Contribution co-author()<edge_begin><edge_end>Regular author()
Administrative event()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Activity before conference()<edge_begin><edge_end>Activity(expected Attendance, is dated on)
Misc()<edge_begin><edge_end>Help Request()
Data Base()<edge_begin><edge_end>Table(storage Engine, collation)
Index()<edge_begin><edge_end>Column(type, nullable, default, length, collation)
H4()<edge_begin><edge_end>BODY Element()
HTML()<edge_begin><edge_end>BODY(background, bgcolor, text, link, alink, vlink)
HEAD()<edge_begin><edge_end>HTML Element(value)
FONT(color, face, size)<edge_begin><edge_end>BODY Element()
TABLE Element(bgcolor, background)<edge_begin><edge_end>BODY Element()
TT()<edge_begin><edge_end>BODY Element()
IMG(src, width, height, alt, align, vspace, hspace, ismap, usemap, border)<edge_begin><edge_end>BODY Element()
HEAD Element()<edge_begin><edge_end>HEAD()
BODY Element()<edge_begin><edge_end>BODY(background, bgcolor, text, link, alink, vlink)
A(ahref, name, id)<edge_begin><edge_end>BODY Element()
BR(clear)<edge_begin><edge_end>BODY Element()
Event Role()<edge_begin><edge_end>Role()
Pre()<edge_begin><edge_end>Condition()
Manage()<edge_begin><edge_end>Resource()
Use Case()<edge_begin><edge_end>Functionnel Requirement()
Place()<edge_begin><edge_end>Shape(text)
Arc()<edge_begin><edge_end>Arc()
Transition(guard, action)<edge_begin><edge_end>State(name)
Transient State()<edge_begin><edge_end>State(name)
Null Statement()<edge_begin><edge_end>Statement()
Forms Var Ref(reference)<edge_begin><edge_end>Var Ref Expression()
Found Expression()<edge_begin><edge_end>Cursor Declaration()
Close Statement()<edge_begin><edge_end>Control SQL Statement()
If Statement()<edge_begin><edge_end>Statement()
Insert Statement(into, columns)<edge_begin><edge_end>Modify SQL Statement()
Update Pair(column)<edge_begin><edge_end>Expression()
Typed Element()<edge_begin><edge_end>Type()
Trigger Block()<edge_begin><edge_end>Named Element(name)
Select Statement(distinct, unique, all, select List, bulk, collect, from, is Count)<edge_begin><edge_end>Var Ref Expression()
Like Expression()<edge_begin><edge_end>Expression()
Savepoint Statement()<edge_begin><edge_end>Control SQL Statement()
Is Null Expression()<edge_begin><edge_end>Expression()
Condition Comparison(type)<edge_begin><edge_end>Expression()
Cursor Declaration()<edge_begin><edge_end>Declaration()
Function Declaration()<edge_begin><edge_end>Exception Section(exception Names)
SQL Cursor()<edge_begin><edge_end>Cursor Declaration()
Arithmetic Expression(type)<edge_begin><edge_end>Expression()
Literal Expression(type, value)<edge_begin><edge_end>Expression()
Close Statement()<edge_begin><edge_end>Cursor Declaration()
Update Statement(table)<edge_begin><edge_end>Modify SQL Statement()
State Machine()<edge_begin><edge_end>Mga Object(name, position)
State Machine()<edge_begin><edge_end>State()
State Machine()<edge_begin><edge_end>Transition()
SQL Data Type(type Number)<edge_begin><edge_end>Column(precision, scale, is Nullable, length, collection Name, character Set Name)
Query Column Set()<edge_begin><edge_end>Query Expression(expresssion)
Column(precision, scale, is Nullable, length, collection Name, character Set Name)<edge_begin><edge_end>String()
Named Column Set()<edge_begin><edge_end>Column Set()
SQL Distinct Type(length, precision, scale)<edge_begin><edge_end>SQL Simple Type(character Maximum Length, character Octet Length, numeric Precision, numeric Precision Radix, numeric Scale, date Time Precision)
View(is Read Only, check Option)<edge_begin><edge_end>Query Expression(expresssion)
Composite State()<edge_begin><edge_end>State(is Initial, is Active)
State Machine()<edge_begin><edge_end>Named Element(name)
Change Turnout Direction(new Turnout Direction)<edge_begin><edge_end>Action Expression(expression)
Composite State()<edge_begin><edge_end>State Machine()
Change Train Current Track Element()<edge_begin><edge_end>Action Expression(expression)
Signal Current Allowed Speed(current Allowed Speed)<edge_begin><edge_end>Guard Expression(expression)
Train Heading Speed Changed(new Heading Speed)<edge_begin><edge_end>Trigger Expression(expression)
Researcher(name, for Name)<edge_begin><edge_end>Paper()
Researcher(name, for Name)<edge_begin><edge_end>Write(time Spent)
Publication Structure()<edge_begin><edge_end>Position(description)
Researcher(name, for Name)<edge_begin><edge_end>Review(date)
Paper()<edge_begin><edge_end>Named(name)
Pn Object(id)<edge_begin><edge_end>Name(text)
Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI)<edge_begin><edge_end>Any Object()
Place()<edge_begin><edge_end>Place Node()
Label()<edge_begin><edge_end>Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI)
Annotation Graphics()<edge_begin><edge_end>Font(align, decoration, family, rotation, size, style, weight)
Place Node()<edge_begin><edge_end>Ref Place()
Dimension()<edge_begin><edge_end>Node Graphics()
Line(color, shape, width, style)<edge_begin><edge_end>Arc Graphics()
Arc()<edge_begin><edge_end>Arc Graphics()
Node()<edge_begin><edge_end>Arc()
Tool Info(tool, version, formatted XML Buffer, tool Info Grammar URI)<edge_begin><edge_end>Label()
Page()<edge_begin><edge_end>Pn Object(id)
Ref Transition()<edge_begin><edge_end>Transition Node()
Transition Node()<edge_begin><edge_end>Ref Transition()
Procedure(name)<edge_begin><edge_end>Ref Type()
Table(name)<edge_begin><edge_end>Ref F Key()
Database(name)<edge_begin><edge_end>Ref Table()
Table(name)<edge_begin><edge_end>Ref P Key()
Database()<edge_begin><edge_end>Table()
Primary Key Table Constraint()<edge_begin><edge_end>Indexed Column()
Unique Table Constraint()<edge_begin><edge_end>Indexed Column()
Table Constraint(name)<edge_begin><edge_end>Table()
Index()<edge_begin><edge_end>Database()
Column(type)<edge_begin><edge_end>Column Constraint(name)
Database Version()<edge_begin><edge_end>Database()
Primary Key Column Constraint()<edge_begin><edge_end>Column Constraint(name)
Conference(name)<edge_begin><edge_end>Track(name)
Talk(name, abstract, duration, time)<edge_begin><edge_end>Subject(description, is Done)
Talk(name, abstract, duration, time)<edge_begin><edge_end>Location(name)
Commented Element(comment)<edge_begin><edge_end>Element()
Parameter()<edge_begin><edge_end>Named Element(name)
Operation()<edge_begin><edge_end>Database Element()
Custom Service()<edge_begin><edge_end>Service()
Client()<edge_begin><edge_end>Client Element()
Entity()<edge_begin><edge_end>Primary Property()
Entity Service()<edge_begin><edge_end>Entity()
Operation Service()<edge_begin><edge_end>Operation()
Relationship(type, is Nullable, is Containment)<edge_begin><edge_end>Property(is Nullable, default Value)
Client Element()<edge_begin><edge_end>Named Element(name)
Face Names Table()<edge_begin><edge_end>Visio Document(start, key, metric, buildnum, version, doc Lang Id)
Document Properties Collection(title, subject, creator, manager, company, category, keywords, description, hyperlink Base href, alternate Names, template, build Number Created, build Number Edited)<edge_begin><edge_end>String()
Geom()<edge_begin><edge_end>IX Elt(i X)
Master Short Cut(icon Size, pattern Flags, prompt, shortcut URL, shortcut Help, align Name)<edge_begin><edge_end>Masters Collection()
Page(background, back Page, view Scale, view Center X, View Center Y, reviewer ID, associated Page)<edge_begin><edge_end>Identified Elt(ID)
Text()<edge_begin><edge_end>Shape Elt()
Fld()<edge_begin><edge_end>Text Elt()
Shape Elt()<edge_begin><edge_end>Shape(line Style, fill Style, text Style)
Tab()<edge_begin><edge_end>Cell Type(unit, formula, err, value)
Tabs Collection()<edge_begin><edge_end>Del Elt(del)
Infinite Line()<edge_begin><edge_end>Geom()
Field()<edge_begin><edge_end>IX Elt(i X)
Style Sheet()<edge_begin><edge_end>Named Elt(name, name U)
Master(base ID, match By Name, icon Size, pattern Flags, prompt, hidden, icon Update, align Name)<edge_begin><edge_end>Named Elt(name, name U)
Solution XML()<edge_begin><edge_end>Visio Document(start, key, metric, buildnum, version, doc Lang Id)
Spline Start()<edge_begin><edge_end>Geom()
XYA Elt()<edge_begin><edge_end>XY Elt()
Document Settings Elt(glue Settings, snap Settings, snap Extensions, dynamic Grid Enabled, protect Styles, protect Shapes, protect Masters, protect Bkgnds, custom Menus File, custom Toolbars File, attached Toolbars)<edge_begin><edge_end>String()
Move To()<edge_begin><edge_end>XY Elt()
Field()<edge_begin><edge_end>Cell Type(unit, formula, err, value)
Fld()<edge_begin><edge_end>I Xrequired Elt(i X)
Geom()<edge_begin><edge_end>Spline Knot()
Connect(from Sheet, to Sheet, from Cell, to Cell, from Part, to Part)<edge_begin><edge_end>Integer()
Pp()<edge_begin><edge_end>I Xrequired Elt(i X)
Page Sheet()<edge_begin><edge_end>Unique Id Elt(Unique ID)
Custom Properties Collection()<edge_begin><edge_end>Document Properties Collection(title, subject, creator, manager, company, category, keywords, description, hyperlink Base href, alternate Names, template, build Number Created, build Number Edited)
Document Settings Elt(glue Settings, snap Settings, snap Extensions, dynamic Grid Enabled, protect Styles, protect Shapes, protect Masters, protect Bkgnds, custom Menus File, custom Toolbars File, attached Toolbars)<edge_begin><edge_end>Visio Document(start, key, metric, buildnum, version, doc Lang Id)
Visio Document(start, key, metric, buildnum, version, doc Lang Id)<edge_begin><edge_end>Fonts Table()
XY Elt()<edge_begin><edge_end>Cell Type(unit, formula, err, value)
XYABCDE Elt()<edge_begin><edge_end>XYABCD Elt()
Ellipse()<edge_begin><edge_end>XYABCD Elt()
Date Time Type(year, month, day, hour, minute, second)<edge_begin><edge_end>Integer()
Visio Document(start, key, metric, buildnum, version, doc Lang Id)<edge_begin><edge_end>Pages Collection()
Move To()<edge_begin><edge_end>Geom()
Face Name(name, unicode Ranges, char Set, panos, flags)<edge_begin><edge_end>Identified Elt(ID)
Visio Document(start, key, metric, buildnum, version, doc Lang Id)<edge_begin><edge_end>Style Sheets Collection()
Document Settings Elt(glue Settings, snap Settings, snap Extensions, dynamic Grid Enabled, protect Styles, protect Shapes, protect Masters, protect Bkgnds, custom Menus File, custom Toolbars File, attached Toolbars)<edge_begin><edge_end>Page(background, back Page, view Scale, view Center X, View Center Y, reviewer ID, associated Page)
String Elt(value)<edge_begin><edge_end>String()
Tp()<edge_begin><edge_end>I Xrequired Elt(i X)
Style Sheet()<edge_begin><edge_end>Identified Elt(ID)
Para()<edge_begin><edge_end>Del Elt(del)
Face Name(name, unicode Ranges, char Set, panos, flags)<edge_begin><edge_end>Integer()
State Change()<edge_begin><edge_end>State Value(type, value)
Conditional State(and Expression, conditions Organization)<edge_begin><edge_end>Abstract State()
Abstract State()<edge_begin><edge_end>Named(name)
Conditional State(and Expression, conditions Organization)<edge_begin><edge_end>Abstract Condition(is Not Condition)
Concept(Loop Expression, Loop Limit)<edge_begin><edge_end>Concept Target(target Name, Relative Loop Expression)
CDC Connection()<edge_begin><edge_end>Database Connection(Database Type, Driver Jar Path, Driver Class, URL, db Version String, Port, Username, Password, Server Name, Datasource Name, File Field Name, Schema, SID, Sql Synthax, String Quote, Null Char, Dbms Id, Product Id, DB Root Path, Additional Params, Standard SQL, System SQL, cdc Type Mode, SQL Mode)
LDAP Schema Connection(Host, Port, Protocol, Filter, Separator, Use Advanced, Store Path, Use Limit, Use Authen, Bind Principal, Bind Password, Limit Value, Encryption Method Name, Value, Save Password, Aliases, Referrals, Count Limit, Time Out Limit, Base D Ns, Get Base D Ns From Root, Return Attributes, Selected DN)<edge_begin><edge_end>Connection(version, Context Mode, Context Id)
SAP Connection(Host, Username, Password, Client, System Number, Language, current Fucntion)<edge_begin><edge_end>Connection(version, Context Mode, Context Id)
Generic Schema Connection(mapping Type Used, mapping Type Id)<edge_begin><edge_end>Connection(version, Context Mode, Context Id)
MDM Connection(Username, Password, Port, Server, Universe, Datamodel, Datacluster)<edge_begin><edge_end>Connection(version, Context Mode, Context Id)
Schema Target(Relative X Path Query, Tag Name)<edge_begin><edge_end>Xml X Path Loop Descriptor(Limit Boucle, Absolute X Path Query)
CDC Connection()<edge_begin><edge_end>CDC Type(link DB, journal Name)
Delimited File Connection(Field Separator Type, split Record)<edge_begin><edge_end>File Connection(Server, File Path, Format, Encoding, Field Separator Value, Row Separator Type, Row Separator Value, Text Identifier, Use Header, Header Value, Use Footer, Footer Value, Use Limit, Limit Value, First Line Caption, Remove Empty Row, Escape Type, Escape Char, Text Enclosure, Csv Option)
Metadata()<edge_begin><edge_end>Abstract Metadata Object(properties, id, comment, label, read Only, synchronised, divergency)
SAP Function Unit(Name, Output Type, Output Table Name, Document)<edge_begin><edge_end>Metadata Table(source Name, table Type, attached CDC, activated CDC)
File Connection(Server, File Path, Format, Encoding, Field Separator Value, Row Separator Type, Row Separator Value, Text Identifier, Use Header, Header Value, Use Footer, Footer Value, Use Limit, Limit Value, First Line Caption, Remove Empty Row, Escape Type, Escape Char, Text Enclosure, Csv Option)<edge_begin><edge_end>Connection(version, Context Mode, Context Id)
Queries Connection()<edge_begin><edge_end>Connection(version, Context Mode, Context Id)
Responce()<edge_begin><edge_end>Parameter()
Task()<edge_begin><edge_end>Service()
Service()<edge_begin><edge_end>Use Case()
Event()<edge_begin><edge_end>Episode()
Context()<edge_begin><edge_end>Post Condition()
SAP Connection(Host, Username, Password, Client, System Number, Language, current Fucntion, jco Version)<edge_begin><edge_end>Connection(version, Context Mode, Context Id, context Name)
Td View()<edge_begin><edge_end>Metadata Table(source Name, table Type, attached CDC, activated CDC)
Connection(version, Context Mode, Context Id, context Name)<edge_begin><edge_end>Queries Connection()
Validation Rules Connection(is Select, is Insert, is Update, is Delete, type, base Schema, base Column Names, ref Schema, ref Column Names, java Condition, sql Condition, logical Operator, is Disallow, is Reject Link)<edge_begin><edge_end>Condition Type(input Column, function, operator, value)
SAP Connection(Host, Username, Password, Client, System Number, Language, current Fucntion, jco Version)<edge_begin><edge_end>SAP Function Unit(Output Type, Output Table Name)
SAPI Doc Unit(program Id, gateway Service, use Xml Output, xml File, use Html Output, html File)<edge_begin><edge_end>SAP Connection(Host, Username, Password, Client, System Number, Language, current Fucntion, jco Version)
Metadata()<edge_begin><edge_end>Connection(version, Context Mode, Context Id, context Name)
SAP Connection(Host, Username, Password, Client, System Number, Language, current Fucntion, jco Version)<edge_begin><edge_end>SAPI Doc Unit(program Id, gateway Service, use Xml Output, xml File, use Html Output, html File)
Ebcdic Connection(Mid File, Data File)<edge_begin><edge_end>File Connection(Server, File Path, Format, Encoding, Field Separator Value, Row Separator Type, Row Separator Value, Text Identifier, Use Header, Header Value, Use Footer, Footer Value, Use Limit, Limit Value, First Line Caption, Remove Empty Row, Escape Type, Escape Char, Text Enclosure, Csv Option)
Td Column()<edge_begin><edge_end>Td Sql Data Type(java Data Type, nullable, unsigned Attribute, case Sensitive, auto Increment, local Type Name, searchable)
SAP Function Unit(Output Type, Output Table Name)<edge_begin><edge_end>SAP Connection(Host, Username, Password, Client, System Number, Language, current Fucntion, jco Version)
BRMS Connection(xml Field, url Name, tac Webapp Name, class Name, module Used, package)<edge_begin><edge_end>Connection(version, Context Mode, Context Id, context Name)
File Excel Connection(Sheet Name, sheet Columns, first Column, last Column, thousand Separator, decimal Separator, advanced Spearator, select All Sheets, sheet List)<edge_begin><edge_end>File Connection(Server, File Path, Format, Encoding, Field Separator Value, Row Separator Type, Row Separator Value, Text Identifier, Use Header, Header Value, Use Footer, Footer Value, Use Limit, Limit Value, First Line Caption, Remove Empty Row, Escape Type, Escape Char, Text Enclosure, Csv Option)
Concept(Loop Expression, Loop Limit, input Model, concept Type, x Path Prefix)<edge_begin><edge_end>Concept Target(target Name, Relative Loop Expression)
Salesforce Module Unit(module Name)<edge_begin><edge_end>Salesforce Schema Connection(web Service Url, user Name, password, module Name, query Condition, use Custom Module Name, use Proxy, proxy Host, proxy Port, proxy Username, proxy Password, batch Size, use Http Proxy, use Alphbet, time Out)
Xml X Path Loop Descriptor(Limit Boucle, Absolute X Path Query)<edge_begin><edge_end>Xml File Connection(Xsd File Path, Xml File Path, Guess, Mask X Pattern, Encoding, input Model, output File Path, file Content)
CDC Connection()<edge_begin><edge_end>CDC Type(link DB, journal Name)
Query(value, context Mode)<edge_begin><edge_end>Abstract Metadata Object(properties, id, comment, label, read Only, synchronised, divergency)
On Cycle Event()<edge_begin><edge_end>Builtin Event Spec()
Reaction Effect()<edge_begin><edge_end>Statement()
Exit Event()<edge_begin><edge_end>Builtin Event Spec()
Entry Event()<edge_begin><edge_end>Builtin Event Spec()
Operation Call()<edge_begin><edge_end>Expression()
Local Reaction()<edge_begin><edge_end>Reaction Properties()
Element Reference Expression()<edge_begin><edge_end>Expression()
Builtin Event Spec()<edge_begin><edge_end>Event Spec()
Assignment(operator)<edge_begin><edge_end>Expression()
Pdb(name, lock Schema, table Partitioning)<edge_begin><edge_end>Index Ref(is Primkey, clustered)
Class(descr, no D Bio, publish, vmaj, vmin, pubspec, pubname, whereclause, a Name, archiv Index)<edge_begin><edge_end>Primkey()
Db Model(name, mtype, kuda Type, kobe Type, version, do All)<edge_begin><edge_end>Class(descr, no D Bio, publish, vmaj, vmin, pubspec, pubname, whereclause, a Name, archiv Index)
Class(descr, no D Bio, publish, vmaj, vmin, pubspec, pubname, whereclause, a Name, archiv Index)<edge_begin><edge_end>Index(kuko, name, unique)
Arc TP(inscription)<edge_begin><edge_end>Place(name, token)
Petri Net(name)<edge_begin><edge_end>Place(name, token)
Region()<edge_begin><edge_end>State Machine()
Transition(kind)<edge_begin><edge_end>Trigger()
State Model()<edge_begin><edge_end>Named Element(name, id)
Pseudo State(kind)<edge_begin><edge_end>Vertex()
State(is Simple, is Composite)<edge_begin><edge_end>Behaviour(body, language)
Table Creation Description()<edge_begin><edge_end>Table Description(precondition Expression, domain Class, initial Header Column Width)
D Cell(label)<edge_begin><edge_end>D Column(label, visible, width)
Column Mapping(header Label Expression, initial Width)<edge_begin><edge_end>Table Mapping(semantic Elements)
Line Mapping(domain Class, semantic Candidates Expression, header Label Expression)<edge_begin><edge_end>Create Line Tool()
Line Mapping(domain Class, semantic Candidates Expression, header Label Expression)<edge_begin><edge_end>Style Updater()
Intersection Mapping(label Expression, use Domain Class, column Finder Expression, line Finder Expression, semantic Candidates Expression, domain Class, precondition Expression)<edge_begin><edge_end>Style Updater()
Delete Column Tool()<edge_begin><edge_end>Delete Tool()
D Line(label, visible, collapsed)<edge_begin><edge_end>Line Mapping(domain Class, semantic Candidates Expression, header Label Expression)
D Table Element()<edge_begin><edge_end>Table Mapping(semantic Elements)
Label Edit Tool()<edge_begin><edge_end>Table Tool()
Intersection Mapping(label Expression, use Domain Class, column Finder Expression, line Finder Expression, semantic Candidates Expression, domain Class, precondition Expression)<edge_begin><edge_end>Cell Updater(can Edit)
D Table(header Column Width)<edge_begin><edge_end>Line Container()
Create Column Tool()<edge_begin><edge_end>Element Column Mapping(domain Class, semantic Candidates Expression)
Delete Line Tool()<edge_begin><edge_end>Line Mapping(domain Class, semantic Candidates Expression, header Label Expression)
D Line(label, visible, collapsed)<edge_begin><edge_end>D Table Element Style(label Size, label Format, default Foreground Style, default Background Style, foreground Color, background Color)
Comment()<edge_begin><edge_end>Packable Element()
Relation()<edge_begin><edge_end>Packable Element()
Directed Association(target Name)<edge_begin><edge_end>Relation()
Association(target Name, source Name)<edge_begin><edge_end>Relation()
Insert Stmt(table Name)<edge_begin><edge_end>Expression()
Predicate()<edge_begin><edge_end>Expression()
List Exp()<edge_begin><edge_end>Expression()
Table(alias)<edge_begin><edge_end>Named Element(name)
View Statement(name)<edge_begin><edge_end>Query Stmt()
Operation Exp(opt Name)<edge_begin><edge_end>Binary Exp(op Name)
Binary Exp(op Name)<edge_begin><edge_end>String()
View Statement(name)<edge_begin><edge_end>Statement()
String Value Exp(a Value)<edge_begin><edge_end>String()
In Exp(column Name)<edge_begin><edge_end>Predicate()
Function Exp(name)<edge_begin><edge_end>Predicate()
Paper()<edge_begin><edge_end>Paragraph(content)
Publication Structure()<edge_begin><edge_end>Named(name)
Publication System()<edge_begin><edge_end>Publication Process(min Time, max Time)
Progress(percent)<edge_begin><edge_end>Publication Process(min Time, max Time)
Keyword(word)<edge_begin><edge_end>Paper()
Review(date)<edge_begin><edge_end>Labelled(lname)
Transition(guard Label, guard Expression)<edge_begin><edge_end>State(id, kind, name)
Knowledge Manager()<edge_begin><edge_end>Keyword(word)
Publication Structure()<edge_begin><edge_end>Publication Status(label)
State(id, kind, name)<edge_begin><edge_end>Action(action Label, action Statement)
Service()<edge_begin><edge_end>Service()
Variation Point Instance()<edge_begin><edge_end>Product()
Functional Requirement()<edge_begin><edge_end>Functional Requirement()
Requirement(terminal)<edge_begin><edge_end>Mitigation()
Product()<edge_begin><edge_end>Feature()
Abstract Feature()<edge_begin><edge_end>Solution Domain Use Case()
Abstract Feature()<edge_begin><edge_end>Variation Point(multiplicity)
Danger()<edge_begin><edge_end>Asset()
Non Functional Requirement()<edge_begin><edge_end>Non Functional Requirement()
Solution Domain Use Case()<edge_begin><edge_end>Abstract Feature()
Goal(soft, type)<edge_begin><edge_end>Stakeholder()
Internal Execution Model(context)<edge_begin><edge_end>Event Token()
Transition()<edge_begin><edge_end>Guard()
Transition()<edge_begin><edge_end>Event(name)
Assignment( name)<edge_begin><edge_end>Variable(name)
Transition()<edge_begin><edge_end>State(name, is Active)
State(name, is Active)<edge_begin><edge_end>Composite State()
Document Root(mixed)<edge_begin><edge_end>Database Properties List Type()
Specific DBMS Properties(d BMS)<edge_begin><edge_end>Sql File(file Path)
Sql Group(id, description)<edge_begin><edge_end>Sql File(file Path)
Database Properties List Type()<edge_begin><edge_end>Database Alias(alias, id)
Model(attrs)<edge_begin><edge_end>Database(url, port, db Name, name)
Multi Expression Where Entry(operator)<edge_begin><edge_end>Array Expression()
Date Array Expression(values)<edge_begin><edge_end>Array Expression()
Boolean Expression(true)<edge_begin><edge_end>Expression()
Meta-Reviewer()<edge_begin><edge_end>Reviewer()
Reviewer()<edge_begin><edge_end>Conference Member()
Paper(paper ID, title)<edge_begin><edge_end>Administrator()
Bid()<edge_begin><edge_end>Reviewer()
Conference(date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Thing()
Author()<edge_begin><edge_end>User()
External Reviewer()<edge_begin><edge_end>Person(email)
Rejection()<edge_begin><edge_end>Decision()
Conference(date, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Boolean()
Program Committee Chair()<edge_begin><edge_end>Review()
Administrator()<edge_begin><edge_end>Program Committee Member(max Papers)
Conference Member()<edge_begin><edge_end>Person(email)
Paper(paper ID, title)<edge_begin><edge_end>Author()
Related To(since)<edge_begin><edge_end>Thing(id)
Transition(expression)<edge_begin><edge_end>State(label, type, activity)
Hide Shape Type(delay, direction, effect, path Id, shape Id, speed, start Scale)<edge_begin><edge_end>Sound Type(actuate, href, play Full, show, type)
Settings Type(animations, endless, force Manual, full Screen, mouse As Pen, mouse Visible, pause, show1, show End Of Presentation Slide, show Logo, start Page, start With Navigator, stay On Top, transition On Click)<edge_begin><edge_end>Show Type(name, pages)
Document Root(mixed, action, animations1, background Objects Visible, background Visible, class, class Names, delay, direction, display Date Time, display Footer, display Header, display Page Number, duration, effect, endless, force Manual, full Screen, group Id, master Element, mouse As Pen, mouse Visible, name, node Type, pages, path Id, pause, placeholder1, play Full, presentation Page Layout Name, preset Class, preset Id, preset Sub Type, show1, show End Of Presentation Slide, show Logo, source, speed, start Page, start Scale, start With Navigator, stay On Top, style Name, transition On Click, transition Speed, transition Style, transition Type, use Date Time Name, use Footer Name, use Header Name, user Transformed, verb, visibility)<edge_begin><edge_end>Play Type(shape Id, speed)
Document Root(mixed, action, animations1, background Objects Visible, background Visible, class, class Names, delay, direction, display Date Time, display Footer, display Header, display Page Number, duration, effect, endless, force Manual, full Screen, group Id, master Element, mouse As Pen, mouse Visible, name, node Type, pages, path Id, pause, placeholder1, play Full, presentation Page Layout Name, preset Class, preset Id, preset Sub Type, show1, show End Of Presentation Slide, show Logo, source, speed, start Page, start Scale, start With Navigator, stay On Top, style Name, transition On Click, transition Speed, transition Style, transition Type, use Date Time Name, use Footer Name, use Header Name, user Transformed, verb, visibility)<edge_begin><edge_end>Presentation Page Layout Name Type()
Document Root(mixed, action, animations1, background Objects Visible, background Visible, class, class Names, delay, direction, display Date Time, display Footer, display Header, display Page Number, duration, effect, endless, force Manual, full Screen, group Id, master Element, mouse As Pen, mouse Visible, name, node Type, pages, path Id, pause, placeholder1, play Full, presentation Page Layout Name, preset Class, preset Id, preset Sub Type, show1, show End Of Presentation Slide, show Logo, source, speed, start Page, start Scale, start With Navigator, stay On Top, style Name, transition On Click, transition Speed, transition Style, transition Type, use Date Time Name, use Footer Name, use Header Name, user Transformed, verb, visibility)<edge_begin><edge_end>Show Shape Type(delay, direction, effect, path Id, shape Id, speed, start Scale)
Document Root(mixed, action, animations1, background Objects Visible, background Visible, class, class Names, delay, direction, display Date Time, display Footer, display Header, display Page Number, duration, effect, endless, force Manual, full Screen, group Id, master Element, mouse As Pen, mouse Visible, name, node Type, pages, path Id, pause, placeholder1, play Full, presentation Page Layout Name, preset Class, preset Id, preset Sub Type, show1, show End Of Presentation Slide, show Logo, source, speed, start Page, start Scale, start With Navigator, stay On Top, style Name, transition On Click, transition Speed, transition Style, transition Type, use Date Time Name, use Footer Name, use Header Name, user Transformed, verb, visibility)<edge_begin><edge_end>Show Type(name, pages)
Reviewer()<edge_begin><edge_end>Administrator()
Early paid applicant()<edge_begin><edge_end>Paid applicant()
paper(full paper size)<edge_begin><edge_end>article()
Conference proceedings(has an ISBN, has a volume)<edge_begin><edge_end>Publisher()
Paper Full Version()<edge_begin><edge_end>Paper(paper ID, title)
Program Committee Member(max Papers)<edge_begin><edge_end>Conference Member()
Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, email)<edge_begin><edge_end>Inforamtion()
conference setup()<edge_begin><edge_end>Thing()
Reviewer()<edge_begin><edge_end>Reviewer()
Invited Paper()<edge_begin><edge_end>Paper(paper ID, title)
Conference(reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Thing()
Reviewer()<edge_begin><edge_end>External Reviewer()
Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, email)<edge_begin><edge_end>Activity()
Review()<edge_begin><edge_end>Conference document()
Co-author()<edge_begin><edge_end>Paper(paper ID, title)
Organizing committee()<edge_begin><edge_end>Conference volume(has a location)
Paper(paper ID, title)<edge_begin><edge_end>Meta-Reviewer()
Assistant()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, email)
Author()<edge_begin><edge_end>User()
Conference Chair()<edge_begin><edge_end>Conference Member()
Science Worker()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, email)
human(e-mail, last name, first name)<edge_begin><edge_end>institute()
Head Role()<edge_begin><edge_end>Role()
reviewer()<edge_begin><edge_end>review()
Detail()<edge_begin><edge_end>Thing()
Author()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, email)
Paper Abstract()<edge_begin><edge_end>Paper(paper ID, title)
Registeered applicant()<edge_begin><edge_end>Conference applicant()
Symposium()<edge_begin><edge_end>Event(starts on, ends on)
full paper submission date()<edge_begin><edge_end>date()
Senior Reviewer URL()<edge_begin><edge_end>URL()
event(has startdate, has enddate)<edge_begin><edge_end>date Time()
Conference volume(has a location)<edge_begin><edge_end>Track()
bidding of reviewer()<edge_begin><edge_end>human(e-mail, last name, first name)
Conference volume(has a location)<edge_begin><edge_end>Conference part()
chair()<edge_begin><edge_end>person()
abstract()<edge_begin><edge_end>document()
rejection notification email()<edge_begin><edge_end>notification email()
Automatic Paper Assignment()<edge_begin><edge_end>paper assignment()
Student()<edge_begin><edge_end>Participant(early Registration)
Event(starts on, ends on)<edge_begin><edge_end>Approval Email()
Extended abstract()<edge_begin><edge_end>Regular contribution()
Submitted contribution()<edge_begin><edge_end>Written contribution()
Conference volume(has a location)<edge_begin><edge_end>Program committee()
Conference(reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>any URI()
Paper(paper ID, title)<edge_begin><edge_end>Reviewer()
Scholar()<edge_begin><edge_end>Person(has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, email)
Help Request()<edge_begin><edge_end>Request()
Senior Program Committee member()<edge_begin><edge_end>Program Committee member()
Feature Request()<edge_begin><edge_end>Help Request()
Program Committee Chair()<edge_begin><edge_end>Review()
Short Paper()<edge_begin><edge_end>Paper(paper ID, title)
Paid applicant()<edge_begin><edge_end>Registeered applicant()
Contact Person URL()<edge_begin><edge_end>URL()
Request()<edge_begin><edge_end>Activity()
review form()<edge_begin><edge_end>activity()
human(e-mail, last name, first name)<edge_begin><edge_end>activity()
Administrative event()<edge_begin><edge_end>Event(starts on, ends on)
upper tier reviewing process()<edge_begin><edge_end>human(e-mail, last name, first name)
Program Committee Chair()<edge_begin><edge_end>Chairman()
human(e-mail, last name, first name)<edge_begin><edge_end>topic()
Registration()<edge_begin><edge_end>Activity()
Co-author()<edge_begin><edge_end>Author()
Conference volume(has a location)<edge_begin><edge_end>Organizing committee()
Approval Email()<edge_begin><edge_end>Event(starts on, ends on)
Conference Chair()<edge_begin><edge_end>Chairman()
Conference volume(has a location)<edge_begin><edge_end>Conference contribution()
Rejection Email()<edge_begin><edge_end>Email()
Conference www(has a URL)<edge_begin><edge_end>Conference document()
Author()<edge_begin><edge_end>Contribution(remark, abstract, contact Email, has Keyword, has Title)
Reviewed contribution()<edge_begin><edge_end>Review()
Review Form Setup()<edge_begin><edge_end>Review Form()
activity()<edge_begin><edge_end>activity()
Conference volume(has a location)<edge_begin><edge_end>Tutorial()
Regular()<edge_begin><edge_end>Participant(early Registration)
Trans()<edge_begin><edge_end>Event(name)
Trans Set()<edge_begin><edge_end>Role(name)
Place To Transition()<edge_begin><edge_end>Arc(weight, name)
Place()<edge_begin><edge_end>Element(name)
Time Literal(value)<edge_begin><edge_end>Time Type(precision, with Time Zone)
Bracketed Comment()<edge_begin><edge_end>Comment(value)
Implicitly Typed Value Specification Default Option()<edge_begin><edge_end>Implicitly Typed Value Specification()
Table Constraint()<edge_begin><edge_end>Schema Qualified Name(catalog Name, schema Name, name)
National Character String Type(kind, length)<edge_begin><edge_end>Unsigned Integer()
Referential Column Constraint()<edge_begin><edge_end>Column Constraint()
Binary Large Object String Type(kind)<edge_begin><edge_end>Large Object Length(value, multiplier, units)
Implicitly Typed Value Specification Default Option()<edge_begin><edge_end>Default Option()
Table Columns Constraint()<edge_begin><edge_end>Table Constraint()
Referential Column Constraint()<edge_begin><edge_end>Referential Constraint()
Unique Table Constraint()<edge_begin><edge_end>Unique Constraint(kind)
Datetime Literal()<edge_begin><edge_end>General Literal()
Date Type()<edge_begin><edge_end>Datetime Type()
Referential Table Constraint()<edge_begin><edge_end>Referential Constraint()
Table Definition(label, scope)<edge_begin><edge_end>SQL Schema Definition Statement()
Date Literal(value)<edge_begin><edge_end>Date Type()
Table Columns Constraint()<edge_begin><edge_end>Column(name)
Put Statement(count)<edge_begin><edge_end>Place(name)
Assure Statement(count)<edge_begin><edge_end>Place(name)
Table(default Column Width, default Row Height, expanded Column Count, expanded Row Count, left Cell, top Cell, full Columns, full Rows)<edge_begin><edge_end>Column(auto Fit Width, width)
Custom Document Property(name)<edge_begin><edge_end>Value Type()
Excel Workbook(selected Sheets, window Hidden, hide Horizontal Scroll Bar, hide Vertical Scroll Bar, hide Workbook Tabs, window Height, window Width, window Top X, window Top Y, active Sheet, active Chart, first Visible Sheet, hide Pivot Table Field List, protect Structure, protect Windows, display Ink Notes, embed Save Smart Tags, future Ver, tab Ratio, window Iconic, display Drawing Objects, create Backup, calculation, do Not Calculate Before Save, date1904, ref Mode R1C1, iteration, max Iterations, max Change, precision As Displayed, do Not Save Link Values, no Auto Recover, accept Labels In Formulas, uncalced)<edge_begin><edge_end>Double()
Smart Tags Collection()<edge_begin><edge_end>Cell(array Range, formula, h Ref, merge Across, merge Down)
Document Properties Collection(title, subject, keywords, description, category, author, last Author, manager, company, hyperlink Base, revision, presentation Format, guid, app Name, total Time, pages, words, characters, characters With Spaces, bytes, lines, paragraphs)<edge_begin><edge_end>Workbook()
Version Type(n, nn)<edge_begin><edge_end>Integer()
Excel Workbook(selected Sheets, window Hidden, hide Horizontal Scroll Bar, hide Vertical Scroll Bar, hide Workbook Tabs, window Height, window Width, window Top X, window Top Y, active Sheet, active Chart, first Visible Sheet, hide Pivot Table Field List, protect Structure, protect Windows, display Ink Notes, embed Save Smart Tags, future Ver, tab Ratio, window Iconic, display Drawing Objects, create Backup, calculation, do Not Calculate Before Save, date1904, ref Mode R1C1, iteration, max Iterations, max Change, precision As Displayed, do Not Save Link Values, no Auto Recover, accept Labels In Formulas, uncalced)<edge_begin><edge_end>String()
Cell(array Range, formula, h Ref, merge Across, merge Down)<edge_begin><edge_end>String()
Document Properties Collection(title, subject, keywords, description, category, author, last Author, manager, company, hyperlink Base, revision, presentation Format, guid, app Name, total Time, pages, words, characters, characters With Spaces, bytes, lines, paragraphs)<edge_begin><edge_end>Date Time Type(year, month, day, hour, minute, second)
Cell(array Range, formula, h Ref, merge Across, merge Down)<edge_begin><edge_end>Comment(author, show Always)
Table(default Column Width, default Row Height, expanded Column Count, expanded Row Count, left Cell, top Cell, full Columns, full Rows)<edge_begin><edge_end>Row(auto Fit Height, height)
Excel Workbook(selected Sheets, window Hidden, hide Horizontal Scroll Bar, hide Vertical Scroll Bar, hide Workbook Tabs, window Height, window Width, window Top X, window Top Y, active Sheet, active Chart, first Visible Sheet, hide Pivot Table Field List, protect Structure, protect Windows, display Ink Notes, embed Save Smart Tags, future Ver, tab Ratio, window Iconic, display Drawing Objects, create Backup, calculation, do Not Calculate Before Save, date1904, ref Mode R1C1, iteration, max Iterations, max Change, precision As Displayed, do Not Save Link Values, no Auto Recover, accept Labels In Formulas, uncalced)<edge_begin><edge_end>Boolean()
Page Setup()<edge_begin><edge_end>Header()
Workbook()<edge_begin><edge_end>Smart Tags Collection()
Boolean Value(value)<edge_begin><edge_end>Boolean()
Table(default Column Width, default Row Height, expanded Column Count, expanded Row Count, left Cell, top Cell, full Columns, full Rows)<edge_begin><edge_end>Double()
Page Setup()<edge_begin><edge_end>Layout(orientation, center Horizontal, center Vertical, start Page Number)
Number Value(value)<edge_begin><edge_end>Value Type()
Worksheet Options Elt(fit To Page, do Not Display Col Headers, do Not Display Row Headers, gridline Color, name, excel Worksheet Type, intl Macro, unsynced, selected, code Name, display Page Break, transition Expression Evaluation, transition Formula Entry, zoom, page Break Zoom, show Page Break Zoom, default Row Height, default Column Width, standard Width, visible, left Column Visible, display Right To Left, gridline Color Index, display Formulas, do Not Display Gridlines, do Not Display Headings, do Not Display Outline, apply Automatic Outline Styles, no Summary Rows Below Detail, no Summary Columns Right Detail, do Not Display Zeros, active Row, active Column, filter On, range Selection, top Row Visible, top Row Bottom Pane, left Column Right Pane, active Pane, split Horizontal, split Vertical, freeze Panes, frozen No Split, tab Color Index, protect Contentst, protect Objects, protect Scenarios, enable Selection, allow Format Cells, allow Size Cols, allow Size Rows, allow Insert Cols, allow Insert Rows, allow Insert Hyperlinks, allow Delete Cols, allow Delete Rows, allow Sort, allow Filter, allow Use Pivot Tables)<edge_begin><edge_end>Boolean()
Document Properties Collection(title, subject, keywords, description, category, author, last Author, manager, company, hyperlink Base, revision, presentation Format, guid, app Name, total Time, pages, words, characters, characters With Spaces, bytes, lines, paragraphs)<edge_begin><edge_end>String()
Stakeholder Goals(component Category)<edge_begin><edge_end>Req Root(name, title, issues)
Contractual Element(name, title, target Description, dropped, drop Rationale, issues)<edge_begin><edge_end>Requirement(exception Text, component Category, connections)
Contractual Element(name, title, target Description, dropped, drop Rationale, issues)<edge_begin><edge_end>Goal()
Value Predicate()<edge_begin><edge_end>Desired Value(upto)
Talk Event()<edge_begin><edge_end>Academic Event()
Program Committee Member(max Papers, has Password)<edge_begin><edge_end>Person(email, has an email, has the first name, has gender, has the last name, has Mail, works For Company, has Affiliation, has First Name, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
Travel Grant()<edge_begin><edge_end>Sponsorship(has Cost Currency, has Cost Amount)
Workshop()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Card()<edge_begin><edge_end>Item()
Program committee()<edge_begin><edge_end>Committee()
Accepting manuscript()<edge_begin><edge_end>Activity before conference()
Organizing committee()<edge_begin><edge_end>Conference volume(has a location)
Review Form Setup()<edge_begin><edge_end>Review Form()
Audiovisual equipment()<edge_begin><edge_end>Item()
Conference www(has a URL)<edge_begin><edge_end>Conference document()
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>phase of conference()
Single hotel room()<edge_begin><edge_end>Hotel room()
Programming()<edge_begin><edge_end>Topics()
Meal Menu()<edge_begin><edge_end>Document()
Workshop Chair()<edge_begin><edge_end>Conference Participant()
Program Committee Member(max Papers, has Password)<edge_begin><edge_end>Administrator()
Organizing committee()<edge_begin><edge_end>Committee()
Signal Processing Topic()<edge_begin><edge_end>Topic()
Regular author()<edge_begin><edge_end>Conference contributor()
group email()<edge_begin><edge_end>article()
article()<edge_begin><edge_end>Reviewer(User Name, Comments to Chair, Other Areas)
Important dates()<edge_begin><edge_end>date()
Accommodation Place()<edge_begin><edge_end>Place()
Rejected Paper()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, paper ID, title)
Renting()<edge_begin><edge_end>Activity before conference()
program()<edge_begin><edge_end>session()
Lecture(has Acronym)<edge_begin><edge_end>String()
Rated Papers()<edge_begin><edge_end>Active Paper()
Committee member()<edge_begin><edge_end>Committee()
Sponsor state()<edge_begin><edge_end>State()
Activity(is dated on, expected Attendance)<edge_begin><edge_end>article()
start date of full paper submission()<edge_begin><edge_end>full paper submission date()
Document()<edge_begin><edge_end>Item()
Money()<edge_begin><edge_end>Building()
Submitted contribution()<edge_begin><edge_end>Written contribution()
Advocated Paper()<edge_begin><edge_end>Advocate()
Session(room)<edge_begin><edge_end>Scientific Event()
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Integer()
Paper Review(Comments for Author, Comments for Program Committee)<edge_begin><edge_end>Reviewer(User Name, Comments to Chair, Other Areas)
Program Committee()<edge_begin><edge_end>Committees()
Paper Presentation()<edge_begin><edge_end>Accepted Paper()
Programme()<edge_begin><edge_end>Conference Event(has End Date Time, has Start Date Time)
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Person(email, has an email, has the first name, has gender, has the last name, has Mail, works For Company, has Affiliation, has First Name, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
Conference city()<edge_begin><edge_end>City()
Conference restaurant()<edge_begin><edge_end>Building()
Communication Theory Topic()<edge_begin><edge_end>Topic()
Committee()<edge_begin><edge_end>Conference volume(has a location)
Conference document()<edge_begin><edge_end>Person(email, has an email, has the first name, has gender, has the last name, has Mail, works For Company, has Affiliation, has First Name, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>User()
notification()<edge_begin><edge_end>article()
Event URL()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Call(has Submission Instructions, has Submission Deadline)<edge_begin><edge_end>Academic Event()
One conference day()<edge_begin><edge_end>Conference days()
Conference Event(has End Date Time, has Start Date Time)<edge_begin><edge_end>Place()
Conference Participant()<edge_begin><edge_end>Person(email, has an email, has the first name, has gender, has the last name, has Mail, works For Company, has Affiliation, has First Name, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
Assigned Paper()<edge_begin><edge_end>Submitted Paper(Paper Id, Comments To Chair)
Non speaker()<edge_begin><edge_end>Delegate()
Conference volume(has a location)<edge_begin><edge_end>Steering committee()
Chair()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, paper ID, title)
Nonmember registration fee()<edge_begin><edge_end>Registration fee()
Meta-Reviewer()<edge_begin><edge_end>Reviewer(User Name, Comments to Chair, Other Areas)
Registration fee()<edge_begin><edge_end>Fee()
notification()<edge_begin><edge_end>human(e-mail, last name, first name)
Chairman()<edge_begin><edge_end>Conference Member()
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>Location()
Call For Reviews()<edge_begin><edge_end>Call(has Submission Instructions, has Submission Deadline)
camera-ready submission date()<edge_begin><edge_end>date()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, paper ID, title)<edge_begin><edge_end>Bid()
Worker lecturer()<edge_begin><edge_end>Lecturer()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, paper ID, title)<edge_begin><edge_end>Possible Reviewer()
Research Topic()<edge_begin><edge_end>Thing()
Highly Practical()<edge_begin><edge_end>Paper Categorization()
Technic activity()<edge_begin><edge_end>Conference activity()
Paper Submission Chair()<edge_begin><edge_end>Organizing Committee()
Chair()<edge_begin><edge_end>Output Document()
Member PC()<edge_begin><edge_end>Contribution(remark, abstract, contact Email, has Keyword, has Title)
program()<edge_begin><edge_end>Chair()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, paper ID, title)<edge_begin><edge_end>Integer()
Format()<edge_begin><edge_end>Value Partition()
Credit card()<edge_begin><edge_end>Card()
University()<edge_begin><edge_end>Organization()
Program chair()<edge_begin><edge_end>Member(Web address)
RFC()<edge_begin><edge_end>Topics()
Corresponding Author()<edge_begin><edge_end>Author()
Session room()<edge_begin><edge_end>Place()
notification()<edge_begin><edge_end>Activity(is dated on, expected Attendance)
Organizational Meeting()<edge_begin><edge_end>Academic Event()
Working event()<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
summary of reviews()<edge_begin><edge_end>article()
Paper Presentation()<edge_begin><edge_end>Academic Event()
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>String()
Coffee break()<edge_begin><edge_end>Conference activity()
Conference Program()<edge_begin><edge_end>Program chair()
Paper File()<edge_begin><edge_end>Domain Topic()
Communications Topic()<edge_begin><edge_end>Topic()
Registation deadline()<edge_begin><edge_end>Deadline()
Hotel registration form()<edge_begin><edge_end>Form()
Abstract()<edge_begin><edge_end>Extended abstract()
Event Approval()<edge_begin><edge_end>Activity(is dated on, expected Attendance)
Chair()<edge_begin><edge_end>Person(email, has an email, has the first name, has gender, has the last name, has Mail, works For Company, has Affiliation, has First Name, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
Chair()<edge_begin><edge_end>Reviewer(User Name, Comments to Chair, Other Areas)
Taxi()<edge_begin><edge_end>Transport vehicle()
Meeting Room Place()<edge_begin><edge_end>Place()
Person(email, has an email, has the first name, has gender, has the last name, has Mail, works For Company, has Affiliation, has First Name, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)<edge_begin><edge_end>Organization()
Trip day()<edge_begin><edge_end>Time()
Committees()<edge_begin><edge_end>Domain Topic()
Workshop()<edge_begin><edge_end>Scientific Event()
Conference Venue Place()<edge_begin><edge_end>Place()
Brief introduction for Session chair()<edge_begin><edge_end>Document()
Presenter city()<edge_begin><edge_end>City()
Invited talk()<edge_begin><edge_end>Presentation()
Review expertise(has an expertise)<edge_begin><edge_end>Thing()
People(Surname, Name, Country, E-mail, Organisation)<edge_begin><edge_end>Domain Topic()
conference setup()<edge_begin><edge_end>Thing()
bidding of reviewer()<edge_begin><edge_end>Activity(is dated on, expected Attendance)
Initial manuscipt()<edge_begin><edge_end>Submission()
Session(room)<edge_begin><edge_end>Slot(ends At, begins At)
review form()<edge_begin><edge_end>Activity(is dated on, expected Attendance)
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Boolean()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, paper ID, title)<edge_begin><edge_end>Decision()
Topic()<edge_begin><edge_end>Conference part()
Criterion(has Weight)<edge_begin><edge_end>double()
Coctail reception()<edge_begin><edge_end>Conference activity()
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Event(starts on, ends on, has startdate, has enddate)
Networking()<edge_begin><edge_end>Topics()
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>Event Setup()
Review Values()<edge_begin><edge_end>Value Partition()
human(e-mail, last name, first name)<edge_begin><edge_end>article()
Main office()<edge_begin><edge_end>Place()
Presentation()<edge_begin><edge_end>Conference activity()
Output Document()<edge_begin><edge_end>Thing()
Early paid applicant()<edge_begin><edge_end>Paid applicant()
Antennas Topic()<edge_begin><edge_end>Topic()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, paper ID, title)<edge_begin><edge_end>Co-author()
Regular Program Committee member()<edge_begin><edge_end>Program Committee member()
Portable Reject()<edge_begin><edge_end>Reccommendation()
Conference proceedings(has an ISBN, has a volume)<edge_begin><edge_end>Publisher()
Fee()<edge_begin><edge_end>Money()
Proceedings()<edge_begin><edge_end>Output Document()
Book proceeding()<edge_begin><edge_end>Publication()
Excursion()<edge_begin><edge_end>Social Event()
date of notification()<edge_begin><edge_end>date()
reviewing proces()<edge_begin><edge_end>Activity(is dated on, expected Attendance)
Industry Organization()<edge_begin><edge_end>Organization()
Author cd proceedings included()<edge_begin><edge_end>Author()
Activity(is dated on, expected Attendance)<edge_begin><edge_end>human(e-mail, last name, first name)
Refusing manuscript()<edge_begin><edge_end>Activity before conference()
Paper Review(Comments for Author, Comments for Program Committee)<edge_begin><edge_end>Overall Value()
date()<edge_begin><edge_end>Thing()
Review()<edge_begin><edge_end>Reviewed contribution()
Member PC()<edge_begin><edge_end>Person(email, has an email, has the first name, has gender, has the last name, has Mail, works For Company, has Affiliation, has First Name, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
Invited Talk()<edge_begin><edge_end>Individual Presentation()
Value added tax()<edge_begin><edge_end>Tax()
Document()<edge_begin><edge_end>User()
Scholar()<edge_begin><edge_end>University()
Administrative event()<edge_begin><edge_end>Administrative event()
Contact Person URL()<edge_begin><edge_end>URL()
Program()<edge_begin><edge_end>Output Document()
Satellite And Space Communications Topic()<edge_begin><edge_end>Topic()
Free Time Break()<edge_begin><edge_end>Break Event()
Manual Paper Assignment()<edge_begin><edge_end>Program Committee member()
Volunteer()<edge_begin><edge_end>Person(email, has an email, has the first name, has gender, has the last name, has Mail, works For Company, has Affiliation, has First Name, has Last Name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has First Name, has Biography, has Last Name)
Request()<edge_begin><edge_end>Activity(is dated on, expected Attendance)
Finance Chair()<edge_begin><edge_end>Organizing Committee()
Active conference participant()<edge_begin><edge_end>Conference contributor()
Paper Status()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, paper ID, title)
Author information form()<edge_begin><edge_end>Form()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, paper ID, title)<edge_begin><edge_end>Review()
Participant(early Registration)<edge_begin><edge_end>Boolean()
CAD Topic()<edge_begin><edge_end>Topic()
Reviewed Paper()<edge_begin><edge_end>Submitted Paper(Paper Id, Comments To Chair)
Industrial Session()<edge_begin><edge_end>Conference Session()
end date of camera-ready submission()<edge_begin><edge_end>camera-ready submission date()
Computer Science()<edge_begin><edge_end>Topics()
conference setup()<edge_begin><edge_end>Topic()
Positive Review()<edge_begin><edge_end>Review()
Place()<edge_begin><edge_end>Net()
TP Arc()<edge_begin><edge_end>Transition()
Arc(weight)<edge_begin><edge_end>Integer()
Composite State()<edge_begin><edge_end>State()
Final State()<edge_begin><edge_end>State()
Simple State()<edge_begin><edge_end>State()
Stereotype(base Class)<edge_begin><edge_end>Dependency()
Petri Net(name)<edge_begin><edge_end>Arc(weight)
Transition(name, relevance)<edge_begin><edge_end>Generic PT(label)
TP Arc()<edge_begin><edge_end>Transition(name, relevance)
Generic PT(label)<edge_begin><edge_end>Petri Net Model Element()
I Path Group(base Path, paths)<edge_begin><edge_end>Path()
I Unit Request(name, name Space, range)<edge_begin><edge_end>Version Range()
I Requirement(member Name, alias, contributor, filter, include Pattern, exclude Pattern)<edge_begin><edge_end>Filter String()
Part Requirement()<edge_begin><edge_end>I Requirement(member Name, alias, contributor, filter, include Pattern, exclude Pattern)
Match(pattern, replacement, quote Pattern)<edge_begin><edge_end>Pattern()
Build Unit Command()<edge_begin><edge_end>Property Scope(unset Properties)
EFS Resolver()<edge_begin><edge_end>Default Resolver()
I Build Unit(filter, circularity Allowed, instance Location)<edge_begin><edge_end>I Build Part(name)
I Build Part(name)<edge_begin><edge_end>Part Capability()
Literal(value)<edge_begin><edge_end>I Expr()
I Closure Part()<edge_begin><edge_end>I Build Part(name)
I Produced Part()<edge_begin><edge_end>I Resulting Parts()
Default Resolver()<edge_begin><edge_end>I Meta Data Translator()
I Resolution()<edge_begin><edge_end>Import Options(location, conflict Resolution, resource Path, unpack, expand, suffix)
I Resulting Parts()<edge_begin><edge_end>I Action Result()
Unset Advice()<edge_begin><edge_end>I Advise()
I Action Result()<edge_begin><edge_end>I Action Part()
EFS Resolver()<edge_begin><edge_end>IEFS Based Access()
I Build Part(name)<edge_begin><edge_end>I Build Unit(filter, circularity Allowed, instance Location)
Version Advice(version)<edge_begin><edge_end>Version()
Import Command()<edge_begin><edge_end>Build Unit Command()
I Build Context()<edge_begin><edge_end>I Resolution()
replace()<edge_begin><edge_end>I Function()
Resulting Path Group()<edge_begin><edge_end>I Path Group(base Path, paths)
Materializer Extension()<edge_begin><edge_end>I Human Selectable(label, type Name)
Regexp Filter()<edge_begin><edge_end>Single Property Filter(property)
I Resulting Parts()<edge_begin><edge_end>I Produced Part()
Unpublished(month)<edge_begin><edge_end>String()
Book(month, number, volume, series, source, address, edition, isbn, price)<edge_begin><edge_end>Integer()
Academic Staff()<edge_begin><edge_end>Academic Staff()
Article(journal, month, number, pages, volume)<edge_begin><edge_end>String()
Manual(month, address, edition)<edge_begin><edge_end>Person(address, name, email, fax, homepage, phone, photo)
Topic(name)<edge_begin><edge_end>String()
Research Topic()<edge_begin><edge_end>Project(name)
Article(journal, month, number, pages, volume)<edge_begin><edge_end>Person(address, name, email, fax, homepage, phone, photo)
Proceedings(month, number, volume, address, series)<edge_begin><edge_end>String()
Enterprise()<edge_begin><edge_end>Organization(location, name)
Research Group()<edge_begin><edge_end>Organization(location, name)
Organization(location, name)<edge_begin><edge_end>Product(name)
In Proceedings(month, number, pages, address, volume, series, booktitle)<edge_begin><edge_end>Organization(location, name)
In Collection(month, number, pages, address, edition, volume, series, chapter, type, booktitle)<edge_begin><edge_end>Person(address, name, email, fax, homepage, phone, photo)
Lecture()<edge_begin><edge_end>Person(address, name, email, fax, homepage, phone, photo)
In Proceedings(month, number, pages, address, volume, series, booktitle)<edge_begin><edge_end>Integer()
Ph D Student()<edge_begin><edge_end>Publication(title, abstract, keywords, note, year)
Conference(series)<edge_begin><edge_end>Event(name, date, event Title, location)
Institute()<edge_begin><edge_end>Research Group()
Workshop(series)<edge_begin><edge_end>String()
Book(month, number, volume, series, source, address, edition, isbn, price)<edge_begin><edge_end>String()
Technical Report(series)<edge_begin><edge_end>String()
Academic Staff()<edge_begin><edge_end>Project(name)
Project Report()<edge_begin><edge_end>Project(name)
Booklet(month, address, edition, howpublished)<edge_begin><edge_end>String()
Administrative Staff()<edge_begin><edge_end>Employee()
Pseudostate(kind)<edge_begin><edge_end>State Vertex()
Composite State()<edge_begin><edge_end>State Vertex()
Transition()<edge_begin><edge_end>Model Element(name)
State Machine()<edge_begin><edge_end>State()
Metadata Repository()<edge_begin><edge_end>Installable Unit()
Features()<edge_begin><edge_end>Feature()
Mapped Repository(mirror Artifacts, category Prefix)<edge_begin><edge_end>Map Rule()
Update Descriptor()<edge_begin><edge_end>I Update Descriptor(id, range, description, severity)
Metadata Repository Structured View(name, loaded)<edge_begin><edge_end>Metadata Repository()
Installable Units()<edge_begin><edge_end>Products()
Touchpoints()<edge_begin><edge_end>Touchpoint Data()
Product()<edge_begin><edge_end>IU Presentation With Details(details Resolved)
Category()<edge_begin><edge_end>Categories()
Installable Unit()<edge_begin><edge_end>I Installable Unit(filter, id, version, resolved, singleton)
I Installable Unit Fragment()<edge_begin><edge_end>I Installable Unit(filter, id, version, resolved, singleton)
IU Details()<edge_begin><edge_end>Properties()
Contribution(label)<edge_begin><edge_end>Maven Mapping(name Pattern, group Id, artifact Id)
I Installable Unit(filter, id, version, resolved, singleton)<edge_begin><edge_end>Version()
Mapped Repository(mirror Artifacts, category Prefix)<edge_begin><edge_end>Metadata Repository Reference(location, nature)
Installable Unit Reference()<edge_begin><edge_end>Status Provider()
IU Details()<edge_begin><edge_end>I Copyright(location, body)
Exclusion Rule()<edge_begin><edge_end>Map Rule()
Metadata Repository Reference(location, nature)<edge_begin><edge_end>Infos Provider(errors, warnings, infos)
Aggregator(label, build Root, packed Strategy, sendmail, type, maven Result)<edge_begin><edge_end>Description Provider(description)
Provided Capability Wrapper()<edge_begin><edge_end>I Provided Capability(name, namespace, version)
Other IU()<edge_begin><edge_end>IU Presentation With Details(details Resolved)
Bundle()<edge_begin><edge_end>IU Presentation With Details(details Resolved)
IU Presentation(id, version, name, label, description, type)<edge_begin><edge_end>Installable Unit()
Installable Unit Reference()<edge_begin><edge_end>Infos Provider(errors, warnings, infos)
Metadata Repository()<edge_begin><edge_end>I Metadata Repository()
Category()<edge_begin><edge_end>IU Presentation(id, version, name, label, description, type)
Installable Units()<edge_begin><edge_end>Bundles()
X Ref Value()<edge_begin><edge_end>Paragraph Value()
Emphasis Value(value, role)<edge_begin><edge_end>Paragraph Value()
Informal Table Value Group(cols)<edge_begin><edge_end>Informal Table Value Head()
Table()<edge_begin><edge_end>Key()
Column(type)<edge_begin><edge_end>R Model Element(kind, name)
Table()<edge_begin><edge_end>Schema()
Column(type)<edge_begin><edge_end>Table()
Section Body()<edge_begin><edge_end>Corps()
Path()<edge_begin><edge_end>Valued Element(value)
Document()<edge_begin><edge_end>Abstract()
Bibliography()<edge_begin><edge_end>Document Body()
Item()<edge_begin><edge_end>Valued Element(value)
Section()<edge_begin><edge_end>Section Body()
Enumerate()<edge_begin><edge_end>Corps()
Heading()<edge_begin><edge_end>Fax()
Figure()<edge_begin><edge_end>Label()
Citation()<edge_begin><edge_end>Description()
Cite()<edge_begin><edge_end>Corps()
E Mail()<edge_begin><edge_end>Valued Element(value)
Javac(srcdir, destdir, debug, fork, optimize, deprecation)<edge_begin><edge_end>String()
Javadoc(sourcepath, destdir, packagenames, defaultexcludes, author, version, use, windowtitle)<edge_begin><edge_end>String()
Path(id, refid)<edge_begin><edge_end>String()
Project(name, basedir, description)<edge_begin><edge_end>String()
Includes File()<edge_begin><edge_end>In Excludes(name, if Condition, unless)
Property Location(location)<edge_begin><edge_end>String()
Filter Set(starttoken, endtoken)<edge_begin><edge_end>String()
Task()<edge_begin><edge_end>Target(name, description, unless, if Condition)
Property Name(name)<edge_begin><edge_end>String()
Javac(srcdir, destdir, debug, fork, optimize, deprecation)<edge_begin><edge_end>Class Path(refid)
Jar(jarfile, basedir, compress, encoding, manifest)<edge_begin><edge_end>String()
Java(classname, jar, fork)<edge_begin><edge_end>Class Path(refid)
Exec(executable, dir)<edge_begin><edge_end>String()
Copy(file, presservelastmodified, tofile, todir, overwrite, filtering, flatten, include Empty Dirs)<edge_begin><edge_end>File Set(dir)
Class Path(refid)<edge_begin><edge_end>String()
Property Env(environment)<edge_begin><edge_end>Property()
Filter(token, value)<edge_begin><edge_end>String()
Filter Set(starttoken, endtoken)<edge_begin><edge_end>Filter(token, value)
File Set(dir)<edge_begin><edge_end>Includes()
Value()<edge_begin><edge_end>Variable()
Operator Expression(operator)<edge_begin><edge_end>Expression()
Update Item()<edge_begin><edge_end>Value()
Any Expression()<edge_begin><edge_end>Expression()
Join()<edge_begin><edge_end>From Join(is Fetch)
Update Statement()<edge_begin><edge_end>Set Clause()
Select Aggregate Expression(is Distinct)<edge_begin><edge_end>Alias Attribute Expression(attributes)
Min Aggregate()<edge_begin><edge_end>Select Aggregate Expression(is Distinct)
Select From Clause()<edge_begin><edge_end>Select Clause(is Distinct)
In Seq Expression()<edge_begin><edge_end>Variable()
Boolean Expression(value)<edge_begin><edge_end>Value()
Max Aggregate()<edge_begin><edge_end>Select Aggregate Expression(is Distinct)
Collection Expression(is Not)<edge_begin><edge_end>Alias Attribute Expression(attributes)
Some Expression()<edge_begin><edge_end>Select Statement()
Select Statement()<edge_begin><edge_end>Having Clause()
Date Time Expression(value)<edge_begin><edge_end>Value()
Update Clause()<edge_begin><edge_end>From Entry()
Column Source Ref(all)<edge_begin><edge_end>Select Source(name)
Update Statement(conflict Resolution)<edge_begin><edge_end>Table Definition(name)
Config Block()<edge_begin><edge_end>Configuration Statement(name)
Unique Table Constraint()<edge_begin><edge_end>Table Constraint(name)
Case Expression()<edge_begin><edge_end>Expression()
Select Statement()<edge_begin><edge_end>Expression()
Update Column Expression()<edge_begin><edge_end>Expression()
Insert Statement(conflict Resolution)<edge_begin><edge_end>Table Definition(name)
Select Statement()<edge_begin><edge_end>Ordering Term List()
Drop Table Statement(if Exists)<edge_begin><edge_end>DDL Statement()
Action Statement()<edge_begin><edge_end>Content Uri(type)
Delete Statement()<edge_begin><edge_end>Expression()
Model(package Name)<edge_begin><edge_end>Database Block(name)
Expression Default Value()<edge_begin><edge_end>Expression()
New Column()<edge_begin><edge_end>Column Source(name)
Single Source Table()<edge_begin><edge_end>Select Source(name)
Content Uri Param Segment(num, text)<edge_begin><edge_end>Content Uri Segment(name)
Create Index Statement(unique, name)<edge_begin><edge_end>Indexed Column(collation Name, asc, desc)
Create Index Statement(unique, name)<edge_begin><edge_end>DDL Statement()
Create Trigger Statement(temporary, name, when, event Type, update Column Names, for Each Row)<edge_begin><edge_end>Table Definition(name)
Function(all)<edge_begin><edge_end>Expression()
Check Table Constraint()<edge_begin><edge_end>Expression()
Case()<edge_begin><edge_end>Expression()
Table Definition(name)<edge_begin><edge_end>DDL Statement()
Select List()<edge_begin><edge_end>Column Source(name)
Select Statement()<edge_begin><edge_end>Select Core Expression()
Single Source Select Statement()<edge_begin><edge_end>Select Statement()
Delete Statement()<edge_begin><edge_end>Table Definition(name)
Keyword(word)<edge_begin><edge_end>Named(name)
Paper()<edge_begin><edge_end>Paper()
Researcher(name, for Name)<edge_begin><edge_end>Paper()
Paragraph(content)<edge_begin><edge_end>Named(name)
Import Scope()<edge_begin><edge_end>Statechart Scope()
Transition Root()<edge_begin><edge_end>Transition Specification()
Always Event()<edge_begin><edge_end>Builtin Event Spec()
Reaction Trigger()<edge_begin><edge_end>Event Spec()
Place(token)<edge_begin><edge_end>Named(name)
Transition()<edge_begin><edge_end>Named(name)
Journal Field()<edge_begin><edge_end>Field()
In Proceedings Entry()<edge_begin><edge_end>Number Field()
Article Entry()<edge_begin><edge_end>Year Field()
Organization Field()<edge_begin><edge_end>String Value(value)
Book Title Field()<edge_begin><edge_end>Field()
Entry()<edge_begin><edge_end>Review Field()
In Proceedings Entry()<edge_begin><edge_end>Title Field()
Editor Field()<edge_begin><edge_end>Field()
Eid Field()<edge_begin><edge_end>Field()
Url Field()<edge_begin><edge_end>Field()
Editor()<edge_begin><edge_end>Person(first Name, second Name, last Name)
Bibtex Key Field()<edge_begin><edge_end>Field()
Bibtex Key Field()<edge_begin><edge_end>String Value(value)
Keyword Field()<edge_begin><edge_end>Keyword()
Article Entry()<edge_begin><edge_end>Note Field()
Month Field()<edge_begin><edge_end>Field()
Database Model()<edge_begin><edge_end>Data Type()
Database Model()<edge_begin><edge_end>Table()
Table()<edge_begin><edge_end>Column(nullable, primary Key, size, scale, array Dimensions, unique)
Statechart(domain ID)<edge_begin><edge_end>Specification Element(specification)
Entry(kind)<edge_begin><edge_end>Pseudostate()
State(orthogonal, substatechart Id, subchart, simple, composite, leaf)<edge_begin><edge_end>Reactive Element()
Statechart(domain ID)<edge_begin><edge_end>Scoped Element(namespace)
Statechart(domain ID)<edge_begin><edge_end>Import(imported Namespace)
Regular State()<edge_begin><edge_end>Vertex()
Region()<edge_begin><edge_end>State(type, is Initial, is Final)
Substitution(formal, actual)<edge_begin><edge_end>Scope(id, label, interface Declaration)
Region()<edge_begin><edge_end>Scope(id, label, interface Declaration)
Check Constraint()<edge_begin><edge_end>Search Condition()
SQL Data Type()<edge_begin><edge_end>Data Type()
Parameter(mode, locator)<edge_begin><edge_end>Character String Data Type(length, coercibility, fixed Length, collation Name)
Time Data Type(fractional Seconds Precision, time Zone)<edge_begin><edge_end>Predefined Data Type(primitive Type)
Data Link Data Type(length, link Control, integrity Control, read Permission, write Permission, recovery, unlink)<edge_begin><edge_end>Predefined Data Type(primitive Type)
Catalog()<edge_begin><edge_end>Database(vendor, version)
Character Set(repertoire, default Collation, encoding)<edge_begin><edge_end>Schema()
Role Authorization(grantable)<edge_begin><edge_end>Authorization Identifier()
Catalog()<edge_begin><edge_end>SQL Object(description, label)
Structured User Defined Type(instantiable, final)<edge_begin><edge_end>Structured User Defined Type(instantiable, final)
Typed Element()<edge_begin><edge_end>SQL Data Type()
Sequence()<edge_begin><edge_end>Typed Element()
Authorization Identifier()<edge_begin><edge_end>Schema()
Routine Result Table()<edge_begin><edge_end>Table(self Ref Column Generation, insertable, updatable)
Table(self Ref Column Generation, insertable, updatable)<edge_begin><edge_end>SQL Object(description, label)
Row Data Type()<edge_begin><edge_end>Constructed Data Type()
Index Member(increment Type)<edge_begin><edge_end>SQL Object(description, label)
Database(vendor, version)<edge_begin><edge_end>SQL Object(description, label)
Schema()<edge_begin><edge_end>Routine(specific Name, language, parameter Style, deterministic, sql Data Access, creation TS, last Altered TS, authorization ID, security, external Name)
SQL Object(description, label)<edge_begin><edge_end>Object Extension()
Trigger(action Granularity, time Stamp, action Time, update Type, insert Type, delete Type, old Row, new Row, old Table, new Table)<edge_begin><edge_end>Schema()
User()<edge_begin><edge_end>Group()
SQL Control Statement()<edge_begin><edge_end>SQL Statement()
User Defined Type Ordering(ordering Form, ordering Category)<edge_begin><edge_end>SQL Object(description, label)
Function(null Call, static, transform Group, type Preserving, mutator)<edge_begin><edge_end>Parameter(mode, locator)
Parameter(mode, locator)<edge_begin><edge_end>Typed Element()
Reference Constraint()<edge_begin><edge_end>Table Constraint()
Row Data Type()<edge_begin><edge_end>Field(scope Check, scope Checked)
Temporary Table(local, delete On Commit)<edge_begin><edge_end>Base Table()
Foreign Key(match, on Update, on Delete)<edge_begin><edge_end>Unique Constraint(clustered)
Authorization Identifier()<edge_begin><edge_end>Role Authorization(grantable)
Reference Data Type()<edge_begin><edge_end>Table(self Ref Column Generation, insertable, updatable)
Structured User Defined Type(instantiable, final)<edge_begin><edge_end>Attribute Definition(scope Check, scope Checked, default Value)
Character Set(repertoire, default Collation, encoding)<edge_begin><edge_end>Character String Data Type(length, coercibility, fixed Length, collation Name)
Character Set(repertoire, default Collation, encoding)<edge_begin><edge_end>SQL Object(description, label)
Index Member(increment Type)<edge_begin><edge_end>Column(implementation Dependent, nullable, default Value, scope Check, scope Checked)
Index(clustered, fill Factor, unique, system Generated)<edge_begin><edge_end>Foreign Key(match, on Update, on Delete)
Statemachine(self Name, translation)<edge_begin><edge_end>Abstract Node()
Any()<edge_begin><edge_end>Abstract Node()
Transition()<edge_begin><edge_end>Command(name)
Transition()<edge_begin><edge_end>State(name)
Self Event()<edge_begin><edge_end>Command(name)
Table(name)<edge_begin><edge_end>Foreign Key(name)
Foreign Key(name)<edge_begin><edge_end>Table(name)
Column(name, type)<edge_begin><edge_end>Foreign Key(name)
Table(name)<edge_begin><edge_end>Schema(name)
Foreign Key(name)<edge_begin><edge_end>Table(name)
Logical Or Expression()<edge_begin><edge_end>Expression()
Int Literal(value)<edge_begin><edge_end>Literal()
Exit Point Spec()<edge_begin><edge_end>Reaction Property()
Bitwise And Expression()<edge_begin><edge_end>Expression()
Element Reference Expression(operation Call)<edge_begin><edge_end>Expression()
Always Event()<edge_begin><edge_end>Builtin Event Spec()
State Root()<edge_begin><edge_end>Def Root()
Entry Point Spec()<edge_begin><edge_end>Entrypoint()
String Literal(value)<edge_begin><edge_end>Literal()
Numerical Unary Expression(operator)<edge_begin><edge_end>Expression()
Foreign Key(name)<edge_begin><edge_end>Schema(name)
Key(name)<edge_begin><edge_end>Column(name, type)
Foreign Key(name)<edge_begin><edge_end>Table(name)
Int Parameter(value)<edge_begin><edge_end>Parameter(name)
Boolean Parameter(value)<edge_begin><edge_end>Parameter(name)
Constant Pattern(value)<edge_begin><edge_end>Pattern()
Content(body)<edge_begin><edge_end>Biblio Reference()
Journal Article()<edge_begin><edge_end>Article(first Page, last Page)
Proceeding()<edge_begin><edge_end>Biblio Reference()
Multimedia()<edge_begin><edge_end>Biblio Reference()
Reaction()<edge_begin><edge_end>Effect()
Region()<edge_begin><edge_end>Composite Element()
Scoped Element(namespace)<edge_begin><edge_end>Scope()
Reactive Element()<edge_begin><edge_end>Reaction()
Vertex()<edge_begin><edge_end>Region()
Pseudostate()<edge_begin><edge_end>Vertex()
Transition()<edge_begin><edge_end>Specification Element(specification)
State Machine Definition()<edge_begin><edge_end>State()
Trigger()<edge_begin><edge_end>Abstract Trigger()
Picture()<edge_begin><edge_end>Picture Type()
Del Instr Text()<edge_begin><edge_end>String Type(val)
Custom Document Properties Collection()<edge_begin><edge_end>Word Document()
String Value(value)<edge_begin><edge_end>String()
Word Document()<edge_begin><edge_end>Lists Elt()
Separator()<edge_begin><edge_end>Run Content Elt()
Date Time Type(year, month, day, hour, minute, second)<edge_begin><edge_end>Integer()
Run Elt()<edge_begin><edge_end>Para Content Elt()
Table Grid Elt()<edge_begin><edge_end>Table Elt()
Table Content Elt()<edge_begin><edge_end>Table Elt()
Block Level Chunk Elt()<edge_begin><edge_end>Block Level Elt()
Row Content Elt()<edge_begin><edge_end>Table Cell Elt()
Smart Tags Collection()<edge_begin><edge_end>Smart Tag Type(namespaceuri, name, url)
Simple Field Elt()<edge_begin><edge_end>Para Content Elt()
Date Time Type Value()<edge_begin><edge_end>Date Time Type(year, month, day, hour, minute, second)
Block Level Elt()<edge_begin><edge_end>Note Elt(type, suppress Ref)
Run Pr Elt()<edge_begin><edge_end>Run Elt()
Sym Elt()<edge_begin><edge_end>String Type(val)
Picture()<edge_begin><edge_end>Run Content Elt()
String Value(value)<edge_begin><edge_end>Value Type()
Row Content Elt()<edge_begin><edge_end>Run Level Elt()
Word Document()<edge_begin><edge_end>Styles Elt()
Row Elt()<edge_begin><edge_end>Table Content Elt()
External Reviewer()<edge_begin><edge_end>Reviewer(User Name, Comments to Chair, Other Areas)
Student Advocate()<edge_begin><edge_end>Organizing Committee()
Parallel And Distributed Computing Topic()<edge_begin><edge_end>Topic()
Conference Member()<edge_begin><edge_end>Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)
Accepted contribution()<edge_begin><edge_end>Reviewed contribution()
Other()<edge_begin><edge_end>Overall Value()
end date of full paper submission()<edge_begin><edge_end>full paper submission date()
Finance Chair()<edge_begin><edge_end>Organizing Committee()
Workshop Chair()<edge_begin><edge_end>Conference Participant()
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>Speaker()
Important dates()<edge_begin><edge_end>Conference volume(has a location)
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Administrator()
Author attendee cd registration fee()<edge_begin><edge_end>Registration fee()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)<edge_begin><edge_end>Integer()
Accpet If Room Rating()<edge_begin><edge_end>Review Rating()
Rejected Paper()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)
Document()<edge_begin><edge_end>Item()
Tutorial()<edge_begin><edge_end>Working event()
Balanced Theory and Practice()<edge_begin><edge_end>Paper Categorization()
conference setup()<edge_begin><edge_end>human(e-mail, last name, first name)
Contact Author(Alternate Email)<edge_begin><edge_end>Submitted Paper(Paper Id, Comments To Chair)
Contribution File(has Contribution File Status)<edge_begin><edge_end>Contribution(has Contribution Status, remark, abstract, contact Email, has Keyword, has Title)
CD-ROM()<edge_begin><edge_end>Output Document()
Paper Status()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)
Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)<edge_begin><edge_end>Organization()
Tutorial()<edge_begin><edge_end>Individual Presentation()
Conference Event(has End Date Time, has Start Date Time)<edge_begin><edge_end>Place()
Review()<edge_begin><edge_end>Reviewer(User Name, Comments to Chair, Other Areas)
Confirmed Conflict()<edge_begin><edge_end>Conflict Of Interest()
Contribution(has Contribution Status, remark, abstract, contact Email, has Keyword, has Title)<edge_begin><edge_end>Topic()
Author()<edge_begin><edge_end>Thing()
Program chair()<edge_begin><edge_end>Member(Web address)
Industry Organization()<edge_begin><edge_end>Organization()
Excursion()<edge_begin><edge_end>Social Event()
Accepted Paper()<edge_begin><edge_end>Paper Presentation()
Assigned Paper()<edge_begin><edge_end>Possible Reviewer()
Program Committee member()<edge_begin><edge_end>human(e-mail, last name, first name)
Pending Paper()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)
Contact Author(Alternate Email)<edge_begin><edge_end>String()
Contribution(has Contribution Status, remark, abstract, contact Email, has Keyword, has Title)<edge_begin><edge_end>String()
Tutorial speaker()<edge_begin><edge_end>Author()
Deadline for notification of acceptance()<edge_begin><edge_end>Deadline()
Tutorial()<edge_begin><edge_end>Lecture(has Acronym)
Submission Template()<edge_begin><edge_end>Event Setup()
Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)<edge_begin><edge_end>Account()
Activity(expected Attendance, is dated on)<edge_begin><edge_end>Topic()
Organizing committee()<edge_begin><edge_end>Conference volume(has a location)
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)<edge_begin><edge_end>Author()
Evaluation()<edge_begin><edge_end>Document()
Program Comitee Chair()<edge_begin><edge_end>Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
Programming()<edge_begin><edge_end>Topics()
Regular()<edge_begin><edge_end>Participant(early Registration)
Track-workshop chair()<edge_begin><edge_end>Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)
Item()<edge_begin><edge_end>Item()
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>program()
Signal Processing Topic()<edge_begin><edge_end>Topic()
Paper Categorization()<edge_begin><edge_end>Review Values()
start date of abstract submission()<edge_begin><edge_end>abstract submission date()
Abstract()<edge_begin><edge_end>Extended abstract()
Conference state()<edge_begin><edge_end>State()
Contribution(has Contribution Status, remark, abstract, contact Email, has Keyword, has Title)<edge_begin><edge_end>Author()
Paper Abstract()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)
Group Email()<edge_begin><edge_end>Email()
One day presenter()<edge_begin><edge_end>Delegate()
Program Committee Member(max Papers, has Password)<edge_begin><edge_end>Integer()
Participant(early Registration)<edge_begin><edge_end>Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)
People(Surname, Name, Country, E-mail, Organisation)<edge_begin><edge_end>Domain Topic()
Mobile Computing Topic()<edge_begin><edge_end>Topic()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)<edge_begin><edge_end>Decision()
Slot(ends At, begins At)<edge_begin><edge_end>time()
Regular contribution()<edge_begin><edge_end>Written contribution()
Result of Advocate()<edge_begin><edge_end>Value Partition()
Conference announcement()<edge_begin><edge_end>Conference document()
Session Chair()<edge_begin><edge_end>Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)
Trip()<edge_begin><edge_end>Social event()
Review()<edge_begin><edge_end>Document()
Clear Accept()<edge_begin><edge_end>Reccommendation()
Demo Session()<edge_begin><edge_end>Session(room)
Corresponding Author()<edge_begin><edge_end>Author()
OC Chair()<edge_begin><edge_end>OC Member()
Contact Author()<edge_begin><edge_end>Paper Abstract()
Registation deadline()<edge_begin><edge_end>Deadline()
CAD Topic()<edge_begin><edge_end>Topic()
Steering committee()<edge_begin><edge_end>Conference volume(has a location)
Event Tracks()<edge_begin><edge_end>Event Setup()
Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)<edge_begin><edge_end>String()
Personal Review History()<edge_begin><edge_end>Personal History()
Participant(early Registration)<edge_begin><edge_end>Boolean()
Article()<edge_begin><edge_end>classification()
Review()<edge_begin><edge_end>Activity(expected Attendance, is dated on)
Presenter university()<edge_begin><edge_end>Building()
Sponsorship(has Cost Currency, has Cost Amount)<edge_begin><edge_end>Integer()
Conference city()<edge_begin><edge_end>City()
Call(has Submission Instructions, has Submission Deadline)<edge_begin><edge_end>String()
Single Level Conference()<edge_begin><edge_end>Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
Reject Rating()<edge_begin><edge_end>Review Rating()
Short paper()<edge_begin><edge_end>Contribution(has Contribution Status, remark, abstract, contact Email, has Keyword, has Title)
Single hotel room()<edge_begin><edge_end>Hotel room()
Author()<edge_begin><edge_end>People(Surname, Name, Country, E-mail, Organisation)
Committee member()<edge_begin><edge_end>Committee()
Organisation()<edge_begin><edge_end>Thing()
Tends Towards Practical()<edge_begin><edge_end>Paper Categorization()
Administrator()<edge_begin><edge_end>Role()
Shuttle bus()<edge_begin><edge_end>Transport vehicle()
Reccommendation()<edge_begin><edge_end>Review Values()
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>Administrator()
Hotel registration form()<edge_begin><edge_end>Form()
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>Event Setup()
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>Program Comitee Chair()
Scholar()<edge_begin><edge_end>Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)
Conference document()<edge_begin><edge_end>Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>Reviewer(User Name, Comments to Chair, Other Areas)
Author()<edge_begin><edge_end>User()
Attendee()<edge_begin><edge_end>Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)
Program committee()<edge_begin><edge_end>Conference volume(has a location)
Numerical Review Question()<edge_begin><edge_end>Review Question()
Conference volume(has a location)<edge_begin><edge_end>Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)
Valuable Confirmation of Present Knowledge()<edge_begin><edge_end>Overall Value()
URL()<edge_begin><edge_end>Thing()
Call(has Submission Instructions, has Submission Deadline)<edge_begin><edge_end>date Time()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)<edge_begin><edge_end>Reviewer(User Name, Comments to Chair, Other Areas)
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Scientific Event()
Modelling()<edge_begin><edge_end>Research()
notification()<edge_begin><edge_end>human(e-mail, last name, first name)
Bid()<edge_begin><edge_end>Reviewer(User Name, Comments to Chair, Other Areas)
Committee()<edge_begin><edge_end>Committee member()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)<edge_begin><edge_end>Regular contribution()
Publisher()<edge_begin><edge_end>Conference Proceedings(has an ISBN, has a volume)
Place()<edge_begin><edge_end>Item()
Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)<edge_begin><edge_end>Thing()
Sponsorship(has Cost Currency, has Cost Amount)<edge_begin><edge_end>String()
participant()<edge_begin><edge_end>Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)
Van()<edge_begin><edge_end>Transport vehicle()
Review()<edge_begin><edge_end>Possible Reviewer()
Cryptography Topic()<edge_begin><edge_end>Topic()
Place()<edge_begin><edge_end>Conference Event(has End Date Time, has Start Date Time)
Topic()<edge_begin><edge_end>Activity(expected Attendance, is dated on)
Bank transfer()<edge_begin><edge_end>Payment document()
Review Question()<edge_begin><edge_end>Question()
Program Comitee Chair()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)
Conference(has Name, end Date, paper Due On, registration Due On, manuscript Due On, start Date, annual Order, has Acronym, reviews Per Paper, logo URL, accepts Hardcopy Submissions, site URL)<edge_begin><edge_end>Location()
Conference Program()<edge_begin><edge_end>Program chair()
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>Research Topic()
Main Author()<edge_begin><edge_end>Author()
Qualitatvie Lecture()<edge_begin><edge_end>Lecture(has Acronym)
Activity(expected Attendance, is dated on)<edge_begin><edge_end>date Time()
Fee()<edge_begin><edge_end>Money()
Volunteer()<edge_begin><edge_end>Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)
Review Phase()<edge_begin><edge_end>Phase Of Conference Preparation(has Phase Status)
External Reviewers List()<edge_begin><edge_end>Output Document()
Regular author()<edge_begin><edge_end>Conference contributor()
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)<edge_begin><edge_end>Bid()
Conference Event(has End Date Time, has Start Date Time)<edge_begin><edge_end>Programme()
User()<edge_begin><edge_end>Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>External Reviewer()
abstract of paper()<edge_begin><edge_end>Article()
Conference Program()<edge_begin><edge_end>Thing()
Session Chair()<edge_begin><edge_end>Conference Participant()
New Information()<edge_begin><edge_end>Overall Value()
Role()<edge_begin><edge_end>Administrator()
Renting()<edge_begin><edge_end>Activity before conference()
Event(starts on, ends on, has startdate, has enddate)<edge_begin><edge_end>Location()
TPC Member()<edge_begin><edge_end>Person(has Mail, works For Company, has First Name, has Biography, has Last Name, has an email, has the first name, has gender, has the last name, has Home Page, has Surname, has Fax, has First Name, has Phone, has Email, has Affiliation, has First Name, has Last Name, has Email, has Name, email)
One conference day()<edge_begin><edge_end>Conference days()
Slot(ends At, begins At)<edge_begin><edge_end>Session(room)
Article()<edge_begin><edge_end>Author()
Self Conflict()<edge_begin><edge_end>Conflict Of Interest()
Review expertise(has an expertise)<edge_begin><edge_end>Thing()
Committee()<edge_begin><edge_end>Conference volume(has a location)
Tutorial Proposal()<edge_begin><edge_end>Activity Submission Form(submission Deadline)
Program Co Chair()<edge_begin><edge_end>Organizing Committee()
Accepting manuscript()<edge_begin><edge_end>Activity before conference()
Trip city()<edge_begin><edge_end>City()
Reviewer(User Name, Comments to Chair, Other Areas)<edge_begin><edge_end>Organizer()
Workshop Paper()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)
Money()<edge_begin><edge_end>Money()
Camera Ready Copy Phase()<edge_begin><edge_end>Phase Of Conference Preparation(has Phase Status)
Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)<edge_begin><edge_end>Contribution(has Contribution Status, remark, abstract, contact Email, has Keyword, has Title)
Poster Paper()<edge_begin><edge_end>Paper(full paper size, has Title, has ID, Abstract, Title, Students, Keywords, is Paper Type Of, has Bid, paper ID, title)
Satellite And Space Communications Topic()<edge_begin><edge_end>Topic()
PC Chair()<edge_begin><edge_end>Conference Participant()
Conference Event(has End Date Time, has Start Date Time)<edge_begin><edge_end>date Time()
Proposed Conflict()<edge_begin><edge_end>Conflict Of Interest()
Setup Phase()<edge_begin><edge_end>Phase Of Conference Preparation(has Phase Status)
Program committee()<edge_begin><edge_end>Committee()
Active Paper()<edge_begin><edge_end>Review Rating()
Script(defer, xml:space)<edge_begin><edge_end>ID()
Kbd()<edge_begin><edge_end>Phrase()
Length()<edge_begin><edge_end>CDATA()
Blockquote()<edge_begin><edge_end>URI()
Dl Element()<edge_begin><edge_end>Attrs()
A(shape)<edge_begin><edge_end>Charset()
Address()<edge_begin><edge_end>Blocktext()
Th(scope)<edge_begin><edge_end>Number()
Miscinline()<edge_begin><edge_end>Pre Content()
Language Code()<edge_begin><edge_end>NMTOKEN()
Textarea(disabled, readonly)<edge_begin><edge_end>Number()
B()<edge_begin><edge_end>Inline()
Acronym()<edge_begin><edge_end>Attrs()
H5()<edge_begin><edge_end>Heading()
Html()<edge_begin><edge_end>Body()
Table(frame, rules)<edge_begin><edge_end>Text()
Dfn()<edge_begin><edge_end>Phrase()
Img(ismap)<edge_begin><edge_end>Boolean()
Colgroup()<edge_begin><edge_end>Cellhalign(align)
Q()<edge_begin><edge_end>Inline()
I18n(dir)<edge_begin><edge_end>Language Code()
Fieldset()<edge_begin><edge_end>Attrs()
Caption()<edge_begin><edge_end>Inline()
Html()<edge_begin><edge_end>I18n(dir)
Charset()<edge_begin><edge_end>CDATA()
Style(xml:space)<edge_begin><edge_end>Content Type()
Samp()<edge_begin><edge_end>Phrase()
A(shape)<edge_begin><edge_end>URI()
Meta()<edge_begin><edge_end>Head Misc()
Td(scope)<edge_begin><edge_end>Attrs()
Kbd()<edge_begin><edge_end>Inline()
Td(scope)<edge_begin><edge_end>Text()
Tbody()<edge_begin><edge_end>Attrs()
Link()<edge_begin><edge_end>Link Types()
Html()<edge_begin><edge_end>ID()
Optgroup(disabled)<edge_begin><edge_end>Boolean()
Img(ismap)<edge_begin><edge_end>Length()
Tt()<edge_begin><edge_end>Attrs()
Pre(xml:space)<edge_begin><edge_end>Blocktext()
Q()<edge_begin><edge_end>Phrase()
Img(ismap)<edge_begin><edge_end>Special()
A(shape)<edge_begin><edge_end>Attrs()
Ins()<edge_begin><edge_end>URI()
Form(method)<edge_begin><edge_end>Content Type()
H6()<edge_begin><edge_end>Heading()
Samp()<edge_begin><edge_end>Inline()
Fieldset()<edge_begin><edge_end>block()
H6()<edge_begin><edge_end>Attrs()
Td(scope)<edge_begin><edge_end>IDREFS()
Base Head Element()<edge_begin><edge_end>Head Misc()
Option(selected, disabled)<edge_begin><edge_end>PCDATA()
Inlineforms()<edge_begin><edge_end>A Content()
Sub()<edge_begin><edge_end>Inline()
Title()<edge_begin><edge_end>PCDATA()
Bdo(dir)<edge_begin><edge_end>Events()
Textarea(disabled, readonly)<edge_begin><edge_end>Attrs()
Input(type, checked, disabled, readonly)<edge_begin><edge_end>Attrs()
Object(declare)<edge_begin><edge_end>Object Element()
Body()<edge_begin><edge_end>Html()
Focus()<edge_begin><edge_end>Number()
Input(type, checked, disabled, readonly)<edge_begin><edge_end>Boolean()
Noscript()<edge_begin><edge_end>Block()
Attrs()<edge_begin><edge_end>Events()
Base Title Head Element()<edge_begin><edge_end>Head Misc()
Base Title Head Element()<edge_begin><edge_end>Base()
Area(shape, nohref)<edge_begin><edge_end>Coords()
Col()<edge_begin><edge_end>Cellvalign(valign)
I()<edge_begin><edge_end>Fontstyle()
Tt()<edge_begin><edge_end>Inline()
Table(frame, rules)<edge_begin><edge_end>Thead()
Lists()<edge_begin><edge_end>Button Content()
Head()<edge_begin><edge_end>URI()
Bdo(dir)<edge_begin><edge_end>Language Code()
Input(type, checked, disabled, readonly)<edge_begin><edge_end>Content Types()
Html()<edge_begin><edge_end>Head()
Hr()<edge_begin><edge_end>Attrs()
Style(xml:space)<edge_begin><edge_end>Head Misc()
Head()<edge_begin><edge_end>Html()
Noscript()<edge_begin><edge_end>Misc()
Map Content()<edge_begin><edge_end>Map Element()
CDATA()<edge_begin><edge_end>Valued Element(value)
Tt()<edge_begin><edge_end>Fontstyle()
Th(scope)<edge_begin><edge_end>Cellvalign(valign)
Sup()<edge_begin><edge_end>Inline()
Map()<edge_begin><edge_end>Events()
Form(method)<edge_begin><edge_end>Map Element Content()
H2()<edge_begin><edge_end>Heading()
Base()<edge_begin><edge_end>ID()
Var()<edge_begin><edge_end>Attrs()
A(shape)<edge_begin><edge_end>Pre Content()
Object(declare)<edge_begin><edge_end>Attrs()
Cellhalign(align)<edge_begin><edge_end>Character()
Fontstyle()<edge_begin><edge_end>A Content()
Title Head Element()<edge_begin><edge_end>Head Misc()
Article(journal, volume, number, pages, note)<edge_begin><edge_end>Authored Entry()
Author(name, surname)<edge_begin><edge_end>Authored Entry()
Worksheet(name)<edge_begin><edge_end>String()
Row(auto Fit Height, height)<edge_begin><edge_end>Cell(array Range, formula, h Ref, merge Across, merge Down)
Row(auto Fit Height, height)<edge_begin><edge_end>Table()
Date Time Type Value()<edge_begin><edge_end>Value Type()
Boolean Value(value)<edge_begin><edge_end>Value Type()
Col Or Row Element(hidden, span)<edge_begin><edge_end>Integer()
Cell(array Range, formula, h Ref, merge Across, merge Down)<edge_begin><edge_end>Double()
Close Statement(cursor)<edge_begin><edge_end>Binding Statement()
Create Index Statement(unique)<edge_begin><edge_end>Definition Statement()
Disconnect Statement(target)<edge_begin><edge_end>Definition Statement()
Binding Parse Result()<edge_begin><edge_end>Binding Statement()
Create Table Statement()<edge_begin><edge_end>Definition Statement()
Connect Statement(pwd, reset, to, user)<edge_begin><edge_end>Definition Statement()
Statement Writer()<edge_begin><edge_end>Name Helper()
Definition Parse Result()<edge_begin><edge_end>Definition Statement()
Commit Statement(hold)<edge_begin><edge_end>Definition Statement()
Fetch Statement(cursor Name, position, relative Position)<edge_begin><edge_end>Binding Statement()